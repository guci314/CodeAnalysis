{
  "timestamp": "2025-07-07T16:58:36.548833",
  "analysis_results": {
    "total_files": 6,
    "total_classes": 41,
    "total_functions": 142,
    "graph_nodes": 183,
    "graph_edges": 28,
    "code_elements": {
      "sample_project/main.py:Application": {
        "type": "class",
        "name": "Application",
        "file_path": "sample_project/main.py",
        "line_number": 37,
        "complexity": 1,
        "docstring": "Main application class that orchestrates all components.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [
          "__init__",
          "_initialize_repositories",
          "_initialize_services",
          "create_user",
          "create_product",
          "create_order",
          "create_task",
          "_create_notification",
          "process_data_file",
          "generate_reports",
          "_count_by_attribute",
          "export_data",
          "run_maintenance"
        ],
        "parameters": [],
        "decorators": [],
        "inheritance": [],
        "calls": [],
        "imports": []
      },
      "sample_project/main.py:main": {
        "type": "function",
        "name": "main",
        "file_path": "sample_project/main.py",
        "line_number": 348,
        "complexity": 1,
        "docstring": "Main entry point for the application.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "argparse.ArgumentParser",
          "parser.add_argument",
          "parser.add_argument",
          "parser.add_argument",
          "parser.parse_args",
          "Application",
          "logger.info",
          "app.create_user",
          "app.create_user",
          "app.create_product",
          "app.create_product",
          "app.create_product",
          "app.create_order",
          "app.create_task",
          "app.create_task",
          "logger.info",
          "logger.error",
          "sys.exit",
          "app.export_data",
          "app.generate_reports",
          "print",
          "datetime.now",
          "timedelta",
          "datetime.now",
          "timedelta",
          "json.dumps",
          "app.run_maintenance",
          "print",
          "str"
        ],
        "imports": []
      },
      "sample_project/main.py:__init__": {
        "type": "function",
        "name": "__init__",
        "file_path": "sample_project/main.py",
        "line_number": 40,
        "complexity": 1,
        "docstring": "Initialize application with configuration.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "config_path"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "get_config",
          "self._initialize_repositories",
          "self._initialize_services",
          "DataProcessor",
          "FileHandler",
          "logger.info"
        ],
        "imports": []
      },
      "sample_project/main.py:_initialize_repositories": {
        "type": "function",
        "name": "_initialize_repositories",
        "file_path": "sample_project/main.py",
        "line_number": 50,
        "complexity": 1,
        "docstring": "Initialize all repositories.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "InMemoryRepository",
          "InMemoryRepository",
          "InMemoryRepository",
          "InMemoryRepository",
          "InMemoryRepository"
        ],
        "imports": []
      },
      "sample_project/main.py:_initialize_services": {
        "type": "function",
        "name": "_initialize_services",
        "file_path": "sample_project/main.py",
        "line_number": 60,
        "complexity": 1,
        "docstring": "Initialize API services.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "UserAPI",
          "ProductAPI",
          "OrderAPI"
        ],
        "imports": []
      },
      "sample_project/main.py:create_user": {
        "type": "function",
        "name": "create_user",
        "file_path": "sample_project/main.py",
        "line_number": 69,
        "complexity": 1,
        "docstring": "Create a new user in the system.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "username",
          "email",
          "full_name",
          "roles"
        ],
        "decorators": [
          "timer"
        ],
        "inheritance": [],
        "calls": [
          "self.repositories['users'].find_by_criteria",
          "User",
          "self.repositories['users'].save",
          "self._create_notification",
          "logger.info",
          "validate_email",
          "ValueError",
          "ValueError"
        ],
        "imports": []
      },
      "sample_project/main.py:create_product": {
        "type": "function",
        "name": "create_product",
        "file_path": "sample_project/main.py",
        "line_number": 103,
        "complexity": 1,
        "docstring": "Create a new product.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "name",
          "description",
          "price",
          "category",
          "inventory"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "Product",
          "self.repositories['products'].save",
          "logger.info"
        ],
        "imports": []
      },
      "sample_project/main.py:create_order": {
        "type": "function",
        "name": "create_order",
        "file_path": "sample_project/main.py",
        "line_number": 118,
        "complexity": 1,
        "docstring": "Create a new order for a user.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "user_id",
          "items"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "self.repositories['users'].find_by_id",
          "Order",
          "self.repositories['orders'].save",
          "self._create_notification",
          "logger.info",
          "ValueError",
          "self.repositories['products'].find_by_id",
          "order.add_item",
          "product.update_inventory",
          "self.repositories['products'].save",
          "ValueError",
          "ValueError"
        ],
        "imports": []
      },
      "sample_project/main.py:create_task": {
        "type": "function",
        "name": "create_task",
        "file_path": "sample_project/main.py",
        "line_number": 157,
        "complexity": 1,
        "docstring": "Create a new task.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "title",
          "description",
          "assignee_id",
          "priority",
          "due_date"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "Task",
          "self.repositories['tasks'].save",
          "logger.info",
          "self.repositories['users'].find_by_id",
          "task.assign_to",
          "task.set_due_date",
          "self._create_notification",
          "ValueError"
        ],
        "imports": []
      },
      "sample_project/main.py:_create_notification": {
        "type": "function",
        "name": "_create_notification",
        "file_path": "sample_project/main.py",
        "line_number": 186,
        "complexity": 1,
        "docstring": "Create a notification for a user.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "recipient_id",
          "title",
          "message",
          "type"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "Notification",
          "self.repositories['notifications'].save",
          "datetime.now",
          "timedelta"
        ],
        "imports": []
      },
      "sample_project/main.py:process_data_file": {
        "type": "function",
        "name": "process_data_file",
        "file_path": "sample_project/main.py",
        "line_number": 201,
        "complexity": 1,
        "docstring": "Process a data file and return analysis results.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "file_path"
        ],
        "decorators": [
          "timer"
        ],
        "inheritance": [],
        "calls": [
          "logger.info",
          "self.cache.get",
          "logger.info",
          "self.data_processor.process_csv",
          "DataValidator",
          "validator.check_data_quality",
          "self.cache.set",
          "df.select_dtypes",
          "self.data_processor.calculate_statistics",
          "len",
          "len",
          "datetime.now().isoformat",
          "logger.error",
          "tuple",
          "datetime.now",
          "str"
        ],
        "imports": []
      },
      "sample_project/main.py:generate_reports": {
        "type": "function",
        "name": "generate_reports",
        "file_path": "sample_project/main.py",
        "line_number": 243,
        "complexity": 1,
        "docstring": "Generate various reports from the system data.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "self.repositories['users'].find_all",
          "self.repositories['products'].find_all",
          "self.repositories['orders'].find_all",
          "self.repositories['tasks'].find_all",
          "datetime.now().isoformat",
          "len",
          "sum",
          "sum",
          "self._count_by_attribute",
          "len",
          "sum",
          "sum",
          "self._count_by_attribute",
          "sum",
          "len",
          "self._count_by_attribute",
          "sum",
          "len",
          "self._count_by_attribute",
          "self._count_by_attribute",
          "sum",
          "datetime.now",
          "sum",
          "len"
        ],
        "imports": []
      },
      "sample_project/main.py:_count_by_attribute": {
        "type": "function",
        "name": "_count_by_attribute",
        "file_path": "sample_project/main.py",
        "line_number": 287,
        "complexity": 1,
        "docstring": "Count items by a specific attribute.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "items",
          "attribute"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "getattr",
          "isinstance",
          "str",
          "counts.get",
          "str",
          "counts.get",
          "hasattr",
          "str"
        ],
        "imports": []
      },
      "sample_project/main.py:export_data": {
        "type": "function",
        "name": "export_data",
        "file_path": "sample_project/main.py",
        "line_number": 300,
        "complexity": 1,
        "docstring": "Export system data to file.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "export_type",
          "output_path"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "logger.info",
          "self.file_handler.write_json",
          "logger.info",
          "u.to_dict",
          "p.to_dict",
          "o.to_dict",
          "t.to_dict",
          "self.repositories['users'].find_all",
          "self.repositories['products'].find_all",
          "self.repositories['orders'].find_all",
          "self.repositories['tasks'].find_all"
        ],
        "imports": []
      },
      "sample_project/main.py:run_maintenance": {
        "type": "function",
        "name": "run_maintenance",
        "file_path": "sample_project/main.py",
        "line_number": 322,
        "complexity": 1,
        "docstring": "Run maintenance tasks.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "logger.info",
          "self.repositories['notifications'].find_all",
          "logger.info",
          "self.cache.size",
          "self.cache.clear",
          "self.repositories['notifications'].delete"
        ],
        "imports": []
      },
      "sample_project/models.py:Status": {
        "type": "class",
        "name": "Status",
        "file_path": "sample_project/models.py",
        "line_number": 14,
        "complexity": 1,
        "docstring": "Status enumeration for various entities.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [],
        "decorators": [],
        "inheritance": [
          "Enum"
        ],
        "calls": [],
        "imports": []
      },
      "sample_project/models.py:Priority": {
        "type": "class",
        "name": "Priority",
        "file_path": "sample_project/models.py",
        "line_number": 24,
        "complexity": 1,
        "docstring": "Priority levels.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [],
        "decorators": [],
        "inheritance": [
          "Enum"
        ],
        "calls": [],
        "imports": []
      },
      "sample_project/models.py:BaseModel": {
        "type": "class",
        "name": "BaseModel",
        "file_path": "sample_project/models.py",
        "line_number": 33,
        "complexity": 1,
        "docstring": "Base model with common fields.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [
          "update_timestamp",
          "to_dict",
          "to_json"
        ],
        "parameters": [],
        "decorators": [
          "dataclass"
        ],
        "inheritance": [],
        "calls": [],
        "imports": []
      },
      "sample_project/models.py:User": {
        "type": "class",
        "name": "User",
        "file_path": "sample_project/models.py",
        "line_number": 63,
        "complexity": 1,
        "docstring": "User model with authentication details.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [
          "__post_init__",
          "has_role",
          "add_role",
          "remove_role",
          "update_preferences",
          "display_name"
        ],
        "parameters": [],
        "decorators": [
          "dataclass"
        ],
        "inheritance": [
          "BaseModel"
        ],
        "calls": [],
        "imports": []
      },
      "sample_project/models.py:Product": {
        "type": "class",
        "name": "Product",
        "file_path": "sample_project/models.py",
        "line_number": 109,
        "complexity": 1,
        "docstring": "Product model for e-commerce.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [
          "__post_init__",
          "_generate_sku",
          "update_inventory",
          "add_tag",
          "set_price",
          "formatted_price"
        ],
        "parameters": [],
        "decorators": [
          "dataclass"
        ],
        "inheritance": [
          "BaseModel"
        ],
        "calls": [],
        "imports": []
      },
      "sample_project/models.py:Order": {
        "type": "class",
        "name": "Order",
        "file_path": "sample_project/models.py",
        "line_number": 165,
        "complexity": 1,
        "docstring": "Order model for purchases.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [
          "add_item",
          "remove_item",
          "_recalculate_total",
          "update_status",
          "item_count"
        ],
        "parameters": [],
        "decorators": [
          "dataclass"
        ],
        "inheritance": [
          "BaseModel"
        ],
        "calls": [],
        "imports": []
      },
      "sample_project/models.py:Task": {
        "type": "class",
        "name": "Task",
        "file_path": "sample_project/models.py",
        "line_number": 222,
        "complexity": 1,
        "docstring": "Task model for task management.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [
          "__init__",
          "assign_to",
          "set_due_date",
          "mark_complete",
          "add_subtask",
          "add_dependency",
          "add_comment",
          "add_attachment",
          "is_overdue",
          "progress"
        ],
        "parameters": [],
        "decorators": [],
        "inheritance": [
          "BaseModel"
        ],
        "calls": [],
        "imports": []
      },
      "sample_project/models.py:AbstractRepository": {
        "type": "class",
        "name": "AbstractRepository",
        "file_path": "sample_project/models.py",
        "line_number": 313,
        "complexity": 1,
        "docstring": "Abstract base class for repositories.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [
          "find_by_id",
          "find_all",
          "save",
          "delete"
        ],
        "parameters": [],
        "decorators": [],
        "inheritance": [
          "ABC"
        ],
        "calls": [],
        "imports": []
      },
      "sample_project/models.py:InMemoryRepository": {
        "type": "class",
        "name": "InMemoryRepository",
        "file_path": "sample_project/models.py",
        "line_number": 337,
        "complexity": 1,
        "docstring": "In-memory implementation of repository.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [
          "__init__",
          "find_by_id",
          "find_all",
          "save",
          "delete",
          "find_by_criteria"
        ],
        "parameters": [],
        "decorators": [],
        "inheritance": [
          "AbstractRepository"
        ],
        "calls": [],
        "imports": []
      },
      "sample_project/models.py:Notification": {
        "type": "class",
        "name": "Notification",
        "file_path": "sample_project/models.py",
        "line_number": 380,
        "complexity": 1,
        "docstring": "Notification model for system messages.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [
          "mark_as_read",
          "is_expired"
        ],
        "parameters": [],
        "decorators": [
          "dataclass"
        ],
        "inheritance": [
          "BaseModel"
        ],
        "calls": [],
        "imports": []
      },
      "sample_project/models.py:ModelFactory": {
        "type": "class",
        "name": "ModelFactory",
        "file_path": "sample_project/models.py",
        "line_number": 403,
        "complexity": 1,
        "docstring": "Factory for creating model instances.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [
          "create",
          "register_model"
        ],
        "parameters": [],
        "decorators": [],
        "inheritance": [],
        "calls": [],
        "imports": []
      },
      "sample_project/models.py:update_timestamp": {
        "type": "function",
        "name": "update_timestamp",
        "file_path": "sample_project/models.py",
        "line_number": 39,
        "complexity": 1,
        "docstring": "Update the updated_at timestamp.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "datetime.now"
        ],
        "imports": []
      },
      "sample_project/models.py:to_dict": {
        "type": "function",
        "name": "to_dict",
        "file_path": "sample_project/models.py",
        "line_number": 43,
        "complexity": 1,
        "docstring": "Convert model to dictionary.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "self.__dict__.items",
          "isinstance",
          "value.isoformat",
          "isinstance",
          "hasattr",
          "value.to_dict"
        ],
        "imports": []
      },
      "sample_project/models.py:to_json": {
        "type": "function",
        "name": "to_json",
        "file_path": "sample_project/models.py",
        "line_number": 57,
        "complexity": 1,
        "docstring": "Convert model to JSON string.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "json.dumps",
          "self.to_dict"
        ],
        "imports": []
      },
      "sample_project/models.py:__post_init__": {
        "type": "function",
        "name": "__post_init__",
        "file_path": "sample_project/models.py",
        "line_number": 123,
        "complexity": 1,
        "docstring": "Validate product data.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "ValueError",
          "ValueError",
          "self._generate_sku"
        ],
        "imports": []
      },
      "sample_project/models.py:has_role": {
        "type": "function",
        "name": "has_role",
        "file_path": "sample_project/models.py",
        "line_number": 81,
        "complexity": 1,
        "docstring": "Check if user has specific role.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "role"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [],
        "imports": []
      },
      "sample_project/models.py:add_role": {
        "type": "function",
        "name": "add_role",
        "file_path": "sample_project/models.py",
        "line_number": 85,
        "complexity": 1,
        "docstring": "Add role to user.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "role"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "self.roles.append",
          "self.update_timestamp"
        ],
        "imports": []
      },
      "sample_project/models.py:remove_role": {
        "type": "function",
        "name": "remove_role",
        "file_path": "sample_project/models.py",
        "line_number": 91,
        "complexity": 1,
        "docstring": "Remove role from user.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "role"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "self.roles.remove",
          "self.update_timestamp"
        ],
        "imports": []
      },
      "sample_project/models.py:update_preferences": {
        "type": "function",
        "name": "update_preferences",
        "file_path": "sample_project/models.py",
        "line_number": 97,
        "complexity": 1,
        "docstring": "Update user preferences.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "preferences"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "self.preferences.update",
          "self.update_timestamp"
        ],
        "imports": []
      },
      "sample_project/models.py:display_name": {
        "type": "function",
        "name": "display_name",
        "file_path": "sample_project/models.py",
        "line_number": 103,
        "complexity": 1,
        "docstring": "Get display name for user.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self"
        ],
        "decorators": [
          "property"
        ],
        "inheritance": [],
        "calls": [],
        "imports": []
      },
      "sample_project/models.py:_generate_sku": {
        "type": "function",
        "name": "_generate_sku",
        "file_path": "sample_project/models.py",
        "line_number": 132,
        "complexity": 1,
        "docstring": "Generate SKU from product details.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "self.category[:3].upper",
          "self.id[:8].upper"
        ],
        "imports": []
      },
      "sample_project/models.py:update_inventory": {
        "type": "function",
        "name": "update_inventory",
        "file_path": "sample_project/models.py",
        "line_number": 137,
        "complexity": 1,
        "docstring": "Update inventory count.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "quantity"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "self.update_timestamp"
        ],
        "imports": []
      },
      "sample_project/models.py:add_tag": {
        "type": "function",
        "name": "add_tag",
        "file_path": "sample_project/models.py",
        "line_number": 143,
        "complexity": 1,
        "docstring": "Add tag to product.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "tag"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "self.tags.append",
          "self.update_timestamp"
        ],
        "imports": []
      },
      "sample_project/models.py:set_price": {
        "type": "function",
        "name": "set_price",
        "file_path": "sample_project/models.py",
        "line_number": 149,
        "complexity": 1,
        "docstring": "Set product price.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "price",
          "currency"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "self.update_timestamp",
          "ValueError"
        ],
        "imports": []
      },
      "sample_project/models.py:formatted_price": {
        "type": "function",
        "name": "formatted_price",
        "file_path": "sample_project/models.py",
        "line_number": 159,
        "complexity": 1,
        "docstring": "Get formatted price string.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self"
        ],
        "decorators": [
          "property"
        ],
        "inheritance": [],
        "calls": [],
        "imports": []
      },
      "sample_project/models.py:add_item": {
        "type": "function",
        "name": "add_item",
        "file_path": "sample_project/models.py",
        "line_number": 178,
        "complexity": 1,
        "docstring": "Add item to order.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "product_id",
          "quantity",
          "price"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "self.items.append",
          "self._recalculate_total",
          "self.update_timestamp"
        ],
        "imports": []
      },
      "sample_project/models.py:remove_item": {
        "type": "function",
        "name": "remove_item",
        "file_path": "sample_project/models.py",
        "line_number": 190,
        "complexity": 1,
        "docstring": "Remove item from order.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "product_id"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "self._recalculate_total",
          "self.update_timestamp"
        ],
        "imports": []
      },
      "sample_project/models.py:_recalculate_total": {
        "type": "function",
        "name": "_recalculate_total",
        "file_path": "sample_project/models.py",
        "line_number": 196,
        "complexity": 1,
        "docstring": "Recalculate order total.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "sum"
        ],
        "imports": []
      },
      "sample_project/models.py:update_status": {
        "type": "function",
        "name": "update_status",
        "file_path": "sample_project/models.py",
        "line_number": 200,
        "complexity": 1,
        "docstring": "Update order status with validation.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "new_status"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "valid_transitions.get",
          "self.update_timestamp",
          "ValueError"
        ],
        "imports": []
      },
      "sample_project/models.py:item_count": {
        "type": "function",
        "name": "item_count",
        "file_path": "sample_project/models.py",
        "line_number": 217,
        "complexity": 1,
        "docstring": "Get total number of items in order.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self"
        ],
        "decorators": [
          "property"
        ],
        "inheritance": [],
        "calls": [
          "sum"
        ],
        "imports": []
      },
      "sample_project/models.py:__init__": {
        "type": "function",
        "name": "__init__",
        "file_path": "sample_project/models.py",
        "line_number": 340,
        "complexity": 1,
        "docstring": "Initialize repository.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [],
        "imports": []
      },
      "sample_project/models.py:assign_to": {
        "type": "function",
        "name": "assign_to",
        "file_path": "sample_project/models.py",
        "line_number": 243,
        "complexity": 1,
        "docstring": "Assign task to user.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "user_id"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "self.update_timestamp"
        ],
        "imports": []
      },
      "sample_project/models.py:set_due_date": {
        "type": "function",
        "name": "set_due_date",
        "file_path": "sample_project/models.py",
        "line_number": 248,
        "complexity": 1,
        "docstring": "Set task due date.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "due_date"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "self.update_timestamp",
          "datetime.now",
          "ValueError"
        ],
        "imports": []
      },
      "sample_project/models.py:mark_complete": {
        "type": "function",
        "name": "mark_complete",
        "file_path": "sample_project/models.py",
        "line_number": 255,
        "complexity": 1,
        "docstring": "Mark task as completed.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "datetime.now",
          "self.update_timestamp",
          "ValueError"
        ],
        "imports": []
      },
      "sample_project/models.py:add_subtask": {
        "type": "function",
        "name": "add_subtask",
        "file_path": "sample_project/models.py",
        "line_number": 263,
        "complexity": 1,
        "docstring": "Add subtask to this task.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "subtask"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "self.subtasks.append",
          "self.update_timestamp"
        ],
        "imports": []
      },
      "sample_project/models.py:add_dependency": {
        "type": "function",
        "name": "add_dependency",
        "file_path": "sample_project/models.py",
        "line_number": 269,
        "complexity": 1,
        "docstring": "Add dependency to another task.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "task_id"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "self.dependencies.append",
          "self.update_timestamp"
        ],
        "imports": []
      },
      "sample_project/models.py:add_comment": {
        "type": "function",
        "name": "add_comment",
        "file_path": "sample_project/models.py",
        "line_number": 275,
        "complexity": 1,
        "docstring": "Add comment to task.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "user_id",
          "comment"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "self.comments.append",
          "self.update_timestamp",
          "str",
          "datetime.now().isoformat",
          "uuid.uuid4",
          "datetime.now"
        ],
        "imports": []
      },
      "sample_project/models.py:add_attachment": {
        "type": "function",
        "name": "add_attachment",
        "file_path": "sample_project/models.py",
        "line_number": 285,
        "complexity": 1,
        "docstring": "Add attachment to task.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "filename",
          "url",
          "size"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "self.attachments.append",
          "self.update_timestamp",
          "str",
          "datetime.now().isoformat",
          "uuid.uuid4",
          "datetime.now"
        ],
        "imports": []
      },
      "sample_project/models.py:is_overdue": {
        "type": "function",
        "name": "is_overdue",
        "file_path": "sample_project/models.py",
        "line_number": 297,
        "complexity": 1,
        "docstring": "Check if task is overdue.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self"
        ],
        "decorators": [
          "property"
        ],
        "inheritance": [],
        "calls": [
          "datetime.now"
        ],
        "imports": []
      },
      "sample_project/models.py:progress": {
        "type": "function",
        "name": "progress",
        "file_path": "sample_project/models.py",
        "line_number": 304,
        "complexity": 1,
        "docstring": "Calculate task progress based on subtasks.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self"
        ],
        "decorators": [
          "property"
        ],
        "inheritance": [],
        "calls": [
          "sum",
          "len"
        ],
        "imports": []
      },
      "sample_project/models.py:find_by_id": {
        "type": "function",
        "name": "find_by_id",
        "file_path": "sample_project/models.py",
        "line_number": 344,
        "complexity": 1,
        "docstring": "Find entity by ID.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "id"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "self._storage.get"
        ],
        "imports": []
      },
      "sample_project/models.py:find_all": {
        "type": "function",
        "name": "find_all",
        "file_path": "sample_project/models.py",
        "line_number": 348,
        "complexity": 1,
        "docstring": "Find all entities.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "list",
          "self._storage.values"
        ],
        "imports": []
      },
      "sample_project/models.py:save": {
        "type": "function",
        "name": "save",
        "file_path": "sample_project/models.py",
        "line_number": 352,
        "complexity": 1,
        "docstring": "Save entity.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "entity"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "entity.update_timestamp"
        ],
        "imports": []
      },
      "sample_project/models.py:delete": {
        "type": "function",
        "name": "delete",
        "file_path": "sample_project/models.py",
        "line_number": 358,
        "complexity": 1,
        "docstring": "Delete entity by ID.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "id"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [],
        "imports": []
      },
      "sample_project/models.py:find_by_criteria": {
        "type": "function",
        "name": "find_by_criteria",
        "file_path": "sample_project/models.py",
        "line_number": 365,
        "complexity": 1,
        "docstring": "Find entities matching criteria.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "criteria"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "self._storage.values",
          "criteria.items",
          "results.append",
          "hasattr",
          "getattr"
        ],
        "imports": []
      },
      "sample_project/models.py:mark_as_read": {
        "type": "function",
        "name": "mark_as_read",
        "file_path": "sample_project/models.py",
        "line_number": 390,
        "complexity": 1,
        "docstring": "Mark notification as read.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "self.update_timestamp"
        ],
        "imports": []
      },
      "sample_project/models.py:is_expired": {
        "type": "function",
        "name": "is_expired",
        "file_path": "sample_project/models.py",
        "line_number": 396,
        "complexity": 1,
        "docstring": "Check if notification has expired.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self"
        ],
        "decorators": [
          "property"
        ],
        "inheritance": [],
        "calls": [
          "datetime.now"
        ],
        "imports": []
      },
      "sample_project/models.py:create": {
        "type": "function",
        "name": "create",
        "file_path": "sample_project/models.py",
        "line_number": 415,
        "complexity": 1,
        "docstring": "Create model instance by type.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "cls",
          "model_type"
        ],
        "decorators": [
          "classmethod"
        ],
        "inheritance": [],
        "calls": [
          "cls._models.get",
          "model_class",
          "model_type.lower",
          "ValueError"
        ],
        "imports": []
      },
      "sample_project/models.py:register_model": {
        "type": "function",
        "name": "register_model",
        "file_path": "sample_project/models.py",
        "line_number": 423,
        "complexity": 1,
        "docstring": "Register new model type.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "cls",
          "name",
          "model_class"
        ],
        "decorators": [
          "classmethod"
        ],
        "inheritance": [],
        "calls": [
          "name.lower"
        ],
        "imports": []
      },
      "sample_project/config.py:Environment": {
        "type": "class",
        "name": "Environment",
        "file_path": "sample_project/config.py",
        "line_number": 18,
        "complexity": 1,
        "docstring": "Application environment types.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [],
        "decorators": [],
        "inheritance": [
          "Enum"
        ],
        "calls": [],
        "imports": []
      },
      "sample_project/config.py:LogLevel": {
        "type": "class",
        "name": "LogLevel",
        "file_path": "sample_project/config.py",
        "line_number": 26,
        "complexity": 1,
        "docstring": "Logging levels.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [],
        "decorators": [],
        "inheritance": [
          "Enum"
        ],
        "calls": [],
        "imports": []
      },
      "sample_project/config.py:BaseConfig": {
        "type": "class",
        "name": "BaseConfig",
        "file_path": "sample_project/config.py",
        "line_number": 36,
        "complexity": 1,
        "docstring": "Base configuration class.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [
          "validate",
          "to_dict",
          "from_dict"
        ],
        "parameters": [],
        "decorators": [
          "dataclass"
        ],
        "inheritance": [],
        "calls": [],
        "imports": []
      },
      "sample_project/config.py:DatabaseConfig": {
        "type": "class",
        "name": "DatabaseConfig",
        "file_path": "sample_project/config.py",
        "line_number": 64,
        "complexity": 1,
        "docstring": "Database configuration.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [
          "connection_string",
          "validate"
        ],
        "parameters": [],
        "decorators": [
          "dataclass"
        ],
        "inheritance": [
          "BaseConfig"
        ],
        "calls": [],
        "imports": []
      },
      "sample_project/config.py:CacheConfig": {
        "type": "class",
        "name": "CacheConfig",
        "file_path": "sample_project/config.py",
        "line_number": 105,
        "complexity": 1,
        "docstring": "Cache configuration.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [
          "connection_string",
          "validate"
        ],
        "parameters": [],
        "decorators": [
          "dataclass"
        ],
        "inheritance": [
          "BaseConfig"
        ],
        "calls": [],
        "imports": []
      },
      "sample_project/config.py:SecurityConfig": {
        "type": "class",
        "name": "SecurityConfig",
        "file_path": "sample_project/config.py",
        "line_number": 145,
        "complexity": 1,
        "docstring": "Security configuration.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [
          "validate"
        ],
        "parameters": [],
        "decorators": [
          "dataclass"
        ],
        "inheritance": [
          "BaseConfig"
        ],
        "calls": [],
        "imports": []
      },
      "sample_project/config.py:APIConfig": {
        "type": "class",
        "name": "APIConfig",
        "file_path": "sample_project/config.py",
        "line_number": 183,
        "complexity": 1,
        "docstring": "API configuration.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [
          "full_base_url",
          "validate"
        ],
        "parameters": [],
        "decorators": [
          "dataclass"
        ],
        "inheritance": [
          "BaseConfig"
        ],
        "calls": [],
        "imports": []
      },
      "sample_project/config.py:LoggingConfig": {
        "type": "class",
        "name": "LoggingConfig",
        "file_path": "sample_project/config.py",
        "line_number": 232,
        "complexity": 1,
        "docstring": "Logging configuration.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [
          "validate"
        ],
        "parameters": [],
        "decorators": [
          "dataclass"
        ],
        "inheritance": [
          "BaseConfig"
        ],
        "calls": [],
        "imports": []
      },
      "sample_project/config.py:EmailConfig": {
        "type": "class",
        "name": "EmailConfig",
        "file_path": "sample_project/config.py",
        "line_number": 267,
        "complexity": 1,
        "docstring": "Email configuration.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [
          "validate"
        ],
        "parameters": [],
        "decorators": [
          "dataclass"
        ],
        "inheritance": [
          "BaseConfig"
        ],
        "calls": [],
        "imports": []
      },
      "sample_project/config.py:StorageConfig": {
        "type": "class",
        "name": "StorageConfig",
        "file_path": "sample_project/config.py",
        "line_number": 306,
        "complexity": 1,
        "docstring": "Storage configuration.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [
          "validate"
        ],
        "parameters": [],
        "decorators": [
          "dataclass"
        ],
        "inheritance": [
          "BaseConfig"
        ],
        "calls": [],
        "imports": []
      },
      "sample_project/config.py:Config": {
        "type": "class",
        "name": "Config",
        "file_path": "sample_project/config.py",
        "line_number": 349,
        "complexity": 1,
        "docstring": "Main application configuration.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [
          "validate",
          "from_file",
          "_from_nested_dict",
          "to_file"
        ],
        "parameters": [],
        "decorators": [
          "dataclass"
        ],
        "inheritance": [
          "BaseConfig"
        ],
        "calls": [],
        "imports": []
      },
      "sample_project/config.py:get_config": {
        "type": "function",
        "name": "get_config",
        "file_path": "sample_project/config.py",
        "line_number": 487,
        "complexity": 1,
        "docstring": "Get configuration from file or environment.\n\nArgs:\n    config_path: Optional path to configuration file\n    \nReturns:\n    Configuration object",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "config_path"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "os.environ.get",
          "os.environ.get('APP_ENV', 'development').lower",
          "Path",
          "config_dir.exists",
          "Config",
          "Environment",
          "Config.from_file",
          "Config.from_file",
          "os.environ.get",
          "config_file.exists",
          "Config.from_file"
        ],
        "imports": []
      },
      "sample_project/config.py:validate": {
        "type": "function",
        "name": "validate",
        "file_path": "sample_project/config.py",
        "line_number": 383,
        "complexity": 1,
        "docstring": "Validate entire configuration.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "errors.extend",
          "errors.extend",
          "errors.extend",
          "errors.extend",
          "errors.extend",
          "errors.extend",
          "errors.extend",
          "self.database.validate",
          "self.cache.validate",
          "self.security.validate",
          "self.api.validate",
          "self.logging.validate",
          "self.email.validate",
          "self.storage.validate",
          "errors.append",
          "errors.append",
          "errors.append",
          "errors.append",
          "errors.append"
        ],
        "imports": []
      },
      "sample_project/config.py:to_dict": {
        "type": "function",
        "name": "to_dict",
        "file_path": "sample_project/config.py",
        "line_number": 43,
        "complexity": 1,
        "docstring": "Convert configuration to dictionary.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "self.__dict__.items",
          "isinstance",
          "isinstance",
          "value.to_dict",
          "isinstance",
          "str"
        ],
        "imports": []
      },
      "sample_project/config.py:from_dict": {
        "type": "function",
        "name": "from_dict",
        "file_path": "sample_project/config.py",
        "line_number": 58,
        "complexity": 1,
        "docstring": "Create configuration from dictionary.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "cls",
          "data"
        ],
        "decorators": [
          "classmethod"
        ],
        "inheritance": [],
        "calls": [
          "cls"
        ],
        "imports": []
      },
      "sample_project/config.py:connection_string": {
        "type": "function",
        "name": "connection_string",
        "file_path": "sample_project/config.py",
        "line_number": 118,
        "complexity": 1,
        "docstring": "Get cache connection string.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self"
        ],
        "decorators": [
          "property"
        ],
        "inheritance": [],
        "calls": [],
        "imports": []
      },
      "sample_project/config.py:full_base_url": {
        "type": "function",
        "name": "full_base_url",
        "file_path": "sample_project/config.py",
        "line_number": 202,
        "complexity": 1,
        "docstring": "Get full base URL with version.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self"
        ],
        "decorators": [
          "property"
        ],
        "inheritance": [],
        "calls": [],
        "imports": []
      },
      "sample_project/config.py:from_file": {
        "type": "function",
        "name": "from_file",
        "file_path": "sample_project/config.py",
        "line_number": 415,
        "complexity": 1,
        "docstring": "Load configuration from file.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "cls",
          "file_path"
        ],
        "decorators": [
          "classmethod"
        ],
        "inheritance": [],
        "calls": [
          "Path",
          "cls._from_nested_dict",
          "path.exists",
          "FileNotFoundError",
          "open",
          "json.load",
          "ValueError",
          "open",
          "yaml.safe_load"
        ],
        "imports": []
      },
      "sample_project/config.py:_from_nested_dict": {
        "type": "function",
        "name": "_from_nested_dict",
        "file_path": "sample_project/config.py",
        "line_number": 434,
        "complexity": 1,
        "docstring": "Create config from nested dictionary.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "cls",
          "data"
        ],
        "decorators": [
          "classmethod"
        ],
        "inheritance": [],
        "calls": [
          "cls",
          "Environment",
          "DatabaseConfig",
          "CacheConfig",
          "SecurityConfig",
          "APIConfig",
          "LoggingConfig",
          "EmailConfig",
          "StorageConfig",
          "LogLevel",
          "Path",
          "Path"
        ],
        "imports": []
      },
      "sample_project/config.py:to_file": {
        "type": "function",
        "name": "to_file",
        "file_path": "sample_project/config.py",
        "line_number": 470,
        "complexity": 1,
        "docstring": "Save configuration to file.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "file_path"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "Path",
          "self.to_dict",
          "logger.info",
          "open",
          "json.dump",
          "ValueError",
          "open",
          "yaml.dump"
        ],
        "imports": []
      },
      "sample_project/data_processing.py:DataProcessor": {
        "type": "class",
        "name": "DataProcessor",
        "file_path": "sample_project/data_processing.py",
        "line_number": 16,
        "complexity": 1,
        "docstring": "Main class for processing various types of data.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [
          "__init__",
          "process_csv",
          "_clean_dataframe",
          "calculate_statistics",
          "aggregate_data"
        ],
        "parameters": [],
        "decorators": [],
        "inheritance": [],
        "calls": [],
        "imports": []
      },
      "sample_project/data_processing.py:TimeSeriesProcessor": {
        "type": "class",
        "name": "TimeSeriesProcessor",
        "file_path": "sample_project/data_processing.py",
        "line_number": 108,
        "complexity": 1,
        "docstring": "Specialized processor for time series data.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [
          "__init__",
          "resample_timeseries",
          "detect_anomalies",
          "calculate_moving_averages"
        ],
        "parameters": [],
        "decorators": [],
        "inheritance": [
          "DataProcessor"
        ],
        "calls": [],
        "imports": []
      },
      "sample_project/data_processing.py:DataValidator": {
        "type": "class",
        "name": "DataValidator",
        "file_path": "sample_project/data_processing.py",
        "line_number": 236,
        "complexity": 1,
        "docstring": "Validate data quality and integrity.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [
          "validate_schema",
          "check_data_quality"
        ],
        "parameters": [],
        "decorators": [],
        "inheritance": [],
        "calls": [],
        "imports": []
      },
      "sample_project/data_processing.py:transform_data": {
        "type": "function",
        "name": "transform_data",
        "file_path": "sample_project/data_processing.py",
        "line_number": 183,
        "complexity": 1,
        "docstring": "Apply a series of transformations to data.\n\nArgs:\n    data: List of dictionaries containing data\n    transformations: List of transformation functions\n    \nReturns:\n    Transformed data",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "data",
          "transformations"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "data.copy",
          "transform",
          "logger.error",
          "str"
        ],
        "imports": []
      },
      "sample_project/data_processing.py:merge_datasets": {
        "type": "function",
        "name": "merge_datasets",
        "file_path": "sample_project/data_processing.py",
        "line_number": 206,
        "complexity": 1,
        "docstring": "Merge two datasets with validation.\n\nArgs:\n    primary: Primary DataFrame\n    secondary: Secondary DataFrame\n    on: Column(s) to merge on\n    how: Type of merge (left, right, inner, outer)\n    \nReturns:\n    Merged DataFrame",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "primary",
          "secondary",
          "on",
          "how"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "pd.merge",
          "logger.info",
          "isinstance",
          "ValueError",
          "ValueError",
          "len",
          "len",
          "len"
        ],
        "imports": []
      },
      "sample_project/data_processing.py:__init__": {
        "type": "function",
        "name": "__init__",
        "file_path": "sample_project/data_processing.py",
        "line_number": 111,
        "complexity": 1,
        "docstring": "Initialize with time series specific configuration.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "config",
          "frequency"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "super().__init__",
          "super"
        ],
        "imports": []
      },
      "sample_project/data_processing.py:process_csv": {
        "type": "function",
        "name": "process_csv",
        "file_path": "sample_project/data_processing.py",
        "line_number": 26,
        "complexity": 1,
        "docstring": "Process CSV file and return cleaned DataFrame.\n\nArgs:\n    file_path: Path to the CSV file\n    encoding: File encoding (default: utf-8)\n    \nReturns:\n    Processed pandas DataFrame",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "file_path",
          "encoding"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "pd.read_csv",
          "self._clean_dataframe",
          "self.processing_history.append",
          "logger.error",
          "datetime.now",
          "len",
          "len",
          "str"
        ],
        "imports": []
      },
      "sample_project/data_processing.py:_clean_dataframe": {
        "type": "function",
        "name": "_clean_dataframe",
        "file_path": "sample_project/data_processing.py",
        "line_number": 51,
        "complexity": 1,
        "docstring": "Clean DataFrame by removing nulls and duplicates.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "df"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "df.drop_duplicates",
          "logger.info",
          "df[col].fillna",
          "df[col].fillna",
          "df[col].mean"
        ],
        "imports": []
      },
      "sample_project/data_processing.py:calculate_statistics": {
        "type": "function",
        "name": "calculate_statistics",
        "file_path": "sample_project/data_processing.py",
        "line_number": 69,
        "complexity": 1,
        "docstring": "Calculate basic statistics for numeric data.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "data"
        ],
        "decorators": [
          "lru_cache(maxsize=128)"
        ],
        "inheritance": [],
        "calls": [
          "lru_cache",
          "np.array",
          "np.mean",
          "np.median",
          "np.std",
          "np.min",
          "np.max",
          "np.percentile",
          "np.percentile",
          "np.percentile"
        ],
        "imports": []
      },
      "sample_project/data_processing.py:aggregate_data": {
        "type": "function",
        "name": "aggregate_data",
        "file_path": "sample_project/data_processing.py",
        "line_number": 85,
        "complexity": 1,
        "docstring": "Aggregate data based on grouping columns and aggregation rules.\n\nArgs:\n    df: Input DataFrame\n    group_by: Columns to group by\n    agg_columns: Dictionary mapping columns to aggregation functions\n    \nReturns:\n    Aggregated DataFrame",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "df",
          "group_by",
          "agg_columns"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "df.groupby(group_by).agg",
          "result.reset_index",
          "'_'.join(col).strip",
          "logger.error",
          "ValueError",
          "df.groupby",
          "'_'.join",
          "str",
          "str"
        ],
        "imports": []
      },
      "sample_project/data_processing.py:resample_timeseries": {
        "type": "function",
        "name": "resample_timeseries",
        "file_path": "sample_project/data_processing.py",
        "line_number": 117,
        "complexity": 1,
        "docstring": "Resample time series data to a different frequency.\n\nArgs:\n    df: DataFrame with time series data\n    date_column: Name of the date column\n    target_frequency: Target frequency ('D', 'W', 'M', etc.)\n    agg_func: Aggregation function to use\n    \nReturns:\n    Resampled DataFrame",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "df",
          "date_column",
          "target_frequency",
          "agg_func"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "df.copy",
          "pd.to_datetime",
          "df_copy.set_index",
          "df_copy.select_dtypes",
          "df_copy[numeric_cols].resample(target_frequency).mean",
          "df_copy[numeric_cols].resample(target_frequency).sum",
          "df_copy[numeric_cols].resample",
          "df_copy[numeric_cols].resample(target_frequency).last",
          "ValueError",
          "df_copy[numeric_cols].resample",
          "df_copy[numeric_cols].resample"
        ],
        "imports": []
      },
      "sample_project/data_processing.py:detect_anomalies": {
        "type": "function",
        "name": "detect_anomalies",
        "file_path": "sample_project/data_processing.py",
        "line_number": 147,
        "complexity": 1,
        "docstring": "Detect anomalies in time series data using z-score method.\n\nArgs:\n    data: Time series data\n    threshold: Z-score threshold for anomaly detection\n    \nReturns:\n    DataFrame with anomaly flags",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "data",
          "threshold"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "data.mean",
          "data.std",
          "np.abs",
          "pd.DataFrame",
          "logger.info",
          "anomalies['is_anomaly'].sum"
        ],
        "imports": []
      },
      "sample_project/data_processing.py:calculate_moving_averages": {
        "type": "function",
        "name": "calculate_moving_averages",
        "file_path": "sample_project/data_processing.py",
        "line_number": 171,
        "complexity": 1,
        "docstring": "Calculate multiple moving averages for a time series.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "df",
          "value_column",
          "windows"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "df.copy",
          "df[value_column].rolling(window=window).mean",
          "df[value_column].rolling(window=window).std",
          "df[value_column].rolling",
          "df[value_column].rolling"
        ],
        "imports": []
      },
      "sample_project/data_processing.py:validate_schema": {
        "type": "function",
        "name": "validate_schema",
        "file_path": "sample_project/data_processing.py",
        "line_number": 240,
        "complexity": 1,
        "docstring": "Validate DataFrame against expected schema.\n\nArgs:\n    df: DataFrame to validate\n    schema: Expected schema (column_name: expected_type)\n    \nReturns:\n    List of validation errors",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "df",
          "schema"
        ],
        "decorators": [
          "staticmethod"
        ],
        "inheritance": [],
        "calls": [
          "schema.items",
          "set",
          "set",
          "schema.keys",
          "errors.append",
          "errors.append",
          "errors.append",
          "errors.append",
          "pd.api.types.is_numeric_dtype"
        ],
        "imports": []
      },
      "sample_project/data_processing.py:check_data_quality": {
        "type": "function",
        "name": "check_data_quality",
        "file_path": "sample_project/data_processing.py",
        "line_number": 277,
        "complexity": 1,
        "docstring": "Perform comprehensive data quality checks.\n\nArgs:\n    df: DataFrame to check\n    \nReturns:\n    Dictionary with quality metrics",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "df"
        ],
        "decorators": [
          "staticmethod"
        ],
        "inheritance": [],
        "calls": [
          "len",
          "len",
          "len",
          "df[col].isnull().sum",
          "df.select_dtypes",
          "df[col].nunique",
          "df[col].min",
          "df[col].max",
          "df[col].mean",
          "df[col].std",
          "df.duplicated",
          "df[col].isnull",
          "len"
        ],
        "imports": []
      },
      "sample_project/utilities.py:FileHandler": {
        "type": "class",
        "name": "FileHandler",
        "file_path": "sample_project/utilities.py",
        "line_number": 99,
        "complexity": 1,
        "docstring": "Utility class for file operations.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [
          "read_json",
          "write_json",
          "read_yaml",
          "ensure_directory",
          "get_file_hash"
        ],
        "parameters": [],
        "decorators": [],
        "inheritance": [],
        "calls": [],
        "imports": []
      },
      "sample_project/utilities.py:StringUtils": {
        "type": "class",
        "name": "StringUtils",
        "file_path": "sample_project/utilities.py",
        "line_number": 158,
        "complexity": 1,
        "docstring": "String manipulation utilities.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [
          "camel_to_snake",
          "snake_to_camel",
          "truncate",
          "sanitize_filename"
        ],
        "parameters": [],
        "decorators": [],
        "inheritance": [],
        "calls": [],
        "imports": []
      },
      "sample_project/utilities.py:Cache": {
        "type": "class",
        "name": "Cache",
        "file_path": "sample_project/utilities.py",
        "line_number": 309,
        "complexity": 1,
        "docstring": "Thread-safe cache implementation.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [
          "__init__",
          "get",
          "set",
          "delete",
          "clear",
          "size"
        ],
        "parameters": [],
        "decorators": [],
        "inheritance": [],
        "calls": [],
        "imports": []
      },
      "sample_project/utilities.py:timer": {
        "type": "function",
        "name": "timer",
        "file_path": "sample_project/utilities.py",
        "line_number": 26,
        "complexity": 1,
        "docstring": "Decorator to measure function execution time.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "func"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "wraps",
          "time.time",
          "func",
          "time.time",
          "logger.debug"
        ],
        "imports": []
      },
      "sample_project/utilities.py:retry": {
        "type": "function",
        "name": "retry",
        "file_path": "sample_project/utilities.py",
        "line_number": 38,
        "complexity": 1,
        "docstring": "Decorator for retrying functions with exponential backoff.\n\nArgs:\n    max_attempts: Maximum number of retry attempts\n    delay: Initial delay between retries in seconds\n    backoff: Multiplier for delay after each failure",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "max_attempts",
          "delay",
          "backoff"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "wraps",
          "range",
          "func",
          "logger.warning",
          "time.sleep",
          "logger.error",
          "str"
        ],
        "imports": []
      },
      "sample_project/utilities.py:memoize": {
        "type": "function",
        "name": "memoize",
        "file_path": "sample_project/utilities.py",
        "line_number": 70,
        "complexity": 1,
        "docstring": "Simple memoization decorator with size limit.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "maxsize"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "wraps",
          "func",
          "cache_order.append",
          "str",
          "str",
          "len",
          "cache_order.pop",
          "cache.clear",
          "cache_order.clear"
        ],
        "imports": []
      },
      "sample_project/utilities.py:validate_email": {
        "type": "function",
        "name": "validate_email",
        "file_path": "sample_project/utilities.py",
        "line_number": 203,
        "complexity": 1,
        "docstring": "Validate email address format.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "email"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "bool",
          "re.match"
        ],
        "imports": []
      },
      "sample_project/utilities.py:validate_url": {
        "type": "function",
        "name": "validate_url",
        "file_path": "sample_project/utilities.py",
        "line_number": 209,
        "complexity": 1,
        "docstring": "Validate URL format.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "url"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "urllib.parse.urlparse",
          "all"
        ],
        "imports": []
      },
      "sample_project/utilities.py:parse_datetime": {
        "type": "function",
        "name": "parse_datetime",
        "file_path": "sample_project/utilities.py",
        "line_number": 218,
        "complexity": 1,
        "docstring": "Parse datetime string with multiple format attempts.\n\nArgs:\n    date_string: String to parse\n    formats: List of datetime formats to try\n    \nReturns:\n    Parsed datetime or None if parsing fails",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "date_string",
          "formats"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "logger.warning",
          "datetime.strptime"
        ],
        "imports": []
      },
      "sample_project/utilities.py:format_bytes": {
        "type": "function",
        "name": "format_bytes",
        "file_path": "sample_project/utilities.py",
        "line_number": 251,
        "complexity": 1,
        "docstring": "Format byte size to human readable string.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "size"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [],
        "imports": []
      },
      "sample_project/utilities.py:chunk_list": {
        "type": "function",
        "name": "chunk_list",
        "file_path": "sample_project/utilities.py",
        "line_number": 260,
        "complexity": 1,
        "docstring": "Split list into chunks of specified size.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "lst",
          "chunk_size"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "range",
          "len"
        ],
        "imports": []
      },
      "sample_project/utilities.py:flatten_dict": {
        "type": "function",
        "name": "flatten_dict",
        "file_path": "sample_project/utilities.py",
        "line_number": 265,
        "complexity": 1,
        "docstring": "Flatten nested dictionary.\n\nArgs:\n    d: Dictionary to flatten\n    parent_key: Parent key for recursion\n    sep: Separator for nested keys\n    \nReturns:\n    Flattened dictionary",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "d",
          "parent_key",
          "sep"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "d.items",
          "dict",
          "isinstance",
          "items.extend",
          "items.append",
          "flatten_dict(v, new_key, sep=sep).items",
          "flatten_dict"
        ],
        "imports": []
      },
      "sample_project/utilities.py:deep_merge": {
        "type": "function",
        "name": "deep_merge",
        "file_path": "sample_project/utilities.py",
        "line_number": 287,
        "complexity": 1,
        "docstring": "Deep merge two dictionaries.\n\nArgs:\n    dict1: Base dictionary\n    dict2: Dictionary to merge into dict1\n    \nReturns:\n    Merged dictionary",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "dict1",
          "dict2"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "dict1.copy",
          "dict2.items",
          "isinstance",
          "isinstance",
          "deep_merge"
        ],
        "imports": []
      },
      "sample_project/utilities.py:fetch_url": {
        "type": "function",
        "name": "fetch_url",
        "file_path": "sample_project/utilities.py",
        "line_number": 366,
        "complexity": 1,
        "docstring": "Fetch content from URL with retry logic.\n\nArgs:\n    url: URL to fetch\n    timeout: Request timeout in seconds\n    \nReturns:\n    Response text",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "url",
          "timeout"
        ],
        "decorators": [
          "retry(max_attempts=3, delay=1.0)"
        ],
        "inheritance": [],
        "calls": [
          "retry",
          "requests.get",
          "response.raise_for_status"
        ],
        "imports": []
      },
      "sample_project/utilities.py:generate_id": {
        "type": "function",
        "name": "generate_id",
        "file_path": "sample_project/utilities.py",
        "line_number": 382,
        "complexity": 1,
        "docstring": "Generate unique ID with optional prefix.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "prefix",
          "length"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "int",
          "hashlib.sha256(os.urandom(32)).hexdigest",
          "time.time",
          "hashlib.sha256",
          "os.urandom"
        ],
        "imports": []
      },
      "sample_project/utilities.py:safe_divide": {
        "type": "function",
        "name": "safe_divide",
        "file_path": "sample_project/utilities.py",
        "line_number": 392,
        "complexity": 1,
        "docstring": "Safely divide numbers, returning default on division by zero.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "numerator",
          "denominator",
          "default"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [],
        "imports": []
      },
      "sample_project/utilities.py:clamp": {
        "type": "function",
        "name": "clamp",
        "file_path": "sample_project/utilities.py",
        "line_number": 399,
        "complexity": 1,
        "docstring": "Clamp value between min and max.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "value",
          "min_value",
          "max_value"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "max",
          "min"
        ],
        "imports": []
      },
      "sample_project/utilities.py:wrapper": {
        "type": "function",
        "name": "wrapper",
        "file_path": "sample_project/utilities.py",
        "line_number": 77,
        "complexity": 1,
        "docstring": "",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [],
        "decorators": [
          "wraps(func)"
        ],
        "inheritance": [],
        "calls": [
          "wraps",
          "func",
          "cache_order.append",
          "str",
          "str",
          "len",
          "cache_order.pop"
        ],
        "imports": []
      },
      "sample_project/utilities.py:decorator": {
        "type": "function",
        "name": "decorator",
        "file_path": "sample_project/utilities.py",
        "line_number": 72,
        "complexity": 1,
        "docstring": "",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "func"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "wraps",
          "func",
          "cache_order.append",
          "str",
          "str",
          "len",
          "cache_order.pop",
          "cache.clear",
          "cache_order.clear"
        ],
        "imports": []
      },
      "sample_project/utilities.py:read_json": {
        "type": "function",
        "name": "read_json",
        "file_path": "sample_project/utilities.py",
        "line_number": 103,
        "complexity": 1,
        "docstring": "Read JSON file and return parsed content.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "file_path"
        ],
        "decorators": [
          "staticmethod"
        ],
        "inheritance": [],
        "calls": [
          "open",
          "json.load",
          "logger.error",
          "logger.error",
          "str"
        ],
        "imports": []
      },
      "sample_project/utilities.py:write_json": {
        "type": "function",
        "name": "write_json",
        "file_path": "sample_project/utilities.py",
        "line_number": 116,
        "complexity": 1,
        "docstring": "Write data to JSON file.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "data",
          "file_path",
          "indent"
        ],
        "decorators": [
          "staticmethod"
        ],
        "inheritance": [],
        "calls": [
          "logger.info",
          "open",
          "json.dump",
          "logger.error",
          "str"
        ],
        "imports": []
      },
      "sample_project/utilities.py:read_yaml": {
        "type": "function",
        "name": "read_yaml",
        "file_path": "sample_project/utilities.py",
        "line_number": 127,
        "complexity": 1,
        "docstring": "Read YAML file and return parsed content.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "file_path"
        ],
        "decorators": [
          "staticmethod"
        ],
        "inheritance": [],
        "calls": [
          "open",
          "yaml.safe_load",
          "logger.error",
          "logger.error",
          "str"
        ],
        "imports": []
      },
      "sample_project/utilities.py:ensure_directory": {
        "type": "function",
        "name": "ensure_directory",
        "file_path": "sample_project/utilities.py",
        "line_number": 140,
        "complexity": 1,
        "docstring": "Ensure directory exists, create if it doesn't.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "directory"
        ],
        "decorators": [
          "staticmethod"
        ],
        "inheritance": [],
        "calls": [
          "Path",
          "path.mkdir"
        ],
        "imports": []
      },
      "sample_project/utilities.py:get_file_hash": {
        "type": "function",
        "name": "get_file_hash",
        "file_path": "sample_project/utilities.py",
        "line_number": 147,
        "complexity": 1,
        "docstring": "Calculate hash of file contents.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "file_path",
          "algorithm"
        ],
        "decorators": [
          "staticmethod"
        ],
        "inheritance": [],
        "calls": [
          "hashlib.new",
          "hash_func.hexdigest",
          "open",
          "iter",
          "hash_func.update",
          "f.read"
        ],
        "imports": []
      },
      "sample_project/utilities.py:camel_to_snake": {
        "type": "function",
        "name": "camel_to_snake",
        "file_path": "sample_project/utilities.py",
        "line_number": 162,
        "complexity": 1,
        "docstring": "Convert CamelCase to snake_case.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "name"
        ],
        "decorators": [
          "staticmethod"
        ],
        "inheritance": [],
        "calls": [
          "re.sub",
          "re.sub('([a-z0-9])([A-Z])', '\\\\1_\\\\2', s1).lower",
          "re.sub"
        ],
        "imports": []
      },
      "sample_project/utilities.py:snake_to_camel": {
        "type": "function",
        "name": "snake_to_camel",
        "file_path": "sample_project/utilities.py",
        "line_number": 168,
        "complexity": 1,
        "docstring": "Convert snake_case to CamelCase.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "name",
          "capitalize_first"
        ],
        "decorators": [
          "staticmethod"
        ],
        "inheritance": [],
        "calls": [
          "name.split",
          "''.join",
          "''.join",
          "x.title",
          "x.title"
        ],
        "imports": []
      },
      "sample_project/utilities.py:truncate": {
        "type": "function",
        "name": "truncate",
        "file_path": "sample_project/utilities.py",
        "line_number": 177,
        "complexity": 1,
        "docstring": "Truncate text to specified length.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "text",
          "max_length",
          "suffix"
        ],
        "decorators": [
          "staticmethod"
        ],
        "inheritance": [],
        "calls": [
          "len",
          "len"
        ],
        "imports": []
      },
      "sample_project/utilities.py:sanitize_filename": {
        "type": "function",
        "name": "sanitize_filename",
        "file_path": "sample_project/utilities.py",
        "line_number": 184,
        "complexity": 1,
        "docstring": "Remove invalid characters from filename.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "filename"
        ],
        "decorators": [
          "staticmethod"
        ],
        "inheritance": [],
        "calls": [
          "filename.strip",
          "filename.replace",
          "len",
          "os.path.splitext",
          "len"
        ],
        "imports": []
      },
      "sample_project/utilities.py:__init__": {
        "type": "function",
        "name": "__init__",
        "file_path": "sample_project/utilities.py",
        "line_number": 312,
        "complexity": 1,
        "docstring": "Initialize cache.\n\nArgs:\n    ttl: Time to live in seconds (None for no expiration)",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "ttl"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "threading.RLock"
        ],
        "imports": []
      },
      "sample_project/utilities.py:get": {
        "type": "function",
        "name": "get",
        "file_path": "sample_project/utilities.py",
        "line_number": 323,
        "complexity": 1,
        "docstring": "Get value from cache.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "key"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "datetime.now"
        ],
        "imports": []
      },
      "sample_project/utilities.py:set": {
        "type": "function",
        "name": "set",
        "file_path": "sample_project/utilities.py",
        "line_number": 337,
        "complexity": 1,
        "docstring": "Set value in cache.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "key",
          "value",
          "ttl"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "datetime.now",
          "timedelta"
        ],
        "imports": []
      },
      "sample_project/utilities.py:delete": {
        "type": "function",
        "name": "delete",
        "file_path": "sample_project/utilities.py",
        "line_number": 346,
        "complexity": 1,
        "docstring": "Delete value from cache.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "key"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [],
        "imports": []
      },
      "sample_project/utilities.py:clear": {
        "type": "function",
        "name": "clear",
        "file_path": "sample_project/utilities.py",
        "line_number": 354,
        "complexity": 1,
        "docstring": "Clear all cache entries.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "self._cache.clear"
        ],
        "imports": []
      },
      "sample_project/utilities.py:size": {
        "type": "function",
        "name": "size",
        "file_path": "sample_project/utilities.py",
        "line_number": 359,
        "complexity": 1,
        "docstring": "Get number of items in cache.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "len"
        ],
        "imports": []
      },
      "sample_project/api_service.py:HTTPMethod": {
        "type": "class",
        "name": "HTTPMethod",
        "file_path": "sample_project/api_service.py",
        "line_number": 29,
        "complexity": 1,
        "docstring": "HTTP methods enumeration.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [],
        "decorators": [],
        "inheritance": [
          "Enum"
        ],
        "calls": [],
        "imports": []
      },
      "sample_project/api_service.py:HTTPStatus": {
        "type": "class",
        "name": "HTTPStatus",
        "file_path": "sample_project/api_service.py",
        "line_number": 38,
        "complexity": 1,
        "docstring": "HTTP status codes.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [],
        "decorators": [],
        "inheritance": [],
        "calls": [],
        "imports": []
      },
      "sample_project/api_service.py:Request": {
        "type": "class",
        "name": "Request",
        "file_path": "sample_project/api_service.py",
        "line_number": 54,
        "complexity": 1,
        "docstring": "HTTP request representation.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [
          "get_header",
          "get_param"
        ],
        "parameters": [],
        "decorators": [
          "dataclass"
        ],
        "inheritance": [],
        "calls": [],
        "imports": []
      },
      "sample_project/api_service.py:Response": {
        "type": "class",
        "name": "Response",
        "file_path": "sample_project/api_service.py",
        "line_number": 73,
        "complexity": 1,
        "docstring": "HTTP response representation.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [
          "__post_init__",
          "to_dict"
        ],
        "parameters": [],
        "decorators": [
          "dataclass"
        ],
        "inheritance": [],
        "calls": [],
        "imports": []
      },
      "sample_project/api_service.py:Middleware": {
        "type": "class",
        "name": "Middleware",
        "file_path": "sample_project/api_service.py",
        "line_number": 96,
        "complexity": 1,
        "docstring": "Abstract base class for middleware.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [
          "process_request",
          "process_response"
        ],
        "parameters": [],
        "decorators": [],
        "inheritance": [
          "ABC"
        ],
        "calls": [],
        "imports": []
      },
      "sample_project/api_service.py:AuthenticationMiddleware": {
        "type": "class",
        "name": "AuthenticationMiddleware",
        "file_path": "sample_project/api_service.py",
        "line_number": 113,
        "complexity": 1,
        "docstring": "Middleware for handling authentication.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [
          "__init__",
          "process_request",
          "process_response",
          "_is_public_endpoint",
          "_validate_token",
          "_generate_signature",
          "generate_token"
        ],
        "parameters": [],
        "decorators": [],
        "inheritance": [
          "Middleware"
        ],
        "calls": [],
        "imports": []
      },
      "sample_project/api_service.py:RateLimiter": {
        "type": "class",
        "name": "RateLimiter",
        "file_path": "sample_project/api_service.py",
        "line_number": 256,
        "complexity": 1,
        "docstring": "Middleware for rate limiting.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [
          "__init__",
          "process_request",
          "process_response",
          "_get_client_id",
          "_clean_old_requests"
        ],
        "parameters": [],
        "decorators": [],
        "inheritance": [
          "Middleware"
        ],
        "calls": [],
        "imports": []
      },
      "sample_project/api_service.py:APIService": {
        "type": "class",
        "name": "APIService",
        "file_path": "sample_project/api_service.py",
        "line_number": 330,
        "complexity": 1,
        "docstring": "Abstract base class for API services.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [
          "__init__",
          "get_routes",
          "handle_request",
          "_match_route",
          "paginate"
        ],
        "parameters": [],
        "decorators": [],
        "inheritance": [
          "ABC"
        ],
        "calls": [],
        "imports": []
      },
      "sample_project/api_service.py:UserAPI": {
        "type": "class",
        "name": "UserAPI",
        "file_path": "sample_project/api_service.py",
        "line_number": 394,
        "complexity": 1,
        "docstring": "API service for user management.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [
          "get_routes",
          "list_users",
          "get_user",
          "create_user",
          "update_user",
          "delete_user",
          "add_role",
          "remove_role",
          "_serialize_user"
        ],
        "parameters": [],
        "decorators": [],
        "inheritance": [
          "APIService"
        ],
        "calls": [],
        "imports": []
      },
      "sample_project/api_service.py:ProductAPI": {
        "type": "class",
        "name": "ProductAPI",
        "file_path": "sample_project/api_service.py",
        "line_number": 633,
        "complexity": 1,
        "docstring": "API service for product management.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [
          "get_routes",
          "list_products",
          "get_product",
          "create_product",
          "update_product",
          "delete_product",
          "update_inventory",
          "_serialize_product"
        ],
        "parameters": [],
        "decorators": [],
        "inheritance": [
          "APIService"
        ],
        "calls": [],
        "imports": []
      },
      "sample_project/api_service.py:OrderAPI": {
        "type": "class",
        "name": "OrderAPI",
        "file_path": "sample_project/api_service.py",
        "line_number": 754,
        "complexity": 1,
        "docstring": "API service for order management.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [
          "get_routes",
          "list_orders",
          "get_order",
          "create_order",
          "update_order_status"
        ],
        "parameters": [],
        "decorators": [],
        "inheritance": [
          "APIService"
        ],
        "calls": [],
        "imports": []
      },
      "sample_project/api_service.py:APIRouter": {
        "type": "class",
        "name": "APIRouter",
        "file_path": "sample_project/api_service.py",
        "line_number": 791,
        "complexity": 1,
        "docstring": "Main API router that delegates to services.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [
          "__init__",
          "add_service",
          "add_middleware",
          "handle_request",
          "_match_route"
        ],
        "parameters": [],
        "decorators": [],
        "inheritance": [],
        "calls": [],
        "imports": []
      },
      "sample_project/api_service.py:get_header": {
        "type": "function",
        "name": "get_header",
        "file_path": "sample_project/api_service.py",
        "line_number": 63,
        "complexity": 1,
        "docstring": "Get header value (case-insensitive).",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "name",
          "default"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "self.headers.get",
          "name.lower"
        ],
        "imports": []
      },
      "sample_project/api_service.py:get_param": {
        "type": "function",
        "name": "get_param",
        "file_path": "sample_project/api_service.py",
        "line_number": 67,
        "complexity": 1,
        "docstring": "Get query parameter value.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "name",
          "default"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "self.params.get"
        ],
        "imports": []
      },
      "sample_project/api_service.py:__post_init__": {
        "type": "function",
        "name": "__post_init__",
        "file_path": "sample_project/api_service.py",
        "line_number": 79,
        "complexity": 1,
        "docstring": "",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [],
        "imports": []
      },
      "sample_project/api_service.py:to_dict": {
        "type": "function",
        "name": "to_dict",
        "file_path": "sample_project/api_service.py",
        "line_number": 87,
        "complexity": 1,
        "docstring": "Convert response to dictionary.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [],
        "imports": []
      },
      "sample_project/api_service.py:process_request": {
        "type": "function",
        "name": "process_request",
        "file_path": "sample_project/api_service.py",
        "line_number": 265,
        "complexity": 1,
        "docstring": "Check rate limit for request.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "request"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "self._get_client_id",
          "self._clean_old_requests",
          "request_times.append",
          "len",
          "Response",
          "datetime.now",
          "str",
          "str",
          "int",
          "(request_times[0] + timedelta(seconds=self.window_seconds)).timestamp",
          "timedelta"
        ],
        "imports": []
      },
      "sample_project/api_service.py:process_response": {
        "type": "function",
        "name": "process_response",
        "file_path": "sample_project/api_service.py",
        "line_number": 295,
        "complexity": 1,
        "docstring": "Add rate limit headers to response.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "request",
          "response"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "self._get_client_id",
          "self.request_counts.get",
          "max",
          "response.headers.update",
          "len",
          "str",
          "str",
          "str"
        ],
        "imports": []
      },
      "sample_project/api_service.py:__init__": {
        "type": "function",
        "name": "__init__",
        "file_path": "sample_project/api_service.py",
        "line_number": 794,
        "complexity": 1,
        "docstring": "Initialize router.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [],
        "imports": []
      },
      "sample_project/api_service.py:_is_public_endpoint": {
        "type": "function",
        "name": "_is_public_endpoint",
        "file_path": "sample_project/api_service.py",
        "line_number": 173,
        "complexity": 1,
        "docstring": "Check if endpoint is public.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "path"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "re.match"
        ],
        "imports": []
      },
      "sample_project/api_service.py:_validate_token": {
        "type": "function",
        "name": "_validate_token",
        "file_path": "sample_project/api_service.py",
        "line_number": 187,
        "complexity": 1,
        "docstring": "Validate JWT token and return user ID.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "token"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "self.token_cache.get",
          "token.split",
          "json.loads",
          "self._generate_signature",
          "payload.get",
          "len",
          "base64.b64decode",
          "self.token_cache.set",
          "logger.error",
          "datetime.now().timestamp",
          "datetime.now",
          "str"
        ],
        "imports": []
      },
      "sample_project/api_service.py:_generate_signature": {
        "type": "function",
        "name": "_generate_signature",
        "file_path": "sample_project/api_service.py",
        "line_number": 223,
        "complexity": 1,
        "docstring": "Generate token signature.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "header",
          "payload"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "hmac.new(self.secret_key.encode(), message.encode(), hashlib.sha256).hexdigest",
          "hmac.new",
          "self.secret_key.encode",
          "message.encode"
        ],
        "imports": []
      },
      "sample_project/api_service.py:generate_token": {
        "type": "function",
        "name": "generate_token",
        "file_path": "sample_project/api_service.py",
        "line_number": 233,
        "complexity": 1,
        "docstring": "Generate JWT token for user.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "user"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "base64.b64encode(json.dumps({'alg': 'HS256', 'typ': 'JWT'}).encode()).decode().rstrip",
          "base64.b64encode(json.dumps({'user_id': user.id, 'username': user.username, 'exp': (datetime.now() + timedelta(hours=24)).timestamp()}).encode()).decode().rstrip",
          "self._generate_signature",
          "base64.b64encode(json.dumps({'alg': 'HS256', 'typ': 'JWT'}).encode()).decode",
          "base64.b64encode(json.dumps({'user_id': user.id, 'username': user.username, 'exp': (datetime.now() + timedelta(hours=24)).timestamp()}).encode()).decode",
          "base64.b64encode",
          "base64.b64encode",
          "json.dumps({'alg': 'HS256', 'typ': 'JWT'}).encode",
          "json.dumps({'user_id': user.id, 'username': user.username, 'exp': (datetime.now() + timedelta(hours=24)).timestamp()}).encode",
          "json.dumps",
          "json.dumps",
          "(datetime.now() + timedelta(hours=24)).timestamp",
          "datetime.now",
          "timedelta"
        ],
        "imports": []
      },
      "sample_project/api_service.py:_get_client_id": {
        "type": "function",
        "name": "_get_client_id",
        "file_path": "sample_project/api_service.py",
        "line_number": 310,
        "complexity": 1,
        "docstring": "Get client identifier from request.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "request"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "request.get_header"
        ],
        "imports": []
      },
      "sample_project/api_service.py:_clean_old_requests": {
        "type": "function",
        "name": "_clean_old_requests",
        "file_path": "sample_project/api_service.py",
        "line_number": 318,
        "complexity": 1,
        "docstring": "Remove requests older than the time window.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "client_id"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "datetime.now",
          "timedelta"
        ],
        "imports": []
      },
      "sample_project/api_service.py:get_routes": {
        "type": "function",
        "name": "get_routes",
        "file_path": "sample_project/api_service.py",
        "line_number": 757,
        "complexity": 1,
        "docstring": "Get order API routes.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [],
        "imports": []
      },
      "sample_project/api_service.py:handle_request": {
        "type": "function",
        "name": "handle_request",
        "file_path": "sample_project/api_service.py",
        "line_number": 807,
        "complexity": 1,
        "docstring": "Handle incoming request through middleware pipeline.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "request"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "reversed",
          "mw.process_request",
          "service.get_routes",
          "routes.keys",
          "Response",
          "mw.process_response",
          "self._match_route",
          "service.handle_request"
        ],
        "imports": []
      },
      "sample_project/api_service.py:_match_route": {
        "type": "function",
        "name": "_match_route",
        "file_path": "sample_project/api_service.py",
        "line_number": 839,
        "complexity": 1,
        "docstring": "Check if path matches route pattern.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "pattern",
          "path"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "re.sub",
          "bool",
          "re.match"
        ],
        "imports": []
      },
      "sample_project/api_service.py:paginate": {
        "type": "function",
        "name": "paginate",
        "file_path": "sample_project/api_service.py",
        "line_number": 376,
        "complexity": 1,
        "docstring": "Paginate list of items.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "items",
          "page",
          "per_page"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "len"
        ],
        "imports": []
      },
      "sample_project/api_service.py:list_users": {
        "type": "function",
        "name": "list_users",
        "file_path": "sample_project/api_service.py",
        "line_number": 416,
        "complexity": 1,
        "docstring": "List all users with pagination.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "request"
        ],
        "decorators": [
          "timer"
        ],
        "inheritance": [],
        "calls": [
          "int",
          "int",
          "request.get_param",
          "request.get_param",
          "self.repository.find_all",
          "self.paginate",
          "Response",
          "request.get_param",
          "request.get_param",
          "self._serialize_user",
          "logger.error",
          "Response",
          "u.has_role",
          "str",
          "is_active.lower"
        ],
        "imports": []
      },
      "sample_project/api_service.py:get_user": {
        "type": "function",
        "name": "get_user",
        "file_path": "sample_project/api_service.py",
        "line_number": 452,
        "complexity": 1,
        "docstring": "Get single user by ID.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "request"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "re.match",
          "match.group",
          "self.repository.find_by_id",
          "Response",
          "Response",
          "Response",
          "self._serialize_user"
        ],
        "imports": []
      },
      "sample_project/api_service.py:create_user": {
        "type": "function",
        "name": "create_user",
        "file_path": "sample_project/api_service.py",
        "line_number": 476,
        "complexity": 1,
        "docstring": "Create new user.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "request"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "self.repository.find_by_criteria",
          "Response",
          "validate_email",
          "Response",
          "Response",
          "User",
          "self.repository.save",
          "Response",
          "Response",
          "logger.error",
          "Response",
          "request.body.get",
          "self._serialize_user",
          "str"
        ],
        "imports": []
      },
      "sample_project/api_service.py:update_user": {
        "type": "function",
        "name": "update_user",
        "file_path": "sample_project/api_service.py",
        "line_number": 532,
        "complexity": 1,
        "docstring": "Update existing user.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "request"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "re.match",
          "match.group",
          "self.repository.find_by_id",
          "Response",
          "Response",
          "Response",
          "Response",
          "self.repository.save",
          "self._serialize_user",
          "validate_email",
          "Response"
        ],
        "imports": []
      },
      "sample_project/api_service.py:delete_user": {
        "type": "function",
        "name": "delete_user",
        "file_path": "sample_project/api_service.py",
        "line_number": 581,
        "complexity": 1,
        "docstring": "Delete user.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "request"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "re.match",
          "match.group",
          "self.repository.delete",
          "Response",
          "Response",
          "Response",
          "Response"
        ],
        "imports": []
      },
      "sample_project/api_service.py:add_role": {
        "type": "function",
        "name": "add_role",
        "file_path": "sample_project/api_service.py",
        "line_number": 608,
        "complexity": 1,
        "docstring": "Add role to user.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "request"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [],
        "imports": []
      },
      "sample_project/api_service.py:remove_role": {
        "type": "function",
        "name": "remove_role",
        "file_path": "sample_project/api_service.py",
        "line_number": 613,
        "complexity": 1,
        "docstring": "Remove role from user.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "request"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [],
        "imports": []
      },
      "sample_project/api_service.py:_serialize_user": {
        "type": "function",
        "name": "_serialize_user",
        "file_path": "sample_project/api_service.py",
        "line_number": 618,
        "complexity": 1,
        "docstring": "Serialize user for API response.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "user"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "user.created_at.isoformat",
          "user.last_login.isoformat"
        ],
        "imports": []
      },
      "sample_project/api_service.py:list_products": {
        "type": "function",
        "name": "list_products",
        "file_path": "sample_project/api_service.py",
        "line_number": 653,
        "complexity": 1,
        "docstring": "List products with filtering.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "request"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "request.get_param",
          "request.get_param",
          "request.get_param",
          "self.repository.find_all",
          "request.get_param",
          "int",
          "int",
          "self.paginate",
          "Response",
          "request.get_param('available_only', 'false').lower",
          "request.get_param",
          "products.sort",
          "request.get_param",
          "request.get_param",
          "self._serialize_product",
          "logger.error",
          "Response",
          "products.sort",
          "request.get_param",
          "float",
          "float",
          "str"
        ],
        "imports": []
      },
      "sample_project/api_service.py:get_product": {
        "type": "function",
        "name": "get_product",
        "file_path": "sample_project/api_service.py",
        "line_number": 704,
        "complexity": 1,
        "docstring": "Get single product.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "request"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [],
        "imports": []
      },
      "sample_project/api_service.py:create_product": {
        "type": "function",
        "name": "create_product",
        "file_path": "sample_project/api_service.py",
        "line_number": 709,
        "complexity": 1,
        "docstring": "Create new product.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "request"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "Response"
        ],
        "imports": []
      },
      "sample_project/api_service.py:update_product": {
        "type": "function",
        "name": "update_product",
        "file_path": "sample_project/api_service.py",
        "line_number": 721,
        "complexity": 1,
        "docstring": "Update product.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "request"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [],
        "imports": []
      },
      "sample_project/api_service.py:delete_product": {
        "type": "function",
        "name": "delete_product",
        "file_path": "sample_project/api_service.py",
        "line_number": 726,
        "complexity": 1,
        "docstring": "Delete product.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "request"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [],
        "imports": []
      },
      "sample_project/api_service.py:update_inventory": {
        "type": "function",
        "name": "update_inventory",
        "file_path": "sample_project/api_service.py",
        "line_number": 731,
        "complexity": 1,
        "docstring": "Update product inventory.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "request"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [],
        "imports": []
      },
      "sample_project/api_service.py:_serialize_product": {
        "type": "function",
        "name": "_serialize_product",
        "file_path": "sample_project/api_service.py",
        "line_number": 736,
        "complexity": 1,
        "docstring": "Serialize product for API response.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "product"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "product.created_at.isoformat"
        ],
        "imports": []
      },
      "sample_project/api_service.py:list_orders": {
        "type": "function",
        "name": "list_orders",
        "file_path": "sample_project/api_service.py",
        "line_number": 770,
        "complexity": 1,
        "docstring": "List orders for user.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "request"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [],
        "imports": []
      },
      "sample_project/api_service.py:get_order": {
        "type": "function",
        "name": "get_order",
        "file_path": "sample_project/api_service.py",
        "line_number": 775,
        "complexity": 1,
        "docstring": "Get single order.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "request"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [],
        "imports": []
      },
      "sample_project/api_service.py:create_order": {
        "type": "function",
        "name": "create_order",
        "file_path": "sample_project/api_service.py",
        "line_number": 780,
        "complexity": 1,
        "docstring": "Create new order.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "request"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [],
        "imports": []
      },
      "sample_project/api_service.py:update_order_status": {
        "type": "function",
        "name": "update_order_status",
        "file_path": "sample_project/api_service.py",
        "line_number": 785,
        "complexity": 1,
        "docstring": "Update order status.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "request"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [],
        "imports": []
      },
      "sample_project/api_service.py:add_service": {
        "type": "function",
        "name": "add_service",
        "file_path": "sample_project/api_service.py",
        "line_number": 799,
        "complexity": 1,
        "docstring": "Register API service.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "service"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "self.services.append"
        ],
        "imports": []
      },
      "sample_project/api_service.py:add_middleware": {
        "type": "function",
        "name": "add_middleware",
        "file_path": "sample_project/api_service.py",
        "line_number": 803,
        "complexity": 1,
        "docstring": "Add middleware to pipeline.",
        "dependencies": [],
        "semantic_info": {},
        "methods": [],
        "parameters": [
          "self",
          "middleware"
        ],
        "decorators": [],
        "inheritance": [],
        "calls": [
          "self.middleware.append"
        ],
        "imports": []
      }
    },
    "timestamp": "/home/guci/aiProjects/CodeAnalysis"
  },
  "community_results": {
    "algorithm": "louvain",
    "communities": {
      "sample_project/main.py:Application": 0,
      "sample_project/main.py:main": 1,
      "sample_project/main.py:__init__": 75,
      "sample_project/main.py:_initialize_repositories": 3,
      "sample_project/main.py:_initialize_services": 4,
      "sample_project/main.py:create_user": 105,
      "sample_project/main.py:create_product": 6,
      "sample_project/main.py:create_order": 7,
      "sample_project/main.py:create_task": 8,
      "sample_project/main.py:_create_notification": 9,
      "sample_project/main.py:process_data_file": 10,
      "sample_project/main.py:generate_reports": 11,
      "sample_project/main.py:_count_by_attribute": 12,
      "sample_project/main.py:export_data": 13,
      "sample_project/main.py:run_maintenance": 14,
      "sample_project/models.py:Status": 15,
      "sample_project/models.py:Priority": 16,
      "sample_project/models.py:BaseModel": 17,
      "sample_project/models.py:User": 17,
      "sample_project/models.py:Product": 17,
      "sample_project/models.py:Order": 17,
      "sample_project/models.py:Task": 17,
      "sample_project/models.py:AbstractRepository": 22,
      "sample_project/models.py:InMemoryRepository": 22,
      "sample_project/models.py:Notification": 17,
      "sample_project/models.py:ModelFactory": 25,
      "sample_project/models.py:update_timestamp": 26,
      "sample_project/models.py:to_dict": 27,
      "sample_project/models.py:to_json": 28,
      "sample_project/models.py:__post_init__": 29,
      "sample_project/models.py:has_role": 30,
      "sample_project/models.py:add_role": 31,
      "sample_project/models.py:remove_role": 32,
      "sample_project/models.py:update_preferences": 33,
      "sample_project/models.py:display_name": 34,
      "sample_project/models.py:_generate_sku": 35,
      "sample_project/models.py:update_inventory": 36,
      "sample_project/models.py:add_tag": 37,
      "sample_project/models.py:set_price": 38,
      "sample_project/models.py:formatted_price": 39,
      "sample_project/models.py:add_item": 40,
      "sample_project/models.py:remove_item": 41,
      "sample_project/models.py:_recalculate_total": 42,
      "sample_project/models.py:update_status": 43,
      "sample_project/models.py:item_count": 44,
      "sample_project/models.py:__init__": 45,
      "sample_project/models.py:assign_to": 46,
      "sample_project/models.py:set_due_date": 47,
      "sample_project/models.py:mark_complete": 48,
      "sample_project/models.py:add_subtask": 49,
      "sample_project/models.py:add_dependency": 50,
      "sample_project/models.py:add_comment": 51,
      "sample_project/models.py:add_attachment": 52,
      "sample_project/models.py:is_overdue": 53,
      "sample_project/models.py:progress": 54,
      "sample_project/models.py:find_by_id": 55,
      "sample_project/models.py:find_all": 56,
      "sample_project/models.py:save": 57,
      "sample_project/models.py:delete": 58,
      "sample_project/models.py:find_by_criteria": 59,
      "sample_project/models.py:mark_as_read": 60,
      "sample_project/models.py:is_expired": 61,
      "sample_project/models.py:create": 62,
      "sample_project/models.py:register_model": 63,
      "sample_project/config.py:Environment": 64,
      "sample_project/config.py:LogLevel": 65,
      "sample_project/config.py:BaseConfig": 66,
      "sample_project/config.py:DatabaseConfig": 66,
      "sample_project/config.py:CacheConfig": 66,
      "sample_project/config.py:SecurityConfig": 66,
      "sample_project/config.py:APIConfig": 66,
      "sample_project/config.py:LoggingConfig": 66,
      "sample_project/config.py:EmailConfig": 66,
      "sample_project/config.py:StorageConfig": 66,
      "sample_project/config.py:Config": 66,
      "sample_project/config.py:get_config": 75,
      "sample_project/config.py:validate": 76,
      "sample_project/config.py:to_dict": 77,
      "sample_project/config.py:from_dict": 78,
      "sample_project/config.py:connection_string": 79,
      "sample_project/config.py:full_base_url": 80,
      "sample_project/config.py:from_file": 81,
      "sample_project/config.py:_from_nested_dict": 82,
      "sample_project/config.py:to_file": 83,
      "sample_project/data_processing.py:DataProcessor": 85,
      "sample_project/data_processing.py:TimeSeriesProcessor": 85,
      "sample_project/data_processing.py:DataValidator": 86,
      "sample_project/data_processing.py:transform_data": 87,
      "sample_project/data_processing.py:merge_datasets": 88,
      "sample_project/data_processing.py:__init__": 89,
      "sample_project/data_processing.py:process_csv": 90,
      "sample_project/data_processing.py:_clean_dataframe": 91,
      "sample_project/data_processing.py:calculate_statistics": 92,
      "sample_project/data_processing.py:aggregate_data": 93,
      "sample_project/data_processing.py:resample_timeseries": 94,
      "sample_project/data_processing.py:detect_anomalies": 95,
      "sample_project/data_processing.py:calculate_moving_averages": 96,
      "sample_project/data_processing.py:validate_schema": 97,
      "sample_project/data_processing.py:check_data_quality": 98,
      "sample_project/utilities.py:FileHandler": 99,
      "sample_project/utilities.py:StringUtils": 100,
      "sample_project/utilities.py:Cache": 101,
      "sample_project/utilities.py:timer": 102,
      "sample_project/utilities.py:retry": 112,
      "sample_project/utilities.py:memoize": 104,
      "sample_project/utilities.py:validate_email": 105,
      "sample_project/utilities.py:validate_url": 106,
      "sample_project/utilities.py:parse_datetime": 107,
      "sample_project/utilities.py:format_bytes": 108,
      "sample_project/utilities.py:chunk_list": 109,
      "sample_project/utilities.py:flatten_dict": 110,
      "sample_project/utilities.py:deep_merge": 111,
      "sample_project/utilities.py:fetch_url": 112,
      "sample_project/utilities.py:generate_id": 113,
      "sample_project/utilities.py:safe_divide": 114,
      "sample_project/utilities.py:clamp": 115,
      "sample_project/utilities.py:wrapper": 116,
      "sample_project/utilities.py:decorator": 117,
      "sample_project/utilities.py:read_json": 118,
      "sample_project/utilities.py:write_json": 119,
      "sample_project/utilities.py:read_yaml": 120,
      "sample_project/utilities.py:ensure_directory": 121,
      "sample_project/utilities.py:get_file_hash": 122,
      "sample_project/utilities.py:camel_to_snake": 123,
      "sample_project/utilities.py:snake_to_camel": 124,
      "sample_project/utilities.py:truncate": 125,
      "sample_project/utilities.py:sanitize_filename": 126,
      "sample_project/utilities.py:__init__": 127,
      "sample_project/utilities.py:get": 128,
      "sample_project/utilities.py:set": 97,
      "sample_project/utilities.py:delete": 130,
      "sample_project/utilities.py:clear": 131,
      "sample_project/utilities.py:size": 132,
      "sample_project/api_service.py:HTTPMethod": 133,
      "sample_project/api_service.py:HTTPStatus": 134,
      "sample_project/api_service.py:Request": 135,
      "sample_project/api_service.py:Response": 136,
      "sample_project/api_service.py:Middleware": 138,
      "sample_project/api_service.py:AuthenticationMiddleware": 138,
      "sample_project/api_service.py:RateLimiter": 138,
      "sample_project/api_service.py:APIService": 140,
      "sample_project/api_service.py:UserAPI": 140,
      "sample_project/api_service.py:ProductAPI": 140,
      "sample_project/api_service.py:OrderAPI": 140,
      "sample_project/api_service.py:APIRouter": 144,
      "sample_project/api_service.py:get_header": 145,
      "sample_project/api_service.py:get_param": 146,
      "sample_project/api_service.py:__post_init__": 147,
      "sample_project/api_service.py:to_dict": 148,
      "sample_project/api_service.py:process_request": 149,
      "sample_project/api_service.py:process_response": 150,
      "sample_project/api_service.py:__init__": 151,
      "sample_project/api_service.py:_is_public_endpoint": 152,
      "sample_project/api_service.py:_validate_token": 153,
      "sample_project/api_service.py:_generate_signature": 154,
      "sample_project/api_service.py:generate_token": 155,
      "sample_project/api_service.py:_get_client_id": 156,
      "sample_project/api_service.py:_clean_old_requests": 129,
      "sample_project/api_service.py:get_routes": 2,
      "sample_project/api_service.py:handle_request": 5,
      "sample_project/api_service.py:_match_route": 137,
      "sample_project/api_service.py:paginate": 139,
      "sample_project/api_service.py:list_users": 141,
      "sample_project/api_service.py:get_user": 142,
      "sample_project/api_service.py:create_user": 105,
      "sample_project/api_service.py:update_user": 105,
      "sample_project/api_service.py:delete_user": 143,
      "sample_project/api_service.py:add_role": 18,
      "sample_project/api_service.py:remove_role": 19,
      "sample_project/api_service.py:_serialize_user": 20,
      "sample_project/api_service.py:list_products": 21,
      "sample_project/api_service.py:get_product": 23,
      "sample_project/api_service.py:create_product": 24,
      "sample_project/api_service.py:update_product": 67,
      "sample_project/api_service.py:delete_product": 68,
      "sample_project/api_service.py:update_inventory": 69,
      "sample_project/api_service.py:_serialize_product": 70,
      "sample_project/api_service.py:list_orders": 71,
      "sample_project/api_service.py:get_order": 72,
      "sample_project/api_service.py:create_order": 73,
      "sample_project/api_service.py:update_order_status": 74,
      "sample_project/api_service.py:add_service": 84,
      "sample_project/api_service.py:add_middleware": 103
    },
    "modularity": 0.8494897959183672,
    "num_communities": 157,
    "statistics": {
      "num_communities": 157,
      "community_sizes": [
        1,
        1,
        2,
        1,
        1,
        4,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        6,
        2,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        9,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        2,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        2,
        1,
        1,
        1,
        1,
        1,
        2,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        3,
        4,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1
      ],
      "avg_community_size": 1.1656050955414012,
      "largest_community": 9,
      "smallest_community": 1,
      "community_cohesion": {
        "0": 0,
        "1": 0,
        "75": 1.0,
        "3": 0,
        "4": 0,
        "105": 0.5,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0,
        "10": 0,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 0,
        "15": 0,
        "16": 0,
        "17": 0.3333333333333333,
        "22": 1.0,
        "25": 0,
        "26": 0,
        "27": 0,
        "28": 0,
        "29": 0,
        "30": 0,
        "31": 0,
        "32": 0,
        "33": 0,
        "34": 0,
        "35": 0,
        "36": 0,
        "37": 0,
        "38": 0,
        "39": 0,
        "40": 0,
        "41": 0,
        "42": 0,
        "43": 0,
        "44": 0,
        "45": 0,
        "46": 0,
        "47": 0,
        "48": 0,
        "49": 0,
        "50": 0,
        "51": 0,
        "52": 0,
        "53": 0,
        "54": 0,
        "55": 0,
        "56": 0,
        "57": 0,
        "58": 0,
        "59": 0,
        "60": 0,
        "61": 0,
        "62": 0,
        "63": 0,
        "64": 0,
        "65": 0,
        "66": 0.2222222222222222,
        "76": 0,
        "77": 0,
        "78": 0,
        "79": 0,
        "80": 0,
        "81": 0,
        "82": 0,
        "83": 0,
        "85": 1.0,
        "86": 0,
        "87": 0,
        "88": 0,
        "89": 0,
        "90": 0,
        "91": 0,
        "92": 0,
        "93": 0,
        "94": 0,
        "95": 0,
        "96": 0,
        "97": 1.0,
        "98": 0,
        "99": 0,
        "100": 0,
        "101": 0,
        "102": 0,
        "112": 1.0,
        "104": 0,
        "106": 0,
        "107": 0,
        "108": 0,
        "109": 0,
        "110": 0,
        "111": 0,
        "113": 0,
        "114": 0,
        "115": 0,
        "116": 0,
        "117": 0,
        "118": 0,
        "119": 0,
        "120": 0,
        "121": 0,
        "122": 0,
        "123": 0,
        "124": 0,
        "125": 0,
        "126": 0,
        "127": 0,
        "128": 0,
        "130": 0,
        "131": 0,
        "132": 0,
        "133": 0,
        "134": 0,
        "135": 0,
        "136": 0,
        "138": 0.6666666666666666,
        "140": 0.5,
        "144": 0,
        "145": 0,
        "146": 0,
        "147": 0,
        "148": 0,
        "149": 0,
        "150": 0,
        "151": 0,
        "152": 0,
        "153": 0,
        "154": 0,
        "155": 0,
        "156": 0,
        "129": 0,
        "2": 0,
        "5": 0,
        "137": 0,
        "139": 0,
        "141": 0,
        "142": 0,
        "143": 0,
        "18": 0,
        "19": 0,
        "20": 0,
        "21": 0,
        "23": 0,
        "24": 0,
        "67": 0,
        "68": 0,
        "69": 0,
        "70": 0,
        "71": 0,
        "72": 0,
        "73": 0,
        "74": 0,
        "84": 0,
        "103": 0
      },
      "community_coupling": {
        "0": 0,
        "1": 0,
        "75": 0.0,
        "3": 0,
        "4": 0,
        "105": 0.0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0,
        "10": 0,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 0,
        "15": 0,
        "16": 0,
        "17": 0.0,
        "22": 0.0,
        "25": 0,
        "26": 0,
        "27": 0,
        "28": 0,
        "29": 0,
        "30": 0,
        "31": 0,
        "32": 0,
        "33": 0,
        "34": 0,
        "35": 0,
        "36": 0,
        "37": 0,
        "38": 0,
        "39": 0,
        "40": 0,
        "41": 0,
        "42": 0,
        "43": 0,
        "44": 0,
        "45": 0,
        "46": 0,
        "47": 0,
        "48": 0,
        "49": 0,
        "50": 0,
        "51": 0,
        "52": 0,
        "53": 0,
        "54": 0,
        "55": 0,
        "56": 0,
        "57": 0,
        "58": 0,
        "59": 0,
        "60": 0,
        "61": 0,
        "62": 0,
        "63": 0,
        "64": 0,
        "65": 0,
        "66": 0.0,
        "76": 0,
        "77": 0,
        "78": 0,
        "79": 0,
        "80": 0,
        "81": 0,
        "82": 0,
        "83": 0,
        "85": 0.0,
        "86": 0,
        "87": 0,
        "88": 0,
        "89": 0,
        "90": 0,
        "91": 0,
        "92": 0,
        "93": 0,
        "94": 0,
        "95": 0,
        "96": 0,
        "97": 0.0,
        "98": 0,
        "99": 0,
        "100": 0,
        "101": 0,
        "102": 0,
        "112": 0.0,
        "104": 0,
        "106": 0,
        "107": 0,
        "108": 0,
        "109": 0,
        "110": 0.0,
        "111": 0.0,
        "113": 0,
        "114": 0,
        "115": 0,
        "116": 0,
        "117": 0,
        "118": 0,
        "119": 0,
        "120": 0,
        "121": 0,
        "122": 0,
        "123": 0,
        "124": 0,
        "125": 0,
        "126": 0,
        "127": 0,
        "128": 0,
        "130": 0,
        "131": 0,
        "132": 0,
        "133": 0,
        "134": 0,
        "135": 0,
        "136": 0,
        "138": 0.0,
        "140": 0.0,
        "144": 0,
        "145": 0,
        "146": 0,
        "147": 0,
        "148": 0,
        "149": 0,
        "150": 0,
        "151": 0,
        "152": 0,
        "153": 0,
        "154": 0,
        "155": 0,
        "156": 0,
        "129": 0,
        "2": 0,
        "5": 0,
        "137": 0,
        "139": 0,
        "141": 0,
        "142": 0,
        "143": 0,
        "18": 0,
        "19": 0,
        "20": 0,
        "21": 0,
        "23": 0,
        "24": 0,
        "67": 0,
        "68": 0,
        "69": 0,
        "70": 0,
        "71": 0,
        "72": 0,
        "73": 0,
        "74": 0,
        "84": 0,
        "103": 0
      },
      "community_details": {
        "0": {
          "size": 1,
          "nodes": [
            "sample_project/main.py:Application"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "1": {
          "size": 1,
          "nodes": [
            "sample_project/main.py:main"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "75": {
          "size": 2,
          "nodes": [
            "sample_project/main.py:__init__",
            "sample_project/config.py:get_config"
          ],
          "cohesion": 1.0,
          "coupling": 0.0,
          "internal_edges": 1,
          "external_edges": 0,
          "total_edges": 2
        },
        "3": {
          "size": 1,
          "nodes": [
            "sample_project/main.py:_initialize_repositories"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "4": {
          "size": 1,
          "nodes": [
            "sample_project/main.py:_initialize_services"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "105": {
          "size": 4,
          "nodes": [
            "sample_project/main.py:create_user",
            "sample_project/utilities.py:validate_email",
            "sample_project/api_service.py:create_user",
            "sample_project/api_service.py:update_user"
          ],
          "cohesion": 0.5,
          "coupling": 0.0,
          "internal_edges": 3,
          "external_edges": 0,
          "total_edges": 6
        },
        "6": {
          "size": 1,
          "nodes": [
            "sample_project/main.py:create_product"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "7": {
          "size": 1,
          "nodes": [
            "sample_project/main.py:create_order"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "8": {
          "size": 1,
          "nodes": [
            "sample_project/main.py:create_task"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "9": {
          "size": 1,
          "nodes": [
            "sample_project/main.py:_create_notification"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "10": {
          "size": 1,
          "nodes": [
            "sample_project/main.py:process_data_file"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "11": {
          "size": 1,
          "nodes": [
            "sample_project/main.py:generate_reports"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "12": {
          "size": 1,
          "nodes": [
            "sample_project/main.py:_count_by_attribute"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "13": {
          "size": 1,
          "nodes": [
            "sample_project/main.py:export_data"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "14": {
          "size": 1,
          "nodes": [
            "sample_project/main.py:run_maintenance"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "15": {
          "size": 1,
          "nodes": [
            "sample_project/models.py:Status"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "16": {
          "size": 1,
          "nodes": [
            "sample_project/models.py:Priority"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "17": {
          "size": 6,
          "nodes": [
            "sample_project/models.py:BaseModel",
            "sample_project/models.py:User",
            "sample_project/models.py:Product",
            "sample_project/models.py:Order",
            "sample_project/models.py:Task",
            "sample_project/models.py:Notification"
          ],
          "cohesion": 0.3333333333333333,
          "coupling": 0.0,
          "internal_edges": 5,
          "external_edges": 0,
          "total_edges": 10
        },
        "22": {
          "size": 2,
          "nodes": [
            "sample_project/models.py:AbstractRepository",
            "sample_project/models.py:InMemoryRepository"
          ],
          "cohesion": 1.0,
          "coupling": 0.0,
          "internal_edges": 1,
          "external_edges": 0,
          "total_edges": 2
        },
        "25": {
          "size": 1,
          "nodes": [
            "sample_project/models.py:ModelFactory"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "26": {
          "size": 1,
          "nodes": [
            "sample_project/models.py:update_timestamp"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "27": {
          "size": 1,
          "nodes": [
            "sample_project/models.py:to_dict"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "28": {
          "size": 1,
          "nodes": [
            "sample_project/models.py:to_json"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "29": {
          "size": 1,
          "nodes": [
            "sample_project/models.py:__post_init__"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "30": {
          "size": 1,
          "nodes": [
            "sample_project/models.py:has_role"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "31": {
          "size": 1,
          "nodes": [
            "sample_project/models.py:add_role"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "32": {
          "size": 1,
          "nodes": [
            "sample_project/models.py:remove_role"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "33": {
          "size": 1,
          "nodes": [
            "sample_project/models.py:update_preferences"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "34": {
          "size": 1,
          "nodes": [
            "sample_project/models.py:display_name"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "35": {
          "size": 1,
          "nodes": [
            "sample_project/models.py:_generate_sku"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "36": {
          "size": 1,
          "nodes": [
            "sample_project/models.py:update_inventory"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "37": {
          "size": 1,
          "nodes": [
            "sample_project/models.py:add_tag"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "38": {
          "size": 1,
          "nodes": [
            "sample_project/models.py:set_price"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "39": {
          "size": 1,
          "nodes": [
            "sample_project/models.py:formatted_price"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "40": {
          "size": 1,
          "nodes": [
            "sample_project/models.py:add_item"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "41": {
          "size": 1,
          "nodes": [
            "sample_project/models.py:remove_item"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "42": {
          "size": 1,
          "nodes": [
            "sample_project/models.py:_recalculate_total"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "43": {
          "size": 1,
          "nodes": [
            "sample_project/models.py:update_status"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "44": {
          "size": 1,
          "nodes": [
            "sample_project/models.py:item_count"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "45": {
          "size": 1,
          "nodes": [
            "sample_project/models.py:__init__"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "46": {
          "size": 1,
          "nodes": [
            "sample_project/models.py:assign_to"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "47": {
          "size": 1,
          "nodes": [
            "sample_project/models.py:set_due_date"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "48": {
          "size": 1,
          "nodes": [
            "sample_project/models.py:mark_complete"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "49": {
          "size": 1,
          "nodes": [
            "sample_project/models.py:add_subtask"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "50": {
          "size": 1,
          "nodes": [
            "sample_project/models.py:add_dependency"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "51": {
          "size": 1,
          "nodes": [
            "sample_project/models.py:add_comment"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "52": {
          "size": 1,
          "nodes": [
            "sample_project/models.py:add_attachment"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "53": {
          "size": 1,
          "nodes": [
            "sample_project/models.py:is_overdue"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "54": {
          "size": 1,
          "nodes": [
            "sample_project/models.py:progress"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "55": {
          "size": 1,
          "nodes": [
            "sample_project/models.py:find_by_id"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "56": {
          "size": 1,
          "nodes": [
            "sample_project/models.py:find_all"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "57": {
          "size": 1,
          "nodes": [
            "sample_project/models.py:save"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "58": {
          "size": 1,
          "nodes": [
            "sample_project/models.py:delete"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "59": {
          "size": 1,
          "nodes": [
            "sample_project/models.py:find_by_criteria"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "60": {
          "size": 1,
          "nodes": [
            "sample_project/models.py:mark_as_read"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "61": {
          "size": 1,
          "nodes": [
            "sample_project/models.py:is_expired"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "62": {
          "size": 1,
          "nodes": [
            "sample_project/models.py:create"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "63": {
          "size": 1,
          "nodes": [
            "sample_project/models.py:register_model"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "64": {
          "size": 1,
          "nodes": [
            "sample_project/config.py:Environment"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "65": {
          "size": 1,
          "nodes": [
            "sample_project/config.py:LogLevel"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "66": {
          "size": 9,
          "nodes": [
            "sample_project/config.py:BaseConfig",
            "sample_project/config.py:DatabaseConfig",
            "sample_project/config.py:CacheConfig",
            "sample_project/config.py:SecurityConfig",
            "sample_project/config.py:APIConfig",
            "sample_project/config.py:LoggingConfig",
            "sample_project/config.py:EmailConfig",
            "sample_project/config.py:StorageConfig",
            "sample_project/config.py:Config"
          ],
          "cohesion": 0.2222222222222222,
          "coupling": 0.0,
          "internal_edges": 8,
          "external_edges": 0,
          "total_edges": 16
        },
        "76": {
          "size": 1,
          "nodes": [
            "sample_project/config.py:validate"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "77": {
          "size": 1,
          "nodes": [
            "sample_project/config.py:to_dict"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "78": {
          "size": 1,
          "nodes": [
            "sample_project/config.py:from_dict"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "79": {
          "size": 1,
          "nodes": [
            "sample_project/config.py:connection_string"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "80": {
          "size": 1,
          "nodes": [
            "sample_project/config.py:full_base_url"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "81": {
          "size": 1,
          "nodes": [
            "sample_project/config.py:from_file"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "82": {
          "size": 1,
          "nodes": [
            "sample_project/config.py:_from_nested_dict"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "83": {
          "size": 1,
          "nodes": [
            "sample_project/config.py:to_file"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "85": {
          "size": 2,
          "nodes": [
            "sample_project/data_processing.py:DataProcessor",
            "sample_project/data_processing.py:TimeSeriesProcessor"
          ],
          "cohesion": 1.0,
          "coupling": 0.0,
          "internal_edges": 1,
          "external_edges": 0,
          "total_edges": 2
        },
        "86": {
          "size": 1,
          "nodes": [
            "sample_project/data_processing.py:DataValidator"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "87": {
          "size": 1,
          "nodes": [
            "sample_project/data_processing.py:transform_data"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "88": {
          "size": 1,
          "nodes": [
            "sample_project/data_processing.py:merge_datasets"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "89": {
          "size": 1,
          "nodes": [
            "sample_project/data_processing.py:__init__"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "90": {
          "size": 1,
          "nodes": [
            "sample_project/data_processing.py:process_csv"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "91": {
          "size": 1,
          "nodes": [
            "sample_project/data_processing.py:_clean_dataframe"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "92": {
          "size": 1,
          "nodes": [
            "sample_project/data_processing.py:calculate_statistics"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "93": {
          "size": 1,
          "nodes": [
            "sample_project/data_processing.py:aggregate_data"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "94": {
          "size": 1,
          "nodes": [
            "sample_project/data_processing.py:resample_timeseries"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "95": {
          "size": 1,
          "nodes": [
            "sample_project/data_processing.py:detect_anomalies"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "96": {
          "size": 1,
          "nodes": [
            "sample_project/data_processing.py:calculate_moving_averages"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "97": {
          "size": 2,
          "nodes": [
            "sample_project/data_processing.py:validate_schema",
            "sample_project/utilities.py:set"
          ],
          "cohesion": 1.0,
          "coupling": 0.0,
          "internal_edges": 1,
          "external_edges": 0,
          "total_edges": 2
        },
        "98": {
          "size": 1,
          "nodes": [
            "sample_project/data_processing.py:check_data_quality"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "99": {
          "size": 1,
          "nodes": [
            "sample_project/utilities.py:FileHandler"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "100": {
          "size": 1,
          "nodes": [
            "sample_project/utilities.py:StringUtils"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "101": {
          "size": 1,
          "nodes": [
            "sample_project/utilities.py:Cache"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "102": {
          "size": 1,
          "nodes": [
            "sample_project/utilities.py:timer"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "112": {
          "size": 2,
          "nodes": [
            "sample_project/utilities.py:retry",
            "sample_project/utilities.py:fetch_url"
          ],
          "cohesion": 1.0,
          "coupling": 0.0,
          "internal_edges": 1,
          "external_edges": 0,
          "total_edges": 2
        },
        "104": {
          "size": 1,
          "nodes": [
            "sample_project/utilities.py:memoize"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "106": {
          "size": 1,
          "nodes": [
            "sample_project/utilities.py:validate_url"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "107": {
          "size": 1,
          "nodes": [
            "sample_project/utilities.py:parse_datetime"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "108": {
          "size": 1,
          "nodes": [
            "sample_project/utilities.py:format_bytes"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "109": {
          "size": 1,
          "nodes": [
            "sample_project/utilities.py:chunk_list"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "110": {
          "size": 1,
          "nodes": [
            "sample_project/utilities.py:flatten_dict"
          ],
          "cohesion": 0,
          "coupling": 0.0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 1
        },
        "111": {
          "size": 1,
          "nodes": [
            "sample_project/utilities.py:deep_merge"
          ],
          "cohesion": 0,
          "coupling": 0.0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 1
        },
        "113": {
          "size": 1,
          "nodes": [
            "sample_project/utilities.py:generate_id"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "114": {
          "size": 1,
          "nodes": [
            "sample_project/utilities.py:safe_divide"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "115": {
          "size": 1,
          "nodes": [
            "sample_project/utilities.py:clamp"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "116": {
          "size": 1,
          "nodes": [
            "sample_project/utilities.py:wrapper"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "117": {
          "size": 1,
          "nodes": [
            "sample_project/utilities.py:decorator"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "118": {
          "size": 1,
          "nodes": [
            "sample_project/utilities.py:read_json"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "119": {
          "size": 1,
          "nodes": [
            "sample_project/utilities.py:write_json"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "120": {
          "size": 1,
          "nodes": [
            "sample_project/utilities.py:read_yaml"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "121": {
          "size": 1,
          "nodes": [
            "sample_project/utilities.py:ensure_directory"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "122": {
          "size": 1,
          "nodes": [
            "sample_project/utilities.py:get_file_hash"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "123": {
          "size": 1,
          "nodes": [
            "sample_project/utilities.py:camel_to_snake"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "124": {
          "size": 1,
          "nodes": [
            "sample_project/utilities.py:snake_to_camel"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "125": {
          "size": 1,
          "nodes": [
            "sample_project/utilities.py:truncate"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "126": {
          "size": 1,
          "nodes": [
            "sample_project/utilities.py:sanitize_filename"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "127": {
          "size": 1,
          "nodes": [
            "sample_project/utilities.py:__init__"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "128": {
          "size": 1,
          "nodes": [
            "sample_project/utilities.py:get"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "130": {
          "size": 1,
          "nodes": [
            "sample_project/utilities.py:delete"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "131": {
          "size": 1,
          "nodes": [
            "sample_project/utilities.py:clear"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "132": {
          "size": 1,
          "nodes": [
            "sample_project/utilities.py:size"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "133": {
          "size": 1,
          "nodes": [
            "sample_project/api_service.py:HTTPMethod"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "134": {
          "size": 1,
          "nodes": [
            "sample_project/api_service.py:HTTPStatus"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "135": {
          "size": 1,
          "nodes": [
            "sample_project/api_service.py:Request"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "136": {
          "size": 1,
          "nodes": [
            "sample_project/api_service.py:Response"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "138": {
          "size": 3,
          "nodes": [
            "sample_project/api_service.py:Middleware",
            "sample_project/api_service.py:AuthenticationMiddleware",
            "sample_project/api_service.py:RateLimiter"
          ],
          "cohesion": 0.6666666666666666,
          "coupling": 0.0,
          "internal_edges": 2,
          "external_edges": 0,
          "total_edges": 4
        },
        "140": {
          "size": 4,
          "nodes": [
            "sample_project/api_service.py:APIService",
            "sample_project/api_service.py:UserAPI",
            "sample_project/api_service.py:ProductAPI",
            "sample_project/api_service.py:OrderAPI"
          ],
          "cohesion": 0.5,
          "coupling": 0.0,
          "internal_edges": 3,
          "external_edges": 0,
          "total_edges": 6
        },
        "144": {
          "size": 1,
          "nodes": [
            "sample_project/api_service.py:APIRouter"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "145": {
          "size": 1,
          "nodes": [
            "sample_project/api_service.py:get_header"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "146": {
          "size": 1,
          "nodes": [
            "sample_project/api_service.py:get_param"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "147": {
          "size": 1,
          "nodes": [
            "sample_project/api_service.py:__post_init__"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "148": {
          "size": 1,
          "nodes": [
            "sample_project/api_service.py:to_dict"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "149": {
          "size": 1,
          "nodes": [
            "sample_project/api_service.py:process_request"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "150": {
          "size": 1,
          "nodes": [
            "sample_project/api_service.py:process_response"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "151": {
          "size": 1,
          "nodes": [
            "sample_project/api_service.py:__init__"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "152": {
          "size": 1,
          "nodes": [
            "sample_project/api_service.py:_is_public_endpoint"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "153": {
          "size": 1,
          "nodes": [
            "sample_project/api_service.py:_validate_token"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "154": {
          "size": 1,
          "nodes": [
            "sample_project/api_service.py:_generate_signature"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "155": {
          "size": 1,
          "nodes": [
            "sample_project/api_service.py:generate_token"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "156": {
          "size": 1,
          "nodes": [
            "sample_project/api_service.py:_get_client_id"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "129": {
          "size": 1,
          "nodes": [
            "sample_project/api_service.py:_clean_old_requests"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "2": {
          "size": 1,
          "nodes": [
            "sample_project/api_service.py:get_routes"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "5": {
          "size": 1,
          "nodes": [
            "sample_project/api_service.py:handle_request"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "137": {
          "size": 1,
          "nodes": [
            "sample_project/api_service.py:_match_route"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "139": {
          "size": 1,
          "nodes": [
            "sample_project/api_service.py:paginate"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "141": {
          "size": 1,
          "nodes": [
            "sample_project/api_service.py:list_users"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "142": {
          "size": 1,
          "nodes": [
            "sample_project/api_service.py:get_user"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "143": {
          "size": 1,
          "nodes": [
            "sample_project/api_service.py:delete_user"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "18": {
          "size": 1,
          "nodes": [
            "sample_project/api_service.py:add_role"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "19": {
          "size": 1,
          "nodes": [
            "sample_project/api_service.py:remove_role"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "20": {
          "size": 1,
          "nodes": [
            "sample_project/api_service.py:_serialize_user"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "21": {
          "size": 1,
          "nodes": [
            "sample_project/api_service.py:list_products"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "23": {
          "size": 1,
          "nodes": [
            "sample_project/api_service.py:get_product"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "24": {
          "size": 1,
          "nodes": [
            "sample_project/api_service.py:create_product"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "67": {
          "size": 1,
          "nodes": [
            "sample_project/api_service.py:update_product"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "68": {
          "size": 1,
          "nodes": [
            "sample_project/api_service.py:delete_product"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "69": {
          "size": 1,
          "nodes": [
            "sample_project/api_service.py:update_inventory"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "70": {
          "size": 1,
          "nodes": [
            "sample_project/api_service.py:_serialize_product"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "71": {
          "size": 1,
          "nodes": [
            "sample_project/api_service.py:list_orders"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "72": {
          "size": 1,
          "nodes": [
            "sample_project/api_service.py:get_order"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "73": {
          "size": 1,
          "nodes": [
            "sample_project/api_service.py:create_order"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "74": {
          "size": 1,
          "nodes": [
            "sample_project/api_service.py:update_order_status"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "84": {
          "size": 1,
          "nodes": [
            "sample_project/api_service.py:add_service"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        },
        "103": {
          "size": 1,
          "nodes": [
            "sample_project/api_service.py:add_middleware"
          ],
          "cohesion": 0,
          "coupling": 0,
          "internal_edges": 0,
          "external_edges": 0,
          "total_edges": 0
        }
      }
    },
    "parameters": {
      "resolution": 1.0
    },
    "recommendations": [
      "存在只有1个节点的小社区，可能需要合并",
      "社区0内聚度较低(0.00)，建议重构以提高模块化",
      "社区1内聚度较低(0.00)，建议重构以提高模块化",
      "社区3内聚度较低(0.00)，建议重构以提高模块化",
      "社区4内聚度较低(0.00)，建议重构以提高模块化",
      "社区6内聚度较低(0.00)，建议重构以提高模块化",
      "社区7内聚度较低(0.00)，建议重构以提高模块化",
      "社区8内聚度较低(0.00)，建议重构以提高模块化",
      "社区9内聚度较低(0.00)，建议重构以提高模块化",
      "社区10内聚度较低(0.00)，建议重构以提高模块化",
      "社区11内聚度较低(0.00)，建议重构以提高模块化",
      "社区12内聚度较低(0.00)，建议重构以提高模块化",
      "社区13内聚度较低(0.00)，建议重构以提高模块化",
      "社区14内聚度较低(0.00)，建议重构以提高模块化",
      "社区15内聚度较低(0.00)，建议重构以提高模块化",
      "社区16内聚度较低(0.00)，建议重构以提高模块化",
      "社区25内聚度较低(0.00)，建议重构以提高模块化",
      "社区26内聚度较低(0.00)，建议重构以提高模块化",
      "社区27内聚度较低(0.00)，建议重构以提高模块化",
      "社区28内聚度较低(0.00)，建议重构以提高模块化",
      "社区29内聚度较低(0.00)，建议重构以提高模块化",
      "社区30内聚度较低(0.00)，建议重构以提高模块化",
      "社区31内聚度较低(0.00)，建议重构以提高模块化",
      "社区32内聚度较低(0.00)，建议重构以提高模块化",
      "社区33内聚度较低(0.00)，建议重构以提高模块化",
      "社区34内聚度较低(0.00)，建议重构以提高模块化",
      "社区35内聚度较低(0.00)，建议重构以提高模块化",
      "社区36内聚度较低(0.00)，建议重构以提高模块化",
      "社区37内聚度较低(0.00)，建议重构以提高模块化",
      "社区38内聚度较低(0.00)，建议重构以提高模块化",
      "社区39内聚度较低(0.00)，建议重构以提高模块化",
      "社区40内聚度较低(0.00)，建议重构以提高模块化",
      "社区41内聚度较低(0.00)，建议重构以提高模块化",
      "社区42内聚度较低(0.00)，建议重构以提高模块化",
      "社区43内聚度较低(0.00)，建议重构以提高模块化",
      "社区44内聚度较低(0.00)，建议重构以提高模块化",
      "社区45内聚度较低(0.00)，建议重构以提高模块化",
      "社区46内聚度较低(0.00)，建议重构以提高模块化",
      "社区47内聚度较低(0.00)，建议重构以提高模块化",
      "社区48内聚度较低(0.00)，建议重构以提高模块化",
      "社区49内聚度较低(0.00)，建议重构以提高模块化",
      "社区50内聚度较低(0.00)，建议重构以提高模块化",
      "社区51内聚度较低(0.00)，建议重构以提高模块化",
      "社区52内聚度较低(0.00)，建议重构以提高模块化",
      "社区53内聚度较低(0.00)，建议重构以提高模块化",
      "社区54内聚度较低(0.00)，建议重构以提高模块化",
      "社区55内聚度较低(0.00)，建议重构以提高模块化",
      "社区56内聚度较低(0.00)，建议重构以提高模块化",
      "社区57内聚度较低(0.00)，建议重构以提高模块化",
      "社区58内聚度较低(0.00)，建议重构以提高模块化",
      "社区59内聚度较低(0.00)，建议重构以提高模块化",
      "社区60内聚度较低(0.00)，建议重构以提高模块化",
      "社区61内聚度较低(0.00)，建议重构以提高模块化",
      "社区62内聚度较低(0.00)，建议重构以提高模块化",
      "社区63内聚度较低(0.00)，建议重构以提高模块化",
      "社区64内聚度较低(0.00)，建议重构以提高模块化",
      "社区65内聚度较低(0.00)，建议重构以提高模块化",
      "社区66内聚度较低(0.22)，建议重构以提高模块化",
      "社区76内聚度较低(0.00)，建议重构以提高模块化",
      "社区77内聚度较低(0.00)，建议重构以提高模块化",
      "社区78内聚度较低(0.00)，建议重构以提高模块化",
      "社区79内聚度较低(0.00)，建议重构以提高模块化",
      "社区80内聚度较低(0.00)，建议重构以提高模块化",
      "社区81内聚度较低(0.00)，建议重构以提高模块化",
      "社区82内聚度较低(0.00)，建议重构以提高模块化",
      "社区83内聚度较低(0.00)，建议重构以提高模块化",
      "社区86内聚度较低(0.00)，建议重构以提高模块化",
      "社区87内聚度较低(0.00)，建议重构以提高模块化",
      "社区88内聚度较低(0.00)，建议重构以提高模块化",
      "社区89内聚度较低(0.00)，建议重构以提高模块化",
      "社区90内聚度较低(0.00)，建议重构以提高模块化",
      "社区91内聚度较低(0.00)，建议重构以提高模块化",
      "社区92内聚度较低(0.00)，建议重构以提高模块化",
      "社区93内聚度较低(0.00)，建议重构以提高模块化",
      "社区94内聚度较低(0.00)，建议重构以提高模块化",
      "社区95内聚度较低(0.00)，建议重构以提高模块化",
      "社区96内聚度较低(0.00)，建议重构以提高模块化",
      "社区98内聚度较低(0.00)，建议重构以提高模块化",
      "社区99内聚度较低(0.00)，建议重构以提高模块化",
      "社区100内聚度较低(0.00)，建议重构以提高模块化",
      "社区101内聚度较低(0.00)，建议重构以提高模块化",
      "社区102内聚度较低(0.00)，建议重构以提高模块化",
      "社区104内聚度较低(0.00)，建议重构以提高模块化",
      "社区106内聚度较低(0.00)，建议重构以提高模块化",
      "社区107内聚度较低(0.00)，建议重构以提高模块化",
      "社区108内聚度较低(0.00)，建议重构以提高模块化",
      "社区109内聚度较低(0.00)，建议重构以提高模块化",
      "社区110内聚度较低(0.00)，建议重构以提高模块化",
      "社区111内聚度较低(0.00)，建议重构以提高模块化",
      "社区113内聚度较低(0.00)，建议重构以提高模块化",
      "社区114内聚度较低(0.00)，建议重构以提高模块化",
      "社区115内聚度较低(0.00)，建议重构以提高模块化",
      "社区116内聚度较低(0.00)，建议重构以提高模块化",
      "社区117内聚度较低(0.00)，建议重构以提高模块化",
      "社区118内聚度较低(0.00)，建议重构以提高模块化",
      "社区119内聚度较低(0.00)，建议重构以提高模块化",
      "社区120内聚度较低(0.00)，建议重构以提高模块化",
      "社区121内聚度较低(0.00)，建议重构以提高模块化",
      "社区122内聚度较低(0.00)，建议重构以提高模块化",
      "社区123内聚度较低(0.00)，建议重构以提高模块化",
      "社区124内聚度较低(0.00)，建议重构以提高模块化",
      "社区125内聚度较低(0.00)，建议重构以提高模块化",
      "社区126内聚度较低(0.00)，建议重构以提高模块化",
      "社区127内聚度较低(0.00)，建议重构以提高模块化",
      "社区128内聚度较低(0.00)，建议重构以提高模块化",
      "社区130内聚度较低(0.00)，建议重构以提高模块化",
      "社区131内聚度较低(0.00)，建议重构以提高模块化",
      "社区132内聚度较低(0.00)，建议重构以提高模块化",
      "社区133内聚度较低(0.00)，建议重构以提高模块化",
      "社区134内聚度较低(0.00)，建议重构以提高模块化",
      "社区135内聚度较低(0.00)，建议重构以提高模块化",
      "社区136内聚度较低(0.00)，建议重构以提高模块化",
      "社区144内聚度较低(0.00)，建议重构以提高模块化",
      "社区145内聚度较低(0.00)，建议重构以提高模块化",
      "社区146内聚度较低(0.00)，建议重构以提高模块化",
      "社区147内聚度较低(0.00)，建议重构以提高模块化",
      "社区148内聚度较低(0.00)，建议重构以提高模块化",
      "社区149内聚度较低(0.00)，建议重构以提高模块化",
      "社区150内聚度较低(0.00)，建议重构以提高模块化",
      "社区151内聚度较低(0.00)，建议重构以提高模块化",
      "社区152内聚度较低(0.00)，建议重构以提高模块化",
      "社区153内聚度较低(0.00)，建议重构以提高模块化",
      "社区154内聚度较低(0.00)，建议重构以提高模块化",
      "社区155内聚度较低(0.00)，建议重构以提高模块化",
      "社区156内聚度较低(0.00)，建议重构以提高模块化",
      "社区129内聚度较低(0.00)，建议重构以提高模块化",
      "社区2内聚度较低(0.00)，建议重构以提高模块化",
      "社区5内聚度较低(0.00)，建议重构以提高模块化",
      "社区137内聚度较低(0.00)，建议重构以提高模块化",
      "社区139内聚度较低(0.00)，建议重构以提高模块化",
      "社区141内聚度较低(0.00)，建议重构以提高模块化",
      "社区142内聚度较低(0.00)，建议重构以提高模块化",
      "社区143内聚度较低(0.00)，建议重构以提高模块化",
      "社区18内聚度较低(0.00)，建议重构以提高模块化",
      "社区19内聚度较低(0.00)，建议重构以提高模块化",
      "社区20内聚度较低(0.00)，建议重构以提高模块化",
      "社区21内聚度较低(0.00)，建议重构以提高模块化",
      "社区23内聚度较低(0.00)，建议重构以提高模块化",
      "社区24内聚度较低(0.00)，建议重构以提高模块化",
      "社区67内聚度较低(0.00)，建议重构以提高模块化",
      "社区68内聚度较低(0.00)，建议重构以提高模块化",
      "社区69内聚度较低(0.00)，建议重构以提高模块化",
      "社区70内聚度较低(0.00)，建议重构以提高模块化",
      "社区71内聚度较低(0.00)，建议重构以提高模块化",
      "社区72内聚度较低(0.00)，建议重构以提高模块化",
      "社区73内聚度较低(0.00)，建议重构以提高模块化",
      "社区74内聚度较低(0.00)，建议重构以提高模块化",
      "社区84内聚度较低(0.00)，建议重构以提高模块化",
      "社区103内聚度较低(0.00)，建议重构以提高模块化"
    ]
  }
}