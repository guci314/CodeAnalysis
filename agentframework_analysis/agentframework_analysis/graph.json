{
  "directed": false,
  "multigraph": false,
  "graph": {},
  "nodes": [
    {
      "type": "class",
      "name": "TestWorkflowStateBasicOperations",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py",
      "line_number": 34,
      "complexity": 1,
      "docstring": "Test basic WorkflowState operations",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_initialization",
        "test_get_global_state",
        "test_set_global_state_basic",
        "test_clear_global_state"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py:TestWorkflowStateBasicOperations"
    },
    {
      "type": "class",
      "name": "TestWorkflowStateUpdateControls",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py",
      "line_number": 100,
      "complexity": 1,
      "docstring": "Test state update enable/disable functionality",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_enable_disable_state_updates",
        "test_state_update_when_disabled"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py:TestWorkflowStateUpdateControls"
    },
    {
      "type": "class",
      "name": "TestWorkflowStateHistory",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py",
      "line_number": 140,
      "complexity": 1,
      "docstring": "Test state history tracking functionality",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_history_entry_creation",
        "test_history_limit",
        "test_get_state_history_with_limit",
        "test_clear_state_history",
        "test_set_max_history_size"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py:TestWorkflowStateHistory"
    },
    {
      "type": "class",
      "name": "TestWorkflowStateThreadSafety",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py",
      "line_number": 272,
      "complexity": 1,
      "docstring": "Test thread safety of WorkflowState operations",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_concurrent_state_updates"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py:TestWorkflowStateThreadSafety"
    },
    {
      "type": "class",
      "name": "TestWorkflowStateAIUpdaterIntegration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py",
      "line_number": 317,
      "complexity": 1,
      "docstring": "Test AI updater integration with WorkflowState",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_ai_updater_initialization",
        "test_update_state_with_ai_success",
        "test_update_state_with_ai_disabled",
        "test_update_state_with_ai_no_updater"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py:TestWorkflowStateAIUpdaterIntegration"
    },
    {
      "type": "class",
      "name": "TestWorkflowStateErrorHandling",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py",
      "line_number": 384,
      "complexity": 1,
      "docstring": "Test error handling and edge cases",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_set_global_state_with_none",
        "test_set_global_state_with_large_data",
        "test_set_global_state_with_unicode",
        "test_invalid_max_history_size",
        "test_get_state_summary"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py:TestWorkflowStateErrorHandling"
    },
    {
      "type": "function",
      "name": "setUp",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py",
      "line_number": 387,
      "complexity": 1,
      "docstring": "Set up test environment",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "WorkflowState"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py:setUp"
    },
    {
      "type": "function",
      "name": "test_initialization",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py",
      "line_number": 41,
      "complexity": 1,
      "docstring": "Test correct initialization of WorkflowState",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.assertEqual",
        "self.assertTrue",
        "self.assertEqual",
        "self.assertIsInstance",
        "self.assertIsInstance",
        "self.assertIsInstance",
        "self.assertEqual",
        "self.assertIsInstance",
        "self.assertIsInstance",
        "self.assertIsInstance",
        "self.assertEqual",
        "self.workflow_state.get_global_state",
        "self.workflow_state.is_state_update_enabled",
        "self.workflow_state.get_state_history_count"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py:test_initialization"
    },
    {
      "type": "function",
      "name": "test_get_global_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py",
      "line_number": 60,
      "complexity": 1,
      "docstring": "Test getting global state",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.workflow_state.get_global_state",
        "self.assertEqual",
        "self.assertIsInstance"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py:test_get_global_state"
    },
    {
      "type": "function",
      "name": "test_set_global_state_basic",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py",
      "line_number": 67,
      "complexity": 1,
      "docstring": "Test basic state setting functionality",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.workflow_state.set_global_state",
        "self.assertEqual",
        "self.assertEqual",
        "self.workflow_state.set_global_state",
        "self.assertEqual",
        "self.assertEqual",
        "self.workflow_state.get_global_state",
        "self.workflow_state.get_state_history_count",
        "self.workflow_state.get_global_state",
        "self.workflow_state.get_state_history_count"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py:test_set_global_state_basic"
    },
    {
      "type": "function",
      "name": "test_clear_global_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py",
      "line_number": 84,
      "complexity": 1,
      "docstring": "Test clearing global state",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.workflow_state.set_global_state",
        "self.workflow_state.set_global_state",
        "self.assertEqual",
        "self.workflow_state.clear_global_state",
        "self.assertEqual",
        "self.assertEqual",
        "self.workflow_state.get_state_history_count",
        "self.workflow_state.get_global_state",
        "self.workflow_state.get_state_history_count"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py:test_clear_global_state"
    },
    {
      "type": "function",
      "name": "test_enable_disable_state_updates",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py",
      "line_number": 107,
      "complexity": 1,
      "docstring": "Test toggling state update functionality",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.assertTrue",
        "self.workflow_state.disable_state_updates",
        "self.assertFalse",
        "self.workflow_state.enable_state_updates",
        "self.assertTrue",
        "self.workflow_state.is_state_update_enabled",
        "self.workflow_state.is_state_update_enabled",
        "self.workflow_state.is_state_update_enabled"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py:test_enable_disable_state_updates"
    },
    {
      "type": "function",
      "name": "test_state_update_when_disabled",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py",
      "line_number": 120,
      "complexity": 1,
      "docstring": "Test that state updates are ignored when disabled",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.workflow_state.set_global_state",
        "self.workflow_state.disable_state_updates",
        "self.workflow_state.set_global_state",
        "self.assertEqual",
        "self.workflow_state.enable_state_updates",
        "self.workflow_state.set_global_state",
        "self.assertEqual",
        "self.workflow_state.get_global_state",
        "self.workflow_state.get_global_state"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py:test_state_update_when_disabled"
    },
    {
      "type": "function",
      "name": "test_history_entry_creation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py",
      "line_number": 147,
      "complexity": 1,
      "docstring": "Test that history entries are created correctly",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.workflow_state.set_global_state",
        "datetime.now",
        "self.workflow_state.set_global_state",
        "datetime.now",
        "self.workflow_state.get_state_history",
        "self.assertEqual",
        "self.assertIsInstance",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertGreaterEqual",
        "self.assertLessEqual",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py:test_history_entry_creation"
    },
    {
      "type": "function",
      "name": "test_history_limit",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py",
      "line_number": 178,
      "complexity": 1,
      "docstring": "Test that history is limited to maximum size",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.workflow_state.set_global_state",
        "range",
        "self.workflow_state.get_state_history",
        "self.assertEqual",
        "self.assertEqual",
        "self.workflow_state.set_global_state",
        "len",
        "range"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py:test_history_limit"
    },
    {
      "type": "function",
      "name": "test_get_state_history_with_limit",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py",
      "line_number": 205,
      "complexity": 1,
      "docstring": "Test getting limited history",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.workflow_state.set_global_state",
        "range",
        "self.workflow_state.get_state_history",
        "self.assertEqual",
        "self.workflow_state.get_state_history",
        "self.assertEqual",
        "self.assertEqual",
        "self.workflow_state.set_global_state",
        "len",
        "len",
        "range"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py:test_get_state_history_with_limit"
    },
    {
      "type": "function",
      "name": "test_clear_state_history",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py",
      "line_number": 226,
      "complexity": 1,
      "docstring": "Test clearing state history",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.workflow_state.set_global_state",
        "range",
        "self.assertEqual",
        "self.workflow_state.clear_state_history",
        "self.assertEqual",
        "self.assertEqual",
        "self.workflow_state.set_global_state",
        "self.workflow_state.get_state_history_count",
        "self.workflow_state.get_state_history_count",
        "len",
        "self.workflow_state.get_state_history"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py:test_clear_state_history"
    },
    {
      "type": "function",
      "name": "test_set_max_history_size",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py",
      "line_number": 244,
      "complexity": 1,
      "docstring": "Test changing maximum history size",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.workflow_state.set_global_state",
        "range",
        "self.assertEqual",
        "self.workflow_state.set_max_history_size",
        "self.workflow_state.get_state_history",
        "self.assertEqual",
        "self.assertEqual",
        "self.workflow_state.set_global_state",
        "self.workflow_state.get_state_history_count",
        "len",
        "range"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py:test_set_max_history_size"
    },
    {
      "type": "function",
      "name": "test_concurrent_state_updates",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py",
      "line_number": 281,
      "complexity": 1,
      "docstring": "Test concurrent state updates from multiple threads",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.workflow_state.set_global_state",
        "range",
        "self.assertEqual",
        "self.assertEqual",
        "self.workflow_state.get_state_history_count",
        "self.assertLessEqual",
        "threading.Thread",
        "threads.append",
        "thread.start",
        "thread.join",
        "len",
        "len",
        "range",
        "self.results.append",
        "self.workflow_state.set_global_state",
        "time.sleep",
        "self.errors.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py:test_concurrent_state_updates"
    },
    {
      "type": "function",
      "name": "test_ai_updater_initialization",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py",
      "line_number": 328,
      "complexity": 1,
      "docstring": "Test AI updater initialization",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.workflow_state.get_ai_updater_status",
        "self.assertIsInstance",
        "self.assertIn",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py:test_ai_updater_initialization"
    },
    {
      "type": "function",
      "name": "test_update_state_with_ai_success",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py",
      "line_number": 338,
      "complexity": 1,
      "docstring": "Test successful AI state update with real AI updater",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "AIStateUpdaterService",
        "self.workflow_state.set_ai_updater",
        "self.workflow_state.update_state_with_ai",
        "self.assertTrue",
        "datetime.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py:test_update_state_with_ai_success"
    },
    {
      "type": "function",
      "name": "test_update_state_with_ai_disabled",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py",
      "line_number": 357,
      "complexity": 1,
      "docstring": "Test AI update when updates are disabled",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "AIStateUpdaterService",
        "self.workflow_state.set_ai_updater",
        "self.workflow_state.disable_state_updates",
        "self.workflow_state.update_state_with_ai",
        "self.assertFalse",
        "self.assertEqual",
        "self.assertEqual",
        "self.workflow_state.get_global_state",
        "self.workflow_state.get_state_history_count"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py:test_update_state_with_ai_disabled"
    },
    {
      "type": "function",
      "name": "test_update_state_with_ai_no_updater",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py",
      "line_number": 374,
      "complexity": 1,
      "docstring": "Test AI update when no updater is set",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.workflow_state.update_state_with_ai",
        "self.assertIsInstance"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py:test_update_state_with_ai_no_updater"
    },
    {
      "type": "function",
      "name": "test_set_global_state_with_none",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py",
      "line_number": 391,
      "complexity": 1,
      "docstring": "Test setting state to None (should raise TypeError)",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.assertRaises",
        "self.workflow_state.set_global_state"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py:test_set_global_state_with_none"
    },
    {
      "type": "function",
      "name": "test_set_global_state_with_large_data",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py",
      "line_number": 397,
      "complexity": 1,
      "docstring": "Test setting very large state data",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.workflow_state.set_global_state",
        "self.assertEqual",
        "self.assertEqual",
        "self.workflow_state.get_global_state",
        "self.workflow_state.get_state_history_count"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py:test_set_global_state_with_large_data"
    },
    {
      "type": "function",
      "name": "test_set_global_state_with_unicode",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py",
      "line_number": 407,
      "complexity": 1,
      "docstring": "Test setting state with unicode characters",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.workflow_state.set_global_state",
        "self.assertEqual",
        "self.workflow_state.get_global_state"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py:test_set_global_state_with_unicode"
    },
    {
      "type": "function",
      "name": "test_invalid_max_history_size",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py",
      "line_number": 414,
      "complexity": 1,
      "docstring": "Test setting invalid max history size",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.assertRaises",
        "self.workflow_state.set_max_history_size",
        "self.assertRaises",
        "self.workflow_state.set_max_history_size"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py:test_invalid_max_history_size"
    },
    {
      "type": "function",
      "name": "test_get_state_summary",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py",
      "line_number": 424,
      "complexity": 1,
      "docstring": "Test state summary generation",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.workflow_state.get_state_summary",
        "self.assertIn",
        "self.workflow_state.set_global_state",
        "self.workflow_state.get_state_summary",
        "self.assertIn",
        "self.workflow_state.set_global_state",
        "self.workflow_state.get_state_summary",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py:test_get_state_summary"
    },
    {
      "type": "function",
      "name": "update_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py",
      "line_number": 286,
      "complexity": 1,
      "docstring": "Update state multiple times from a thread",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "thread_id",
        "iterations"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "range",
        "self.results.append",
        "self.workflow_state.set_global_state",
        "time.sleep",
        "self.errors.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_workflow_state_unit.py:update_state"
    },
    {
      "type": "function",
      "name": "test_control_flow_fix",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_control_flow_fix.py",
      "line_number": 22,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u63a7\u5236\u6d41\u4fee\u590d\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "ChatOpenAI",
        "Agent",
        "MultiStepAgent_v3",
        "print",
        "print",
        "print",
        "print",
        "print",
        "agent_v3._fix_workflow_references",
        "print",
        "enumerate",
        "problematic_workflow.get",
        "print",
        "print",
        "step.get",
        "print",
        "print",
        "print",
        "print",
        "control_flow.get",
        "len",
        "print",
        "print",
        "agent_v3.workflow_loader.load_from_dict",
        "print",
        "print",
        "print",
        "control_flow.get",
        "print",
        "print",
        "print",
        "print",
        "os.getenv",
        "RegisteredAgent",
        "len",
        "print",
        "print",
        "control_flow.get",
        "print",
        "print",
        "len",
        "control_flow.get",
        "control_flow.get",
        "control_flow.get",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_control_flow_fix.py:test_control_flow_fix"
    },
    {
      "type": "function",
      "name": "create_test_workflow",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_enhanced_instruction_with_global_state.py",
      "line_number": 27,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u6d4b\u8bd5\u5de5\u4f5c\u6d41",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "WorkflowDefinition",
        "WorkflowMetadata",
        "WorkflowStep",
        "WorkflowStep",
        "WorkflowStep"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_enhanced_instruction_with_global_state.py:create_test_workflow"
    },
    {
      "type": "function",
      "name": "test_enhanced_instruction_with_global_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_enhanced_instruction_with_global_state.py",
      "line_number": 62,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u4f7f\u7528\u5168\u5c40\u72b6\u6001\u7684\u589e\u5f3a\u6307\u4ee4\u6784\u5efa",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "Mock",
        "Mock",
        "MultiStepAgent_v3",
        "create_test_workflow",
        "WorkflowExecutionContext",
        "print",
        "print",
        "agent._build_enhanced_instruction",
        "print",
        "print",
        "print",
        "print",
        "print",
        "agent.workflow_engine.execution_context.update_global_state",
        "agent._build_enhanced_instruction",
        "print",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_enhanced_instruction_with_global_state.py:test_enhanced_instruction_with_global_state"
    },
    {
      "type": "function",
      "name": "test_instruction_content_comparison",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_enhanced_instruction_with_global_state.py",
      "line_number": 143,
      "complexity": 1,
      "docstring": "\u5bf9\u6bd4\u65b0\u65e7\u6307\u4ee4\u5185\u5bb9\u7684\u5dee\u5f02",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "Mock",
        "MultiStepAgent_v3",
        "create_test_workflow",
        "WorkflowExecutionContext",
        "agent.workflow_engine.execution_context.update_global_state",
        "agent._build_enhanced_instruction",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "len",
        "print",
        "print",
        "print",
        "new_instruction.split",
        "int"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_enhanced_instruction_with_global_state.py:test_instruction_content_comparison"
    },
    {
      "type": "function",
      "name": "test_different_global_states",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_enhanced_instruction_with_global_state.py",
      "line_number": 207,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u4e0d\u540c\u7c7b\u578b\u7684\u5168\u5c40\u72b6\u6001\u4e0b\u7684\u6307\u4ee4\u751f\u6210",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "Mock",
        "MultiStepAgent_v3",
        "create_test_workflow",
        "WorkflowExecutionContext",
        "print",
        "print",
        "print",
        "agent.workflow_engine.execution_context.update_global_state",
        "agent._build_enhanced_instruction",
        "instruction.split",
        "line.startswith",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_enhanced_instruction_with_global_state.py:test_different_global_states"
    },
    {
      "type": "function",
      "name": "main",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_enhanced_instruction_with_global_state.py",
      "line_number": 266,
      "complexity": 1,
      "docstring": "\u4e3b\u6d4b\u8bd5\u51fd\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "test_enhanced_instruction_with_global_state",
        "test_instruction_content_comparison",
        "test_different_global_states",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "traceback.print_exc"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_enhanced_instruction_with_global_state.py:main"
    },
    {
      "type": "class",
      "name": "ResponseQuality",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 23,
      "complexity": 1,
      "docstring": "\u54cd\u5e94\u8d28\u91cf\u7b49\u7ea7",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:ResponseQuality"
    },
    {
      "type": "class",
      "name": "ParsedStateInfo",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 32,
      "complexity": 1,
      "docstring": "\u89e3\u6790\u540e\u7684\u72b6\u6001\u4fe1\u606f\u7ed3\u6784",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "NamedTuple"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:ParsedStateInfo"
    },
    {
      "type": "class",
      "name": "ParserMethod",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 42,
      "complexity": 1,
      "docstring": "\u89e3\u6790\u65b9\u6cd5\u679a\u4e3e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:ParserMethod"
    },
    {
      "type": "class",
      "name": "ParserConfig",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 51,
      "complexity": 1,
      "docstring": "\u89e3\u6790\u5668\u914d\u7f6e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__post_init__"
      ],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:ParserConfig"
    },
    {
      "type": "class",
      "name": "BaseResponseParser",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 73,
      "complexity": 1,
      "docstring": "\u54cd\u5e94\u89e3\u6790\u5668\u57fa\u7c7b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "_parse_internal",
        "parse_response",
        "_get_cache_key",
        "_create_empty_parsed_info"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "ABC"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:BaseResponseParser"
    },
    {
      "type": "class",
      "name": "RuleBasedParser",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 129,
      "complexity": 1,
      "docstring": "\u57fa\u4e8e\u89c4\u5219\u7684\u7b26\u53f7\u4e3b\u4e49\u89e3\u6790\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "_parse_internal",
        "_preprocess_response",
        "_extract_main_content",
        "_extract_entities",
        "_calculate_confidence",
        "_analyze_sentiment",
        "_recognize_intent",
        "_assess_quality"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "BaseResponseParser"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:RuleBasedParser"
    },
    {
      "type": "class",
      "name": "TransformerParser",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 366,
      "complexity": 1,
      "docstring": "\u57fa\u4e8eTransformer\u7684\u672c\u5730\u6a21\u578b\u89e3\u6790\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "_init_model",
        "_parse_internal",
        "_calculate_transformer_confidence",
        "_analyze_transformer_sentiment",
        "_recognize_transformer_intent",
        "_extract_transformer_entities"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "BaseResponseParser"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:TransformerParser"
    },
    {
      "type": "class",
      "name": "DeepSeekParser",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 560,
      "complexity": 1,
      "docstring": "\u57fa\u4e8eDeepSeek API\u7684\u89e3\u6790\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "_init_client",
        "_parse_internal",
        "_build_analysis_prompt",
        "_parse_deepseek_result"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "BaseResponseParser"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:DeepSeekParser"
    },
    {
      "type": "class",
      "name": "EmbeddingParser",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 729,
      "complexity": 1,
      "docstring": "\u57fa\u4e8e\u8f7b\u91cf\u7ea7\u5d4c\u5165\u6a21\u578b\u7684\u89e3\u6790\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "_init_model",
        "_init_semantic_templates",
        "_parse_internal",
        "_analyze_semantic_similarity",
        "_determine_status_type",
        "_determine_sentiment",
        "_determine_intent",
        "_calculate_embedding_confidence"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "BaseResponseParser"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:EmbeddingParser"
    },
    {
      "type": "class",
      "name": "MultiMethodResponseParser",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 936,
      "complexity": 1,
      "docstring": "\u591a\u65b9\u6cd5\u54cd\u5e94\u89e3\u6790\u5668\u4e3b\u7c7b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "parse_response",
        "_try_parse_with_method",
        "_get_parser",
        "_create_empty_parsed_info",
        "_update_stats",
        "get_stats",
        "reset_stats"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:MultiMethodResponseParser"
    },
    {
      "type": "class",
      "name": "ParserFactory",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 1057,
      "complexity": 1,
      "docstring": "\u89e3\u6790\u5668\u5de5\u5382\u7c7b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "create_parser",
        "create_rule_parser",
        "create_transformer_parser",
        "create_deepseek_parser",
        "create_embedding_parser",
        "create_hybrid_parser"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:ParserFactory"
    },
    {
      "type": "function",
      "name": "demo_usage",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 1123,
      "complexity": 1,
      "docstring": "\u6f14\u793a\u7528\u6cd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "parsers.items",
        "print",
        "parsers.items",
        "ParserFactory.create_rule_parser",
        "ParserFactory.create_hybrid_parser",
        "print",
        "enumerate",
        "parser.get_stats",
        "print",
        "parser.parse_response",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "result.extracted_entities.get",
        "result.quality_metrics.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:demo_usage"
    },
    {
      "type": "function",
      "name": "__post_init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 68,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:__post_init__"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 939,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "config"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logging.getLogger",
        "self.logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:__init__"
    },
    {
      "type": "function",
      "name": "_parse_internal",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 794,
      "complexity": 1,
      "docstring": "\u57fa\u4e8e\u5d4c\u5165\u6a21\u578b\u7684\u5185\u90e8\u89e3\u6790\u5b9e\u73b0",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "response",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.logger.warning",
        "RuleBasedParser",
        "rule_parser._parse_internal",
        "self._analyze_semantic_similarity",
        "self._determine_status_type",
        "self._determine_sentiment",
        "self._determine_intent",
        "self._calculate_embedding_confidence",
        "ParsedStateInfo",
        "self._model.encode",
        "len",
        "len",
        "self.logger.error",
        "RuleBasedParser",
        "rule_parser._parse_internal",
        "len",
        "max",
        "semantic_analysis.values"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:_parse_internal"
    },
    {
      "type": "function",
      "name": "parse_response",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 957,
      "complexity": 1,
      "docstring": "\u89e3\u6790\u54cd\u5e94\u7684\u7edf\u4e00\u63a5\u53e3",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "response",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._try_parse_with_method",
        "self._update_stats",
        "self._create_empty_parsed_info",
        "response.strip",
        "len",
        "self.logger.info",
        "self._try_parse_with_method",
        "self.stats['fallback_usage'].get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:parse_response"
    },
    {
      "type": "function",
      "name": "_get_cache_key",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 112,
      "complexity": 1,
      "docstring": "\u751f\u6210\u7f13\u5b58\u952e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "response",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "json.dumps",
        "hash",
        "hash"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:_get_cache_key"
    },
    {
      "type": "function",
      "name": "_create_empty_parsed_info",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 1020,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u7a7a\u7684\u89e3\u6790\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "reason"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "ParsedStateInfo"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:_create_empty_parsed_info"
    },
    {
      "type": "function",
      "name": "_preprocess_response",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 205,
      "complexity": 1,
      "docstring": "\u9884\u5904\u7406\u54cd\u5e94\u6587\u672c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "response"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "re.sub",
        "re.sub",
        "re.sub",
        "response.strip"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:_preprocess_response"
    },
    {
      "type": "function",
      "name": "_extract_main_content",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 218,
      "complexity": 1,
      "docstring": "\u63d0\u53d6\u4e3b\u8981\u72b6\u6001\u5185\u5bb9",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "content"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "re.split",
        "len",
        "max",
        "main_sentence.strip",
        "main_sentence.strip",
        "len",
        "len",
        "len",
        "s.strip",
        "s.strip"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:_extract_main_content"
    },
    {
      "type": "function",
      "name": "_extract_entities",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 235,
      "complexity": 1,
      "docstring": "\u63d0\u53d6\u5173\u952e\u5b9e\u4f53\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "content",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "any",
        "re.findall",
        "any",
        "re.search",
        "','.join",
        "any",
        "match.group",
        "str",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:_extract_entities"
    },
    {
      "type": "function",
      "name": "_calculate_confidence",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 277,
      "complexity": 1,
      "docstring": "\u8ba1\u7b97\u7f6e\u4fe1\u5ea6\u8bc4\u5206",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "content",
        "entities"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "min",
        "sum",
        "min",
        "re.search",
        "min",
        "len",
        "max"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:_calculate_confidence"
    },
    {
      "type": "function",
      "name": "_analyze_sentiment",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 306,
      "complexity": 1,
      "docstring": "\u5206\u6790\u60c5\u611f\u503e\u5411",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "content"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "sum",
        "sum",
        "sum",
        "sum"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:_analyze_sentiment"
    },
    {
      "type": "function",
      "name": "_recognize_intent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 325,
      "complexity": 1,
      "docstring": "\u8bc6\u522b\u610f\u56fe",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "content"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._intent_patterns.items",
        "sum",
        "max"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:_recognize_intent"
    },
    {
      "type": "function",
      "name": "_assess_quality",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 340,
      "complexity": 1,
      "docstring": "\u8bc4\u4f30\u54cd\u5e94\u8d28\u91cf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "content",
        "entities",
        "confidence"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "len",
        "len",
        "len",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:_assess_quality"
    },
    {
      "type": "function",
      "name": "_init_model",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 739,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u5d4c\u5165\u6a21\u578b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.logger.info",
        "SentenceTransformer",
        "self._init_semantic_templates",
        "self.logger.info",
        "self.logger.error",
        "self.logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:_init_model"
    },
    {
      "type": "function",
      "name": "_calculate_transformer_confidence",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 500,
      "complexity": 1,
      "docstring": "\u57fa\u4e8e\u5d4c\u5165\u5411\u91cf\u8ba1\u7b97\u7f6e\u4fe1\u5ea6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "embedding"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "isinstance",
        "np.linalg.norm",
        "min",
        "embedding.numpy",
        "max"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:_calculate_transformer_confidence"
    },
    {
      "type": "function",
      "name": "_analyze_transformer_sentiment",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 512,
      "complexity": 1,
      "docstring": "\u57fa\u4e8e\u5d4c\u5165\u5411\u91cf\u5206\u6790\u60c5\u611f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "embedding"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "np.mean"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:_analyze_transformer_sentiment"
    },
    {
      "type": "function",
      "name": "_recognize_transformer_intent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 525,
      "complexity": 1,
      "docstring": "\u57fa\u4e8e\u5d4c\u5165\u5411\u91cf\u8bc6\u522b\u610f\u56fe",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "embedding"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "np.argmax",
        "intent_map.get",
        "np.abs"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:_recognize_transformer_intent"
    },
    {
      "type": "function",
      "name": "_extract_transformer_entities",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 539,
      "complexity": 1,
      "docstring": "\u57fa\u4e8eTransformer\u63d0\u53d6\u5b9e\u4f53",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "response",
        "embedding"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "np.mean"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:_extract_transformer_entities"
    },
    {
      "type": "function",
      "name": "_init_client",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 569,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316DeepSeek\u5ba2\u6237\u7aef",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "ChatOpenAI",
        "self.logger.info",
        "os.getenv",
        "self.logger.error",
        "self.logger.error",
        "self.logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:_init_client"
    },
    {
      "type": "function",
      "name": "_build_analysis_prompt",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 639,
      "complexity": 1,
      "docstring": "\u6784\u5efa\u5206\u6790\u63d0\u793a",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "response",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "json.dumps"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:_build_analysis_prompt"
    },
    {
      "type": "function",
      "name": "_parse_deepseek_result",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 674,
      "complexity": 1,
      "docstring": "\u89e3\u6790DeepSeek\u7684\u5206\u6790\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "original_response",
        "analysis_result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "re.search",
        "json_match.group",
        "json.loads",
        "analysis_data.get",
        "float",
        "analysis_data.get",
        "analysis_data.get",
        "analysis_data.get",
        "analysis_data.get",
        "ParsedStateInfo",
        "ValueError",
        "analysis_data.get",
        "len",
        "len",
        "analysis_data.get",
        "self.logger.error",
        "ParsedStateInfo",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:_parse_deepseek_result"
    },
    {
      "type": "function",
      "name": "_init_semantic_templates",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 760,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u8bed\u4e49\u6a21\u677f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "templates.items",
        "self._model.encode"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:_init_semantic_templates"
    },
    {
      "type": "function",
      "name": "_analyze_semantic_similarity",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 849,
      "complexity": 1,
      "docstring": "\u5206\u6790\u8bed\u4e49\u76f8\u4f3c\u5ea6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "response_embedding"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._semantic_templates.items",
        "np.max",
        "float",
        "cosine_similarity"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:_analyze_semantic_similarity"
    },
    {
      "type": "function",
      "name": "_determine_status_type",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 868,
      "complexity": 1,
      "docstring": "\u57fa\u4e8e\u76f8\u4f3c\u5ea6\u786e\u5b9a\u72b6\u6001\u7c7b\u578b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "similarities"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:_determine_status_type"
    },
    {
      "type": "function",
      "name": "_determine_sentiment",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 882,
      "complexity": 1,
      "docstring": "\u57fa\u4e8e\u76f8\u4f3c\u5ea6\u786e\u5b9a\u60c5\u611f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "similarities"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "similarities.get",
        "similarities.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:_determine_sentiment"
    },
    {
      "type": "function",
      "name": "_determine_intent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 894,
      "complexity": 1,
      "docstring": "\u57fa\u4e8e\u76f8\u4f3c\u5ea6\u786e\u5b9a\u610f\u56fe",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "similarities"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._determine_status_type"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:_determine_intent"
    },
    {
      "type": "function",
      "name": "_calculate_embedding_confidence",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 918,
      "complexity": 1,
      "docstring": "\u57fa\u4e8e\u8bed\u4e49\u76f8\u4f3c\u5ea6\u8ba1\u7b97\u7f6e\u4fe1\u5ea6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "similarities"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "max",
        "sum",
        "min",
        "similarities.values",
        "max",
        "similarities.values"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:_calculate_embedding_confidence"
    },
    {
      "type": "function",
      "name": "_try_parse_with_method",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 987,
      "complexity": 1,
      "docstring": "\u5c1d\u8bd5\u4f7f\u7528\u6307\u5b9a\u65b9\u6cd5\u89e3\u6790",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "method",
        "response",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._get_parser",
        "parser.parse_response",
        "self.stats['method_usage'].get",
        "self.logger.error",
        "self._create_empty_parsed_info",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:_try_parse_with_method"
    },
    {
      "type": "function",
      "name": "_get_parser",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 1004,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u89e3\u6790\u5668\u5b9e\u4f8b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "method"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "RuleBasedParser",
        "TransformerParser",
        "DeepSeekParser",
        "EmbeddingParser",
        "ValueError"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:_get_parser"
    },
    {
      "type": "function",
      "name": "_update_stats",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 1031,
      "complexity": 1,
      "docstring": "\u66f4\u65b0\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "result.quality_metrics.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:_update_stats"
    },
    {
      "type": "function",
      "name": "get_stats",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 1042,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.stats.copy"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:get_stats"
    },
    {
      "type": "function",
      "name": "reset_stats",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 1046,
      "complexity": 1,
      "docstring": "\u91cd\u7f6e\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:reset_stats"
    },
    {
      "type": "function",
      "name": "create_parser",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 1061,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u89e3\u6790\u5668\u5b9e\u4f8b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "method"
      ],
      "decorators": [
        "staticmethod"
      ],
      "inheritance": [],
      "calls": [
        "isinstance",
        "ParserConfig",
        "MultiMethodResponseParser",
        "ParserMethod"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:create_parser"
    },
    {
      "type": "function",
      "name": "create_rule_parser",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 1070,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u89c4\u5219\u89e3\u6790\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [
        "staticmethod"
      ],
      "inheritance": [],
      "calls": [
        "ParserFactory.create_parser"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:create_rule_parser"
    },
    {
      "type": "function",
      "name": "create_transformer_parser",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 1075,
      "complexity": 1,
      "docstring": "\u521b\u5efaTransformer\u89e3\u6790\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "model_name"
      ],
      "decorators": [
        "staticmethod"
      ],
      "inheritance": [],
      "calls": [
        "ParserFactory.create_parser"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:create_transformer_parser"
    },
    {
      "type": "function",
      "name": "create_deepseek_parser",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 1084,
      "complexity": 1,
      "docstring": "\u521b\u5efaDeepSeek\u89e3\u6790\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "api_key",
        "api_base"
      ],
      "decorators": [
        "staticmethod"
      ],
      "inheritance": [],
      "calls": [
        "ParserFactory.create_parser"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:create_deepseek_parser"
    },
    {
      "type": "function",
      "name": "create_embedding_parser",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 1094,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u5d4c\u5165\u89e3\u6790\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "model_name"
      ],
      "decorators": [
        "staticmethod"
      ],
      "inheritance": [],
      "calls": [
        "ParserFactory.create_parser"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:create_embedding_parser"
    },
    {
      "type": "function",
      "name": "create_hybrid_parser",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py",
      "line_number": 1103,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u6df7\u5408\u89e3\u6790\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "primary_method",
        "fallback_chain"
      ],
      "decorators": [
        "staticmethod"
      ],
      "inheritance": [],
      "calls": [
        "isinstance",
        "ParserFactory.create_parser",
        "ParserMethod",
        "isinstance",
        "ParserMethod"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:create_hybrid_parser"
    },
    {
      "type": "function",
      "name": "debug_loop_logic",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/debug_loop_logic.py",
      "line_number": 20,
      "complexity": 1,
      "docstring": "\u8c03\u8bd5\u5faa\u73af\u903b\u8f91",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "ControlFlow",
        "WorkflowState",
        "MockTestResultEvaluator",
        "ControlFlowEvaluator",
        "print",
        "range",
        "print",
        "workflow_state.loop_counters.get",
        "print",
        "print",
        "print",
        "print",
        "print",
        "evaluator.evaluate_condition",
        "print",
        "print",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/debug_loop_logic.py:debug_loop_logic"
    },
    {
      "type": "function",
      "name": "debug_test_step_evaluation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/debug_loop_logic.py",
      "line_number": 84,
      "complexity": 1,
      "docstring": "\u8c03\u8bd5\u6d4b\u8bd5\u6b65\u9aa4\u7684AI\u8bc4\u4f30",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "MockTestResultEvaluator",
        "ControlFlowEvaluator",
        "ControlFlow",
        "Result",
        "evaluator.set_context",
        "evaluator.evaluate_control_flow_condition",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/debug_loop_logic.py:debug_test_step_evaluation"
    },
    {
      "type": "class",
      "name": "E2EMockChatOpenAI",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_e2e_scenarios.py",
      "line_number": 39,
      "complexity": 1,
      "docstring": "Enhanced Mock ChatOpenAI for end-to-end scenario testing",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "invoke",
        "set_responses",
        "set_failure_mode",
        "set_scenario",
        "_generate_default_plan"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_e2e_scenarios.py:E2EMockChatOpenAI"
    },
    {
      "type": "class",
      "name": "TestE2EWorkflowScenarios",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_e2e_scenarios.py",
      "line_number": 128,
      "complexity": 1,
      "docstring": "End-to-end workflow scenario tests",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_happy_path_successful_execution",
        "test_failure_and_retry_scenario",
        "test_ai_driven_state_changes_scenario",
        "test_terminal_failure_scenario"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_e2e_scenarios.py:TestE2EWorkflowScenarios"
    },
    {
      "type": "class",
      "name": "TestE2EWorkflowStateEvolution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_e2e_scenarios.py",
      "line_number": 457,
      "complexity": 1,
      "docstring": "Test state evolution patterns across different scenarios",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_state_history_progression"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_e2e_scenarios.py:TestE2EWorkflowStateEvolution"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_e2e_scenarios.py",
      "line_number": 41,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "model"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_e2e_scenarios.py:__init__"
    },
    {
      "type": "function",
      "name": "invoke",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_e2e_scenarios.py",
      "line_number": 49,
      "complexity": 1,
      "docstring": "Mock invoke method with enhanced control",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "messages"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Mock",
        "Exception",
        "self.response_queue.pop",
        "hasattr",
        "self._generate_default_plan"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_e2e_scenarios.py:invoke"
    },
    {
      "type": "function",
      "name": "set_responses",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_e2e_scenarios.py",
      "line_number": 76,
      "complexity": 1,
      "docstring": "Set predefined response queue",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "responses"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "responses.copy"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_e2e_scenarios.py:set_responses"
    },
    {
      "type": "function",
      "name": "set_failure_mode",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_e2e_scenarios.py",
      "line_number": 80,
      "complexity": 1,
      "docstring": "Configure failure behavior",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "should_fail",
        "max_failures"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_e2e_scenarios.py:set_failure_mode"
    },
    {
      "type": "function",
      "name": "set_scenario",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_e2e_scenarios.py",
      "line_number": 86,
      "complexity": 1,
      "docstring": "Set current test scenario",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "scenario"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_e2e_scenarios.py:set_scenario"
    },
    {
      "type": "function",
      "name": "_generate_default_plan",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_e2e_scenarios.py",
      "line_number": 90,
      "complexity": 1,
      "docstring": "Generate a default test plan",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_e2e_scenarios.py:_generate_default_plan"
    },
    {
      "type": "function",
      "name": "setUp",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_e2e_scenarios.py",
      "line_number": 460,
      "complexity": 1,
      "docstring": "Set up test environment",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "E2EMockChatOpenAI",
        "MultiStepAgent_v2"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_e2e_scenarios.py:setUp"
    },
    {
      "type": "function",
      "name": "test_happy_path_successful_execution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_e2e_scenarios.py",
      "line_number": 137,
      "complexity": 1,
      "docstring": "Scenario 1: Happy Path - Complete successful execution with AI state updates\n\nThis test validates:\n- Multi-step workflow execution\n- AI state updates between steps\n- State history accumulation\n- Successful completion",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "self.mock_llm.set_responses",
        "patch.object",
        "AIStateUpdaterService",
        "self.workflow_state.set_ai_updater",
        "self.agent.execute_multi_step",
        "self.assertIsNotNone",
        "self.assertIn",
        "self.workflow_state.get_global_state",
        "self.assertIsNotNone",
        "self.assertGreater",
        "self.workflow_state.get_state_history",
        "self.assertGreaterEqual",
        "self.assertGreaterEqual",
        "print",
        "print",
        "print",
        "print",
        "len",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_e2e_scenarios.py:test_happy_path_successful_execution"
    },
    {
      "type": "function",
      "name": "test_failure_and_retry_scenario",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_e2e_scenarios.py",
      "line_number": 230,
      "complexity": 1,
      "docstring": "Scenario 2: Failure & Retry - Step fails initially but succeeds on retry\n\nThis test validates:\n- Error detection and handling\n- Retry mechanism activation\n- State updates during failure/recovery\n- Successful completion after retry",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "self.mock_llm.set_responses",
        "patch.object",
        "AIStateUpdaterService",
        "self.workflow_state.set_ai_updater",
        "self.agent.execute_multi_step",
        "self.assertIsNotNone",
        "self.workflow_state.get_global_state",
        "self.assertIsNotNone",
        "self.workflow_state.get_state_history",
        "self.assertGreaterEqual",
        "self.assertGreaterEqual",
        "print",
        "print",
        "print",
        "print",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_e2e_scenarios.py:test_failure_and_retry_scenario"
    },
    {
      "type": "function",
      "name": "test_ai_driven_state_changes_scenario",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_e2e_scenarios.py",
      "line_number": 323,
      "complexity": 1,
      "docstring": "Scenario 3: AI-Driven State Changes - Mid-workflow AI updates affect subsequent steps\n\nThis test validates:\n- AI state updates during execution\n- State-aware instruction generation\n- Dynamic workflow adaptation\n- Context preservation",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "self.workflow_state.set_global_state",
        "AIStateUpdaterService",
        "self.workflow_state.set_ai_updater",
        "self.mock_llm.set_responses",
        "self.workflow_state.update_state_with_ai",
        "self.assertTrue",
        "self.workflow_state.get_global_state",
        "self.assertEqual",
        "self.agent._generate_state_aware_instruction",
        "self.assertIsNotNone",
        "self.assertGreater",
        "self.assertIn",
        "self.workflow_state.get_state_history",
        "self.assertGreaterEqual",
        "print",
        "print",
        "print",
        "print",
        "len",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_e2e_scenarios.py:test_ai_driven_state_changes_scenario"
    },
    {
      "type": "function",
      "name": "test_terminal_failure_scenario",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_e2e_scenarios.py",
      "line_number": 400,
      "complexity": 1,
      "docstring": "Scenario 4: Terminal Failure - Workflow halts correctly on unrecoverable errors\n\nThis test validates:\n- Error detection and classification\n- Retry limit enforcement\n- Graceful failure handling\n- State preservation during failure",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "AIStateUpdaterService",
        "self.workflow_state.set_ai_updater",
        "self.mock_llm.set_failure_mode",
        "ai_updater.update_state",
        "self.assertIsNotNone",
        "self.assertGreater",
        "self.workflow_state.get_global_state",
        "self.assertIsNotNone",
        "ai_updater.get_fallback_statistics",
        "self.assertGreater",
        "print",
        "print",
        "print",
        "print",
        "len",
        "statistics.get",
        "statistics.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_e2e_scenarios.py:test_terminal_failure_scenario"
    },
    {
      "type": "function",
      "name": "test_state_history_progression",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_e2e_scenarios.py",
      "line_number": 466,
      "complexity": 1,
      "docstring": "Test that state history correctly captures workflow progression",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "AIStateUpdaterService",
        "self.workflow_state.set_ai_updater",
        "enumerate",
        "self.workflow_state.get_state_history",
        "self.assertGreaterEqual",
        "self.workflow_state.get_state_history_count",
        "self.assertEqual",
        "print",
        "print",
        "print",
        "print",
        "self.mock_llm.set_responses",
        "self.workflow_state.update_state_with_ai",
        "self.assertTrue",
        "self.workflow_state.get_global_state",
        "self.assertEqual",
        "len",
        "len",
        "len",
        "len",
        "len",
        "self.workflow_state.get_global_state"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_e2e_scenarios.py:test_state_history_progression"
    },
    {
      "type": "class",
      "name": "Calculator",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/blue_print_patch_simple.py",
      "line_number": 89,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "add",
        "multiply"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/blue_print_patch_simple.py:Calculator"
    },
    {
      "type": "function",
      "name": "add_blue_print_to_method",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/blue_print_patch_simple.py",
      "line_number": 8,
      "complexity": 1,
      "docstring": "\u4e3a\u65b9\u6cd5\u6dfb\u52a0\u7334\u5b50\u8865\u4e01\uff0c\u7528\u84dd\u8272\u5b57\u4f53\u6253\u5370\u8f93\u5165\u53c2\u6570\u548c\u8fd4\u56de\u503c\n\nArgs:\n    method: \u65b9\u6cd5\u540d(\u5b57\u7b26\u4e32) \u6216 \u65b9\u6cd5\u5bf9\u8c61\n    target_class: \u5f53method\u662f\u5b57\u7b26\u4e32\u65f6\uff0c\u6307\u5b9a\u76ee\u6807\u7c7b\n\nReturns:\n    \u6062\u590d\u539f\u59cb\u65b9\u6cd5\u7684\u51fd\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "method",
        "target_class"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "isinstance",
        "getattr",
        "functools.wraps",
        "setattr",
        "callable",
        "ValueError",
        "', '.join",
        "', '.join",
        "', '.join",
        "print",
        "original_method",
        "print",
        "setattr",
        "print",
        "functools.wraps",
        "ValueError",
        "filter",
        "', '.join",
        "', '.join",
        "', '.join",
        "print",
        "method",
        "print",
        "repr",
        "filter",
        "kwargs.items",
        "repr",
        "repr",
        "kwargs.items",
        "repr"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/blue_print_patch_simple.py:add_blue_print_to_method"
    },
    {
      "type": "function",
      "name": "greet",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/blue_print_patch_simple.py",
      "line_number": 114,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "name"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/blue_print_patch_simple.py:greet"
    },
    {
      "type": "function",
      "name": "enhanced_method",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/blue_print_patch_simple.py",
      "line_number": 38,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [
        "functools.wraps(original_method)"
      ],
      "inheritance": [],
      "calls": [
        "functools.wraps",
        "', '.join",
        "', '.join",
        "', '.join",
        "print",
        "original_method",
        "print",
        "filter",
        "repr",
        "kwargs.items",
        "repr"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/blue_print_patch_simple.py:enhanced_method"
    },
    {
      "type": "function",
      "name": "restore",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/blue_print_patch_simple.py",
      "line_number": 56,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "setattr",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/blue_print_patch_simple.py:restore"
    },
    {
      "type": "function",
      "name": "add",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/blue_print_patch_simple.py",
      "line_number": 90,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "a",
        "b"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/blue_print_patch_simple.py:add"
    },
    {
      "type": "function",
      "name": "multiply",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/blue_print_patch_simple.py",
      "line_number": 93,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "a",
        "b"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/blue_print_patch_simple.py:multiply"
    },
    {
      "type": "function",
      "name": "enhanced_function",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/blue_print_patch_simple.py",
      "line_number": 65,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [
        "functools.wraps(method)"
      ],
      "inheritance": [],
      "calls": [
        "functools.wraps",
        "', '.join",
        "', '.join",
        "', '.join",
        "print",
        "method",
        "print",
        "filter",
        "repr",
        "kwargs.items",
        "repr"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/blue_print_patch_simple.py:enhanced_function"
    },
    {
      "type": "class",
      "name": "MinimalStepExecutor",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/minimal_workflow_test.py",
      "line_number": 23,
      "complexity": 1,
      "docstring": "\u6700\u5c0f\u6b65\u9aa4\u6267\u884c\u5668\uff0c\u6a21\u62df\u8fd0\u884c\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "execute_step"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/minimal_workflow_test.py:MinimalStepExecutor"
    },
    {
      "type": "function",
      "name": "create_minimal_workflow",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/minimal_workflow_test.py",
      "line_number": 78,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u6700\u5c0f\u6d4b\u8bd5\u5de5\u4f5c\u6d41",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "WorkflowDefinition",
        "WorkflowMetadata",
        "WorkflowStep",
        "WorkflowStep",
        "WorkflowStep",
        "ControlFlow",
        "ControlFlow",
        "ControlFlow"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/minimal_workflow_test.py:create_minimal_workflow"
    },
    {
      "type": "function",
      "name": "test_minimal_workflow",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/minimal_workflow_test.py",
      "line_number": 125,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6700\u5c0f\u5de5\u4f5c\u6d41",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "DebugMockTestResultEvaluator",
        "StaticWorkflowEngine",
        "MinimalStepExecutor",
        "engine.set_step_executor",
        "create_minimal_workflow",
        "print",
        "print",
        "engine.execute_workflow",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "executor.execution_count.items",
        "executor.execution_count.get",
        "executor.execution_count.get",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "getattr"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/minimal_workflow_test.py:test_minimal_workflow"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/minimal_workflow_test.py",
      "line_number": 26,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/minimal_workflow_test.py:__init__"
    },
    {
      "type": "function",
      "name": "execute_step",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/minimal_workflow_test.py",
      "line_number": 29,
      "complexity": 1,
      "docstring": "\u6a21\u62df\u6b65\u9aa4\u6267\u884c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "self.execution_count.get",
        "subprocess.run",
        "Result",
        "print",
        "print",
        "print",
        "Result",
        "Result",
        "repr"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/minimal_workflow_test.py:execute_step"
    },
    {
      "type": "class",
      "name": "StateHistoryEntry",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 70,
      "complexity": 1,
      "docstring": "\u72b6\u6001\u5386\u53f2\u6761\u76ee",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "NamedTuple"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:StateHistoryEntry"
    },
    {
      "type": "class",
      "name": "PromptScenario",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 76,
      "complexity": 1,
      "docstring": "\u63d0\u793a\u6a21\u677f\u573a\u666f\u679a\u4e3e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:PromptScenario"
    },
    {
      "type": "class",
      "name": "PromptTemplate",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 86,
      "complexity": 1,
      "docstring": "\u63d0\u793a\u6a21\u677f\u7c7b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "render",
        "_prepare_safe_variables",
        "get_required_variables"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:PromptTemplate"
    },
    {
      "type": "class",
      "name": "PromptTemplateManager",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 186,
      "complexity": 1,
      "docstring": "\u63d0\u793a\u6a21\u677f\u7ba1\u7406\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "_initialize_default_templates",
        "get_template",
        "add_template",
        "list_templates",
        "render_template",
        "get_template_variables",
        "validate_variables"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:PromptTemplateManager"
    },
    {
      "type": "class",
      "name": "ParsedStateInfo",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 469,
      "complexity": 1,
      "docstring": "\u89e3\u6790\u540e\u7684\u72b6\u6001\u4fe1\u606f\u7ed3\u6784",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "NamedTuple"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:ParsedStateInfo"
    },
    {
      "type": "class",
      "name": "ResponseQuality",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 479,
      "complexity": 1,
      "docstring": "\u54cd\u5e94\u8d28\u91cf\u7b49\u7ea7",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:ResponseQuality"
    },
    {
      "type": "class",
      "name": "ResponseParser",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 488,
      "complexity": 1,
      "docstring": "\u667a\u80fdLLM\u54cd\u5e94\u89e3\u6790\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "parse_response",
        "_preprocess_response",
        "_extract_main_content",
        "_extract_entities",
        "_calculate_confidence",
        "_analyze_sentiment",
        "_recognize_intent",
        "_assess_quality",
        "_create_empty_parsed_info",
        "validate_parsed_info",
        "suggest_improvements"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:ResponseParser"
    },
    {
      "type": "class",
      "name": "StateRelevanceType",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 818,
      "complexity": 1,
      "docstring": "\u72b6\u6001\u76f8\u5173\u6027\u7c7b\u578b\u679a\u4e3e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:StateRelevanceType"
    },
    {
      "type": "class",
      "name": "InstructionOptimizationType",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 826,
      "complexity": 1,
      "docstring": "\u6307\u4ee4\u4f18\u5316\u7c7b\u578b\u679a\u4e3e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:InstructionOptimizationType"
    },
    {
      "type": "class",
      "name": "OptimizationStrategy",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 836,
      "complexity": 1,
      "docstring": "\u4f18\u5316\u7b56\u7565\u679a\u4e3e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:OptimizationStrategy"
    },
    {
      "type": "class",
      "name": "DecisionNodeType",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 844,
      "complexity": 1,
      "docstring": "\u51b3\u7b56\u8282\u70b9\u7c7b\u578b\u679a\u4e3e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:DecisionNodeType"
    },
    {
      "type": "class",
      "name": "ConditionOperator",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 854,
      "complexity": 1,
      "docstring": "\u6761\u4ef6\u64cd\u4f5c\u7b26\u679a\u4e3e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:ConditionOperator"
    },
    {
      "type": "class",
      "name": "DecisionResult",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 873,
      "complexity": 1,
      "docstring": "\u51b3\u7b56\u7ed3\u679c\u7ed3\u6784",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "NamedTuple"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:DecisionResult"
    },
    {
      "type": "class",
      "name": "InstructionOptimizationResult",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 884,
      "complexity": 1,
      "docstring": "\u6307\u4ee4\u4f18\u5316\u7ed3\u679c\u7ed3\u6784",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "NamedTuple"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:InstructionOptimizationResult"
    },
    {
      "type": "class",
      "name": "StateContextExtractor",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 896,
      "complexity": 1,
      "docstring": "\u72b6\u6001\u4e0a\u4e0b\u6587\u63d0\u53d6\u5668 - \u667a\u80fd\u5206\u6790\u548c\u63d0\u53d6\u76f8\u5173\u72b6\u6001\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "extract_relevant_context",
        "_analyze_step_requirements",
        "_extract_state_entities",
        "_categorize_state_relevance",
        "_generate_context_summary"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:StateContextExtractor"
    },
    {
      "type": "class",
      "name": "InstructionOptimizer",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 1112,
      "complexity": 1,
      "docstring": "\u6307\u4ee4\u4f18\u5316\u5668\u62bd\u8c61\u63a5\u53e3",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "can_optimize",
        "optimize_instruction",
        "get_optimization_priority"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "ABC"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:InstructionOptimizer"
    },
    {
      "type": "class",
      "name": "StateAwareInstructionOptimizer",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 1160,
      "complexity": 1,
      "docstring": "\u72b6\u6001\u611f\u77e5\u7684\u6307\u4ee4\u4f18\u5316\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "can_optimize",
        "optimize_instruction",
        "get_optimization_priority",
        "_analyze_instruction_context",
        "_determine_optimization_types",
        "_apply_optimizations",
        "_enhance_context",
        "_add_error_prevention",
        "_improve_efficiency",
        "_optimize_clarity",
        "_add_dependency_awareness",
        "_assess_instruction_complexity",
        "_assess_step_complexity",
        "_get_historical_errors",
        "_get_recent_failures",
        "_analyze_dependencies",
        "_calculate_optimization_confidence",
        "_predict_improvement",
        "_assess_optimization_risk",
        "_generate_optimization_reasoning",
        "_get_applied_enhancements",
        "_update_optimization_stats",
        "get_optimization_statistics",
        "reset_optimization_statistics"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "InstructionOptimizer"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:StateAwareInstructionOptimizer"
    },
    {
      "type": "class",
      "name": "StateCondition",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 1674,
      "complexity": 1,
      "docstring": "\u72b6\u6001\u6761\u4ef6\u7c7b - \u8868\u793a\u4e00\u4e2a\u53ef\u8bc4\u4f30\u7684\u72b6\u6001\u6761\u4ef6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "evaluate",
        "_extract_state_value",
        "_parse_value",
        "_evaluate_condition",
        "_safe_compare",
        "_safe_contains"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:StateCondition"
    },
    {
      "type": "class",
      "name": "DecisionNode",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 1872,
      "complexity": 1,
      "docstring": "\u51b3\u7b56\u8282\u70b9\u7c7b - \u57fa\u4e8e\u72b6\u6001\u8fdb\u884c\u6761\u4ef6\u51b3\u7b56",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "add_condition",
        "add_decision_path",
        "set_default_path",
        "set_logic_operator",
        "evaluate_decision"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:DecisionNode"
    },
    {
      "type": "class",
      "name": "StateAwareDecisionManager",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2013,
      "complexity": 1,
      "docstring": "\u72b6\u6001\u611f\u77e5\u51b3\u7b56\u7ba1\u7406\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "register_decision_node",
        "create_conditional_node",
        "create_validation_node",
        "evaluate_decision",
        "list_decision_nodes",
        "get_decision_statistics",
        "reset_decision_statistics",
        "_update_decision_statistics"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:StateAwareDecisionManager"
    },
    {
      "type": "class",
      "name": "WorkflowErrorType",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2145,
      "complexity": 1,
      "docstring": "\u5de5\u4f5c\u6d41\u9519\u8bef\u7c7b\u578b\u679a\u4e3e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:WorkflowErrorType"
    },
    {
      "type": "class",
      "name": "WorkflowErrorContext",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2160,
      "complexity": 1,
      "docstring": "\u5de5\u4f5c\u6d41\u9519\u8bef\u4e0a\u4e0b\u6587",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "to_dict"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:WorkflowErrorContext"
    },
    {
      "type": "class",
      "name": "StateAwareErrorHandler",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2194,
      "complexity": 1,
      "docstring": "\u72b6\u6001\u611f\u77e5\u9519\u8bef\u5904\u7406\u5668\u7684\u62bd\u8c61\u57fa\u7c7b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "can_handle",
        "handle_error",
        "get_priority"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "ABC"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:StateAwareErrorHandler"
    },
    {
      "type": "class",
      "name": "GenericErrorHandler",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2234,
      "complexity": 1,
      "docstring": "\u901a\u7528\u9519\u8bef\u5904\u7406\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "can_handle",
        "get_priority",
        "handle_error",
        "_handle_api_error",
        "_handle_timeout_error",
        "_handle_validation_error",
        "_handle_file_error",
        "_handle_database_error",
        "_handle_network_error",
        "_handle_auth_error",
        "_handle_permission_error",
        "_handle_config_error",
        "_handle_agent_error",
        "_handle_unknown_error",
        "_create_fallback_result",
        "get_error_statistics"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "StateAwareErrorHandler"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:GenericErrorHandler"
    },
    {
      "type": "class",
      "name": "WorkflowErrorDispatcher",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2485,
      "complexity": 1,
      "docstring": "\u5de5\u4f5c\u6d41\u9519\u8bef\u5206\u53d1\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "register_handler",
        "classify_error",
        "dispatch_error"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:WorkflowErrorDispatcher"
    },
    {
      "type": "class",
      "name": "FallbackStrategy",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2588,
      "complexity": 1,
      "docstring": "\u56de\u9000\u7b56\u7565\u679a\u4e3e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:FallbackStrategy"
    },
    {
      "type": "class",
      "name": "FallbackStateGenerator",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2597,
      "complexity": 1,
      "docstring": "\u56de\u9000\u72b6\u6001\u751f\u6210\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "generate_fallback_state",
        "_generate_template_based_state",
        "_generate_rule_based_state",
        "_generate_minimal_state",
        "_generate_notification_state"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:FallbackStateGenerator"
    },
    {
      "type": "class",
      "name": "AICallCacheEntry",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2734,
      "complexity": 1,
      "docstring": "AI\u8c03\u7528\u7f13\u5b58\u6761\u76ee",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "NamedTuple"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:AICallCacheEntry"
    },
    {
      "type": "class",
      "name": "LRUCache",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2742,
      "complexity": 1,
      "docstring": "LRU\u7f13\u5b58\u5b9e\u73b0\uff0c\u7528\u4e8eAI\u8c03\u7528\u7ed3\u679c\u7f13\u5b58",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "get",
        "put",
        "clear",
        "get_stats",
        "reset_stats"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:LRUCache"
    },
    {
      "type": "class",
      "name": "ContextHasher",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2818,
      "complexity": 1,
      "docstring": "\u4e0a\u4e0b\u6587\u54c8\u5e0c\u751f\u6210\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "hash_context"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:ContextHasher"
    },
    {
      "type": "class",
      "name": "AICallConditionChecker",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2883,
      "complexity": 1,
      "docstring": "AI\u8c03\u7528\u6761\u4ef6\u68c0\u67e5\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "should_make_ai_call",
        "_has_significant_change",
        "_has_error_condition",
        "_is_state_transition",
        "_should_update_by_time",
        "_is_initialization",
        "set_significance_threshold",
        "set_time_threshold",
        "get_configuration"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:AICallConditionChecker"
    },
    {
      "type": "class",
      "name": "AIStateUpdater",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 3012,
      "complexity": 1,
      "docstring": "AI\u72b6\u6001\u66f4\u65b0\u5668\u62bd\u8c61\u63a5\u53e3",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "update_state",
        "should_update"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "ABC"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:AIStateUpdater"
    },
    {
      "type": "class",
      "name": "AIStateUpdaterService",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 3043,
      "complexity": 1,
      "docstring": "\u57fa\u4e8eDeepSeek\u7684AI\u72b6\u6001\u66f4\u65b0\u5668\u670d\u52a1\u5b9e\u73b0",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "_validate_llm_connection",
        "should_update",
        "update_state",
        "_get_system_message",
        "_build_state_update_prompt",
        "_detect_scenario",
        "_prepare_template_variables",
        "_validate_generated_state",
        "get_last_parsed_info",
        "_store_parsed_info",
        "_execute_fallback_strategies",
        "_retry_with_simplified_prompt",
        "_send_failure_notification",
        "get_fallback_statistics",
        "reset_fallback_statistics",
        "get_fallback_statistics",
        "reset_fallback_statistics",
        "_update_fallback_statistics",
        "get_cache_statistics",
        "clear_cache",
        "reset_cache_statistics",
        "get_condition_checker_config",
        "update_condition_checker_config",
        "get_performance_statistics"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "AIStateUpdater"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:AIStateUpdaterService"
    },
    {
      "type": "class",
      "name": "RegisteredAgent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 3857,
      "complexity": 1,
      "docstring": "\u5b58\u50a8\u5df2\u6ce8\u518c\u7684 Agent \u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:RegisteredAgent"
    },
    {
      "type": "class",
      "name": "WorkflowState",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 3864,
      "complexity": 1,
      "docstring": "\u5de5\u4f5c\u6d41\u72b6\u6001\u7ba1\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "should_break_loop",
        "increment_loop_counter",
        "reset_step_status_from",
        "get_global_state",
        "set_global_state",
        "is_state_update_enabled",
        "enable_state_updates",
        "disable_state_updates",
        "clear_global_state",
        "get_state_history",
        "get_state_history_count",
        "clear_state_history",
        "get_state_summary",
        "set_max_history_size",
        "__init_ai_updater",
        "update_state_with_ai",
        "set_ai_updater",
        "get_ai_updater_status",
        "__getstate__",
        "__setstate__",
        "get_memory_usage",
        "compress_history",
        "decompress_history_entry",
        "get_decompressed_history",
        "optimize_memory"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:WorkflowState"
    },
    {
      "type": "class",
      "name": "MultiStepAgent_v2",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 4356,
      "complexity": 1,
      "docstring": "\u65b0\u7248\u591a\u6b65\u9aa4\u667a\u80fd\u4f53\uff1a\u4e0d\u4f9d\u8d56 workflow engine\u3001state manager\u3001agent registry\u3002\n\u53ea\u5b9e\u73b0 execute_multi_step\uff0c\u8ba1\u5212\u548c\u72b6\u6001\u5b58\u50a8\u5728 StatefulExecutor \u7684\u53d8\u91cf\u4e2d\uff0c\u6210\u5458 Agent \u901a\u8fc7\u53d8\u91cf\u6ce8\u518c\u3002",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "_init_response_parser",
        "register_agent",
        "plan_execution",
        "select_next_executable_step",
        "_add_new_tasks",
        "get_plan",
        "update_step_status",
        "find_step_index_by_id",
        "jump_to_step",
        "loop_back_to_step",
        "handle_generate_fix_task_and_loop",
        "execute_single_step",
        "execute_multi_step",
        "_initialize_execution_context",
        "_should_continue_execution",
        "_execute_workflow_iteration",
        "_handle_no_executable_steps",
        "_process_no_steps_decision",
        "_execute_single_workflow_step",
        "_handle_step_success",
        "_handle_step_failure",
        "_process_success_decision",
        "_process_failure_decision",
        "_handle_generate_new_task_decision",
        "_handle_navigation_decision",
        "_handle_fix_task_decision",
        "_handle_skip_step_decision",
        "_execute_fix_task",
        "_handle_retry_logic",
        "_record_failure_information",
        "_check_user_interrupt",
        "_clear_failure_records",
        "_trigger_ai_state_update",
        "_generate_state_aware_instruction",
        "_build_state_update_context",
        "_handle_workflow_error",
        "_apply_recovery_action",
        "get_error_statistics",
        "reset_error_statistics",
        "enable_instruction_optimization",
        "disable_instruction_optimization",
        "set_optimization_strategy",
        "get_optimization_statistics",
        "reset_optimization_statistics",
        "create_decision_node",
        "add_conditional_decision",
        "add_validation_decision",
        "evaluate_workflow_decision",
        "list_decision_nodes",
        "get_decision_statistics",
        "reset_decision_statistics",
        "_generate_execution_summary",
        "make_decision",
        "_try_state_aware_decision",
        "_create_dynamic_decision",
        "_create_test_decision",
        "_create_validation_decision",
        "_create_approval_decision",
        "_create_error_recovery_decision",
        "_evaluate_workflow_level_decisions",
        "_check_completion_conditions",
        "_check_loop_conditions",
        "_convert_decision_result",
        "_make_traditional_decision",
        "_get_fallback_decision",
        "_generate_decision_prompt",
        "_parse_decision",
        "_analyze_step_response",
        "_generate_response_analysis_summary",
        "get_response_analysis_stats",
        "configure_response_parser",
        "clear_response_analysis_history",
        "get_natural_language_analysis_summary"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Agent"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:MultiStepAgent_v2"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 4362,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "llm",
        "registered_agents",
        "max_retries",
        "thinker_system_message",
        "thinker_chat_system_message",
        "planning_prompt_template",
        "use_autonomous_planning"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "super().__init__",
        "StatefulExecutor",
        "self.device.set_variable",
        "WorkflowState",
        "WorkflowErrorDispatcher",
        "self.error_dispatcher.register_handler",
        "StateAwareInstructionOptimizer",
        "StateAwareDecisionManager",
        "logger.info",
        "self._init_response_parser",
        "self.device.set_variable",
        "GenericErrorHandler",
        "super"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:__init__"
    },
    {
      "type": "function",
      "name": "render",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 112,
      "complexity": 1,
      "docstring": "\u6e32\u67d3\u6a21\u677f\n\nArgs:\n    variables: \u6a21\u677f\u53d8\u91cf\u5b57\u5178\n    \nReturns:\n    (system_message, user_message) \u5143\u7ec4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "variables"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._prepare_safe_variables",
        "self.user_template.safe_substitute",
        "ValueError"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:render"
    },
    {
      "type": "function",
      "name": "_prepare_safe_variables",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 130,
      "complexity": 1,
      "docstring": "\u51c6\u5907\u5b89\u5168\u7684\u53d8\u91cf\u5b57\u5178\uff0c\u4e3a\u7f3a\u5931\u53d8\u91cf\u63d0\u4f9b\u9ed8\u8ba4\u503c\n\nArgs:\n    variables: \u539f\u59cb\u53d8\u91cf\u5b57\u5178\n    \nReturns:\n    \u5b89\u5168\u7684\u53d8\u91cf\u5b57\u5178",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "variables"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "variables.items",
        "defaults.items",
        "isinstance",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_prepare_safe_variables"
    },
    {
      "type": "function",
      "name": "get_required_variables",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 168,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6a21\u677f\u6240\u9700\u7684\u53d8\u91cf\u5217\u8868\n\nReturns:\n    \u53d8\u91cf\u540d\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "re.findall",
        "variables.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:get_required_variables"
    },
    {
      "type": "function",
      "name": "_initialize_default_templates",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 199,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u9ed8\u8ba4\u6a21\u677f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "PromptTemplate",
        "PromptTemplate",
        "PromptTemplate",
        "PromptTemplate",
        "PromptTemplate",
        "PromptTemplate"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_initialize_default_templates"
    },
    {
      "type": "function",
      "name": "get_template",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 379,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6307\u5b9a\u573a\u666f\u7684\u6a21\u677f\n\nArgs:\n    scenario: \u573a\u666f\u679a\u4e3e\u503c\n    \nReturns:\n    \u6a21\u677f\u5b9e\u4f8b\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u8fd4\u56deNone",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "scenario"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._templates.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:get_template"
    },
    {
      "type": "function",
      "name": "add_template",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 391,
      "complexity": 1,
      "docstring": "\u6dfb\u52a0\u65b0\u6a21\u677f\n\nArgs:\n    template: \u6a21\u677f\u5b9e\u4f8b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "template"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:add_template"
    },
    {
      "type": "function",
      "name": "list_templates",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 401,
      "complexity": 1,
      "docstring": "\u5217\u51fa\u6240\u6709\u6a21\u677f\n\nReturns:\n    [(scenario, version, description), ...] \u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._templates.items"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:list_templates"
    },
    {
      "type": "function",
      "name": "render_template",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 411,
      "complexity": 1,
      "docstring": "\u6e32\u67d3\u6307\u5b9a\u573a\u666f\u7684\u6a21\u677f\n\nArgs:\n    scenario: \u573a\u666f\u679a\u4e3e\u503c\n    variables: \u6a21\u677f\u53d8\u91cf\u5b57\u5178\n    \nReturns:\n    (system_message, user_message) \u5143\u7ec4\n    \nRaises:\n    ValueError: \u6a21\u677f\u4e0d\u5b58\u5728\u6216\u6e32\u67d3\u5931\u8d25",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "scenario",
        "variables"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_template",
        "ValueError",
        "template.render",
        "self._logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:render_template"
    },
    {
      "type": "function",
      "name": "get_template_variables",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 435,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6307\u5b9a\u573a\u666f\u6a21\u677f\u6240\u9700\u7684\u53d8\u91cf\u5217\u8868\n\nArgs:\n    scenario: \u573a\u666f\u679a\u4e3e\u503c\n    \nReturns:\n    \u53d8\u91cf\u540d\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "scenario"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_template",
        "template.get_required_variables"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:get_template_variables"
    },
    {
      "type": "function",
      "name": "validate_variables",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 450,
      "complexity": 1,
      "docstring": "\u9a8c\u8bc1\u53d8\u91cf\u662f\u5426\u6ee1\u8db3\u6a21\u677f\u8981\u6c42\n\nArgs:\n    scenario: \u573a\u666f\u679a\u4e3e\u503c\n    variables: \u5f85\u9a8c\u8bc1\u7684\u53d8\u91cf\u5b57\u5178\n    \nReturns:\n    (\u662f\u5426\u901a\u8fc7\u9a8c\u8bc1, \u7f3a\u5931\u7684\u53d8\u91cf\u5217\u8868)",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "scenario",
        "variables"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_template_variables",
        "set",
        "set",
        "list",
        "variables.keys",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:validate_variables"
    },
    {
      "type": "function",
      "name": "parse_response",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 540,
      "complexity": 1,
      "docstring": "\u89e3\u6790LLM\u54cd\u5e94\u5e76\u63d0\u53d6\u7ed3\u6784\u5316\u4fe1\u606f\n\nArgs:\n    raw_response: \u539f\u59cbLLM\u54cd\u5e94\n    context: \u53ef\u9009\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\n    \nReturns:\n    ParsedStateInfo: \u89e3\u6790\u540e\u7684\u7ed3\u6784\u5316\u72b6\u6001\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "raw_response",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._logger.debug",
        "self._preprocess_response",
        "self._extract_main_content",
        "self._extract_entities",
        "self._calculate_confidence",
        "self._assess_quality",
        "ParsedStateInfo",
        "self._logger.info",
        "self._create_empty_parsed_info",
        "self._analyze_sentiment",
        "self._recognize_intent",
        "self._logger.error",
        "self._create_empty_parsed_info",
        "quality_metrics.get",
        "len",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:parse_response"
    },
    {
      "type": "function",
      "name": "_preprocess_response",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 598,
      "complexity": 1,
      "docstring": "\u9884\u5904\u7406\u54cd\u5e94\u6587\u672c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "response"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "re.sub",
        "re.sub",
        "re.sub",
        "response.strip"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_preprocess_response"
    },
    {
      "type": "function",
      "name": "_extract_main_content",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 611,
      "complexity": 1,
      "docstring": "\u63d0\u53d6\u4e3b\u8981\u72b6\u6001\u5185\u5bb9",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "content"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "re.split",
        "len",
        "max",
        "main_sentence.strip",
        "main_sentence.strip",
        "len",
        "len",
        "len",
        "s.strip",
        "s.strip"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_extract_main_content"
    },
    {
      "type": "function",
      "name": "_extract_entities",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 628,
      "complexity": 1,
      "docstring": "\u63d0\u53d6\u5173\u952e\u5b9e\u4f53\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "content",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "any",
        "re.findall",
        "any",
        "re.search",
        "','.join",
        "any",
        "match.group",
        "str",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_extract_entities"
    },
    {
      "type": "function",
      "name": "_calculate_confidence",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 670,
      "complexity": 1,
      "docstring": "\u8ba1\u7b97\u7f6e\u4fe1\u5ea6\u8bc4\u5206",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "content",
        "entities"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "min",
        "sum",
        "min",
        "re.search",
        "min",
        "len",
        "max"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_calculate_confidence"
    },
    {
      "type": "function",
      "name": "_analyze_sentiment",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 699,
      "complexity": 1,
      "docstring": "\u5206\u6790\u60c5\u611f\u503e\u5411",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "content"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "sum",
        "sum",
        "sum",
        "sum"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_analyze_sentiment"
    },
    {
      "type": "function",
      "name": "_recognize_intent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 718,
      "complexity": 1,
      "docstring": "\u8bc6\u522b\u610f\u56fe",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "content"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._intent_patterns.items",
        "sum",
        "max"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_recognize_intent"
    },
    {
      "type": "function",
      "name": "_assess_quality",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 733,
      "complexity": 1,
      "docstring": "\u8bc4\u4f30\u54cd\u5e94\u8d28\u91cf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "content",
        "entities",
        "confidence"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "len",
        "len",
        "len",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_assess_quality"
    },
    {
      "type": "function",
      "name": "_create_empty_parsed_info",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 758,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u7a7a\u7684\u89e3\u6790\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "reason"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "ParsedStateInfo"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_create_empty_parsed_info"
    },
    {
      "type": "function",
      "name": "validate_parsed_info",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 769,
      "complexity": 1,
      "docstring": "\u9a8c\u8bc1\u89e3\u6790\u540e\u7684\u4fe1\u606f\u662f\u5426\u7b26\u5408\u8981\u6c42\n\nArgs:\n    parsed_info: \u89e3\u6790\u540e\u7684\u72b6\u6001\u4fe1\u606f\n    min_confidence: \u6700\u5c0f\u7f6e\u4fe1\u5ea6\u9608\u503c\n    \nReturns:\n    Tuple[bool, List[str]]: (\u662f\u5426\u6709\u6548, \u95ee\u9898\u5217\u8868)",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "parsed_info",
        "min_confidence"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "issues.append",
        "len",
        "issues.append",
        "parsed_info.quality_metrics.get",
        "issues.append",
        "issues.append",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:validate_parsed_info"
    },
    {
      "type": "function",
      "name": "suggest_improvements",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 802,
      "complexity": 1,
      "docstring": "\u5efa\u8bae\u6539\u8fdb\u63aa\u65bd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "parsed_info"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "suggestions.append",
        "len",
        "suggestions.append",
        "parsed_info.quality_metrics.get",
        "suggestions.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:suggest_improvements"
    },
    {
      "type": "function",
      "name": "extract_relevant_context",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 924,
      "complexity": 1,
      "docstring": "\u63d0\u53d6\u4e0e\u5f53\u524d\u6b65\u9aa4\u76f8\u5173\u7684\u72b6\u6001\u4e0a\u4e0b\u6587\n\nArgs:\n    step: \u5f53\u524d\u6b65\u9aa4\u4fe1\u606f\n    global_state: \u5168\u5c40\u5de5\u4f5c\u6d41\u72b6\u6001\n    \nReturns:\n    \u76f8\u5173\u72b6\u6001\u4e0a\u4e0b\u6587\u5b57\u5178",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._analyze_step_requirements",
        "global_state.get_global_state",
        "self._extract_state_entities",
        "self._categorize_state_relevance",
        "self._generate_context_summary",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:extract_relevant_context"
    },
    {
      "type": "function",
      "name": "_analyze_step_requirements",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 967,
      "complexity": 1,
      "docstring": "\u5206\u6790\u6b65\u9aa4\u9700\u6c42\u548c\u7c7b\u578b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.step_type_keywords.items",
        "step.get('instruction', '').lower",
        "step.get('name', '').lower",
        "step.get('expected_output', '').lower",
        "step.get('agent_name', '').lower",
        "any",
        "analysis['step_types'].append",
        "analysis['keywords'].extend",
        "step.get",
        "step.get",
        "step.get",
        "step.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_analyze_step_requirements"
    },
    {
      "type": "function",
      "name": "_extract_state_entities",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 989,
      "complexity": 1,
      "docstring": "\u4ece\u72b6\u6001\u5185\u5bb9\u4e2d\u63d0\u53d6\u5b9e\u4f53\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "state_content",
        "step_analysis"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "state_content.lower",
        "re.findall",
        "re.findall",
        "re.findall",
        "dict",
        "re.findall"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_extract_state_entities"
    },
    {
      "type": "function",
      "name": "_categorize_state_relevance",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 1035,
      "complexity": 1,
      "docstring": "\u6839\u636e\u76f8\u5173\u6027\u5bf9\u72b6\u6001\u4fe1\u606f\u8fdb\u884c\u5206\u7c7b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "state_content",
        "step_analysis",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "set",
        "line.strip",
        "line.lower",
        "sum",
        "self.state_priority_patterns.items",
        "state_content.split",
        "line.strip",
        "self.step_type_keywords.get",
        "sum",
        "any",
        "context['extracted_entities'].items",
        "context['high_relevance'].append",
        "isinstance",
        "context['medium_relevance'].append",
        "isinstance",
        "context['low_relevance'].append",
        "entities.items",
        "str(entity).lower",
        "str",
        "key.lower",
        "str(value).lower",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_categorize_state_relevance"
    },
    {
      "type": "function",
      "name": "_generate_context_summary",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 1083,
      "complexity": 1,
      "docstring": "\u751f\u6210\u4e0a\u4e0b\u6587\u6458\u8981",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context",
        "step_analysis"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "summary_parts.append",
        "summary_parts.extend",
        "context['extracted_entities'].items",
        "summary_parts.append",
        "'\\n'.join",
        "summary_parts.append",
        "isinstance",
        "entity_summary.append",
        "len",
        "isinstance",
        "entity_summary.append",
        "'; '.join",
        "', '.join",
        "', '.join",
        "list",
        "', '.join",
        "str",
        "entities.items"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_generate_context_summary"
    },
    {
      "type": "function",
      "name": "can_optimize",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 1190,
      "complexity": 1,
      "docstring": "\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u4f18\u5316\u6307\u4ee4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction",
        "step",
        "global_state",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "global_state.get_global_state",
        "instruction.strip",
        "len",
        "len",
        "state_content.strip"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:can_optimize"
    },
    {
      "type": "function",
      "name": "optimize_instruction",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 1211,
      "complexity": 1,
      "docstring": "\u4f18\u5316\u6307\u4ee4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction",
        "step",
        "global_state",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._analyze_instruction_context",
        "self._determine_optimization_types",
        "self._apply_optimizations",
        "self._calculate_optimization_confidence",
        "self._predict_improvement",
        "self._assess_optimization_risk",
        "self._generate_optimization_reasoning",
        "InstructionOptimizationResult",
        "self._update_optimization_stats",
        "self.logger.info",
        "self.logger.error",
        "InstructionOptimizationResult",
        "self._get_applied_enhancements",
        "str",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:optimize_instruction"
    },
    {
      "type": "function",
      "name": "get_optimization_priority",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 1271,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u4f18\u5316\u5668\u4f18\u5148\u7ea7",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:get_optimization_priority"
    },
    {
      "type": "function",
      "name": "_analyze_instruction_context",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 1275,
      "complexity": 1,
      "docstring": "\u5206\u6790\u6307\u4ee4\u548c\u4e0a\u4e0b\u6587",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction",
        "step",
        "global_state",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "self._assess_instruction_complexity",
        "any",
        "any",
        "step.get",
        "self._assess_step_complexity",
        "len",
        "len",
        "self._get_historical_errors",
        "self._get_recent_failures",
        "self._analyze_dependencies",
        "instruction.lower",
        "global_state.get_global_state",
        "str",
        "instruction.lower",
        "instruction.lower"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_analyze_instruction_context"
    },
    {
      "type": "function",
      "name": "_determine_optimization_types",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 1295,
      "complexity": 1,
      "docstring": "\u786e\u5b9a\u9700\u8981\u5e94\u7528\u7684\u4f18\u5316\u7c7b\u578b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "analysis"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "optimization_types.append",
        "optimization_types.append",
        "optimization_types.append",
        "optimization_types.append",
        "optimization_types.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_determine_optimization_types"
    },
    {
      "type": "function",
      "name": "_apply_optimizations",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 1326,
      "complexity": 1,
      "docstring": "\u5e94\u7528\u6307\u4ee4\u4f18\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction",
        "step",
        "global_state",
        "context",
        "analysis",
        "optimization_types"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._enhance_context",
        "self._add_error_prevention",
        "self._improve_efficiency",
        "self._optimize_clarity",
        "self._add_dependency_awareness"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_apply_optimizations"
    },
    {
      "type": "function",
      "name": "_enhance_context",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 1346,
      "complexity": 1,
      "docstring": "\u589e\u5f3a\u4e0a\u4e0b\u6587\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction",
        "global_state",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "global_state.get_global_state",
        "state_content.lower",
        "key_info.append",
        "state_content.lower",
        "key_info.append",
        "state_content.lower",
        "key_info.append",
        "state_content.lower",
        "key_info.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_enhance_context"
    },
    {
      "type": "function",
      "name": "_add_error_prevention",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 1370,
      "complexity": 1,
      "docstring": "\u6dfb\u52a0\u9519\u8bef\u9884\u9632\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction",
        "analysis"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "prevention_tips.append",
        "prevention_tips.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_add_error_prevention"
    },
    {
      "type": "function",
      "name": "_improve_efficiency",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 1388,
      "complexity": 1,
      "docstring": "\u63d0\u5347\u6548\u7387",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction",
        "step",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "step.get('name', '').lower",
        "efficiency_tips.append",
        "efficiency_tips.append",
        "step.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_improve_efficiency"
    },
    {
      "type": "function",
      "name": "_optimize_clarity",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 1407,
      "complexity": 1,
      "docstring": "\u4f18\u5316\u6e05\u6670\u5ea6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction",
        "step"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "step.get",
        "step.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_optimize_clarity"
    },
    {
      "type": "function",
      "name": "_add_dependency_awareness",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 1424,
      "complexity": 1,
      "docstring": "\u6dfb\u52a0\u4f9d\u8d56\u5173\u7cfb\u611f\u77e5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction",
        "analysis"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_add_dependency_awareness"
    },
    {
      "type": "function",
      "name": "_assess_instruction_complexity",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 1440,
      "complexity": 1,
      "docstring": "\u8bc4\u4f30\u6307\u4ee4\u590d\u6742\u5ea6 (0.0-1.0)",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "sum",
        "min",
        "sum",
        "min",
        "min",
        "len",
        "len",
        "term.lower",
        "instruction.lower",
        "instruction.lower"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_assess_instruction_complexity"
    },
    {
      "type": "function",
      "name": "_assess_step_complexity",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 1462,
      "complexity": 1,
      "docstring": "\u8bc4\u4f30\u6b65\u9aa4\u590d\u6742\u5ea6 (0.0-1.0)",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "step.get('name', '').lower",
        "any",
        "step.get",
        "step.get",
        "step.get",
        "min",
        "len",
        "len",
        "step.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_assess_step_complexity"
    },
    {
      "type": "function",
      "name": "_get_historical_errors",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 1489,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u5386\u53f2\u9519\u8bef\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "context.get",
        "errors.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_get_historical_errors"
    },
    {
      "type": "function",
      "name": "_get_recent_failures",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 1497,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u8fd1\u671f\u5931\u8d25\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "global_state.get_global_state",
        "failures.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_get_recent_failures"
    },
    {
      "type": "function",
      "name": "_analyze_dependencies",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 1505,
      "complexity": 1,
      "docstring": "\u5206\u6790\u4f9d\u8d56\u5173\u7cfb",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "step.get",
        "len",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_analyze_dependencies"
    },
    {
      "type": "function",
      "name": "_calculate_optimization_confidence",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 1515,
      "complexity": 1,
      "docstring": "\u8ba1\u7b97\u4f18\u5316\u7f6e\u4fe1\u5ea6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "analysis",
        "optimization_types"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "min",
        "min",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_calculate_optimization_confidence"
    },
    {
      "type": "function",
      "name": "_predict_improvement",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 1536,
      "complexity": 1,
      "docstring": "\u9884\u6d4b\u6539\u8fdb\u7a0b\u5ea6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "analysis",
        "optimization_types"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "min",
        "type_improvements.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_predict_improvement"
    },
    {
      "type": "function",
      "name": "_assess_optimization_risk",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 1558,
      "complexity": 1,
      "docstring": "\u8bc4\u4f30\u4f18\u5316\u98ce\u9669",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "original",
        "optimized",
        "analysis"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "risk_factors.append",
        "risk_factors.append",
        "min",
        "len",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_assess_optimization_risk"
    },
    {
      "type": "function",
      "name": "_generate_optimization_reasoning",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 1584,
      "complexity": 1,
      "docstring": "\u751f\u6210\u4f18\u5316\u7406\u7531",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "optimization_types",
        "analysis"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "'\uff1b'.join",
        "reasons.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_generate_optimization_reasoning"
    },
    {
      "type": "function",
      "name": "_get_applied_enhancements",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 1606,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u5e94\u7528\u7684\u589e\u5f3a\u529f\u80fd\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "optimization_types"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "enhancements.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_get_applied_enhancements"
    },
    {
      "type": "function",
      "name": "_update_optimization_stats",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 1624,
      "complexity": 1,
      "docstring": "\u66f4\u65b0\u4f18\u5316\u7edf\u8ba1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.optimization_stats['optimization_types_used'].get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_update_optimization_stats"
    },
    {
      "type": "function",
      "name": "get_optimization_statistics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 6121,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6307\u4ee4\u4f18\u5316\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "hasattr",
        "self.instruction_optimizer.get_optimization_statistics"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:get_optimization_statistics"
    },
    {
      "type": "function",
      "name": "reset_optimization_statistics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 6134,
      "complexity": 1,
      "docstring": "\u91cd\u7f6e\u6307\u4ee4\u4f18\u5316\u7edf\u8ba1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "hasattr",
        "self.instruction_optimizer.reset_optimization_statistics",
        "logger.info",
        "logger.warning"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:reset_optimization_statistics"
    },
    {
      "type": "function",
      "name": "evaluate",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 1693,
      "complexity": 1,
      "docstring": "\u8bc4\u4f30\u6761\u4ef6\n\nArgs:\n    global_state: \u5168\u5c40\u5de5\u4f5c\u6d41\u72b6\u6001\n    \nReturns:\n    (\u662f\u5426\u6ee1\u8db3\u6761\u4ef6, \u8bc4\u4f30\u8be6\u60c5)",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._extract_state_value",
        "self._evaluate_condition",
        "logger.error",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:evaluate"
    },
    {
      "type": "function",
      "name": "_extract_state_value",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 1730,
      "complexity": 1,
      "docstring": "\u4ece\u5168\u5c40\u72b6\u6001\u4e2d\u63d0\u53d6\u503c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "global_state.get_global_state",
        "self.state_path.split",
        "json.loads",
        "re.search",
        "part.lower",
        "state_content.lower",
        "match.group(1).strip().strip",
        "self._parse_value",
        "isinstance",
        "value.get",
        "re.escape",
        "re.escape",
        "re.escape",
        "match.group(1).strip",
        "match.group"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_extract_state_value"
    },
    {
      "type": "function",
      "name": "_parse_value",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 1778,
      "complexity": 1,
      "docstring": "\u89e3\u6790\u5b57\u7b26\u4e32\u503c\u4e3a\u9002\u5f53\u7684\u7c7b\u578b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "value_str"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "value_str.lower",
        "float",
        "int"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_parse_value"
    },
    {
      "type": "function",
      "name": "_evaluate_condition",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 1803,
      "complexity": 1,
      "docstring": "\u8bc4\u4f30\u5177\u4f53\u7684\u6761\u4ef6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "actual_value"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._safe_compare",
        "self._safe_compare",
        "self._safe_compare",
        "self._safe_compare",
        "self._safe_contains",
        "self._safe_contains",
        "str(actual_value).startswith",
        "str",
        "str(actual_value).endswith",
        "str",
        "str",
        "str",
        "hasattr",
        "hasattr",
        "isinstance",
        "bool",
        "actual_value.strip",
        "bool",
        "isinstance",
        "re.search",
        "actual_value.strip",
        "str",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_evaluate_condition"
    },
    {
      "type": "function",
      "name": "_safe_compare",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 1845,
      "complexity": 1,
      "docstring": "\u5b89\u5168\u7684\u6570\u503c\u6bd4\u8f83",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "a",
        "b",
        "comparison_func"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "comparison_func",
        "isinstance",
        "isinstance",
        "float",
        "float",
        "comparison_func"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_safe_compare"
    },
    {
      "type": "function",
      "name": "_safe_contains",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 1861,
      "complexity": 1,
      "docstring": "\u5b89\u5168\u7684\u5305\u542b\u68c0\u67e5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "container",
        "item"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "hasattr",
        "str",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_safe_contains"
    },
    {
      "type": "function",
      "name": "add_condition",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 1893,
      "complexity": 1,
      "docstring": "\u6dfb\u52a0\u6761\u4ef6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "condition"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.conditions.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:add_condition"
    },
    {
      "type": "function",
      "name": "add_decision_path",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 1897,
      "complexity": 1,
      "docstring": "\u6dfb\u52a0\u51b3\u7b56\u8def\u5f84",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "condition_result",
        "next_step_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:add_decision_path"
    },
    {
      "type": "function",
      "name": "set_default_path",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 1901,
      "complexity": 1,
      "docstring": "\u8bbe\u7f6e\u9ed8\u8ba4\u8def\u5f84",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "next_step_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:set_default_path"
    },
    {
      "type": "function",
      "name": "set_logic_operator",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 1905,
      "complexity": 1,
      "docstring": "\u8bbe\u7f6e\u903b\u8f91\u64cd\u4f5c\u7b26\uff08AND/OR\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "operator"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "operator.upper",
        "operator.upper"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:set_logic_operator"
    },
    {
      "type": "function",
      "name": "evaluate_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2053,
      "complexity": 1,
      "docstring": "\u8bc4\u4f30\u6307\u5b9a\u51b3\u7b56\u8282\u70b9\n\nArgs:\n    node_id: \u51b3\u7b56\u8282\u70b9ID\n    global_state: \u5168\u5c40\u5de5\u4f5c\u6d41\u72b6\u6001\n    \nReturns:\n    \u51b3\u7b56\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "node_id",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "node.evaluate_decision",
        "self._update_decision_statistics",
        "logger.info",
        "logger.error",
        "DecisionResult"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:evaluate_decision"
    },
    {
      "type": "function",
      "name": "register_decision_node",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2028,
      "complexity": 1,
      "docstring": "\u6ce8\u518c\u51b3\u7b56\u8282\u70b9",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "node"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:register_decision_node"
    },
    {
      "type": "function",
      "name": "create_conditional_node",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2033,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u6761\u4ef6\u51b3\u7b56\u8282\u70b9\u7684\u5feb\u6377\u65b9\u6cd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "node_id",
        "condition",
        "true_step",
        "false_step",
        "description"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "DecisionNode",
        "node.add_condition",
        "node.add_decision_path",
        "node.add_decision_path",
        "self.register_decision_node"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:create_conditional_node"
    },
    {
      "type": "function",
      "name": "create_validation_node",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2043,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u9a8c\u8bc1\u51b3\u7b56\u8282\u70b9\u7684\u5feb\u6377\u65b9\u6cd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "node_id",
        "condition",
        "valid_step",
        "invalid_step",
        "description"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "DecisionNode",
        "node.add_condition",
        "node.add_decision_path",
        "node.add_decision_path",
        "self.register_decision_node"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:create_validation_node"
    },
    {
      "type": "function",
      "name": "list_decision_nodes",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 6163,
      "complexity": 1,
      "docstring": "\u5217\u51fa\u6240\u6709\u51b3\u7b56\u8282\u70b9",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.decision_manager.list_decision_nodes"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:list_decision_nodes"
    },
    {
      "type": "function",
      "name": "get_decision_statistics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 6167,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u51b3\u7b56\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.decision_manager.get_decision_statistics"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:get_decision_statistics"
    },
    {
      "type": "function",
      "name": "reset_decision_statistics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 6171,
      "complexity": 1,
      "docstring": "\u91cd\u7f6e\u51b3\u7b56\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.decision_manager.reset_decision_statistics",
        "logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:reset_decision_statistics"
    },
    {
      "type": "function",
      "name": "_update_decision_statistics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2117,
      "complexity": 1,
      "docstring": "\u66f4\u65b0\u51b3\u7b56\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "node",
        "result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_update_decision_statistics"
    },
    {
      "type": "function",
      "name": "to_dict",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2179,
      "complexity": 1,
      "docstring": "\u8f6c\u6362\u4e3a\u5b57\u5178\u683c\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.timestamp.isoformat",
        "self.global_state.get_state_summary"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:to_dict"
    },
    {
      "type": "function",
      "name": "can_handle",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2253,
      "complexity": 1,
      "docstring": "\u901a\u7528\u5904\u7406\u5668\u53ef\u4ee5\u5904\u7406\u6240\u6709\u7c7b\u578b\u7684\u9519\u8bef",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "error_context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:can_handle"
    },
    {
      "type": "function",
      "name": "handle_error",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2261,
      "complexity": 1,
      "docstring": "\u5904\u7406\u9519\u8bef",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "error_context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.handled_errors.append",
        "self.recovery_strategies.get",
        "handler_func",
        "result.get",
        "error_context.global_state.set_global_state",
        "logger.error",
        "self._create_fallback_result"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:handle_error"
    },
    {
      "type": "function",
      "name": "get_priority",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2257,
      "complexity": 1,
      "docstring": "\u901a\u7528\u5904\u7406\u5668\u4f18\u5148\u7ea7\u6700\u4f4e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:get_priority"
    },
    {
      "type": "function",
      "name": "_handle_api_error",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2294,
      "complexity": 1,
      "docstring": "\u5904\u7406API\u9519\u8bef",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "error_context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "error_context.global_state.get_global_state",
        "error_context.error_message.lower"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_handle_api_error"
    },
    {
      "type": "function",
      "name": "_handle_timeout_error",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2321,
      "complexity": 1,
      "docstring": "\u5904\u7406\u8d85\u65f6\u9519\u8bef",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "error_context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "error_context.global_state.get_global_state"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_handle_timeout_error"
    },
    {
      "type": "function",
      "name": "_handle_validation_error",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2334,
      "complexity": 1,
      "docstring": "\u5904\u7406\u9a8c\u8bc1\u9519\u8bef",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "error_context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "error_context.global_state.get_global_state"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_handle_validation_error"
    },
    {
      "type": "function",
      "name": "_handle_file_error",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2346,
      "complexity": 1,
      "docstring": "\u5904\u7406\u6587\u4ef6\u9519\u8bef",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "error_context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "error_context.global_state.get_global_state",
        "error_context.error_message.lower"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_handle_file_error"
    },
    {
      "type": "function",
      "name": "_handle_database_error",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2372,
      "complexity": 1,
      "docstring": "\u5904\u7406\u6570\u636e\u5e93\u9519\u8bef",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "error_context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "error_context.global_state.get_global_state"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_handle_database_error"
    },
    {
      "type": "function",
      "name": "_handle_network_error",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2384,
      "complexity": 1,
      "docstring": "\u5904\u7406\u7f51\u7edc\u9519\u8bef",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "error_context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "error_context.global_state.get_global_state"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_handle_network_error"
    },
    {
      "type": "function",
      "name": "_handle_auth_error",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2396,
      "complexity": 1,
      "docstring": "\u5904\u7406\u8ba4\u8bc1\u9519\u8bef",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "error_context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "error_context.global_state.get_global_state"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_handle_auth_error"
    },
    {
      "type": "function",
      "name": "_handle_permission_error",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2408,
      "complexity": 1,
      "docstring": "\u5904\u7406\u6743\u9650\u9519\u8bef",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "error_context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "error_context.global_state.get_global_state"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_handle_permission_error"
    },
    {
      "type": "function",
      "name": "_handle_config_error",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2420,
      "complexity": 1,
      "docstring": "\u5904\u7406\u914d\u7f6e\u9519\u8bef",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "error_context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "error_context.global_state.get_global_state"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_handle_config_error"
    },
    {
      "type": "function",
      "name": "_handle_agent_error",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2432,
      "complexity": 1,
      "docstring": "\u5904\u7406\u4ee3\u7406\u6267\u884c\u9519\u8bef",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "error_context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "error_context.global_state.get_global_state"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_handle_agent_error"
    },
    {
      "type": "function",
      "name": "_handle_unknown_error",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2444,
      "complexity": 1,
      "docstring": "\u5904\u7406\u672a\u77e5\u9519\u8bef",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "error_context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "error_context.global_state.get_global_state"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_handle_unknown_error"
    },
    {
      "type": "function",
      "name": "_create_fallback_result",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2456,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u56de\u9000\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "error_context",
        "handler_error"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "error_context.global_state.get_global_state",
        "str",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_create_fallback_result"
    },
    {
      "type": "function",
      "name": "get_error_statistics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 6088,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u9519\u8bef\u5904\u7406\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.error_statistics.copy"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:get_error_statistics"
    },
    {
      "type": "function",
      "name": "register_handler",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2509,
      "complexity": 1,
      "docstring": "\u6ce8\u518c\u9519\u8bef\u5904\u7406\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "handler"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.error_handlers.append",
        "self.error_handlers.sort",
        "h.get_priority"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:register_handler"
    },
    {
      "type": "function",
      "name": "classify_error",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2515,
      "complexity": 1,
      "docstring": "\u5206\u7c7b\u9519\u8bef\u7c7b\u578b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "error"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "str(error).lower",
        "any",
        "any",
        "str",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:classify_error"
    },
    {
      "type": "function",
      "name": "dispatch_error",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2547,
      "complexity": 1,
      "docstring": "\u5206\u53d1\u9519\u8bef\u5230\u9002\u5f53\u7684\u5904\u7406\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "error",
        "step",
        "global_state",
        "execution_context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.classify_error",
        "WorkflowErrorContext",
        "logger.error",
        "handler.can_handle",
        "handler.handle_error",
        "logger.info",
        "global_state.get_global_state",
        "str",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:dispatch_error"
    },
    {
      "type": "function",
      "name": "generate_fallback_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2628,
      "complexity": 1,
      "docstring": "\u6839\u636e\u6307\u5b9a\u7b56\u7565\u751f\u6210\u56de\u9000\u72b6\u6001\n\nArgs:\n    strategy: \u56de\u9000\u7b56\u7565\n    current_state: \u5f53\u524d\u5de5\u4f5c\u6d41\u72b6\u6001\n    context: \u4e0a\u4e0b\u6587\u4fe1\u606f\n    failure_reason: \u5931\u8d25\u539f\u56e0\n    \nReturns:\n    \u751f\u6210\u7684\u56de\u9000\u72b6\u6001\u63cf\u8ff0",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "strategy",
        "current_state",
        "context",
        "failure_reason"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.logger.info",
        "self._generate_template_based_state",
        "self.logger.error",
        "self._generate_rule_based_state",
        "self._generate_minimal_state",
        "self._generate_notification_state",
        "self._generate_minimal_state"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:generate_fallback_state"
    },
    {
      "type": "function",
      "name": "_generate_template_based_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2663,
      "complexity": 1,
      "docstring": "\u57fa\u4e8e\u6a21\u677f\u751f\u6210\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "context.get",
        "step_info.get",
        "context.get",
        "context.get",
        "context.get",
        "step_info.get",
        "random.choice",
        "template.format",
        "random.choice",
        "random.choice",
        "template.replace",
        "execution_result.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_generate_template_based_state"
    },
    {
      "type": "function",
      "name": "_generate_rule_based_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2685,
      "complexity": 1,
      "docstring": "\u57fa\u4e8e\u89c4\u5219\u751f\u6210\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_state",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "context.get",
        "step_info.get",
        "context.get",
        "context.get",
        "parts.append",
        "context.get",
        "execution_result.get",
        "'\uff0c'.join",
        "str(error_info).lower",
        "parts.append",
        "parts.append",
        "execution_result.get",
        "parts.append",
        "str(error_info).lower",
        "parts.append",
        "parts.append",
        "str",
        "str",
        "parts.append",
        "str",
        "len",
        "parts.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_generate_rule_based_state"
    },
    {
      "type": "function",
      "name": "_generate_minimal_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2723,
      "complexity": 1,
      "docstring": "\u751f\u6210\u6700\u5c0f\u72b6\u6001\u63cf\u8ff0",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "dt.now().strftime",
        "random.choice",
        "dt.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_generate_minimal_state"
    },
    {
      "type": "function",
      "name": "_generate_notification_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2729,
      "complexity": 1,
      "docstring": "\u751f\u6210\u901a\u77e5\u64cd\u4f5c\u5458\u7684\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "failure_reason"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_generate_notification_state"
    },
    {
      "type": "function",
      "name": "get",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2762,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u7f13\u5b58\u9879",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "key"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.cache.pop",
        "entry._replace"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:get"
    },
    {
      "type": "function",
      "name": "put",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2779,
      "complexity": 1,
      "docstring": "\u6dfb\u52a0\u7f13\u5b58\u9879",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "key",
        "entry"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.cache.pop",
        "len",
        "self.cache.popitem"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:put"
    },
    {
      "type": "function",
      "name": "clear",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2792,
      "complexity": 1,
      "docstring": "\u6e05\u7a7a\u7f13\u5b58",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.cache.clear"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:clear"
    },
    {
      "type": "function",
      "name": "get_stats",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2797,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u7f13\u5b58\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "max"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:get_stats"
    },
    {
      "type": "function",
      "name": "reset_stats",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2808,
      "complexity": 1,
      "docstring": "\u91cd\u7f6e\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:reset_stats"
    },
    {
      "type": "function",
      "name": "hash_context",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2822,
      "complexity": 1,
      "docstring": "\u751f\u6210\u4e0a\u4e0b\u6587\u7684\u54c8\u5e0c\u503c\n\nArgs:\n    current_state: \u5f53\u524d\u5de5\u4f5c\u6d41\u72b6\u6001\n    context: \u4e0a\u4e0b\u6587\u4fe1\u606f\n    include_timestamp: \u662f\u5426\u5305\u542b\u65f6\u95f4\u6233\uff08\u5f71\u54cd\u7f13\u5b58\u6709\u6548\u6027\uff09\n    \nReturns:\n    \u4e0a\u4e0b\u6587\u54c8\u5e0c\u5b57\u7b26\u4e32",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "current_state",
        "context",
        "include_timestamp"
      ],
      "decorators": [
        "staticmethod"
      ],
      "inheritance": [],
      "calls": [
        "context.get",
        "context.get",
        "context.get",
        "hash_components.append",
        "context.get",
        "'|'.join",
        "hashlib.md5(combined_string.encode('utf-8')).hexdigest",
        "current_state.get_global_state",
        "hash_components.append",
        "current_state.get_state_history",
        "enumerate",
        "hash_components.append",
        "hash_components.append",
        "hash_components.append",
        "hash_components.append",
        "hash_components.append",
        "context.get",
        "hash_components.append",
        "hash_components.append",
        "str",
        "str",
        "dt.now().isoformat",
        "hashlib.md5",
        "combined_string.encode",
        "step_info.get",
        "step_info.get",
        "step_info.get",
        "dt.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:hash_context"
    },
    {
      "type": "function",
      "name": "should_make_ai_call",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2891,
      "complexity": 1,
      "docstring": "\u5224\u65ad\u662f\u5426\u5e94\u8be5\u8fdb\u884cAI\u8c03\u7528\n\nArgs:\n    current_state: \u5f53\u524d\u5de5\u4f5c\u6d41\u72b6\u6001\n    context: \u4e0a\u4e0b\u6587\u4fe1\u606f\n    \nReturns:\n    (should_call, reason) \u5143\u7ec4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_state",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._is_initialization",
        "self._has_significant_change",
        "self._has_error_condition",
        "self._is_state_transition",
        "self._should_update_by_time"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:should_make_ai_call"
    },
    {
      "type": "function",
      "name": "_has_significant_change",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2926,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u662f\u5426\u6709\u663e\u8457\u53d8\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "context.get",
        "context.get",
        "step_info.get('type', '').lower",
        "any",
        "str",
        "len",
        "step_info.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_has_significant_change"
    },
    {
      "type": "function",
      "name": "_has_error_condition",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2947,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u662f\u5426\u6709\u9519\u8bef\u6761\u4ef6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "context.get",
        "context.get('step_status', '').lower",
        "context.get",
        "str(execution_result).lower",
        "any",
        "context.get",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_has_error_condition"
    },
    {
      "type": "function",
      "name": "_is_state_transition",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2969,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u662f\u5426\u4e3a\u72b6\u6001\u8f6c\u6362",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "context.get('step_status', '').lower",
        "any",
        "context.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_is_state_transition"
    },
    {
      "type": "function",
      "name": "_should_update_by_time",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2975,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u662f\u5426\u5e94\u57fa\u4e8e\u65f6\u95f4\u8fdb\u884c\u66f4\u65b0",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "current_state.get_state_history",
        "(dt.now() - last_update).total_seconds",
        "dt.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_should_update_by_time"
    },
    {
      "type": "function",
      "name": "_is_initialization",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2989,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u662f\u5426\u4e3a\u521d\u59cb\u5316\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "current_state.get_global_state",
        "global_state.strip",
        "current_state.get_state_history_count"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_is_initialization"
    },
    {
      "type": "function",
      "name": "set_significance_threshold",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 2997,
      "complexity": 1,
      "docstring": "\u8bbe\u7f6e\u663e\u8457\u6027\u9608\u503c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "threshold"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "max",
        "min"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:set_significance_threshold"
    },
    {
      "type": "function",
      "name": "set_time_threshold",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 3001,
      "complexity": 1,
      "docstring": "\u8bbe\u7f6e\u65f6\u95f4\u9608\u503c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "seconds"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "max"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:set_time_threshold"
    },
    {
      "type": "function",
      "name": "get_configuration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 3005,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u914d\u7f6e\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:get_configuration"
    },
    {
      "type": "function",
      "name": "update_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 3223,
      "complexity": 1,
      "docstring": "\u4f7f\u7528DeepSeek\u548c\u52a8\u6001\u6a21\u677f\u751f\u6210\u65b0\u7684\u72b6\u6001\u63cf\u8ff0\uff0c\u96c6\u6210\u7f13\u5b58\u548c\u6761\u4ef6\u903b\u8f91\n\nArgs:\n    current_state: \u5f53\u524d\u5de5\u4f5c\u6d41\u72b6\u6001\n    context: \u4e0a\u4e0b\u6587\u4fe1\u606f\n    \nReturns:\n    \u65b0\u7684\u72b6\u6001\u63cf\u8ff0\u5b57\u7b26\u4e32\uff0c\u5931\u8d25\u65f6\u8fd4\u56deNone",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_state",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._detect_scenario",
        "self._logger.debug",
        "range",
        "self._logger.error",
        "self._execute_fallback_strategies",
        "self._logger.error",
        "self.should_update",
        "self.condition_checker.should_make_ai_call",
        "self.context_hasher.hash_context",
        "self.cache.get",
        "self._logger.info",
        "self._logger.debug",
        "self._logger.debug",
        "self._logger.info",
        "self._prepare_template_variables",
        "self.template_manager.render_template",
        "self._logger.debug",
        "self.llm.invoke",
        "SystemMessage",
        "HumanMessage",
        "response.content.strip",
        "self.response_parser.parse_response",
        "self._store_parsed_info",
        "self._validate_generated_state",
        "self._logger.warning",
        "self._logger.error",
        "self._logger.info",
        "self._logger.warning",
        "time.sleep",
        "AICallCacheEntry",
        "self.cache.put",
        "self._logger.debug",
        "parsed_info.quality_metrics.get",
        "dt.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:update_state"
    },
    {
      "type": "function",
      "name": "should_update",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 3179,
      "complexity": 1,
      "docstring": "\u5224\u65ad\u662f\u5426\u5e94\u8be5\u66f4\u65b0\u72b6\u6001\n\n\u7b80\u5355\u7b56\u7565\uff1a\n1. \u5982\u679c\u6b65\u9aa4\u6267\u884c\u5b8c\u6210\uff08\u6210\u529f\u6216\u5931\u8d25\uff09\u5219\u66f4\u65b0\n2. \u5982\u679c\u72b6\u6001\u4e3a\u7a7a\u5219\u66f4\u65b0\n3. \u5982\u679c\u4e0a\u4e0b\u6587\u5305\u542b\u91cd\u8981\u53d8\u5316\u5219\u66f4\u65b0",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_state",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "current_state.get_global_state",
        "context.get",
        "context.get",
        "self._logger.debug",
        "current_state.is_state_update_enabled",
        "self._logger.debug",
        "current_global_state.strip",
        "self._logger.debug",
        "self._logger.debug",
        "context.get",
        "self._logger.debug",
        "self._logger.debug",
        "self._logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:should_update"
    },
    {
      "type": "function",
      "name": "_validate_llm_connection",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 3166,
      "complexity": 1,
      "docstring": "\u9a8c\u8bc1LLM\u8fde\u63a5\u662f\u5426\u6b63\u5e38",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.llm.invoke",
        "SystemMessage",
        "HumanMessage",
        "self._logger.info",
        "ValueError",
        "self._logger.error",
        "RuntimeError"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_validate_llm_connection"
    },
    {
      "type": "function",
      "name": "_get_system_message",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 3329,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u72b6\u6001\u66f4\u65b0\u7684\u7cfb\u7edf\u63d0\u793a\u6d88\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_get_system_message"
    },
    {
      "type": "function",
      "name": "_build_state_update_prompt",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 3348,
      "complexity": 1,
      "docstring": "\u6784\u5efa\u72b6\u6001\u66f4\u65b0\u63d0\u793a",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_state",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "current_state.get_global_state",
        "current_state.get_state_history",
        "context.get",
        "context.get",
        "context.get",
        "context.get",
        "prompt_parts.extend",
        "prompt_parts.extend",
        "'\\n'.join",
        "enumerate",
        "prompt_parts.append",
        "prompt_parts.extend",
        "execution_result.get",
        "prompt_parts.extend",
        "reversed",
        "prompt_parts.append",
        "prompt_parts.append",
        "str",
        "step_info.get",
        "step_info.get",
        "entry.timestamp.strftime",
        "execution_result.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_build_state_update_prompt"
    },
    {
      "type": "function",
      "name": "_detect_scenario",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 3411,
      "complexity": 1,
      "docstring": "\u68c0\u6d4b\u5f53\u524d\u573a\u666f\u7c7b\u578b\n\nArgs:\n    current_state: \u5f53\u524d\u5de5\u4f5c\u6d41\u72b6\u6001\n    context: \u4e0a\u4e0b\u6587\u4fe1\u606f\n\nReturns:\n    \u68c0\u6d4b\u5230\u7684\u573a\u666f\u7c7b\u578b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_state",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "current_state.get_global_state",
        "context.get('step_status', '').lower",
        "context.get",
        "context.get",
        "context.get",
        "isinstance",
        "current_state.get_state_history_count",
        "isinstance",
        "context.get",
        "context.get",
        "current_global_state.strip",
        "current_state.get_state_history_count",
        "execution_result.get",
        "step_info.get",
        "step_info.get",
        "execution_result.lower"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_detect_scenario"
    },
    {
      "type": "function",
      "name": "_prepare_template_variables",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 3462,
      "complexity": 1,
      "docstring": "\u51c6\u5907\u6a21\u677f\u53d8\u91cf\n\nArgs:\n    current_state: \u5f53\u524d\u5de5\u4f5c\u6d41\u72b6\u6001\n    context: \u4e0a\u4e0b\u6587\u4fe1\u606f\n    \nReturns:\n    \u6a21\u677f\u53d8\u91cf\u5b57\u5178",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_state",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "current_state.get_global_state",
        "current_state.get_state_history",
        "context.get",
        "context.get",
        "context.get",
        "context.get",
        "enumerate",
        "'\\n'.join",
        "isinstance",
        "step_info.get",
        "step_info.get",
        "context.get",
        "str",
        "reversed",
        "entry.timestamp.strftime",
        "history_items.append",
        "execution_result.get",
        "execution_result.get",
        "isinstance",
        "str",
        "str",
        "execution_result.get",
        "str",
        "current_state.get_state_history_count",
        "execution_result.lower",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_prepare_template_variables"
    },
    {
      "type": "function",
      "name": "_validate_generated_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 3542,
      "complexity": 1,
      "docstring": "\u9a8c\u8bc1\u751f\u6210\u7684\u72b6\u6001\u63cf\u8ff0\u662f\u5426\u6709\u6548\uff08\u4f7f\u7528\u667a\u80fd\u89e3\u6790\u5668\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "state",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._logger.warning",
        "self.response_parser.parse_response",
        "self.response_parser.validate_parsed_info",
        "self._logger.debug",
        "isinstance",
        "self._logger.warning",
        "self.response_parser.suggest_improvements",
        "self._logger.error",
        "self._logger.info",
        "parsed_info.quality_metrics.get",
        "'; '.join",
        "'; '.join"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_validate_generated_state"
    },
    {
      "type": "function",
      "name": "get_last_parsed_info",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 3576,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6700\u540e\u4e00\u6b21\u89e3\u6790\u7684\u72b6\u6001\u4fe1\u606f\uff08\u7528\u4e8e\u8c03\u8bd5\u548c\u76d1\u63a7\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "getattr"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:get_last_parsed_info"
    },
    {
      "type": "function",
      "name": "_store_parsed_info",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 3582,
      "complexity": 1,
      "docstring": "\u5b58\u50a8\u89e3\u6790\u4fe1\u606f\u4f9b\u540e\u7eed\u67e5\u8be2",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "parsed_info"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_store_parsed_info"
    },
    {
      "type": "function",
      "name": "_execute_fallback_strategies",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 3587,
      "complexity": 1,
      "docstring": "\u6267\u884c\u591a\u5c42\u56de\u9000\u7b56\u7565\n\nArgs:\n    current_state: \u5f53\u524d\u5de5\u4f5c\u6d41\u72b6\u6001\n    context: \u4e0a\u4e0b\u6587\u4fe1\u606f\n    \nReturns:\n    \u751f\u6210\u7684\u56de\u9000\u72b6\u6001\u63cf\u8ff0\uff0c\u5931\u8d25\u65f6\u8fd4\u56deNone",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_state",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._logger.info",
        "enumerate",
        "self._logger.error",
        "self._logger.debug",
        "len",
        "self._retry_with_simplified_prompt",
        "self._logger.info",
        "self._logger.warning",
        "self._logger.error",
        "self.fallback_generator.generate_fallback_state",
        "self.fallback_generator.generate_fallback_state",
        "self.fallback_generator.generate_fallback_state",
        "self.fallback_generator.generate_fallback_state",
        "self._logger.warning",
        "self._send_failure_notification"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_execute_fallback_strategies"
    },
    {
      "type": "function",
      "name": "_retry_with_simplified_prompt",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 3646,
      "complexity": 1,
      "docstring": "\u4f7f\u7528\u7b80\u5316\u63d0\u793a\u91cd\u8bd5LLM\u8c03\u7528\n\nArgs:\n    current_state: \u5f53\u524d\u5de5\u4f5c\u6d41\u72b6\u6001\n    context: \u4e0a\u4e0b\u6587\u4fe1\u606f\n    \nReturns:\n    \u751f\u6210\u7684\u72b6\u6001\u63cf\u8ff0\uff0c\u5931\u8d25\u65f6\u8fd4\u56deNone",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_state",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._logger.debug",
        "context.get",
        "step_info.get",
        "context.get",
        "context.get",
        "self.llm.invoke",
        "self._logger.warning",
        "SystemMessage",
        "HumanMessage",
        "response.content.strip",
        "self._logger.error",
        "len",
        "self._logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_retry_with_simplified_prompt"
    },
    {
      "type": "function",
      "name": "_send_failure_notification",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 3694,
      "complexity": 1,
      "docstring": "\u53d1\u9001\u5931\u8d25\u901a\u77e5\n\nArgs:\n    context: \u4e0a\u4e0b\u6587\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._logger.warning",
        "context.get",
        "self._logger.error",
        "dt.now().isoformat",
        "step_info.get",
        "context.get",
        "self._logger.error",
        "dt.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_send_failure_notification"
    },
    {
      "type": "function",
      "name": "get_fallback_statistics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 3741,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u56de\u9000\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "getattr"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:get_fallback_statistics"
    },
    {
      "type": "function",
      "name": "reset_fallback_statistics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 3750,
      "complexity": 1,
      "docstring": "\u91cd\u7f6e\u56de\u9000\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:reset_fallback_statistics"
    },
    {
      "type": "function",
      "name": "_update_fallback_statistics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 3759,
      "complexity": 1,
      "docstring": "\u66f4\u65b0\u56de\u9000\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "strategy",
        "success"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "sum",
        "sum",
        "hasattr",
        "self.reset_fallback_statistics",
        "datetime.now().isoformat",
        "self._fallback_stats['strategies_used'].values",
        "self._fallback_stats['strategies_used'].values",
        "datetime.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_update_fallback_statistics"
    },
    {
      "type": "function",
      "name": "get_cache_statistics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 3785,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u7f13\u5b58\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.cache.get_stats"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:get_cache_statistics"
    },
    {
      "type": "function",
      "name": "clear_cache",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 3795,
      "complexity": 1,
      "docstring": "\u6e05\u7a7a\u7f13\u5b58",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.cache.clear",
        "self._logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:clear_cache"
    },
    {
      "type": "function",
      "name": "reset_cache_statistics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 3804,
      "complexity": 1,
      "docstring": "\u91cd\u7f6e\u7f13\u5b58\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.cache.reset_stats",
        "self._logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:reset_cache_statistics"
    },
    {
      "type": "function",
      "name": "get_condition_checker_config",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 3813,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6761\u4ef6\u68c0\u67e5\u5668\u914d\u7f6e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.condition_checker.get_configuration"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:get_condition_checker_config"
    },
    {
      "type": "function",
      "name": "update_condition_checker_config",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 3823,
      "complexity": 1,
      "docstring": "\u66f4\u65b0\u6761\u4ef6\u68c0\u67e5\u5668\u914d\u7f6e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "significance_threshold",
        "time_threshold_seconds"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.condition_checker.set_significance_threshold",
        "self._logger.info",
        "self.condition_checker.set_time_threshold",
        "self._logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:update_condition_checker_config"
    },
    {
      "type": "function",
      "name": "get_performance_statistics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 3840,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u7efc\u5408\u6027\u80fd\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_cache_statistics",
        "self.get_condition_checker_config",
        "self.get_fallback_statistics",
        "getattr",
        "len",
        "len",
        "getattr",
        "self.template_manager.list_templates"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:get_performance_statistics"
    },
    {
      "type": "function",
      "name": "should_break_loop",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 3924,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u662f\u5426\u5e94\u8be5\u9000\u51fa\u5faa\u73af\uff08\u9632\u6b62\u65e0\u9650\u5faa\u73af\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "target_step_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.loop_counters.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:should_break_loop"
    },
    {
      "type": "function",
      "name": "increment_loop_counter",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 3929,
      "complexity": 1,
      "docstring": "\u589e\u52a0\u5faa\u73af\u8ba1\u6570\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "target_step_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.loop_counters.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:increment_loop_counter"
    },
    {
      "type": "function",
      "name": "reset_step_status_from",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 3934,
      "complexity": 1,
      "docstring": "\u91cd\u7f6e\u4ece\u6307\u5b9a\u7d22\u5f15\u5f00\u59cb\u7684\u6b65\u9aa4\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "start_index",
        "plan"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "range",
        "len",
        "plan[i].get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:reset_step_status_from"
    },
    {
      "type": "function",
      "name": "get_global_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 3942,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u5f53\u524d\u5168\u5c40\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:get_global_state"
    },
    {
      "type": "function",
      "name": "set_global_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 3947,
      "complexity": 1,
      "docstring": "\u8bbe\u7f6e\u5168\u5c40\u72b6\u6001\uff08\u53d7\u66f4\u65b0\u5f00\u5173\u63a7\u5236\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "new_state",
        "source"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "new_state.strip",
        "self._logger.debug",
        "isinstance",
        "TypeError",
        "self._logger.info",
        "self._logger.debug",
        "StateHistoryEntry",
        "self._state_history.append",
        "self._logger.debug",
        "dt.now",
        "copy.deepcopy",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:set_global_state"
    },
    {
      "type": "function",
      "name": "is_state_update_enabled",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 3977,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u72b6\u6001\u66f4\u65b0\u662f\u5426\u542f\u7528",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:is_state_update_enabled"
    },
    {
      "type": "function",
      "name": "enable_state_updates",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 3981,
      "complexity": 1,
      "docstring": "\u542f\u7528\u72b6\u6001\u66f4\u65b0",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:enable_state_updates"
    },
    {
      "type": "function",
      "name": "disable_state_updates",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 3987,
      "complexity": 1,
      "docstring": "\u7981\u7528\u72b6\u6001\u66f4\u65b0",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:disable_state_updates"
    },
    {
      "type": "function",
      "name": "clear_global_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 3993,
      "complexity": 1,
      "docstring": "\u6e05\u7a7a\u5168\u5c40\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._logger.info",
        "self._logger.debug"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:clear_global_state"
    },
    {
      "type": "function",
      "name": "get_state_history",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 4004,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u72b6\u6001\u5386\u53f2\u8bb0\u5f55",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "limit"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "list"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:get_state_history"
    },
    {
      "type": "function",
      "name": "get_state_history_count",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 4012,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u72b6\u6001\u5386\u53f2\u8bb0\u5f55\u6570\u91cf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:get_state_history_count"
    },
    {
      "type": "function",
      "name": "clear_state_history",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 4017,
      "complexity": 1,
      "docstring": "\u6e05\u7a7a\u72b6\u6001\u5386\u53f2",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "self._state_history.clear",
        "self._logger.info",
        "self._logger.debug"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:clear_state_history"
    },
    {
      "type": "function",
      "name": "get_state_summary",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 4027,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u72b6\u6001\u6458\u8981\uff0c\u5305\u542b\u5f53\u524d\u72b6\u6001\u548c\u5386\u53f2\u6982\u89c8",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "latest_history.timestamp.strftime"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:get_state_summary"
    },
    {
      "type": "function",
      "name": "set_max_history_size",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 4042,
      "complexity": 1,
      "docstring": "\u8bbe\u7f6e\u6700\u5927\u5386\u53f2\u8bb0\u5f55\u6570\u91cf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "max_size"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "ValueError",
        "len",
        "len",
        "deque",
        "self._logger.info",
        "self._logger.info",
        "list",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:set_max_history_size"
    },
    {
      "type": "function",
      "name": "__init_ai_updater",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 4063,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316AI\u72b6\u6001\u66f4\u65b0\u5668\uff08\u61d2\u52a0\u8f7d\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "hasattr",
        "AIStateUpdaterService",
        "self._logger.info",
        "hasattr",
        "hasattr",
        "self._logger.info",
        "self._logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:__init_ai_updater"
    },
    {
      "type": "function",
      "name": "update_state_with_ai",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 4083,
      "complexity": 1,
      "docstring": "\u4f7f\u7528AI\u66f4\u65b0\u72b6\u6001\n\nArgs:\n    context: \u5305\u542b\u6b65\u9aa4\u4fe1\u606f\u3001\u6267\u884c\u7ed3\u679c\u7b49\u7684\u4e0a\u4e0b\u6587\u5b57\u5178\n            \u652f\u6301\u7684\u5b57\u6bb5\uff1a\n            - step_info: \u6b65\u9aa4\u4fe1\u606f\u5b57\u5178\n            - execution_result: \u6267\u884c\u7ed3\u679c\n            - step_status: \u6b65\u9aa4\u72b6\u6001 ('completed', 'failed', etc.)\n            - error_info: \u9519\u8bef\u4fe1\u606f\n\nReturns:\n    \u662f\u5426\u6210\u529f\u66f4\u65b0\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.__init_ai_updater",
        "self._ai_updater.update_state",
        "self._logger.warning",
        "self.set_global_state",
        "self._logger.info",
        "self._logger.debug",
        "self._logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:update_state_with_ai"
    },
    {
      "type": "function",
      "name": "set_ai_updater",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 4122,
      "complexity": 1,
      "docstring": "\u8bbe\u7f6e\u81ea\u5b9a\u4e49AI\u72b6\u6001\u66f4\u65b0\u5668\n\nArgs:\n    updater: \u5b9e\u73b0AIStateUpdater\u63a5\u53e3\u7684\u66f4\u65b0\u5668\u5b9e\u4f8b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "updater"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._logger.info",
        "isinstance",
        "TypeError",
        "type"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:set_ai_updater"
    },
    {
      "type": "function",
      "name": "get_ai_updater_status",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 4136,
      "complexity": 1,
      "docstring": "\u83b7\u53d6AI\u72b6\u6001\u66f4\u65b0\u5668\u72b6\u6001\u4fe1\u606f\n\nReturns:\n    \u5305\u542b\u72b6\u6001\u4fe1\u606f\u7684\u5b57\u5178",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.__init_ai_updater",
        "getattr",
        "self.is_state_update_enabled",
        "type",
        "hasattr",
        "getattr",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:get_ai_updater_status"
    },
    {
      "type": "function",
      "name": "__getstate__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 4168,
      "complexity": 1,
      "docstring": "\u81ea\u5b9a\u4e49\u5e8f\u5217\u5316\u72b6\u6001\uff0c\u6392\u9664\u4e0d\u53ef\u5e8f\u5217\u5316\u7684\u5bf9\u8c61",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.__dict__.copy",
        "state.pop"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:__getstate__"
    },
    {
      "type": "function",
      "name": "__setstate__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 4175,
      "complexity": 1,
      "docstring": "\u81ea\u5b9a\u4e49\u53cd\u5e8f\u5217\u5316\u72b6\u6001\uff0c\u91cd\u65b0\u521b\u5efa\u7ebf\u7a0b\u9501",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.__dict__.update",
        "threading.RLock"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:__setstate__"
    },
    {
      "type": "function",
      "name": "get_memory_usage",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 4181,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u5185\u5b58\u4f7f\u7528\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "sys.getsizeof",
        "sys.getsizeof",
        "pickle.dumps",
        "len",
        "len",
        "sum",
        "logger.error",
        "str",
        "sys.getsizeof",
        "len",
        "sys.getsizeof"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:get_memory_usage"
    },
    {
      "type": "function",
      "name": "compress_history",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 4220,
      "complexity": 1,
      "docstring": "\u538b\u7f29\u5386\u53f2\u8bb0\u5f55\u4ee5\u8282\u7701\u5185\u5b58",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "compression_level"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "deque",
        "logger.info",
        "logger.error",
        "isinstance",
        "entry.state_snapshot.encode",
        "gzip.compress",
        "compressed_history.append",
        "entry.state_snapshot.startswith",
        "len",
        "StateHistoryEntry",
        "compressed_history.append",
        "compressed_history.append",
        "len",
        "len",
        "compressed_data.hex"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:compress_history"
    },
    {
      "type": "function",
      "name": "decompress_history_entry",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 4266,
      "complexity": 1,
      "docstring": "\u89e3\u538b\u7f29\u5355\u4e2a\u5386\u53f2\u8bb0\u5f55\u6761\u76ee",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "state_snapshot"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "state_snapshot.startswith",
        "bytes.fromhex",
        "gzip.decompress",
        "decompressed_data.decode",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:decompress_history_entry"
    },
    {
      "type": "function",
      "name": "get_decompressed_history",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 4286,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u89e3\u538b\u7f29\u540e\u7684\u5386\u53f2\u8bb0\u5f55",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "limit"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "list",
        "self.decompress_history_entry",
        "StateHistoryEntry",
        "decompressed_history.append",
        "list"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:get_decompressed_history"
    },
    {
      "type": "function",
      "name": "optimize_memory",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 4304,
      "complexity": 1,
      "docstring": "\u6267\u884c\u5185\u5b58\u4f18\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "enable_compression",
        "compression_level"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_memory_usage",
        "self.get_memory_usage",
        "optimization_results['initial_usage'].get",
        "optimization_results['final_usage'].get",
        "self.compress_history",
        "len",
        "deque",
        "optimization_results['optimizations_applied'].append",
        "logger.info",
        "logger.info",
        "logger.error",
        "str",
        "optimization_results['optimizations_applied'].append",
        "logger.info",
        "len",
        "entry.state_snapshot.strip"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:optimize_memory"
    },
    {
      "type": "function",
      "name": "_init_response_parser",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 4597,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u591a\u65b9\u6848\u54cd\u5e94\u89e3\u6790\u5668\n\nArgs:\n    parser_method: \u89e3\u6790\u5668\u65b9\u6cd5 (\"rule\", \"transformer\", \"deepseek\", \"embedding\", \"hybrid\")\n    parser_config: \u89e3\u6790\u5668\u914d\u7f6e\u53c2\u6570\n    enable_response_analysis: \u662f\u5426\u542f\u7528\u54cd\u5e94\u5206\u6790\n    enable_execution_monitoring: \u662f\u5426\u542f\u7528\u6267\u884c\u76d1\u63a7",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "parser_method",
        "parser_config",
        "enable_response_analysis",
        "enable_execution_monitoring"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.warning",
        "isinstance",
        "parser_config.get",
        "parser_config.get",
        "logger.info",
        "ParserFactory.create_rule_parser",
        "logger.error",
        "ParserMethod",
        "parser_config.get",
        "ParserFactory.create_transformer_parser",
        "parser_config.items",
        "parser_config.get",
        "parser_config.get",
        "os.getenv",
        "parser_config.get",
        "ParserFactory.create_deepseek_parser",
        "logger.warning",
        "ParserFactory.create_rule_parser",
        "parser_config.get",
        "ParserFactory.create_embedding_parser",
        "parser_config.get",
        "parser_config.get",
        "ParserFactory.create_hybrid_parser",
        "parser_config.items",
        "parser_config.items",
        "parser_config.items"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_init_response_parser"
    },
    {
      "type": "function",
      "name": "register_agent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 4678,
      "complexity": 1,
      "docstring": "\u6ce8\u518c\u4e00\u4e2a\u65b0\u7684 Agent\u3002",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "name",
        "instance"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "getattr",
        "RegisteredAgent",
        "self.registered_agents.append",
        "self.device.set_variable",
        "logger.debug"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:register_agent"
    },
    {
      "type": "function",
      "name": "plan_execution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 4689,
      "complexity": 1,
      "docstring": "\u6839\u636e\u4e3b\u6307\u4ee4\u89c4\u5212\u6267\u884c\u6b65\u9aa4\uff0c\u652f\u6301\u81ea\u5b9a\u4e49\u63d0\u793a\u8bcd\u6a21\u677f\u3002",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "main_instruction"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "'\\n'.join",
        "hasattr",
        "self.planning_prompt_template.format",
        "enumerate",
        "self.device.set_variable",
        "logger.debug",
        "print",
        "self.chat_sync",
        "isinstance",
        "logger.warning",
        "self.device.get_variable",
        "self.device.get_variable",
        "self.device.get_variable",
        "', '.join",
        "logger.warning",
        "self.chat_sync",
        "isinstance",
        "json.loads",
        "logger.warning",
        "self.chat_sync",
        "extract_code",
        "logger.debug",
        "plan_data.get",
        "logger.debug",
        "logger.warning",
        "isinstance",
        "isinstance",
        "logger.warning",
        "json.loads",
        "json.loads",
        "json.loads",
        "self.chat_sync",
        "step.get",
        "json.dumps",
        "json.dumps",
        "hasattr",
        "hasattr",
        "isinstance",
        "plan_result.startswith",
        "json.loads",
        "isinstance",
        "logger.error",
        "error_obj.get",
        "len",
        "len",
        "self.thinker.memory.pop",
        "plan_result[len('```json'):].strip",
        "plan_result.endswith",
        "plan_data.get",
        "re.findall",
        "', '.join",
        "locals().get",
        "re.search",
        "json.loads",
        "isinstance",
        "locals",
        "json.loads",
        "len",
        "len",
        "array_match.group",
        "isinstance"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:plan_execution"
    },
    {
      "type": "function",
      "name": "select_next_executable_step",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 4959,
      "complexity": 1,
      "docstring": "\u7b80\u5316\u7684\u6b65\u9aa4\u9009\u62e9 - \u7edf\u4e00\u51b3\u7b56\u673a\u5236\u65b9\u68482",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "plan"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "enumerate",
        "step.get",
        "pending_steps.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:select_next_executable_step"
    },
    {
      "type": "function",
      "name": "_add_new_tasks",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 4977,
      "complexity": 1,
      "docstring": "\u6dfb\u52a0\u65b0\u4efb\u52a1\u5230\u8ba1\u5212\u4e2d",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "new_tasks"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_plan",
        "self.device.set_variable",
        "logger.debug",
        "new_task.get",
        "plan.append",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_add_new_tasks"
    },
    {
      "type": "function",
      "name": "get_plan",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 4998,
      "complexity": 1,
      "docstring": "\u4ece StatefulExecutor \u83b7\u53d6\u5f53\u524d\u8ba1\u5212\u3002",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.device.get_variable"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:get_plan"
    },
    {
      "type": "function",
      "name": "update_step_status",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 5002,
      "complexity": 1,
      "docstring": "\u66f4\u65b0 current_plan \u4e2d\u67d0\u4e00\u6b65\u9aa4\u7684\u72b6\u6001\u548c\u7ed3\u679c\u3002",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step_idx",
        "status",
        "result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.device.execute_code",
        "self.device.set_variable",
        "self.device.execute_code",
        "dt.now().isoformat",
        "bool",
        "getattr",
        "getattr",
        "getattr",
        "getattr",
        "dt.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:update_step_status"
    },
    {
      "type": "function",
      "name": "find_step_index_by_id",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 5032,
      "complexity": 1,
      "docstring": "\u6839\u636e\u6b65\u9aa4ID\u67e5\u627e\u7d22\u5f15",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_plan",
        "enumerate",
        "step.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:find_step_index_by_id"
    },
    {
      "type": "function",
      "name": "jump_to_step",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 5040,
      "complexity": 1,
      "docstring": "\u8df3\u8f6c\u5230\u6307\u5b9a\u6b65\u9aa4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "target_step_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.find_step_index_by_id",
        "self.get_plan",
        "range",
        "self.device.set_variable",
        "logger.debug",
        "logger.warning",
        "logger.debug",
        "len",
        "plan[i].get",
        "plan[i].get",
        "plan[i].get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:jump_to_step"
    },
    {
      "type": "function",
      "name": "loop_back_to_step",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 5063,
      "complexity": 1,
      "docstring": "\u5faa\u73af\u56de\u5230\u6307\u5b9a\u6b65\u9aa4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "target_step_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.workflow_state.should_break_loop",
        "self.find_step_index_by_id",
        "logger.warning",
        "self.get_plan",
        "self.workflow_state.reset_step_status_from",
        "self.device.set_variable",
        "self.workflow_state.increment_loop_counter",
        "logger.debug",
        "logger.warning",
        "self.workflow_state.loop_counters.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:loop_back_to_step"
    },
    {
      "type": "function",
      "name": "handle_generate_fix_task_and_loop",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 5089,
      "complexity": 1,
      "docstring": "\u5904\u7406\u751f\u6210\u4fee\u590d\u4efb\u52a1\u5e76\u5faa\u73af\u7684\u590d\u5408\u51b3\u7b56",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decision"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "decision.get",
        "self.workflow_state.should_break_loop",
        "decision.get",
        "self.get_plan",
        "plan.insert",
        "self.device.set_variable",
        "logger.debug",
        "print",
        "print",
        "logger.warning",
        "decision.get",
        "decision.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:handle_generate_fix_task_and_loop"
    },
    {
      "type": "function",
      "name": "execute_single_step",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 5131,
      "complexity": 1,
      "docstring": "\u6267\u884c\u8ba1\u5212\u4e2d\u7684\u5355\u4e2a\u6b65\u9aa4\u3002\n\nArgs:\n    step: \u6b65\u9aa4\u5b9a\u4e49\n    task_history: \u4efb\u52a1\u5386\u53f2\u8bb0\u5f55\n    global_state: \u5168\u5c40\u5de5\u4f5c\u6d41\u72b6\u6001\uff08\u53ef\u9009\uff09\n    \nReturns:\n    \u6267\u884c\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step",
        "task_history",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "step.get",
        "step.get",
        "step.get",
        "Result",
        "self._generate_state_aware_instruction",
        "self._analyze_step_response",
        "Result",
        "target_agent.chat_stream",
        "target_agent.execute_stream",
        "isinstance",
        "Result",
        "isinstance",
        "Result",
        "self._analyze_step_response",
        "task.get",
        "getattr",
        "task.get('task', {}).get",
        "getattr",
        "previous_results.append",
        "print",
        "str",
        "str",
        "task.get",
        "task.get",
        "hasattr",
        "isinstance",
        "getattr",
        "getattr",
        "Result",
        "task.get",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:execute_single_step"
    },
    {
      "type": "function",
      "name": "execute_multi_step",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 5216,
      "complexity": 1,
      "docstring": "\u4e3b\u5165\u53e3\uff1a\u89c4\u5212\u5e76\u6267\u884c\u591a\u6b65\u9aa4\u4efb\u52a1 - \u91cd\u6784\u540e\u7684\u7b80\u5316\u7248\u672c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "main_instruction",
        "interactive"
      ],
      "decorators": [
        "reduce_memory_decorator_compress"
      ],
      "inheritance": [],
      "calls": [
        "self._initialize_execution_context",
        "self._should_continue_execution",
        "self._generate_execution_summary",
        "self._execute_workflow_iteration",
        "logger.error",
        "self._handle_workflow_error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:execute_multi_step"
    },
    {
      "type": "function",
      "name": "_initialize_execution_context",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 5237,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u6267\u884c\u4e0a\u4e0b\u6587",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "main_instruction"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "WorkflowState",
        "self.device.set_variable",
        "self.plan_execution"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_initialize_execution_context"
    },
    {
      "type": "function",
      "name": "_should_continue_execution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 5260,
      "complexity": 1,
      "docstring": "\u5224\u65ad\u662f\u5426\u5e94\u8be5\u7ee7\u7eed\u6267\u884c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_should_continue_execution"
    },
    {
      "type": "function",
      "name": "_execute_workflow_iteration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 5265,
      "complexity": 1,
      "docstring": "\u6267\u884c\u4e00\u4e2a\u5de5\u4f5c\u6d41\u8fed\u4ee3\n\nReturns:\n    bool: \u662f\u5426\u5e94\u8be5\u8df3\u51fa\u4e3b\u5faa\u73af",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context",
        "interactive"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_plan",
        "self.select_next_executable_step",
        "self._execute_single_workflow_step",
        "self._handle_no_executable_steps",
        "self._check_user_interrupt"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_execute_workflow_iteration"
    },
    {
      "type": "function",
      "name": "_handle_no_executable_steps",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 5297,
      "complexity": 1,
      "docstring": "\u5904\u7406\u6ca1\u6709\u53ef\u6267\u884c\u6b65\u9aa4\u7684\u60c5\u51b5\n\nReturns:\n    bool: \u662f\u5426\u5e94\u8be5\u8df3\u51fa\u4e3b\u5faa\u73af",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.make_decision",
        "print",
        "print",
        "self._process_no_steps_decision",
        "context['task_history'][-1].get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_handle_no_executable_steps"
    },
    {
      "type": "function",
      "name": "_process_no_steps_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 5322,
      "complexity": 1,
      "docstring": "\u5904\u7406\u6ca1\u6709\u53ef\u6267\u884c\u6b65\u9aa4\u65f6\u7684\u51b3\u7b56\u7ed3\u679c\n\nReturns:\n    bool: \u662f\u5426\u5e94\u8be5\u8df3\u51fa\u4e3b\u5faa\u73af",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decision",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._clear_failure_records",
        "decision.get",
        "self._add_new_tasks",
        "self.get_plan",
        "decision.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_process_no_steps_decision"
    },
    {
      "type": "function",
      "name": "_execute_single_workflow_step",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 5346,
      "complexity": 1,
      "docstring": "\u6267\u884c\u5355\u4e2a\u5de5\u4f5c\u6d41\u6b65\u9aa4\n\nReturns:\n    bool: \u662f\u5426\u5e94\u8be5\u8df3\u51fa\u4e3b\u5faa\u73af",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_idx",
        "current_step",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "self.update_step_status",
        "self.execute_single_step",
        "context['task_history'].append",
        "self._trigger_ai_state_update",
        "self._handle_step_success",
        "self._handle_step_failure",
        "dt.now().isoformat",
        "len",
        "current_step.get",
        "dt.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_execute_single_workflow_step"
    },
    {
      "type": "function",
      "name": "_handle_step_success",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 5381,
      "complexity": 1,
      "docstring": "\u5904\u7406\u6b65\u9aa4\u6267\u884c\u6210\u529f\u7684\u60c5\u51b5\n\nReturns:\n    bool: \u662f\u5426\u5e94\u8be5\u8df3\u51fa\u4e3b\u5faa\u73af",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_idx",
        "exec_result",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.update_step_status",
        "self.make_decision",
        "print",
        "print",
        "self._process_success_decision"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_handle_step_success"
    },
    {
      "type": "function",
      "name": "_handle_step_failure",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 5404,
      "complexity": 1,
      "docstring": "\u5904\u7406\u6b65\u9aa4\u6267\u884c\u5931\u8d25\u7684\u60c5\u51b5\n\nReturns:\n    bool: \u662f\u5426\u5e94\u8be5\u8df3\u51fa\u4e3b\u5faa\u73af",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_idx",
        "current_step",
        "exec_result",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.update_step_status",
        "self.make_decision",
        "print",
        "print",
        "self._process_failure_decision",
        "current_step.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_handle_step_failure"
    },
    {
      "type": "function",
      "name": "_process_success_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 5429,
      "complexity": 1,
      "docstring": "\u5904\u7406\u6210\u529f\u540e\u7684\u51b3\u7b56\n\nReturns:\n    bool: \u662f\u5426\u5e94\u8be5\u8df3\u51fa\u4e3b\u5faa\u73af",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decision",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._clear_failure_records",
        "self._handle_generate_new_task_decision",
        "self._handle_navigation_decision",
        "self._handle_fix_task_decision",
        "self._handle_skip_step_decision"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_process_success_decision"
    },
    {
      "type": "function",
      "name": "_process_failure_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 5462,
      "complexity": 1,
      "docstring": "\u5904\u7406\u5931\u8d25\u540e\u7684\u51b3\u7b56\n\nReturns:\n    bool: \u662f\u5426\u5e94\u8be5\u8df3\u51fa\u4e3b\u5faa\u73af",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decision",
        "context",
        "current_idx"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.update_step_status",
        "self._handle_generate_new_task_decision",
        "self._handle_skip_step_decision",
        "self._handle_retry_logic"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_process_failure_decision"
    },
    {
      "type": "function",
      "name": "_handle_generate_new_task_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 5491,
      "complexity": 1,
      "docstring": "\u5904\u7406\u751f\u6210\u65b0\u4efb\u52a1\u7684\u51b3\u7b56",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decision",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "decision.get",
        "self._add_new_tasks",
        "self.get_plan"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_handle_generate_new_task_decision"
    },
    {
      "type": "function",
      "name": "_handle_navigation_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 5501,
      "complexity": 1,
      "docstring": "\u5904\u7406\u8df3\u8f6c\u548c\u5faa\u73af\u51b3\u7b56",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decision",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "decision.get",
        "logger.warning",
        "self.jump_to_step",
        "self.loop_back_to_step"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_handle_navigation_decision"
    },
    {
      "type": "function",
      "name": "_handle_fix_task_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 5523,
      "complexity": 1,
      "docstring": "\u5904\u7406\u4fee\u590d\u4efb\u52a1\u51b3\u7b56",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decision",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.handle_generate_fix_task_and_loop",
        "self._execute_fix_task"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_handle_fix_task_decision"
    },
    {
      "type": "function",
      "name": "_handle_skip_step_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 5533,
      "complexity": 1,
      "docstring": "\u5904\u7406\u8df3\u8fc7\u6b65\u9aa4\u7684\u51b3\u7b56",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decision",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "decision.get",
        "self.find_step_index_by_id",
        "logger.warning",
        "self.get_plan",
        "logger.warning",
        "len",
        "self.device.set_variable",
        "logger.debug",
        "print",
        "logger.warning",
        "decision.get",
        "plan[target_index].get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_handle_skip_step_decision"
    },
    {
      "type": "function",
      "name": "_execute_fix_task",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 5564,
      "complexity": 1,
      "docstring": "\u6267\u884c\u4fee\u590d\u4efb\u52a1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decision",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_plan",
        "decision.get",
        "len",
        "print",
        "self.update_step_status",
        "self.execute_single_step",
        "context['task_history'].append",
        "self.loop_back_to_step",
        "context.get",
        "self.update_step_status",
        "print",
        "self.update_step_status",
        "print",
        "dt.now().isoformat",
        "fix_task.get",
        "dt.now",
        "fix_task.get",
        "fix_task.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_execute_fix_task"
    },
    {
      "type": "function",
      "name": "_handle_retry_logic",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 5601,
      "complexity": 1,
      "docstring": "\u5904\u7406\u91cd\u8bd5\u903b\u8f91\n\nReturns:\n    bool: \u662f\u5426\u5e94\u8be5\u8df3\u51fa\u4e3b\u5faa\u73af",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._record_failure_information"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_handle_retry_logic"
    },
    {
      "type": "function",
      "name": "_record_failure_information",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 5620,
      "complexity": 1,
      "docstring": "\u8bb0\u5f55\u5931\u8d25\u4fe1\u606f\u4ee5\u4f9b\u4e0b\u6b21\u91cd\u8bd5\u53c2\u8003",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.device.set_variable",
        "self.device.set_variable",
        "self.device.set_variable",
        "step.get",
        "step.get",
        "step.get('result', {}).get",
        "json.dumps",
        "logger.warning",
        "step.get",
        "step.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_record_failure_information"
    },
    {
      "type": "function",
      "name": "_check_user_interrupt",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 5641,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u7528\u6237\u662f\u5426\u8981\u6c42\u4e2d\u65ad",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "input",
        "user_input.lower"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_check_user_interrupt"
    },
    {
      "type": "function",
      "name": "_clear_failure_records",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 5646,
      "complexity": 1,
      "docstring": "\u6e05\u9664\u5931\u8d25\u8bb0\u5f55",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.device.set_variable",
        "self.device.set_variable",
        "logger.warning"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_clear_failure_records"
    },
    {
      "type": "function",
      "name": "_trigger_ai_state_update",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 5655,
      "complexity": 1,
      "docstring": "\u89e6\u53d1AI\u72b6\u6001\u66f4\u65b0\u5668\n\nArgs:\n    step: \u6267\u884c\u7684\u6b65\u9aa4\u4fe1\u606f\n    exec_result: \u6b65\u9aa4\u6267\u884c\u7ed3\u679c\n    context: \u5de5\u4f5c\u6d41\u6267\u884c\u4e0a\u4e0b\u6587",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step",
        "exec_result",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._build_state_update_context",
        "self.workflow_state.update_state_with_ai",
        "self.workflow_state.is_state_update_enabled",
        "logger.debug",
        "logger.info",
        "logger.isEnabledFor",
        "logger.warning",
        "logger.error",
        "context.setdefault('state_update_errors', []).append",
        "self.workflow_state.get_state_summary",
        "logger.debug",
        "context.setdefault",
        "step.get",
        "step.get",
        "str",
        "dt.now().isoformat",
        "step.get",
        "step.get",
        "step.get",
        "dt.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_trigger_ai_state_update"
    },
    {
      "type": "function",
      "name": "_generate_state_aware_instruction",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 5697,
      "complexity": 1,
      "docstring": "\u751f\u6210\u5305\u542b\u5168\u5c40\u72b6\u6001\u4fe1\u606f\u7684\u72b6\u6001\u611f\u77e5\u6307\u4ee4\uff0c\u96c6\u6210\u6307\u4ee4\u4f18\u5316\u7cfb\u7edf\n\nArgs:\n    step: \u5f53\u524d\u6b65\u9aa4\u4fe1\u606f\n    instruction: \u539f\u59cb\u6307\u4ee4\n    previous_results: \u524d\u5e8f\u6b65\u9aa4\u7ed3\u679c\n    global_state: \u5168\u5c40\u5de5\u4f5c\u6d41\u72b6\u6001\n    \nReturns:\n    \u589e\u5f3a\u548c\u4f18\u5316\u7684\u72b6\u6001\u611f\u77e5\u6307\u4ee4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step",
        "instruction",
        "previous_results",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._state_extractor.extract_relevant_context",
        "step.get",
        "global_state.get_global_state",
        "global_state.get_state_history_count",
        "hasattr",
        "hasattr",
        "hasattr",
        "StateContextExtractor",
        "current_state.strip",
        "global_state.get_state_history",
        "self._state_extractor._analyze_step_requirements",
        "step_analysis.get",
        "self.instruction_optimizer.can_optimize",
        "step.get",
        "step.get",
        "step.get",
        "step.get",
        "state_context['extracted_entities'].items",
        "any",
        "len",
        "enumerate",
        "self.instruction_optimizer.optimize_instruction",
        "logger.error",
        "step.get",
        "', '.join",
        "len",
        "chr(10).join",
        "reversed",
        "risk_assessment.get",
        "logger.info",
        "logger.warning",
        "isinstance",
        "isinstance",
        "chr",
        "len",
        "entry.timestamp.strftime",
        "len",
        "entity_type.replace('_', ' ').title",
        "', '.join",
        "len",
        "', '.join",
        "risk_assessment.get",
        "entity_type.replace('_', ' ').title",
        "', '.join",
        "entity_type.replace",
        "str",
        "list",
        "entities.items",
        "entity_type.replace"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_generate_state_aware_instruction"
    },
    {
      "type": "function",
      "name": "_build_state_update_context",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 5893,
      "complexity": 1,
      "docstring": "\u6784\u5efaAI\u72b6\u6001\u66f4\u65b0\u5668\u6240\u9700\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\n\nArgs:\n    step: \u6267\u884c\u7684\u6b65\u9aa4\u4fe1\u606f\n    exec_result: \u6b65\u9aa4\u6267\u884c\u7ed3\u679c\n    workflow_context: \u5de5\u4f5c\u6d41\u6267\u884c\u4e0a\u4e0b\u6587\n    \nReturns:\n    \u72b6\u6001\u66f4\u65b0\u4e0a\u4e0b\u6587\u5b57\u5178",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step",
        "exec_result",
        "workflow_context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "workflow_context.get",
        "workflow_context.get",
        "step.get",
        "step.get",
        "step.get",
        "step.get",
        "step.get",
        "len",
        "len",
        "len",
        "workflow_context.get",
        "workflow_context.get",
        "hasattr",
        "dt.now().isoformat",
        "getattr",
        "workflow_context.get",
        "getattr",
        "getattr",
        "getattr",
        "getattr",
        "getattr",
        "isinstance",
        "s.get",
        "s.get",
        "task_item.get",
        "task_item.get",
        "recent_history.append",
        "dt.now",
        "task.get",
        "getattr",
        "task_item.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_build_state_update_context"
    },
    {
      "type": "function",
      "name": "_handle_workflow_error",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 5975,
      "complexity": 1,
      "docstring": "\u5904\u7406\u5de5\u4f5c\u6d41\u6267\u884c\u9519\u8bef\uff0c\u4f7f\u7528\u72b6\u6001\u611f\u77e5\u7684\u9519\u8bef\u5904\u7406\u673a\u5236",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context",
        "error"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "context.get",
        "self.error_dispatcher.dispatch_error",
        "error_result.get",
        "error_result.get",
        "context.get",
        "context.get",
        "context.get",
        "context.get",
        "context.get",
        "context.get",
        "error_result.get",
        "logger.info",
        "logger.error",
        "self.error_statistics['error_types'].get",
        "logger.error",
        "logger.error",
        "self._apply_recovery_action",
        "error_result.get",
        "str",
        "str",
        "error_result.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_handle_workflow_error"
    },
    {
      "type": "function",
      "name": "_apply_recovery_action",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 6048,
      "complexity": 1,
      "docstring": "\u5e94\u7528\u6062\u590d\u52a8\u4f5c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "action",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "logger.error",
        "logger.info",
        "logger.info",
        "logger.info",
        "action.startswith",
        "int",
        "logger.info",
        "logger.info",
        "logger.warning",
        "action.split"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_apply_recovery_action"
    },
    {
      "type": "function",
      "name": "reset_error_statistics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 6092,
      "complexity": 1,
      "docstring": "\u91cd\u7f6e\u9519\u8bef\u5904\u7406\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:reset_error_statistics"
    },
    {
      "type": "function",
      "name": "enable_instruction_optimization",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 6103,
      "complexity": 1,
      "docstring": "\u542f\u7528\u6307\u4ee4\u4f18\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:enable_instruction_optimization"
    },
    {
      "type": "function",
      "name": "disable_instruction_optimization",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 6108,
      "complexity": 1,
      "docstring": "\u7981\u7528\u6307\u4ee4\u4f18\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:disable_instruction_optimization"
    },
    {
      "type": "function",
      "name": "set_optimization_strategy",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 6113,
      "complexity": 1,
      "docstring": "\u8bbe\u7f6e\u4f18\u5316\u7b56\u7565",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "strategy"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "hasattr",
        "logger.info",
        "logger.warning"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:set_optimization_strategy"
    },
    {
      "type": "function",
      "name": "create_decision_node",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 6142,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u51b3\u7b56\u8282\u70b9",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "node_id",
        "node_type",
        "description"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "DecisionNode",
        "self.decision_manager.register_decision_node"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:create_decision_node"
    },
    {
      "type": "function",
      "name": "add_conditional_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 6149,
      "complexity": 1,
      "docstring": "\u6dfb\u52a0\u6761\u4ef6\u51b3\u7b56\u8282\u70b9\u7684\u5feb\u6377\u65b9\u6cd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "node_id",
        "condition",
        "true_step",
        "false_step",
        "description"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.decision_manager.create_conditional_node"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:add_conditional_decision"
    },
    {
      "type": "function",
      "name": "add_validation_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 6154,
      "complexity": 1,
      "docstring": "\u6dfb\u52a0\u9a8c\u8bc1\u51b3\u7b56\u8282\u70b9\u7684\u5feb\u6377\u65b9\u6cd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "node_id",
        "condition",
        "valid_step",
        "invalid_step",
        "description"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.decision_manager.create_validation_node"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:add_validation_decision"
    },
    {
      "type": "function",
      "name": "evaluate_workflow_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 6159,
      "complexity": 1,
      "docstring": "\u8bc4\u4f30\u5de5\u4f5c\u6d41\u51b3\u7b56\u8282\u70b9",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "node_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.decision_manager.evaluate_decision"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:evaluate_workflow_decision"
    },
    {
      "type": "function",
      "name": "_generate_execution_summary",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 6176,
      "complexity": 1,
      "docstring": "\u751f\u6210\u6700\u7ec8\u6267\u884c\u6458\u8981\uff08\u589e\u5f3a\u7248\uff0c\u5305\u542b\u54cd\u5e94\u5206\u6790\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._generate_response_analysis_summary",
        "len",
        "len",
        "len",
        "len",
        "s.get",
        "s.get",
        "s.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_generate_execution_summary"
    },
    {
      "type": "function",
      "name": "make_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 6202,
      "complexity": 1,
      "docstring": "\u5206\u6790\u5f53\u524d\u6267\u884c\u7ed3\u679c\u5e76\u51b3\u5b9a\u4e0b\u4e00\u6b65\u64cd\u4f5c\uff08\u652f\u6301\u72b6\u6001\u611f\u77e5\u51b3\u7b56\uff09\n\nArgs:\n    current_result: \u5f53\u524d\u6267\u884c\u7ed3\u679c\uff08Result\u5bf9\u8c61\u6216\u5176\u4ed6\u7ed3\u679c\uff09\n    task_history: \u4efb\u52a1\u6267\u884c\u5386\u53f2\u8bb0\u5f55\uff08\u53ef\u9009\uff09\n    context: \u989d\u5916\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\uff08\u53ef\u9009\uff09\n    \nReturns:\n    \u51b3\u7b56\u7ed3\u679c\u5b57\u5178\uff0c\u5305\u542baction\u3001reason\u548cnew_tasks",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_result",
        "task_history",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._try_state_aware_decision",
        "logger.debug",
        "self._make_traditional_decision",
        "logger.info",
        "logger.error",
        "self._get_fallback_decision",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:make_decision"
    },
    {
      "type": "function",
      "name": "_try_state_aware_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 6229,
      "complexity": 1,
      "docstring": "\u5c1d\u8bd5\u4f7f\u7528\u72b6\u6001\u611f\u77e5\u51b3\u7b56\u7cfb\u7edf\n\nReturns:\n    \u51b3\u7b56\u7ed3\u679c\u5b57\u5178\u6216None\uff08\u5982\u679c\u65e0\u6cd5\u4f7f\u7528\u72b6\u6001\u611f\u77e5\u51b3\u7b56\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_result",
        "task_history",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_plan",
        "self.select_next_executable_step",
        "self._evaluate_workflow_level_decisions",
        "current_step.get",
        "self.decision_manager.list_decision_nodes",
        "self._create_dynamic_decision",
        "logger.warning",
        "self.decision_manager.evaluate_decision",
        "self._convert_decision_result"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_try_state_aware_decision"
    },
    {
      "type": "function",
      "name": "_create_dynamic_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 6275,
      "complexity": 1,
      "docstring": "\u57fa\u4e8e\u6b65\u9aa4\u7c7b\u578b\u548c\u5168\u5c40\u72b6\u6001\u52a8\u6001\u521b\u5efa\u51b3\u7b56\n\nArgs:\n    current_step: \u5f53\u524d\u6b65\u9aa4\u4fe1\u606f\n    current_result: \u6267\u884c\u7ed3\u679c\n    context: \u4e0a\u4e0b\u6587\u4fe1\u606f\n    \nReturns:\n    \u51b3\u7b56\u7ed3\u679c\u6216None",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_step",
        "current_result",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "current_step.get('name', '').lower",
        "current_step.get('instruction', '').lower",
        "self.workflow_state.get_global_state().lower",
        "any",
        "any",
        "any",
        "any",
        "self._create_test_decision",
        "self._create_validation_decision",
        "self._create_approval_decision",
        "self._create_error_recovery_decision",
        "logger.error",
        "current_step.get",
        "current_step.get",
        "self.workflow_state.get_global_state"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_create_dynamic_decision"
    },
    {
      "type": "function",
      "name": "_create_test_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 6318,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u6d4b\u8bd5\u6b65\u9aa4\u7684\u51b3\u7b56",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_step",
        "current_result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "isinstance",
        "current_result.stdout.lower",
        "any",
        "current_step.get",
        "any"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_create_test_decision"
    },
    {
      "type": "function",
      "name": "_create_validation_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 6350,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u9a8c\u8bc1\u6b65\u9aa4\u7684\u51b3\u7b56",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_step",
        "current_result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "isinstance"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_create_validation_decision"
    },
    {
      "type": "function",
      "name": "_create_approval_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 6370,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u5ba1\u6279\u6b65\u9aa4\u7684\u51b3\u7b56",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_step",
        "current_result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "isinstance"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_create_approval_decision"
    },
    {
      "type": "function",
      "name": "_create_error_recovery_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 6390,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u9519\u8bef\u6062\u590d\u51b3\u7b56",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_step",
        "current_result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "self.get_plan"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_create_error_recovery_decision"
    },
    {
      "type": "function",
      "name": "_evaluate_workflow_level_decisions",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 6408,
      "complexity": 1,
      "docstring": "\u8bc4\u4f30\u5de5\u4f5c\u6d41\u7ea7\u522b\u7684\u51b3\u7b56\uff08\u5982\u5b8c\u6210\u6761\u4ef6\u3001\u5faa\u73af\u63a7\u5236\u7b49\uff09\n\nReturns:\n    \u5de5\u4f5c\u6d41\u7ea7\u522b\u7684\u51b3\u7b56\u7ed3\u679c\u6216None",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_result",
        "task_history",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._check_completion_conditions",
        "self._check_loop_conditions",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_evaluate_workflow_level_decisions"
    },
    {
      "type": "function",
      "name": "_check_completion_conditions",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 6432,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u5de5\u4f5c\u6d41\u5b8c\u6210\u6761\u4ef6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_plan",
        "self.workflow_state.get_global_state().lower",
        "len",
        "any",
        "logger.error",
        "self.workflow_state.get_global_state",
        "len",
        "step.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_check_completion_conditions"
    },
    {
      "type": "function",
      "name": "_check_loop_conditions",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 6459,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u5faa\u73af\u63a7\u5236\u6761\u4ef6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_result",
        "task_history"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.workflow_state.loop_counters.items",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_check_loop_conditions"
    },
    {
      "type": "function",
      "name": "_convert_decision_result",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 6478,
      "complexity": 1,
      "docstring": "\u5c06StateAwareDecisionManager\u7684DecisionResult\u8f6c\u6362\u4e3a\u6807\u51c6\u51b3\u7b56\u683c\u5f0f\n\nArgs:\n    decision_result: StateAwareDecisionManager\u7684\u51b3\u7b56\u7ed3\u679c\n    current_step: \u5f53\u524d\u6b65\u9aa4\u4fe1\u606f\n    \nReturns:\n    \u6807\u51c6\u683c\u5f0f\u7684\u51b3\u7b56\u5b57\u5178",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decision_result",
        "current_step"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.error",
        "self._get_fallback_decision",
        "current_step.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_convert_decision_result"
    },
    {
      "type": "function",
      "name": "_make_traditional_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 6519,
      "complexity": 1,
      "docstring": "\u4f20\u7edf\u7684\u57fa\u4e8eLLM\u7684\u51b3\u7b56\u65b9\u6cd5\n\nReturns:\n    \u51b3\u7b56\u7ed3\u679c\u5b57\u5178",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_result",
        "task_history",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._generate_decision_prompt",
        "self.chat_sync",
        "self._parse_decision",
        "logger.warning",
        "self._get_fallback_decision",
        "logger.error",
        "self._get_fallback_decision"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_make_traditional_decision"
    },
    {
      "type": "function",
      "name": "_get_fallback_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 6544,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u56de\u9000\u51b3\u7b56\n\nArgs:\n    reason: \u9700\u8981\u56de\u9000\u7684\u539f\u56e0\n    \nReturns:\n    \u56de\u9000\u51b3\u7b56\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "reason"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_get_fallback_decision"
    },
    {
      "type": "function",
      "name": "_generate_decision_prompt",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 6561,
      "complexity": 1,
      "docstring": "\u751f\u6210\u7528\u4e8e\u51b3\u7b56\u7684\u63d0\u793a (\u65b9\u68482: \u652f\u6301\u5faa\u73af\u548c\u6761\u4ef6\u5206\u652f\u63a7\u5236)\n\nArgs:\n    current_result: \u5f53\u524d\u6267\u884c\u7ed3\u679c\n    task_history: \u4efb\u52a1\u6267\u884c\u5386\u53f2\n    context: \u989d\u5916\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\n    \nReturns:\n    \u51b3\u7b56\u63d0\u793a\u5b57\u7b26\u4e32",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_result",
        "task_history",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_plan",
        "isinstance",
        "'\\n'.join",
        "str",
        "'\\n'.join",
        "task_history[-1].get('task', {}).get",
        "isinstance",
        "'\\n'.join",
        "'\\n'.join",
        "str",
        "len",
        "len",
        "getattr",
        "isinstance",
        "step.get",
        "step.get",
        "task_history[-1].get",
        "item.get",
        "task.get",
        "task.get",
        "item.get",
        "getattr",
        "history_items.append",
        "step.get",
        "step.get",
        "context.items",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_generate_decision_prompt"
    },
    {
      "type": "function",
      "name": "_parse_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 6731,
      "complexity": 1,
      "docstring": "\u89e3\u6790\u51b3\u7b56\u6587\u672c\u4e3a\u7ed3\u6784\u5316\u51b3\u7b56\n\nArgs:\n    decision_text: \u51b3\u7b56\u6587\u672c\uff08\u53ef\u80fd\u5305\u542bJSON\uff09\n    \nReturns:\n    \u89e3\u6790\u540e\u7684\u51b3\u7b56\u5b57\u5178",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decision_text"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "extract_code",
        "json.loads",
        "decision_text.lower",
        "logger.error",
        "re.search",
        "decision_text.lower",
        "decision_text.lower",
        "json.loads",
        "lang.lower",
        "json.loads",
        "match.group"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_parse_decision"
    },
    {
      "type": "function",
      "name": "_analyze_step_response",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 6801,
      "complexity": 1,
      "docstring": "\u5206\u6790\u6b65\u9aa4\u54cd\u5e94\u5e76\u589e\u5f3a\u7ed3\u679c\n\nArgs:\n    result: \u539f\u59cb\u6267\u884c\u7ed3\u679c\n    step: \u6b65\u9aa4\u4fe1\u606f\n    response_text: \u54cd\u5e94\u6587\u672c\n    \nReturns:\n    \u589e\u5f3a\u540e\u7684\u7ed3\u679c\u5bf9\u8c61",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "result",
        "step",
        "response_text"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.response_parser.parse_response",
        "self.parsed_responses_history.append",
        "step.get",
        "step.get",
        "step.get",
        "step.get",
        "hasattr",
        "isinstance",
        "logger.warning",
        "logger.error",
        "dt.now().isoformat",
        "step.get",
        "step.get",
        "dt.now",
        "step.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_analyze_step_response"
    },
    {
      "type": "function",
      "name": "_generate_response_analysis_summary",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 6872,
      "complexity": 1,
      "docstring": "\u751f\u6210\u54cd\u5e94\u5206\u6790\u6458\u8981",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "sum",
        "len",
        "entry['parsed_info'].extracted_entities.get",
        "self.response_parser.get_stats",
        "status_counts.get",
        "sentiment_counts.get",
        "parser_stats.get",
        "', '.join",
        "', '.join",
        "status_counts.items",
        "sentiment_counts.items",
        "last_info.extracted_entities.get",
        "status_desc.get",
        "sentiment_desc.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_generate_response_analysis_summary"
    },
    {
      "type": "function",
      "name": "get_response_analysis_stats",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 6926,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u54cd\u5e94\u5206\u6790\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.response_parser.get_stats",
        "base_stats.update",
        "len",
        "min",
        "max",
        "sum",
        "sum",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:get_response_analysis_stats"
    },
    {
      "type": "function",
      "name": "configure_response_parser",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 6946,
      "complexity": 1,
      "docstring": "\u91cd\u65b0\u914d\u7f6e\u54cd\u5e94\u89e3\u6790\u5668\n\nArgs:\n    parser_method: \u65b0\u7684\u89e3\u6790\u5668\u65b9\u6cd5\n    parser_config: \u65b0\u7684\u89e3\u6790\u5668\u914d\u7f6e\n    enable_response_analysis: \u662f\u5426\u542f\u7528\u54cd\u5e94\u5206\u6790\n    enable_execution_monitoring: \u662f\u5426\u542f\u7528\u6267\u884c\u76d1\u63a7",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "parser_method",
        "parser_config",
        "enable_response_analysis",
        "enable_execution_monitoring"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "self._init_response_parser",
        "hasattr",
        "hasattr",
        "logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:configure_response_parser"
    },
    {
      "type": "function",
      "name": "clear_response_analysis_history",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 6983,
      "complexity": 1,
      "docstring": "\u6e05\u7a7a\u54cd\u5e94\u5206\u6790\u5386\u53f2",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:clear_response_analysis_history"
    },
    {
      "type": "function",
      "name": "get_natural_language_analysis_summary",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py",
      "line_number": 6988,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u81ea\u7136\u8bed\u8a00\u5f62\u5f0f\u7684\u5206\u6790\u6458\u8981",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "sum",
        "len",
        "len",
        "entry['parsed_info'].extracted_entities.get",
        "max",
        "{'success': '\u6210\u529f', 'error': '\u9519\u8bef', 'progress': '\u8fdb\u884c\u4e2d', 'neutral': '\u4e2d\u6027'}.get",
        "self.response_parser.get_stats",
        "parser_stats.get",
        "set"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:get_natural_language_analysis_summary"
    },
    {
      "type": "function",
      "name": "test_workflow_validation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_workflow_validation.py",
      "line_number": 22,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5de5\u4f5c\u6d41\u6821\u9a8c\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "ChatOpenAI",
        "Agent",
        "MultiStepAgent_v3",
        "print",
        "print",
        "agent_v3._validate_workflow_legality",
        "print",
        "print",
        "print",
        "print",
        "enumerate",
        "print",
        "agent_v3._fix_workflow_issues",
        "print",
        "agent_v3._validate_workflow_legality",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "agent_v3._validate_workflow_legality",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "problematic_workflow.copy",
        "print",
        "enumerate",
        "agent_v3.workflow_loader.load_from_dict",
        "print",
        "print",
        "print",
        "print",
        "print",
        "len",
        "len",
        "print",
        "print",
        "print",
        "print",
        "len",
        "os.getenv",
        "RegisteredAgent",
        "RegisteredAgent",
        "len",
        "len",
        "len",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_workflow_validation.py:test_workflow_validation"
    },
    {
      "type": "function",
      "name": "test_transformer_parser_fix",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_parser_fix.py",
      "line_number": 16,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5Transformer\u89e3\u6790\u5668\u53c2\u6570\u4f20\u9012\u4fee\u590d",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "ParserFactory.create_transformer_parser",
        "print",
        "print",
        "print",
        "config_with_model_name.get",
        "ParserFactory.create_transformer_parser",
        "print",
        "print",
        "ParserFactory.create_transformer_parser",
        "print",
        "print",
        "traceback.print_exc",
        "config_with_model_name.items",
        "config_with_model_name.get",
        "str",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_parser_fix.py:test_transformer_parser_fix"
    },
    {
      "type": "function",
      "name": "test_embedding_parser_fix",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_parser_fix.py",
      "line_number": 62,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5Embedding\u89e3\u6790\u5668\u53c2\u6570\u4f20\u9012\u4fee\u590d",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "config_with_model_name.get",
        "ParserFactory.create_embedding_parser",
        "print",
        "ParserFactory.create_embedding_parser",
        "print",
        "print",
        "config_with_model_name.items",
        "config_with_model_name.get",
        "str",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_parser_fix.py:test_embedding_parser_fix"
    },
    {
      "type": "function",
      "name": "test_deepseek_parser_fix",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_parser_fix.py",
      "line_number": 98,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5DeepSeek\u89e3\u6790\u5668\u53c2\u6570\u4f20\u9012\u4fee\u590d",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "config_with_api_key.get",
        "config_with_api_key.get",
        "ParserFactory.create_deepseek_parser",
        "print",
        "ParserFactory.create_deepseek_parser",
        "print",
        "print",
        "config_with_api_key.items",
        "config_with_api_key.get",
        "str",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_parser_fix.py:test_deepseek_parser_fix"
    },
    {
      "type": "class",
      "name": "MemoryBenchmarkResult",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_memory_profiling.py",
      "line_number": 39,
      "complexity": 1,
      "docstring": "Results from a memory benchmark test",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_memory_profiling.py:MemoryBenchmarkResult"
    },
    {
      "type": "class",
      "name": "MemoryProfiler",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_memory_profiling.py",
      "line_number": 51,
      "complexity": 1,
      "docstring": "Memory profiling utilities for WorkflowState",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "start_profiling",
        "stop_profiling",
        "get_memory_usage",
        "sample_memory"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_memory_profiling.py:MemoryProfiler"
    },
    {
      "type": "class",
      "name": "WorkflowStateBenchmark",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_memory_profiling.py",
      "line_number": 89,
      "complexity": 1,
      "docstring": "Benchmark suite for WorkflowState memory usage",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "create_small_state_data",
        "create_large_state_data",
        "benchmark_small_states_short_history",
        "benchmark_large_states_deep_nesting",
        "benchmark_long_running_extensive_history",
        "benchmark_rapid_updates_stress_test",
        "run_all_benchmarks",
        "print_results"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_memory_profiling.py:WorkflowStateBenchmark"
    },
    {
      "type": "function",
      "name": "main",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_memory_profiling.py",
      "line_number": 411,
      "complexity": 1,
      "docstring": "Main function to run memory benchmarks",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "WorkflowStateBenchmark",
        "benchmark.run_all_benchmarks",
        "benchmark.print_results",
        "datetime.now().strftime",
        "print",
        "print",
        "print",
        "print",
        "open",
        "json.dump",
        "datetime.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_memory_profiling.py:main"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_memory_profiling.py",
      "line_number": 92,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "MemoryProfiler"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_memory_profiling.py:__init__"
    },
    {
      "type": "function",
      "name": "start_profiling",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_memory_profiling.py",
      "line_number": 59,
      "complexity": 1,
      "docstring": "Start memory profiling session",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "gc.collect",
        "tracemalloc.start",
        "self.get_memory_usage"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_memory_profiling.py:start_profiling"
    },
    {
      "type": "function",
      "name": "stop_profiling",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_memory_profiling.py",
      "line_number": 66,
      "complexity": 1,
      "docstring": "Stop profiling and return statistics",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "tracemalloc.get_traced_memory",
        "tracemalloc.stop",
        "self.get_memory_usage",
        "self.memory_samples.append",
        "sum",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_memory_profiling.py:stop_profiling"
    },
    {
      "type": "function",
      "name": "get_memory_usage",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_memory_profiling.py",
      "line_number": 81,
      "complexity": 1,
      "docstring": "Get current memory usage in bytes",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.process.memory_info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_memory_profiling.py:get_memory_usage"
    },
    {
      "type": "function",
      "name": "sample_memory",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_memory_profiling.py",
      "line_number": 85,
      "complexity": 1,
      "docstring": "Take a memory sample",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.memory_samples.append",
        "self.get_memory_usage"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_memory_profiling.py:sample_memory"
    },
    {
      "type": "function",
      "name": "create_small_state_data",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_memory_profiling.py",
      "line_number": 96,
      "complexity": 1,
      "docstring": "Create small state data for testing",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "json.dumps",
        "datetime.now().isoformat",
        "datetime.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_memory_profiling.py:create_small_state_data"
    },
    {
      "type": "function",
      "name": "create_large_state_data",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_memory_profiling.py",
      "line_number": 105,
      "complexity": 1,
      "docstring": "Create large, complex state data for testing",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "json.dumps",
        "datetime.now().isoformat",
        "datetime.now().isoformat",
        "datetime.now().isoformat",
        "range",
        "datetime.now",
        "datetime.now",
        "range",
        "range",
        "list",
        "datetime.now().isoformat",
        "datetime.now",
        "range",
        "datetime.now",
        "range"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_memory_profiling.py:create_large_state_data"
    },
    {
      "type": "function",
      "name": "benchmark_small_states_short_history",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_memory_profiling.py",
      "line_number": 157,
      "complexity": 1,
      "docstring": "Benchmark: Small states with short history",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "self.profiler.start_profiling",
        "time.time",
        "WorkflowState",
        "range",
        "time.time",
        "pickle.dumps",
        "time.time",
        "pickle.loads",
        "time.time",
        "self.profiler.stop_profiling",
        "MemoryBenchmarkResult",
        "self.create_small_state_data",
        "state.set_global_state",
        "self.profiler.sample_memory",
        "time.time",
        "time.time",
        "len",
        "state.get_state_history_count"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_memory_profiling.py:benchmark_small_states_short_history"
    },
    {
      "type": "function",
      "name": "benchmark_large_states_deep_nesting",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_memory_profiling.py",
      "line_number": 199,
      "complexity": 1,
      "docstring": "Benchmark: Large complex states with deep nesting",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "self.profiler.start_profiling",
        "time.time",
        "WorkflowState",
        "range",
        "time.time",
        "pickle.dumps",
        "time.time",
        "pickle.loads",
        "time.time",
        "self.profiler.stop_profiling",
        "MemoryBenchmarkResult",
        "self.create_large_state_data",
        "state.set_global_state",
        "self.profiler.sample_memory",
        "time.time",
        "time.time",
        "len",
        "state.get_state_history_count"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_memory_profiling.py:benchmark_large_states_deep_nesting"
    },
    {
      "type": "function",
      "name": "benchmark_long_running_extensive_history",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_memory_profiling.py",
      "line_number": 241,
      "complexity": 1,
      "docstring": "Benchmark: Long-running workflows with extensive history",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "self.profiler.start_profiling",
        "time.time",
        "WorkflowState",
        "range",
        "time.time",
        "pickle.dumps",
        "time.time",
        "pickle.loads",
        "time.time",
        "self.profiler.stop_profiling",
        "MemoryBenchmarkResult",
        "state.set_global_state",
        "self.create_small_state_data",
        "self.profiler.sample_memory",
        "time.time",
        "time.time",
        "len",
        "state.get_state_history_count"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_memory_profiling.py:benchmark_long_running_extensive_history"
    },
    {
      "type": "function",
      "name": "benchmark_rapid_updates_stress_test",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_memory_profiling.py",
      "line_number": 284,
      "complexity": 1,
      "docstring": "Benchmark: Rapid state updates (stress testing)",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "self.profiler.start_profiling",
        "time.time",
        "WorkflowState",
        "range",
        "time.time",
        "pickle.dumps",
        "time.time",
        "pickle.loads",
        "time.time",
        "self.profiler.stop_profiling",
        "MemoryBenchmarkResult",
        "state.set_global_state",
        "self.profiler.sample_memory",
        "time.time",
        "time.time",
        "len",
        "state.get_state_history_count",
        "time.time"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_memory_profiling.py:benchmark_rapid_updates_stress_test"
    },
    {
      "type": "function",
      "name": "run_all_benchmarks",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_memory_profiling.py",
      "line_number": 327,
      "complexity": 1,
      "docstring": "Run all benchmark scenarios",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "benchmark",
        "results.append",
        "print",
        "time.sleep",
        "gc.collect",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_memory_profiling.py:run_all_benchmarks"
    },
    {
      "type": "function",
      "name": "print_results",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_memory_profiling.py",
      "line_number": 355,
      "complexity": 1,
      "docstring": "Print benchmark results in a formatted table",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "results"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "sum",
        "print",
        "print",
        "max",
        "print",
        "max",
        "print",
        "max",
        "print",
        "print",
        "print",
        "sum",
        "len",
        "sum",
        "len",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_memory_profiling.py:print_results"
    },
    {
      "type": "function",
      "name": "create_test_workflow",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_execution_history.py",
      "line_number": 24,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u6d4b\u8bd5\u5de5\u4f5c\u6d41\u5b9a\u4e49",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_execution_history.py:create_test_workflow"
    },
    {
      "type": "function",
      "name": "test_execution_history",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_execution_history.py",
      "line_number": 78,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6267\u884c\u5386\u53f2\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "ChatOpenAI",
        "Agent",
        "Agent",
        "Agent",
        "MultiStepAgent_v3",
        "create_test_workflow",
        "agent_v3.workflow_loader.load_from_dict",
        "print",
        "Result",
        "print",
        "print",
        "agent_v3._build_enhanced_instruction",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "Result",
        "agent_v3._build_enhanced_instruction",
        "print",
        "print",
        "agent_v3._build_enhanced_instruction",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "os.getenv",
        "RegisteredAgent",
        "RegisteredAgent",
        "RegisteredAgent",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_execution_history.py:test_execution_history"
    },
    {
      "type": "class",
      "name": "DebugMockTestResultEvaluator",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/debug_workflow_ai_evaluation.py",
      "line_number": 23,
      "complexity": 1,
      "docstring": "\u8c03\u8bd5\u7248\u672c\u7684MockTestResultEvaluator\uff0c\u6dfb\u52a0\u8be6\u7ec6\u65e5\u5fd7",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "evaluate_test_result"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "MockTestResultEvaluator"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/debug_workflow_ai_evaluation.py:DebugMockTestResultEvaluator"
    },
    {
      "type": "function",
      "name": "test_debug_evaluator",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/debug_workflow_ai_evaluation.py",
      "line_number": 62,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u8c03\u8bd5\u7248\u672c\u7684\u8bc4\u4f30\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "Result",
        "DebugMockTestResultEvaluator",
        "debug_evaluator.evaluate_test_result",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/debug_workflow_ai_evaluation.py:test_debug_evaluator"
    },
    {
      "type": "function",
      "name": "create_debug_control_flow_evaluator",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/debug_workflow_ai_evaluation.py",
      "line_number": 91,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u5e26\u8c03\u8bd5\u529f\u80fd\u7684ControlFlowEvaluator",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "DebugMockTestResultEvaluator",
        "ControlFlowEvaluator"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/debug_workflow_ai_evaluation.py:create_debug_control_flow_evaluator"
    },
    {
      "type": "function",
      "name": "evaluate_test_result",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/debug_workflow_ai_evaluation.py",
      "line_number": 26,
      "complexity": 1,
      "docstring": "\u6a21\u62df\u8bc4\u4f30\u903b\u8f91\uff0c\u6dfb\u52a0\u8be6\u7ec6\u65e5\u5fd7",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "logger.info",
        "logger.info",
        "kwargs.items",
        "kwargs.get",
        "kwargs.get",
        "kwargs.get",
        "kwargs.get",
        "logger.info",
        "logger.info",
        "logger.info",
        "logger.info",
        "logger.info",
        "super().evaluate_test_result",
        "logger.info",
        "logger.info",
        "logger.info",
        "logger.info",
        "logger.info",
        "logger.info",
        "logger.info",
        "super",
        "repr",
        "repr",
        "repr",
        "repr",
        "repr"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/debug_workflow_ai_evaluation.py:evaluate_test_result"
    },
    {
      "type": "function",
      "name": "main",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/calculator_quick_demo.py",
      "line_number": 22,
      "complexity": 1,
      "docstring": "\u5feb\u901f\u6f14\u793a\u51fd\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "ChatOpenAI",
        "Agent",
        "MultiStepAgent_v3",
        "print",
        "print",
        "print",
        "print",
        "os.getenv",
        "print",
        "agent_v3.execute_multi_step",
        "print",
        "print",
        "print",
        "print",
        "os.getenv",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "traceback.print_exc",
        "RegisteredAgent",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/calculator_quick_demo.py:main"
    },
    {
      "type": "function",
      "name": "fix_calculator_code",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/fix_calculator_issue.py",
      "line_number": 13,
      "complexity": 1,
      "docstring": "\u4fee\u590dcalculator.py\u4e2d\u7684\u5f02\u5e38\u7c7b\u578b\u95ee\u9898",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "os.path.exists",
        "print",
        "open",
        "f.read",
        "print",
        "content.replace",
        "fixed_content.replace",
        "print",
        "print",
        "print",
        "print",
        "open",
        "f.write"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/fix_calculator_issue.py:fix_calculator_code"
    },
    {
      "type": "function",
      "name": "verify_tests",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/fix_calculator_issue.py",
      "line_number": 58,
      "complexity": 1,
      "docstring": "\u9a8c\u8bc1\u6d4b\u8bd5\u662f\u5426\u901a\u8fc7",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "os.path.exists",
        "print",
        "subprocess.run",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/fix_calculator_issue.py:verify_tests"
    },
    {
      "type": "function",
      "name": "main",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/fix_calculator_issue.py",
      "line_number": 95,
      "complexity": 1,
      "docstring": "\u4e3b\u51fd\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "fix_calculator_code",
        "verify_tests",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/fix_calculator_issue.py:main"
    },
    {
      "type": "class",
      "name": "AgentSpecification",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py",
      "line_number": 26,
      "complexity": 1,
      "docstring": "\u667a\u80fd\u4f53\u89c4\u683c\u5b9a\u4e49\uff08\u517c\u5bb9 MultiStepAgent_v2\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py:AgentSpecification"
    },
    {
      "type": "class",
      "name": "TaskMasterWorkflowState",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py",
      "line_number": 34,
      "complexity": 1,
      "docstring": "Task Master \u5de5\u4f5c\u6d41\u72b6\u6001\u7ba1\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py:TaskMasterWorkflowState"
    },
    {
      "type": "class",
      "name": "TaskMasterAgent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py",
      "line_number": 50,
      "complexity": 1,
      "docstring": "\u57fa\u4e8e Task Master AI \u7684\u667a\u80fd\u4efb\u52a1\u7ba1\u7406\u548c\u6267\u884c\u7cfb\u7edf\n\n\u4e3b\u8981\u7279\u6027\uff1a\n- \u4f7f\u7528 Task Master AI \u8fdb\u884c\u667a\u80fd\u4efb\u52a1\u89c4\u5212\u548c\u7ba1\u7406\n- \u4fdd\u6301 AgentFrameWork \u7684\u591a\u667a\u80fd\u4f53\u534f\u4f5c\u80fd\u529b  \n- \u63d0\u4f9b\u5f3a\u5927\u7684\u4f9d\u8d56\u7ba1\u7406\u548c\u590d\u6742\u5ea6\u5206\u6790\n- \u652f\u6301 PRD \u9a71\u52a8\u7684\u5f00\u53d1\u6d41\u7a0b\n- \u63d0\u4f9b\u591a\u79cd\u6267\u884c\u6a21\u5f0f\uff08Task Master AI \u6a21\u5f0f\u3001\u6df7\u5408\u6a21\u5f0f\u3001\u517c\u5bb9\u6a21\u5f0f\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "_initialize_project",
        "_register_agents_to_tm",
        "register_agent",
        "execute_multi_step",
        "execute_multi_step_tm",
        "execute_multi_step_hybrid",
        "execute_multi_step_legacy",
        "_intelligent_planning",
        "_analyze_and_expand_tasks",
        "_tm_execution_loop",
        "_execute_single_tm_task",
        "_execute_task_with_subtasks",
        "_enhance_task_instruction",
        "_multistep_execution_loop",
        "_execute_single_step",
        "_check_user_interrupt",
        "_generate_execution_summary",
        "research",
        "get_complexity_analysis",
        "get_project_status",
        "sync_with_tm",
        "enhanced_decision_making",
        "_generate_enhanced_decision_prompt",
        "_parse_enhanced_decision",
        "_fallback_decision",
        "execute_enhanced_decision",
        "_execute_research_and_continue",
        "_execute_expand_current_task",
        "_execute_analyze_dependencies",
        "_execute_optimize_workflow",
        "_execute_generate_recovery_plan",
        "_execute_auto_prioritize"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Agent"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py:TaskMasterAgent"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py",
      "line_number": 62,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316 TaskMasterAgent\n\nArgs:\n    project_root: Task Master AI \u9879\u76ee\u6839\u76ee\u5f55\n    llm: \u8bed\u8a00\u6a21\u578b\u5b9e\u4f8b\n    agent_specs: \u667a\u80fd\u4f53\u89c4\u683c\u5217\u8868\n    auto_init: \u662f\u5426\u81ea\u52a8\u521d\u59cb\u5316 Task Master AI \u9879\u76ee\n    config: Task Master \u914d\u7f6e\u5b9e\u4f8b\n    max_retries: \u6700\u5927\u91cd\u8bd5\u6b21\u6570\n    thinker_system_message: \u601d\u8003\u8005\u7cfb\u7edf\u6d88\u606f\n    thinker_chat_system_message: \u601d\u8003\u8005\u804a\u5929\u7cfb\u7edf\u6d88\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "project_root",
        "llm",
        "agent_specs",
        "auto_init",
        "config",
        "max_retries",
        "thinker_system_message",
        "thinker_chat_system_message"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "super().__init__",
        "Path(project_root).resolve",
        "TaskMasterClient",
        "TaskMasterDataMapper",
        "StatefulExecutor",
        "TaskMasterWorkflowState",
        "logger.info",
        "TaskMasterConfig",
        "str",
        "self.device.set_variable",
        "self._initialize_project",
        "super",
        "Path",
        "str",
        "self.tm_client.is_initialized"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py:__init__"
    },
    {
      "type": "function",
      "name": "_initialize_project",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py",
      "line_number": 122,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316 Task Master AI \u9879\u76ee\n\nReturns:\n    \u521d\u59cb\u5316\u662f\u5426\u6210\u529f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.tm_client.initialize_project",
        "logger.info",
        "self._register_agents_to_tm",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py:_initialize_project"
    },
    {
      "type": "function",
      "name": "_register_agents_to_tm",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py",
      "line_number": 143,
      "complexity": 1,
      "docstring": "\u5c06\u667a\u80fd\u4f53\u4fe1\u606f\u6ce8\u518c\u5230 Task Master AI \u7cfb\u7edf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "docs_dir.mkdir",
        "agents_file.write_text",
        "logger.info",
        "len",
        "type"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py:_register_agents_to_tm"
    },
    {
      "type": "function",
      "name": "register_agent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py",
      "line_number": 164,
      "complexity": 1,
      "docstring": "\u6ce8\u518c\u65b0\u7684\u667a\u80fd\u4f53\n\nArgs:\n    name: \u667a\u80fd\u4f53\u540d\u79f0\n    instance: \u667a\u80fd\u4f53\u5b9e\u4f8b\n    description: \u667a\u80fd\u4f53\u63cf\u8ff0\n    \nReturns:\n    \u6ce8\u518c\u662f\u5426\u6210\u529f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "name",
        "instance",
        "description"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "AgentSpecification",
        "self.agent_specs.append",
        "self.device.set_variable",
        "self._register_agents_to_tm",
        "logger.info",
        "getattr",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py:register_agent"
    },
    {
      "type": "function",
      "name": "execute_multi_step",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py",
      "line_number": 195,
      "complexity": 1,
      "docstring": "\u591a\u6a21\u5f0f\u7684\u591a\u6b65\u9aa4\u4efb\u52a1\u6267\u884c\u5165\u53e3\n\nArgs:\n    main_instruction: \u4e3b\u8981\u6307\u4ee4\n    mode: \u6267\u884c\u6a21\u5f0f (\"tm_native\", \"hybrid\", \"legacy\")\n    use_prd: \u662f\u5426\u4f7f\u7528 PRD \u9a71\u52a8\n    prd_content: PRD \u5185\u5bb9\n    interactive: \u662f\u5426\u4ea4\u4e92\u6a21\u5f0f\n    \nReturns:\n    \u6267\u884c\u7ed3\u679c\u6458\u8981",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "main_instruction",
        "mode",
        "use_prd",
        "prd_content",
        "interactive"
      ],
      "decorators": [
        "reduce_memory_decorator_compress"
      ],
      "inheritance": [],
      "calls": [
        "self.execute_multi_step_tm",
        "logger.error",
        "self.execute_multi_step_hybrid",
        "self.execute_multi_step_legacy",
        "ValueError"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py:execute_multi_step"
    },
    {
      "type": "function",
      "name": "execute_multi_step_tm",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py",
      "line_number": 232,
      "complexity": 1,
      "docstring": "\u5b8c\u5168\u57fa\u4e8e Task Master AI \u7684\u6267\u884c\u6a21\u5f0f\n\nArgs:\n    main_instruction: \u4e3b\u8981\u6307\u4ee4\n    use_prd: \u662f\u5426\u4f7f\u7528 PRD \u9a71\u52a8\n    prd_content: PRD \u5185\u5bb9  \n    interactive: \u662f\u5426\u4ea4\u4e92\u6a21\u5f0f\n    \nReturns:\n    \u6267\u884c\u7ed3\u679c\u6458\u8981",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "main_instruction",
        "use_prd",
        "prd_content",
        "interactive"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "logger.info",
        "self._intelligent_planning",
        "self._analyze_and_expand_tasks",
        "self._tm_execution_loop",
        "self._generate_execution_summary",
        "self.tm_client.clear_all_tasks",
        "logger.warning",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py:execute_multi_step_tm"
    },
    {
      "type": "function",
      "name": "execute_multi_step_hybrid",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py",
      "line_number": 277,
      "complexity": 1,
      "docstring": "\u6df7\u5408\u6a21\u5f0f\uff1aTask Master AI \u89c4\u5212 + AgentFrameWork \u6267\u884c\n\nArgs:\n    main_instruction: \u4e3b\u8981\u6307\u4ee4\n    use_prd: \u662f\u5426\u4f7f\u7528 PRD \u9a71\u52a8\n    prd_content: PRD \u5185\u5bb9\n    interactive: \u662f\u5426\u4ea4\u4e92\u6a21\u5f0f\n    \nReturns:\n    \u6267\u884c\u7ed3\u679c\u6458\u8981",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "main_instruction",
        "use_prd",
        "prd_content",
        "interactive"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "self._intelligent_planning",
        "self.data_mapper.tm_tasks_to_plan_format",
        "self._multistep_execution_loop",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py:execute_multi_step_hybrid"
    },
    {
      "type": "function",
      "name": "execute_multi_step_legacy",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py",
      "line_number": 314,
      "complexity": 1,
      "docstring": "\u517c\u5bb9\u6a21\u5f0f\uff1a\u4f7f\u7528\u539f\u59cb MultiStepAgent_v2 \u903b\u8f91\n\nArgs:\n    main_instruction: \u4e3b\u8981\u6307\u4ee4\n    interactive: \u662f\u5426\u4ea4\u4e92\u6a21\u5f0f\n    \nReturns:\n    \u6267\u884c\u7ed3\u679c\u6458\u8981",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "main_instruction",
        "interactive"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "MultiStepAgent_v2",
        "legacy_agent.execute_multi_step",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py:execute_multi_step_legacy"
    },
    {
      "type": "function",
      "name": "_intelligent_planning",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py",
      "line_number": 349,
      "complexity": 1,
      "docstring": "\u4f7f\u7528 Task Master AI \u8fdb\u884c\u667a\u80fd\u4efb\u52a1\u89c4\u5212\n\nArgs:\n    main_instruction: \u4e3b\u8981\u6307\u4ee4\n    use_prd: \u662f\u5426\u4f7f\u7528 PRD \u9a71\u52a8\n    prd_content: PRD \u5185\u5bb9\n    \nReturns:\n    \u4efb\u52a1\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "main_instruction",
        "use_prd",
        "prd_content"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "logger.info",
        "self.tm_client.parse_prd",
        "logger.info",
        "self.tm_client.add_task",
        "logger.error",
        "str",
        "self.config.is_research_enabled",
        "self.config.get",
        "self.config.is_research_enabled",
        "len",
        "self.config.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py:_intelligent_planning"
    },
    {
      "type": "function",
      "name": "_analyze_and_expand_tasks",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py",
      "line_number": 392,
      "complexity": 1,
      "docstring": "\u5206\u6790\u4efb\u52a1\u590d\u6742\u5ea6\u5e76\u667a\u80fd\u6269\u5c55\n\nReturns:\n    \u64cd\u4f5c\u662f\u5426\u6210\u529f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "self.tm_client.analyze_complexity",
        "self.config.should_auto_expand_complex",
        "logger.info",
        "logger.info",
        "self.tm_client.get_tasks",
        "logger.error",
        "self.config.get_complexity_threshold",
        "self.config.is_research_enabled",
        "str",
        "task.get",
        "logger.info",
        "self.tm_client.expand_task",
        "self.config.is_research_enabled"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py:_analyze_and_expand_tasks"
    },
    {
      "type": "function",
      "name": "_tm_execution_loop",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py",
      "line_number": 433,
      "complexity": 1,
      "docstring": "Task Master AI \u539f\u751f\u6267\u884c\u5faa\u73af\n\nArgs:\n    interactive: \u662f\u5426\u4ea4\u4e92\u6a21\u5f0f\n    \nReturns:\n    \u6267\u884c\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "interactive"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.tm_client.get_tasks",
        "len",
        "self.tm_client.get_tasks",
        "len",
        "len",
        "self.tm_client.next_task",
        "str",
        "next_task.get",
        "logger.info",
        "self.tm_client.set_task_status",
        "self._execute_task_with_subtasks",
        "execution_result['execution_log'].append",
        "logger.error",
        "str",
        "logger.info",
        "next_task.get",
        "next_task.get",
        "self.tm_client.set_task_status",
        "logger.info",
        "self.tm_client.set_task_status",
        "logger.error",
        "self._check_user_interrupt",
        "logger.info",
        "dt.now().isoformat",
        "dt.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py:_tm_execution_loop"
    },
    {
      "type": "function",
      "name": "_execute_single_tm_task",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py",
      "line_number": 510,
      "complexity": 1,
      "docstring": "\u6267\u884c\u5355\u4e2a Task Master AI \u4efb\u52a1\n\nArgs:\n    task: Task Master AI \u4efb\u52a1\u5bf9\u8c61\n    \nReturns:\n    \u6267\u884c\u662f\u5426\u6210\u529f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "task"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.data_mapper.tm_task_to_step_format",
        "step.get",
        "step.get",
        "step.get",
        "self._enhance_task_instruction",
        "logger.info",
        "logger.error",
        "logger.info",
        "logger.error",
        "target_agent.chat_sync",
        "target_agent.execute_sync",
        "hasattr",
        "bool",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py:_execute_single_tm_task"
    },
    {
      "type": "function",
      "name": "_execute_task_with_subtasks",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py",
      "line_number": 567,
      "complexity": 1,
      "docstring": "\u6267\u884c\u4efb\u52a1\uff0c\u5982\u679c\u6709\u5b50\u4efb\u52a1\u5219\u6309\u987a\u5e8f\u6267\u884c\u5b50\u4efb\u52a1\n\nArgs:\n    task: \u4efb\u52a1\u5bf9\u8c61\n    \nReturns:\n    \u6267\u884c\u662f\u5426\u6210\u529f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "task"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "task.get",
        "logger.info",
        "enumerate",
        "logger.info",
        "self._execute_single_tm_task",
        "subtask.get",
        "subtask.get",
        "logger.info",
        "self.tm_client.set_task_status",
        "self._execute_single_tm_task",
        "logger.error",
        "subtask.get",
        "logger.info",
        "logger.error",
        "self.tm_client.set_task_status",
        "task.get",
        "len",
        "self.tm_client.set_task_status",
        "logger.warning",
        "task.get",
        "task.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py:_execute_task_with_subtasks"
    },
    {
      "type": "function",
      "name": "_enhance_task_instruction",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py",
      "line_number": 617,
      "complexity": 1,
      "docstring": "\u589e\u5f3a\u4efb\u52a1\u6307\u4ee4\uff0c\u4f7f\u5176\u66f4\u5177\u4f53\u548c\u53ef\u6267\u884c\n\nArgs:\n    task: \u539f\u59cb\u4efb\u52a1\u5bf9\u8c61\n    instruction: \u539f\u59cb\u6307\u4ee4\n    \nReturns:\n    \u589e\u5f3a\u540e\u7684\u6307\u4ee4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "task",
        "instruction"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "task.get",
        "task.get",
        "enhanced_instruction.strip",
        "logger.error",
        "task_title.lower"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py:_enhance_task_instruction"
    },
    {
      "type": "function",
      "name": "_multistep_execution_loop",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py",
      "line_number": 690,
      "complexity": 1,
      "docstring": "AgentFrameWork \u98ce\u683c\u7684\u6267\u884c\u5faa\u73af\uff08\u7528\u4e8e\u6df7\u5408\u6a21\u5f0f\uff09\n\nArgs:\n    plan: \u6267\u884c\u8ba1\u5212\n    interactive: \u662f\u5426\u4ea4\u4e92\u6a21\u5f0f\n    \nReturns:\n    \u6267\u884c\u7ed3\u679c\u6458\u8981",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "plan",
        "interactive"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "enumerate",
        "logger.info",
        "self._execute_single_step",
        "step.get",
        "step.get",
        "self._check_user_interrupt",
        "logger.error",
        "self.tm_client.set_task_status",
        "self.tm_client.set_task_status",
        "len",
        "step.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py:_multistep_execution_loop"
    },
    {
      "type": "function",
      "name": "_execute_single_step",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py",
      "line_number": 736,
      "complexity": 1,
      "docstring": "\u6267\u884c\u5355\u4e2a\u6b65\u9aa4\uff08\u590d\u7528 MultiStepAgent_v2 \u903b\u8f91\uff09\n\nArgs:\n    step: \u6b65\u9aa4\u5b9a\u4e49\n    \nReturns:\n    \u6267\u884c\u662f\u5426\u6210\u529f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "step.get",
        "step.get",
        "step.get",
        "logger.error",
        "target_agent.chat_sync",
        "target_agent.execute_sync",
        "hasattr",
        "bool",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py:_execute_single_step"
    },
    {
      "type": "function",
      "name": "_check_user_interrupt",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py",
      "line_number": 774,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u7528\u6237\u662f\u5426\u8981\u6c42\u4e2d\u65ad\uff08\u4ea4\u4e92\u6a21\u5f0f\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "input",
        "user_input.lower().strip",
        "user_input.lower"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py:_check_user_interrupt"
    },
    {
      "type": "function",
      "name": "_generate_execution_summary",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py",
      "line_number": 782,
      "complexity": 1,
      "docstring": "\u751f\u6210\u6267\u884c\u6458\u8981\u62a5\u544a\n\nArgs:\n    result: \u6267\u884c\u7ed3\u679c\n    \nReturns:\n    \u6458\u8981\u5b57\u7b26\u4e32",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "result.get",
        "result.get",
        "result.get",
        "result.get",
        "result.get",
        "f\"\\n## Task Master AI \u6267\u884c\u6458\u8981\\n\\n**\u6267\u884c\u6a21\u5f0f**: {self.execution_mode}\\n**\u9879\u76ee\u8def\u5f84**: {self.project_root}\\n**\u6267\u884c\u72b6\u6001**: {('\u6210\u529f' if success else '\u5931\u8d25')}\\n\\n### \u4efb\u52a1\u7edf\u8ba1\\n- \u4e3b\u4efb\u52a1\u6570: {total_tasks}\\n- \u6210\u529f\u5b8c\u6210: {completed_tasks}\\n- \u6267\u884c\u5931\u8d25: {failed_tasks}\\n- \u5b8c\u6210\u7387: {(completed_tasks / total_tasks * 100 if total_tasks > 0 else 0):.1f}%\\n- \u5b50\u4efb\u52a1\u6570: {subtasks_count}\\n- \u603b\u6267\u884c\u5355\u5143: {total_tasks + subtasks_count}\\n\\n### \u667a\u80fd\u4f53\u4fe1\u606f\\n- \u6ce8\u518c\u667a\u80fd\u4f53\u6570: {len(self.agent_specs)}\\n- \u53ef\u7528\u667a\u80fd\u4f53: {', '.join([spec.name for spec in self.agent_specs])}\\n\\n### \u914d\u7f6e\u4fe1\u606f\\n- \u590d\u6742\u5ea6\u9608\u503c: {self.config.get_complexity_threshold()}\\n- \u7814\u7a76\u529f\u80fd: {('\u542f\u7528' if self.config.is_research_enabled() else '\u7981\u7528')}\\n- \u81ea\u52a8\u6269\u5c55: {('\u542f\u7528' if self.config.should_auto_expand_complex() else '\u7981\u7528')}\\n\\n**\u6267\u884c\u5b8c\u6210\u65f6\u95f4**: {dt.now().strftime('%Y-%m-%d %H:%M:%S')}\\n\".strip",
        "result.get",
        "logger.error",
        "len",
        "', '.join",
        "self.config.get_complexity_threshold",
        "dt.now().strftime",
        "self.config.is_research_enabled",
        "self.config.should_auto_expand_complex",
        "dt.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py:_generate_execution_summary"
    },
    {
      "type": "function",
      "name": "research",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py",
      "line_number": 837,
      "complexity": 1,
      "docstring": "\u4f7f\u7528 Task Master AI \u7684\u7814\u7a76\u529f\u80fd\n\nArgs:\n    query: \u7814\u7a76\u67e5\u8be2\n    save_to_task: \u4fdd\u5b58\u5230\u6307\u5b9a\u4efb\u52a1ID\n    \nReturns:\n    \u7814\u7a76\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "query",
        "save_to_task"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.tm_client.research",
        "logger.info",
        "logger.error",
        "self.config.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py:research"
    },
    {
      "type": "function",
      "name": "get_complexity_analysis",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py",
      "line_number": 861,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u9879\u76ee\u590d\u6742\u5ea6\u5206\u6790\n\nReturns:\n    \u590d\u6742\u5ea6\u5206\u6790\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.tm_client.analyze_complexity",
        "logger.error",
        "self.config.get_complexity_threshold",
        "self.config.is_research_enabled"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py:get_complexity_analysis"
    },
    {
      "type": "function",
      "name": "get_project_status",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py",
      "line_number": 877,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u9879\u76ee\u6574\u4f53\u72b6\u6001\n\nReturns:\n    \u9879\u76ee\u72b6\u6001\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.tm_client.get_tasks",
        "task.get",
        "len",
        "self.tm_client.next_task",
        "str",
        "len",
        "self.workflow_state.last_sync_time.isoformat",
        "logger.error",
        "status_counts.get",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py:get_project_status"
    },
    {
      "type": "function",
      "name": "sync_with_tm",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py",
      "line_number": 905,
      "complexity": 1,
      "docstring": "\u4e0e Task Master AI \u540c\u6b65\u72b6\u6001\n\nReturns:\n    \u540c\u6b65\u662f\u5426\u6210\u529f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "dt.now",
        "logger.info",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py:sync_with_tm"
    },
    {
      "type": "function",
      "name": "enhanced_decision_making",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py",
      "line_number": 926,
      "complexity": 1,
      "docstring": "\u7ed3\u5408 Task Master AI \u5206\u6790\u7684\u589e\u5f3a\u51b3\u7b56\n\nArgs:\n    current_result: \u5f53\u524d\u6267\u884c\u7ed3\u679c\n    task_context: \u4efb\u52a1\u4e0a\u4e0b\u6587\n    task_history: \u4efb\u52a1\u5386\u53f2\u8bb0\u5f55\n    \nReturns:\n    \u51b3\u7b56\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_result",
        "task_context",
        "task_history"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_complexity_analysis",
        "self.get_project_status",
        "self._generate_enhanced_decision_prompt",
        "self.chat_sync",
        "self._parse_enhanced_decision",
        "logger.warning",
        "self._fallback_decision",
        "logger.error",
        "self._fallback_decision"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py:enhanced_decision_making"
    },
    {
      "type": "function",
      "name": "_generate_enhanced_decision_prompt",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py",
      "line_number": 967,
      "complexity": 1,
      "docstring": "\u751f\u6210\u589e\u5f3a\u51b3\u7b56\u63d0\u793a\n\nArgs:\n    current_result: \u5f53\u524d\u6267\u884c\u7ed3\u679c\n    task_context: \u4efb\u52a1\u4e0a\u4e0b\u6587\n    task_history: \u4efb\u52a1\u5386\u53f2\n    complexity_analysis: \u590d\u6742\u5ea6\u5206\u6790\n    project_status: \u9879\u76ee\u72b6\u6001\n    \nReturns:\n    \u51b3\u7b56\u63d0\u793a\u5b57\u7b26\u4e32",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_result",
        "task_context",
        "task_history",
        "complexity_analysis",
        "project_status"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "isinstance",
        "prompt.strip",
        "'\\n'.join",
        "f\"\\n\u603b\u4efb\u52a1\u6570: {complexity_analysis.get('total_tasks', 0)}\\n\u590d\u6742\u4efb\u52a1\u6570: {complexity_analysis.get('complex_tasks', 0)}\\n\u5e73\u5747\u590d\u6742\u5ea6: {complexity_analysis.get('average_complexity', 0)}\\n\u5efa\u8bae: {'; '.join(complexity_analysis.get('recommendations', []))}\\n\".strip",
        "project_status.get",
        "project_status.get",
        "', '.join",
        "f\"\\n\u603b\u4efb\u52a1\u6570: {project_status.get('total_tasks', 0)}\\n\u72b6\u6001\u5206\u5e03: {status_summary}\\n\u4e0b\u4e00\u4e2a\u4efb\u52a1: {next_task_info}\\n\u6ce8\u518c\u667a\u80fd\u4f53: {project_status.get('agents_registered', 0)}\\n\".strip",
        "isinstance",
        "task_context.get",
        "task_context.get",
        "task_context.get",
        "task_context.get",
        "item.get('task', {}).get",
        "item.get",
        "hasattr",
        "history_items.append",
        "next_task.get",
        "next_task.get",
        "status_breakdown.items",
        "item.get",
        "complexity_analysis.get",
        "complexity_analysis.get",
        "complexity_analysis.get",
        "'; '.join",
        "project_status.get",
        "project_status.get",
        "complexity_analysis.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py:_generate_enhanced_decision_prompt"
    },
    {
      "type": "function",
      "name": "_parse_enhanced_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py",
      "line_number": 1124,
      "complexity": 1,
      "docstring": "\u89e3\u6790\u589e\u5f3a\u51b3\u7b56\u7ed3\u679c\n\nArgs:\n    decision_text: \u51b3\u7b56\u6587\u672c\n    \nReturns:\n    \u89e3\u6790\u540e\u7684\u51b3\u7b56\u5b57\u5178",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decision_text"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "re.search",
        "decision_text.strip().startswith",
        "json.loads",
        "json.loads",
        "decision_text.lower",
        "logger.error",
        "json_match.group",
        "decision_text.strip",
        "decision_text.lower",
        "len",
        "decision_text.lower",
        "decision_text.lower"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py:_parse_enhanced_decision"
    },
    {
      "type": "function",
      "name": "_fallback_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py",
      "line_number": 1172,
      "complexity": 1,
      "docstring": "\u56de\u9000\u51b3\u7b56\uff08\u5f53\u589e\u5f3a\u51b3\u7b56\u5931\u8d25\u65f6\u4f7f\u7528\uff09\n\nArgs:\n    current_result: \u5f53\u524d\u6267\u884c\u7ed3\u679c\n    task_context: \u4efb\u52a1\u4e0a\u4e0b\u6587\n    \nReturns:\n    \u56de\u9000\u51b3\u7b56",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_result",
        "task_context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "isinstance"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py:_fallback_decision"
    },
    {
      "type": "function",
      "name": "execute_enhanced_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py",
      "line_number": 1203,
      "complexity": 1,
      "docstring": "\u6267\u884c\u589e\u5f3a\u51b3\u7b56\n\nArgs:\n    decision: \u51b3\u7b56\u7ed3\u679c\n    \nReturns:\n    \u6267\u884c\u662f\u5426\u6210\u529f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decision"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "decision.get",
        "logger.info",
        "self._execute_research_and_continue",
        "logger.error",
        "self._execute_expand_current_task",
        "self._execute_analyze_dependencies",
        "self._execute_optimize_workflow",
        "self._execute_generate_recovery_plan",
        "self._execute_auto_prioritize",
        "logger.warning"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py:execute_enhanced_decision"
    },
    {
      "type": "function",
      "name": "_execute_research_and_continue",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py",
      "line_number": 1239,
      "complexity": 1,
      "docstring": "\u6267\u884c\u7814\u7a76\u5e76\u7ee7\u7eed",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decision"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "decision.get",
        "self.research",
        "logger.info",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py:_execute_research_and_continue"
    },
    {
      "type": "function",
      "name": "_execute_expand_current_task",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py",
      "line_number": 1255,
      "complexity": 1,
      "docstring": "\u6267\u884c\u6269\u5c55\u5f53\u524d\u4efb\u52a1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decision"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.tm_client.expand_task",
        "logger.info",
        "logger.error",
        "len",
        "self.config.is_research_enabled",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py:_execute_expand_current_task"
    },
    {
      "type": "function",
      "name": "_execute_analyze_dependencies",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py",
      "line_number": 1272,
      "complexity": 1,
      "docstring": "\u6267\u884c\u4f9d\u8d56\u5173\u7cfb\u5206\u6790",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decision"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py:_execute_analyze_dependencies"
    },
    {
      "type": "function",
      "name": "_execute_optimize_workflow",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py",
      "line_number": 1284,
      "complexity": 1,
      "docstring": "\u6267\u884c\u5de5\u4f5c\u6d41\u4f18\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decision"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "decision.get",
        "logger.info",
        "logger.info",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py:_execute_optimize_workflow"
    },
    {
      "type": "function",
      "name": "_execute_generate_recovery_plan",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py",
      "line_number": 1299,
      "complexity": 1,
      "docstring": "\u6267\u884c\u6545\u969c\u6062\u590d\u8ba1\u5212\u751f\u6210",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decision"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.tm_client.get_tasks",
        "self.chat_sync",
        "logger.error",
        "logger.info",
        "task.get",
        "task.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py:_execute_generate_recovery_plan"
    },
    {
      "type": "function",
      "name": "_execute_auto_prioritize",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py",
      "line_number": 1321,
      "complexity": 1,
      "docstring": "\u6267\u884c\u81ea\u52a8\u4f18\u5148\u7ea7\u8c03\u6574",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decision"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "decision.get",
        "priority_adjustments.items",
        "logger.info",
        "logger.info",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py:_execute_auto_prioritize"
    },
    {
      "type": "function",
      "name": "main",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/demo_static_workflow.py",
      "line_number": 22,
      "complexity": 1,
      "docstring": "\u4e3b\u6f14\u793a\u51fd\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "ChatOpenAI",
        "print",
        "os.getenv",
        "print",
        "print",
        "print",
        "MultiStepAgent_v3",
        "print",
        "setup_agent_team",
        "print",
        "agent_v3.list_available_workflows",
        "enumerate",
        "print",
        "print",
        "print",
        "print",
        "create_demo_workflow",
        "print",
        "agent_v3.execute_workflow",
        "display_execution_result",
        "print",
        "print",
        "print",
        "os.getenv",
        "print",
        "print",
        "workflow_file.endswith",
        "print",
        "print",
        "print",
        "print",
        "print",
        "traceback.print_exc",
        "print",
        "agent_v3.execute_workflow_from_file",
        "display_execution_result",
        "agent_v3.get_workflow_info",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "', '.join"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/demo_static_workflow.py:main"
    },
    {
      "type": "function",
      "name": "setup_agent_team",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/demo_static_workflow.py",
      "line_number": 119,
      "complexity": 1,
      "docstring": "\u8bbe\u7f6e\u667a\u80fd\u4f53\u56e2\u961f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "agent_v3",
        "llm"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Agent",
        "Agent",
        "Agent",
        "agent_v3.register_agent",
        "agent_v3.register_agent",
        "agent_v3.register_agent",
        "print",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/demo_static_workflow.py:setup_agent_team"
    },
    {
      "type": "function",
      "name": "create_demo_workflow",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/demo_static_workflow.py",
      "line_number": 151,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u6f14\u793a\u5de5\u4f5c\u6d41",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "WorkflowLoader",
        "loader.load_from_dict"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/demo_static_workflow.py:create_demo_workflow"
    },
    {
      "type": "function",
      "name": "display_execution_result",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/demo_static_workflow.py",
      "line_number": 259,
      "complexity": 1,
      "docstring": "\u663e\u793a\u5de5\u4f5c\u6d41\u6267\u884c\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "result.step_results.items",
        "print",
        "{'completed': '\u2705', 'failed': '\u274c', 'skipped': '\u23ed\ufe0f', 'pending': '\u23f8\ufe0f', 'running': '\ud83d\udd04'}.get",
        "print",
        "print",
        "print",
        "step_info.get",
        "hasattr",
        "print",
        "len",
        "stdout.strip",
        "len",
        "preview.strip"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/demo_static_workflow.py:display_execution_result"
    },
    {
      "type": "class",
      "name": "DemoAgent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/demo_agent_compression.py",
      "line_number": 16,
      "complexity": 1,
      "docstring": "\u6f14\u793a\u7528\u7684Agent\u7c7b\uff0c\u5e26\u6709\u6d88\u606f\u538b\u7f29\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "chat_with_compression"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "AgentBase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/demo_agent_compression.py:DemoAgent"
    },
    {
      "type": "function",
      "name": "demo_compression",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/demo_agent_compression.py",
      "line_number": 45,
      "complexity": 1,
      "docstring": "\u6f14\u793a\u538b\u7f29\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "DemoAgent",
        "print",
        "print",
        "enumerate",
        "print",
        "print",
        "print",
        "print",
        "print",
        "enumerate",
        "os.getenv",
        "ChatOpenAI",
        "print",
        "print",
        "print",
        "agent.chat_with_compression",
        "print",
        "print",
        "print",
        "print",
        "ValueError",
        "print",
        "hasattr",
        "print",
        "type",
        "len",
        "len",
        "len",
        "hasattr",
        "len",
        "len",
        "str",
        "hasattr",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/demo_agent_compression.py:demo_compression"
    },
    {
      "type": "function",
      "name": "chat_with_compression",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/demo_agent_compression.py",
      "line_number": 20,
      "complexity": 1,
      "docstring": "\u5e26\u6709\u6d88\u606f\u538b\u7f29\u529f\u80fd\u7684\u804a\u5929\u65b9\u6cd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "message"
      ],
      "decorators": [
        "reduce_memory_decorator_compress(max_tokens=2000)"
      ],
      "inheritance": [],
      "calls": [
        "reduce_memory_decorator_compress",
        "self.memory.append",
        "HumanMessage",
        "self.memory.append",
        "self.llm.invoke",
        "self.memory.append",
        "AIMessage",
        "AIMessage",
        "self.memory.append",
        "AIMessage",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/demo_agent_compression.py:chat_with_compression"
    },
    {
      "type": "class",
      "name": "TestConfigurationSystem",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_config_system.py",
      "line_number": 19,
      "complexity": 1,
      "docstring": "Test cases for configuration system",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "tearDown",
        "test_default_configuration",
        "test_yaml_configuration_loading",
        "test_json_configuration_loading",
        "test_partial_configuration",
        "test_invalid_configuration_file",
        "test_nonexistent_configuration_file",
        "test_unsupported_file_format",
        "test_configuration_reload",
        "test_global_configuration_functions",
        "test_fallback_strategies_validation",
        "test_configuration_with_comments"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_config_system.py:TestConfigurationSystem"
    },
    {
      "type": "class",
      "name": "TestConfigurationIntegration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_config_system.py",
      "line_number": 272,
      "complexity": 1,
      "docstring": "Integration tests for configuration system",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "test_configuration_with_existing_yaml"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_config_system.py:TestConfigurationIntegration"
    },
    {
      "type": "function",
      "name": "run_basic_tests",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_config_system.py",
      "line_number": 290,
      "complexity": 1,
      "docstring": "Run basic configuration system tests",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "ConfigurationLoader",
        "loader.get_config",
        "print",
        "print",
        "os.path.exists",
        "print",
        "get_config",
        "print",
        "print",
        "ConfigurationLoader",
        "file_loader.load_config",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "traceback.print_exc",
        "type",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_config_system.py:run_basic_tests"
    },
    {
      "type": "function",
      "name": "setUp",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_config_system.py",
      "line_number": 22,
      "complexity": 1,
      "docstring": "Set up test environment",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "tempfile.mkdtemp"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_config_system.py:setUp"
    },
    {
      "type": "function",
      "name": "tearDown",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_config_system.py",
      "line_number": 26,
      "complexity": 1,
      "docstring": "Clean up test environment",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "shutil.rmtree"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_config_system.py:tearDown"
    },
    {
      "type": "function",
      "name": "test_default_configuration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_config_system.py",
      "line_number": 31,
      "complexity": 1,
      "docstring": "Test loading default configuration when no file exists",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "ConfigurationLoader",
        "loader.load_config",
        "self.assertIsInstance",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertFalse",
        "self.assertIsInstance",
        "self.assertEqual",
        "self.assertIsInstance",
        "self.assertEqual",
        "self.assertIsInstance",
        "self.assertEqual",
        "self.assertIsInstance",
        "self.assertTrue"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_config_system.py:test_default_configuration"
    },
    {
      "type": "function",
      "name": "test_yaml_configuration_loading",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_config_system.py",
      "line_number": 55,
      "complexity": 1,
      "docstring": "Test loading configuration from YAML file",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "os.path.join",
        "ConfigurationLoader",
        "loader.load_config",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertTrue",
        "self.assertEqual",
        "self.assertTrue",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertFalse",
        "self.assertFalse",
        "self.assertEqual",
        "open",
        "yaml.dump"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_config_system.py:test_yaml_configuration_loading"
    },
    {
      "type": "function",
      "name": "test_json_configuration_loading",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_config_system.py",
      "line_number": 105,
      "complexity": 1,
      "docstring": "Test loading configuration from JSON file",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "os.path.join",
        "ConfigurationLoader",
        "loader.load_config",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "open",
        "json.dump"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_config_system.py:test_json_configuration_loading"
    },
    {
      "type": "function",
      "name": "test_partial_configuration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_config_system.py",
      "line_number": 128,
      "complexity": 1,
      "docstring": "Test loading partial configuration with default values",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "os.path.join",
        "ConfigurationLoader",
        "loader.load_config",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "open",
        "yaml.dump"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_config_system.py:test_partial_configuration"
    },
    {
      "type": "function",
      "name": "test_invalid_configuration_file",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_config_system.py",
      "line_number": 153,
      "complexity": 1,
      "docstring": "Test handling of invalid configuration file",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "os.path.join",
        "ConfigurationLoader",
        "open",
        "f.write",
        "self.assertRaises",
        "loader.load_config"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_config_system.py:test_invalid_configuration_file"
    },
    {
      "type": "function",
      "name": "test_nonexistent_configuration_file",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_config_system.py",
      "line_number": 165,
      "complexity": 1,
      "docstring": "Test handling of nonexistent configuration file",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "os.path.join",
        "ConfigurationLoader",
        "loader.load_config",
        "self.assertIsInstance",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_config_system.py:test_nonexistent_configuration_file"
    },
    {
      "type": "function",
      "name": "test_unsupported_file_format",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_config_system.py",
      "line_number": 175,
      "complexity": 1,
      "docstring": "Test handling of unsupported file format",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "os.path.join",
        "ConfigurationLoader",
        "open",
        "f.write",
        "self.assertRaises",
        "loader.load_config"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_config_system.py:test_unsupported_file_format"
    },
    {
      "type": "function",
      "name": "test_configuration_reload",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_config_system.py",
      "line_number": 186,
      "complexity": 1,
      "docstring": "Test configuration reloading",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "os.path.join",
        "ConfigurationLoader",
        "loader.load_config",
        "self.assertEqual",
        "loader.reload_config",
        "self.assertEqual",
        "open",
        "yaml.dump",
        "open",
        "yaml.dump"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_config_system.py:test_configuration_reload"
    },
    {
      "type": "function",
      "name": "test_global_configuration_functions",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_config_system.py",
      "line_number": 208,
      "complexity": 1,
      "docstring": "Test global configuration functions",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "os.path.join",
        "initialize_config",
        "self.assertEqual",
        "get_config",
        "self.assertEqual",
        "open",
        "yaml.dump"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_config_system.py:test_global_configuration_functions"
    },
    {
      "type": "function",
      "name": "test_fallback_strategies_validation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_config_system.py",
      "line_number": 225,
      "complexity": 1,
      "docstring": "Test validation of fallback strategies",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "os.path.join",
        "ConfigurationLoader",
        "loader.load_config",
        "self.assertEqual",
        "open",
        "yaml.dump"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_config_system.py:test_fallback_strategies_validation"
    },
    {
      "type": "function",
      "name": "test_configuration_with_comments",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_config_system.py",
      "line_number": 247,
      "complexity": 1,
      "docstring": "Test loading YAML configuration with comments",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "os.path.join",
        "ConfigurationLoader",
        "loader.load_config",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "open",
        "f.write"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_config_system.py:test_configuration_with_comments"
    },
    {
      "type": "function",
      "name": "test_configuration_with_existing_yaml",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_config_system.py",
      "line_number": 275,
      "complexity": 1,
      "docstring": "Test loading configuration from existing config.yaml",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "os.path.exists",
        "ConfigurationLoader",
        "loader.load_config",
        "self.assertIsInstance",
        "print",
        "print",
        "print",
        "print",
        "self.skipTest"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_config_system.py:test_configuration_with_existing_yaml"
    },
    {
      "type": "function",
      "name": "create_deepseek_llm",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_taskmaster_deepseek.py",
      "line_number": 28,
      "complexity": 1,
      "docstring": "\u521b\u5efa DeepSeek LLM \u5ba2\u6237\u7aef",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "os.getenv",
        "ChatOpenAI",
        "ValueError"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_taskmaster_deepseek.py:create_deepseek_llm"
    },
    {
      "type": "function",
      "name": "create_deepseek_agents",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_taskmaster_deepseek.py",
      "line_number": 44,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u4f7f\u7528 DeepSeek \u7684\u667a\u80fd\u4f53",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "create_deepseek_llm",
        "Agent",
        "Agent",
        "tester_agent.loadKnowledge",
        "Agent",
        "AgentSpecification",
        "AgentSpecification",
        "AgentSpecification"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_taskmaster_deepseek.py:create_deepseek_agents"
    },
    {
      "type": "function",
      "name": "test_taskmaster_with_deepseek",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_taskmaster_deepseek.py",
      "line_number": 68,
      "complexity": 1,
      "docstring": "\u4f7f\u7528 DeepSeek \u6d4b\u8bd5 TaskMaster \u7cfb\u7edf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "create_deepseek_llm",
        "llm.invoke",
        "print",
        "Path",
        "project_dir.mkdir",
        "print",
        "print",
        "create_deepseek_agents",
        "print",
        "print",
        "TaskMasterAgent",
        "print",
        "print",
        "tm_agent.get_project_status",
        "print",
        "print",
        "print",
        "tm_agent.execute_multi_step",
        "print",
        "print",
        "print",
        "tasks_file.exists",
        "print",
        "print",
        "tasks_data.get('master', {}).get",
        "print",
        "logger.error",
        "print",
        "traceback.print_exc",
        "HumanMessage",
        "str",
        "open",
        "json.load",
        "print",
        "print",
        "print",
        "print",
        "print",
        "project_dir.resolve",
        "len",
        "tasks_data.get",
        "len",
        "task.get",
        "task.get",
        "task.get",
        "task.get",
        "task.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_taskmaster_deepseek.py:test_taskmaster_with_deepseek"
    },
    {
      "type": "class",
      "name": "Calculator",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/simple_calculator.py",
      "line_number": 5,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "add",
        "subtract",
        "multiply",
        "divide"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/simple_calculator.py:Calculator"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/simple_calculator.py",
      "line_number": 6,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u8ba1\u7b97\u5668\u5b9e\u4f8b\n\u53ef\u4ee5\u6dfb\u52a0\u72b6\u6001\u53d8\u91cf\u5982\u5386\u53f2\u8bb0\u5f55\u7b49",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/simple_calculator.py:__init__"
    },
    {
      "type": "function",
      "name": "add",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/simple_calculator.py",
      "line_number": 13,
      "complexity": 1,
      "docstring": "\u52a0\u6cd5\u8fd0\u7b97\na: \u7b2c\u4e00\u4e2a\u64cd\u4f5c\u6570\nb: \u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u6570\n\u8fd4\u56de: a + b \u7684\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "a",
        "b"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.history.append",
        "self.history.append",
        "ValueError",
        "type",
        "type"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/simple_calculator.py:add"
    },
    {
      "type": "function",
      "name": "subtract",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/simple_calculator.py",
      "line_number": 28,
      "complexity": 1,
      "docstring": "\u51cf\u6cd5\u8fd0\u7b97\na: \u88ab\u51cf\u6570\nb: \u51cf\u6570\n\u8fd4\u56de: a - b \u7684\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "a",
        "b"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.history.append",
        "self.history.append",
        "ValueError",
        "type",
        "type"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/simple_calculator.py:subtract"
    },
    {
      "type": "function",
      "name": "multiply",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/simple_calculator.py",
      "line_number": 43,
      "complexity": 1,
      "docstring": "\u4e58\u6cd5\u8fd0\u7b97\na: \u7b2c\u4e00\u4e2a\u56e0\u6570\nb: \u7b2c\u4e8c\u4e2a\u56e0\u6570\n\u8fd4\u56de: a * b \u7684\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "a",
        "b"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.history.append",
        "self.history.append",
        "ValueError",
        "type",
        "type"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/simple_calculator.py:multiply"
    },
    {
      "type": "function",
      "name": "divide",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/simple_calculator.py",
      "line_number": 58,
      "complexity": 1,
      "docstring": "\u9664\u6cd5\u8fd0\u7b97\na: \u88ab\u9664\u6570\nb: \u9664\u6570\n\u8fd4\u56de: a / b \u7684\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "a",
        "b"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.history.append",
        "self.history.append",
        "ZeroDivisionError",
        "self.history.append",
        "ValueError",
        "type",
        "type"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/simple_calculator.py:divide"
    },
    {
      "type": "function",
      "name": "saveIpython",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/ipython_state_utils.py",
      "line_number": 58,
      "complexity": 1,
      "docstring": "\u4fdd\u5b58IPython\u73af\u5883\u72b6\u6001\u5230\u6587\u4ef6\uff08\u5305\u62ec\u53d8\u91cf\u3001\u51fd\u6570\u548c\u7c7b\uff09\n\n\u53c2\u6570:\nipython: IPython\u5b9e\u4f8b\uff08\u901a\u8fc7 get_ipython() \u83b7\u53d6\uff09\nfile_path: \u4fdd\u5b58\u8def\u5f84\n\n\u8fd4\u56de: \u6210\u529f\u8fd4\u56deTrue\uff0c\u5426\u5219False",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "ipython",
        "file_path"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.error",
        "logger.info",
        "ns.items",
        "logger.info",
        "any",
        "open",
        "dill.dump",
        "logger.error",
        "isinstance",
        "name.startswith",
        "name.startswith",
        "name.startswith",
        "dill.dumps",
        "logger.debug",
        "len",
        "name.startswith",
        "name.endswith",
        "logger.warning",
        "len",
        "str",
        "type",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/ipython_state_utils.py:saveIpython"
    },
    {
      "type": "function",
      "name": "loadIpython",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/ipython_state_utils.py",
      "line_number": 108,
      "complexity": 1,
      "docstring": "\u4ece\u6587\u4ef6\u52a0\u8f7dIPython\u73af\u5883\u72b6\u6001\uff08\u6062\u590d\u53d8\u91cf\u3001\u51fd\u6570\u548c\u7c7b\uff09\n\n\u53c2\u6570:\nipython: IPython\u5b9e\u4f8b\uff08\u901a\u8fc7 get_ipython() \u83b7\u53d6\uff09\nfile_path: \u52a0\u8f7d\u8def\u5f84\n\n\u8fd4\u56de: \u6210\u529f\u8fd4\u56deTrue\uff0c\u5426\u5219False",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "ipython",
        "file_path"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.error",
        "os.path.exists",
        "logger.error",
        "len",
        "state.items",
        "logger.info",
        "open",
        "dill.load",
        "logger.error",
        "dill.loads",
        "logger.info",
        "logger.error",
        "str",
        "type",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/ipython_state_utils.py:loadIpython"
    },
    {
      "type": "function",
      "name": "debug_workflow_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/debug_workflow.py",
      "line_number": 5,
      "complexity": 1,
      "docstring": "\u8c03\u8bd5\u5de5\u4f5c\u6d41\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "agent"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "agent.get_plan",
        "print",
        "enumerate",
        "print",
        "print",
        "print",
        "agent.select_next_executable_step",
        "print",
        "print",
        "print",
        "print",
        "step.get",
        "step.get",
        "print",
        "print",
        "print",
        "len",
        "len",
        "len",
        "len",
        "s.get",
        "s.get",
        "s.get",
        "len",
        "len",
        "len",
        "step.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/debug_workflow.py:debug_workflow_state"
    },
    {
      "type": "function",
      "name": "test_exit_on_max_fix",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_exit_on_max_fix.py",
      "line_number": 22,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5exit_on_max\u5f15\u7528\u4fee\u590d\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "ChatOpenAI",
        "Agent",
        "MultiStepAgent_v3",
        "print",
        "print",
        "print",
        "agent_v3._fix_workflow_references",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "step3.get",
        "control_flow.get",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "agent_v3.workflow_loader.load_from_dict",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "next",
        "print",
        "print",
        "print",
        "print",
        "os.getenv",
        "RegisteredAgent",
        "RegisteredAgent",
        "RegisteredAgent",
        "print",
        "print",
        "control_flow.get",
        "control_flow.get",
        "control_flow.get",
        "target_step.get('control_flow', {}).get",
        "len",
        "target_step.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_exit_on_max_fix.py:test_exit_on_max_fix"
    },
    {
      "type": "class",
      "name": "MockStepExecutor",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_loop_exit.py",
      "line_number": 23,
      "complexity": 1,
      "docstring": "\u6a21\u62df\u6b65\u9aa4\u6267\u884c\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "execute_step"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_loop_exit.py:MockStepExecutor"
    },
    {
      "type": "class",
      "name": "ForcedFailureEvaluator",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_loop_exit.py",
      "line_number": 133,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "evaluate_control_flow_condition",
        "set_context",
        "evaluate_condition",
        "interpolate_value"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_loop_exit.py:ForcedFailureEvaluator"
    },
    {
      "type": "function",
      "name": "create_test_workflow",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_loop_exit.py",
      "line_number": 68,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u6d4b\u8bd5\u5de5\u4f5c\u6d41",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "WorkflowDefinition",
        "WorkflowMetadata",
        "WorkflowStep",
        "WorkflowStep",
        "WorkflowStep",
        "ControlFlow",
        "ControlFlow",
        "ControlFlow"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_loop_exit.py:create_test_workflow"
    },
    {
      "type": "function",
      "name": "test_loop_exit_mechanism",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_loop_exit.py",
      "line_number": 116,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5faa\u73af\u9000\u51fa\u673a\u5236",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "StaticWorkflowEngine",
        "MockStepExecutor",
        "engine.set_step_executor",
        "create_test_workflow",
        "ForcedFailureEvaluator",
        "print",
        "engine.execute_workflow",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "mock_executor.execution_count.items",
        "mock_executor.execution_count.get",
        "mock_executor.execution_count.get",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "getattr",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_loop_exit.py:test_loop_exit_mechanism"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_loop_exit.py",
      "line_number": 26,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_loop_exit.py:__init__"
    },
    {
      "type": "function",
      "name": "execute_step",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_loop_exit.py",
      "line_number": 29,
      "complexity": 1,
      "docstring": "\u6a21\u62df\u6b65\u9aa4\u6267\u884c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "self.execution_count.get",
        "Result",
        "Result",
        "Result"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_loop_exit.py:execute_step"
    },
    {
      "type": "function",
      "name": "evaluate_control_flow_condition",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_loop_exit.py",
      "line_number": 134,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "control_flow",
        "default_success_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "getattr",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_loop_exit.py:evaluate_control_flow_condition"
    },
    {
      "type": "function",
      "name": "set_context",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_loop_exit.py",
      "line_number": 140,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_loop_exit.py:set_context"
    },
    {
      "type": "function",
      "name": "evaluate_condition",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_loop_exit.py",
      "line_number": 143,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "condition"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_loop_exit.py:evaluate_condition"
    },
    {
      "type": "function",
      "name": "interpolate_value",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_loop_exit.py",
      "line_number": 146,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "value"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_loop_exit.py:interpolate_value"
    },
    {
      "type": "class",
      "name": "MockAgent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_basic.py",
      "line_number": 35,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "AgentBase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_basic.py:MockAgent"
    },
    {
      "type": "function",
      "name": "test_imports",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_basic.py",
      "line_number": 6,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u57fa\u672c\u5bfc\u5165\u662f\u5426\u6b63\u5e38",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_basic.py:test_imports"
    },
    {
      "type": "function",
      "name": "test_basic_functionality",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_basic.py",
      "line_number": 22,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u57fa\u672c\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "MockAgent",
        "RegisteredAgent",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_basic.py:test_basic_functionality"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_basic.py",
      "line_number": 36,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_basic.py:__init__"
    },
    {
      "type": "class",
      "name": "TestExecutionModel",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_execution_model.py",
      "line_number": 22,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6267\u884c\u5b9e\u4f8b\u6a21\u578b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "mock_step_executor",
        "test_execution_context_basic_functions",
        "test_execution_statistics",
        "test_step_execution_properties",
        "test_should_execute_step_logic"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_execution_model.py:TestExecutionModel"
    },
    {
      "type": "function",
      "name": "setUp",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_execution_model.py",
      "line_number": 25,
      "complexity": 1,
      "docstring": "\u8bbe\u7f6e\u6d4b\u8bd5\u6570\u636e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_execution_model.py:setUp"
    },
    {
      "type": "function",
      "name": "mock_step_executor",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_execution_model.py",
      "line_number": 29,
      "complexity": 1,
      "docstring": "\u6a21\u62df\u6b65\u9aa4\u6267\u884c\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_execution_model.py:mock_step_executor"
    },
    {
      "type": "function",
      "name": "test_execution_context_basic_functions",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_execution_model.py",
      "line_number": 53,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6267\u884c\u4e0a\u4e0b\u6587\u7684\u57fa\u672c\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "WorkflowExecutionContext",
        "context.create_execution",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "context.create_execution",
        "self.assertEqual",
        "context.get_current_execution",
        "self.assertEqual",
        "context.get_execution_history",
        "self.assertEqual",
        "print",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_execution_model.py:test_execution_context_basic_functions"
    },
    {
      "type": "function",
      "name": "test_execution_statistics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_execution_model.py",
      "line_number": 80,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6267\u884c\u7edf\u8ba1\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "WorkflowExecutionContext",
        "context.create_execution",
        "context.create_execution",
        "context.create_execution",
        "context.get_step_statistics",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "context.get_workflow_statistics",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_execution_model.py:test_execution_statistics"
    },
    {
      "type": "function",
      "name": "test_step_execution_properties",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_execution_model.py",
      "line_number": 112,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6b65\u9aa4\u6267\u884c\u5b9e\u4f8b\u7684\u5c5e\u6027",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "StepExecution",
        "self.assertFalse",
        "self.assertIsNone",
        "datetime.now",
        "datetime.now",
        "self.assertTrue",
        "self.assertIsNotNone",
        "self.assertGreaterEqual",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_execution_model.py:test_step_execution_properties"
    },
    {
      "type": "function",
      "name": "test_should_execute_step_logic",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_execution_model.py",
      "line_number": 138,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6b65\u9aa4\u6267\u884c\u5224\u65ad\u903b\u8f91",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "WorkflowExecutionContext",
        "self.assertTrue",
        "context.create_execution",
        "self.assertFalse",
        "self.assertTrue",
        "print",
        "context.should_execute_step",
        "context.should_execute_step",
        "context.should_execute_step"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_execution_model.py:test_should_execute_step_logic"
    },
    {
      "type": "class",
      "name": "MockLLM",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_taskmaster_fixed.py",
      "line_number": 27,
      "complexity": 1,
      "docstring": "\u6a21\u62df LLM\uff0c\u7528\u4e8e\u6f14\u793a\u4efb\u52a1\u6267\u884c\u6d41\u7a0b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "_generate",
        "_llm_type",
        "_identifying_params"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "BaseChatModel"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_taskmaster_fixed.py:MockLLM"
    },
    {
      "type": "function",
      "name": "create_mock_agents",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_taskmaster_fixed.py",
      "line_number": 99,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u4f7f\u7528\u6a21\u62df LLM \u7684\u667a\u80fd\u4f53",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "MockLLM",
        "Agent",
        "Agent",
        "Agent",
        "AgentSpecification",
        "AgentSpecification",
        "AgentSpecification"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_taskmaster_fixed.py:create_mock_agents"
    },
    {
      "type": "function",
      "name": "test_taskmaster_fixed",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_taskmaster_fixed.py",
      "line_number": 122,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u4fee\u590d\u540e\u7684 TaskMaster \u7cfb\u7edf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "Path",
        "project_dir.mkdir",
        "print",
        "print",
        "create_mock_agents",
        "print",
        "print",
        "MockLLM",
        "TaskMasterAgent",
        "print",
        "print",
        "tm_agent.get_project_status",
        "print",
        "print",
        "print",
        "tm_agent.execute_multi_step",
        "print",
        "print",
        "print",
        "tasks_file.exists",
        "print",
        "print",
        "tm_agent.research",
        "print",
        "print",
        "tm_agent.get_complexity_analysis",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "tasks_data.get('master', {}).get",
        "print",
        "logger.error",
        "print",
        "traceback.print_exc",
        "str",
        "open",
        "json.load",
        "print",
        "print",
        "print",
        "print",
        "print",
        "project_dir.resolve",
        "len",
        "tasks_data.get",
        "len",
        "task.get",
        "task.get",
        "task.get",
        "task.get",
        "task.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_taskmaster_fixed.py:test_taskmaster_fixed"
    },
    {
      "type": "function",
      "name": "_generate",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_taskmaster_fixed.py",
      "line_number": 30,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "messages",
        "stop",
        "run_manager"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "AIMessage",
        "ChatGeneration",
        "ChatResult",
        "content.lower"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_taskmaster_fixed.py:_generate"
    },
    {
      "type": "function",
      "name": "_llm_type",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_taskmaster_fixed.py",
      "line_number": 91,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_taskmaster_fixed.py:_llm_type"
    },
    {
      "type": "function",
      "name": "_identifying_params",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_taskmaster_fixed.py",
      "line_number": 95,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [
        "property"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_taskmaster_fixed.py:_identifying_params"
    },
    {
      "type": "class",
      "name": "EnhancedAgentWithNewParser",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/integration_example.py",
      "line_number": 20,
      "complexity": 1,
      "docstring": "\u96c6\u6210\u65b0\u89e3\u6790\u5668\u7684\u589e\u5f3a\u667a\u80fd\u4f53\u793a\u4f8b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "_create_parser",
        "execute_step",
        "_update_workflow_state",
        "get_workflow_status",
        "demonstrate_natural_language_state"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/integration_example.py:EnhancedAgentWithNewParser"
    },
    {
      "type": "function",
      "name": "demo_integration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/integration_example.py",
      "line_number": 179,
      "complexity": 1,
      "docstring": "\u6f14\u793a\u96c6\u6210\u6548\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "EnhancedAgentWithNewParser",
        "print",
        "agent.get_workflow_status",
        "print",
        "print",
        "print",
        "agent.demonstrate_natural_language_state",
        "print",
        "print",
        "agent.execute_step",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/integration_example.py:demo_integration"
    },
    {
      "type": "function",
      "name": "demo_comparison",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/integration_example.py",
      "line_number": 230,
      "complexity": 1,
      "docstring": "\u6f14\u793a\u4e0d\u540c\u89e3\u6790\u5668\u7684\u6548\u679c\u5bf9\u6bd4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "EnhancedAgentWithNewParser",
        "agent.response_parser.parse_response",
        "print",
        "print",
        "print",
        "print",
        "print",
        "result.extracted_entities.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/integration_example.py:demo_comparison"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/integration_example.py",
      "line_number": 23,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u667a\u80fd\u4f53\n\nArgs:\n    parser_method: \u89e3\u6790\u65b9\u6cd5 (\"rule\", \"transformer\", \"deepseek\", \"embedding\")\n    **parser_kwargs: \u89e3\u6790\u5668\u7684\u5176\u4ed6\u53c2\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "parser_method"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logging.getLogger",
        "self._create_parser",
        "self.logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/integration_example.py:__init__"
    },
    {
      "type": "function",
      "name": "_create_parser",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/integration_example.py",
      "line_number": 45,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u89e3\u6790\u5668\u5b9e\u4f8b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "method"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "ParserFactory.create_rule_parser",
        "ParserFactory.create_transformer_parser",
        "ParserFactory.create_deepseek_parser",
        "kwargs.get",
        "ParserFactory.create_embedding_parser",
        "kwargs.pop",
        "kwargs.pop",
        "ParserFactory.create_hybrid_parser",
        "self.logger.warning",
        "ParserFactory.create_rule_parser"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/integration_example.py:_create_parser"
    },
    {
      "type": "function",
      "name": "execute_step",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/integration_example.py",
      "line_number": 68,
      "complexity": 1,
      "docstring": "\u6267\u884c\u6b65\u9aa4\u5e76\u89e3\u6790\u54cd\u5e94\n\nArgs:\n    instruction: \u6267\u884c\u6307\u4ee4\n    context: \u6267\u884c\u4e0a\u4e0b\u6587\n    \nReturns:\n    \u6267\u884c\u7ed3\u679c\u5b57\u5178",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.logger.info",
        "self.response_parser.parse_response",
        "self._update_workflow_state",
        "self.logger.info",
        "parsed_result.extracted_entities.get",
        "parsed_result.quality_metrics.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/integration_example.py:execute_step"
    },
    {
      "type": "function",
      "name": "_update_workflow_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/integration_example.py",
      "line_number": 122,
      "complexity": 1,
      "docstring": "\u66f4\u65b0\u5de5\u4f5c\u6d41\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "execution_result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.workflow_state['execution_history'].append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/integration_example.py:_update_workflow_state"
    },
    {
      "type": "function",
      "name": "get_workflow_status",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/integration_example.py",
      "line_number": 143,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u5de5\u4f5c\u6d41\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.response_parser.get_stats",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/integration_example.py:get_workflow_status"
    },
    {
      "type": "function",
      "name": "demonstrate_natural_language_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/integration_example.py",
      "line_number": 154,
      "complexity": 1,
      "docstring": "\u6f14\u793a\u81ea\u7136\u8bed\u8a00\u72b6\u6001\u63cf\u8ff0",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_workflow_status"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/integration_example.py:demonstrate_natural_language_state"
    },
    {
      "type": "function",
      "name": "test_message_compression",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_compression.py",
      "line_number": 10,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6d88\u606f\u538b\u7f29\u529f\u80fd\u5e76\u663e\u793a\u6458\u8981\u5185\u5bb9",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "enumerate",
        "print",
        "print",
        "print",
        "compress_messages",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "test_messages.append",
        "test_messages.append",
        "print",
        "traceback.print_exc",
        "HumanMessage",
        "AIMessage",
        "len",
        "len",
        "len",
        "type",
        "type",
        "len",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_compression.py:test_message_compression"
    },
    {
      "type": "function",
      "name": "create_mock_llm",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/demo_natural_language_state.py",
      "line_number": 31,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u6a21\u62dfLLM\uff0c\u63d0\u4f9b\u667a\u80fd\u7684\u54cd\u5e94",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Mock",
        "Mock",
        "hasattr",
        "Mock",
        "condition_responses.items",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/demo_natural_language_state.py:create_mock_llm"
    },
    {
      "type": "function",
      "name": "demo_state_updates",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/demo_natural_language_state.py",
      "line_number": 92,
      "complexity": 1,
      "docstring": "\u6f14\u793a\u72b6\u6001\u66f4\u65b0\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "create_mock_llm",
        "GlobalStateUpdater",
        "WorkflowExecutionContext",
        "context.update_global_state",
        "print",
        "print",
        "enumerate",
        "print",
        "print",
        "print",
        "WorkflowStep",
        "StepExecution",
        "updater.update_state",
        "context.update_global_state",
        "print",
        "print",
        "context.get_state_summary",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/demo_natural_language_state.py:demo_state_updates"
    },
    {
      "type": "function",
      "name": "demo_natural_language_conditions",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/demo_natural_language_state.py",
      "line_number": 155,
      "complexity": 1,
      "docstring": "\u6f14\u793a\u81ea\u7136\u8bed\u8a00\u6761\u4ef6\u8bc4\u4f30",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "create_mock_llm",
        "ControlFlowEvaluator",
        "Mock",
        "evaluator.set_context",
        "print",
        "evaluator.evaluate_natural_language_condition",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/demo_natural_language_state.py:demo_natural_language_conditions"
    },
    {
      "type": "function",
      "name": "demo_backward_compatibility",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/demo_natural_language_state.py",
      "line_number": 202,
      "complexity": 1,
      "docstring": "\u6f14\u793a\u5411\u540e\u517c\u5bb9\u6027",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "WorkflowLoader",
        "loader.load_from_file",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "workflow.global_variables.items",
        "print",
        "print",
        "print",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/demo_natural_language_state.py:demo_backward_compatibility"
    },
    {
      "type": "function",
      "name": "demo_mixed_mode",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/demo_natural_language_state.py",
      "line_number": 231,
      "complexity": 1,
      "docstring": "\u6f14\u793a\u6df7\u5408\u6a21\u5f0f\uff1a\u4f20\u7edf\u53d8\u91cf + \u81ea\u7136\u8bed\u8a00\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "WorkflowDefinition",
        "print",
        "print",
        "print",
        "GlobalStateUpdater",
        "updater.extract_structured_data",
        "print",
        "extracted_data.items",
        "print",
        "workflow.global_variables.items",
        "print",
        "print",
        "extracted_data.get",
        "print",
        "WorkflowMetadata"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/demo_natural_language_state.py:demo_mixed_mode"
    },
    {
      "type": "function",
      "name": "main",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/demo_natural_language_state.py",
      "line_number": 293,
      "complexity": 1,
      "docstring": "\u4e3b\u6f14\u793a\u51fd\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "demo_state_updates",
        "demo_natural_language_conditions",
        "demo_backward_compatibility",
        "demo_mixed_mode",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "traceback.print_exc"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/demo_natural_language_state.py:main"
    },
    {
      "type": "function",
      "name": "mock_invoke",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/demo_natural_language_state.py",
      "line_number": 61,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "messages"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Mock",
        "hasattr",
        "Mock",
        "condition_responses.items",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/demo_natural_language_state.py:mock_invoke"
    },
    {
      "type": "function",
      "name": "test_mock_evaluator_with_real_output",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_mock_evaluator.py",
      "line_number": 14,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5MockTestResultEvaluator\u662f\u5426\u80fd\u6b63\u786e\u8bc4\u4f30\u771f\u5b9e\u7684unittest\u8f93\u51fa",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "subprocess.run",
        "print",
        "print",
        "print",
        "print",
        "MockTestResultEvaluator",
        "evaluator.evaluate_test_result",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_mock_evaluator.py:test_mock_evaluator_with_real_output"
    },
    {
      "type": "function",
      "name": "test_various_test_outputs",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_mock_evaluator.py",
      "line_number": 61,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5404\u79cd\u6d4b\u8bd5\u8f93\u51fa\u573a\u666f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "MockTestResultEvaluator",
        "enumerate",
        "print",
        "evaluator.evaluate_test_result",
        "print",
        "print",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_mock_evaluator.py:test_various_test_outputs"
    },
    {
      "type": "function",
      "name": "main",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_mock_evaluator.py",
      "line_number": 114,
      "complexity": 1,
      "docstring": "\u4e3b\u51fd\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "test_mock_evaluator_with_real_output",
        "test_various_test_outputs",
        "print",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_mock_evaluator.py:main"
    },
    {
      "type": "function",
      "name": "main",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/demo_execution_history.py",
      "line_number": 22,
      "complexity": 1,
      "docstring": "\u6267\u884c\u5386\u53f2\u6f14\u793a",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "ChatOpenAI",
        "Agent",
        "Agent",
        "MultiStepAgent_v3",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "os.getenv",
        "print",
        "print",
        "print",
        "agent_v3.execute_multi_step",
        "print",
        "print",
        "print",
        "print",
        "print",
        "os.path.exists",
        "os.getenv",
        "print",
        "print",
        "print",
        "print",
        "print",
        "traceback.print_exc",
        "RegisteredAgent",
        "RegisteredAgent",
        "print",
        "print",
        "print",
        "print",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/demo_execution_history.py:main"
    },
    {
      "type": "function",
      "name": "compress_messages",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/message_compress.py",
      "line_number": 27,
      "complexity": 1,
      "docstring": "\u538b\u7f29\u5bf9\u8bdd\u6d88\u606f\u5217\u8868\uff0c\u4fdd\u7559\u6700\u540e10\u6761\u6d88\u606f\u4e0d\u53d8\uff0c\u538b\u7f29\u524d\u9762\u7684\u6d88\u606f\u4e3a\u4e00\u6761\u4eba\u7c7b\u6d88\u606f\u548c\u4e00\u6761AI\u6d88\u606f\n\n\u53c2\u6570:\n    messages: \u6d88\u606f\u5217\u8868\uff0cHumanMessage\u548cAIMessage\u4ea4\u66ff\u51fa\u73b0\n    use_deepseek: \u662f\u5426\u4f7f\u7528DeepSeek\u6a21\u578b\uff0c\u9ed8\u8ba4False\n    \n\u8fd4\u56de:\n    \u538b\u7f29\u540e\u7684\u6d88\u606f\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "messages",
        "use_deepseek"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "isinstance",
        "TypeError",
        "TypeError",
        "len",
        "print",
        "isinstance",
        "selected_llm.invoke",
        "HumanMessage",
        "AIMessage",
        "isinstance",
        "len",
        "len",
        "len",
        "len",
        "type"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/message_compress.py:compress_messages"
    },
    {
      "type": "function",
      "name": "test_config_integration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_config_integration.py",
      "line_number": 12,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u914d\u7f6e\u7cfb\u7edf\u96c6\u6210",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "get_config",
        "print",
        "print",
        "print",
        "print",
        "WorkflowState",
        "print",
        "print",
        "print",
        "print",
        "print",
        "AIStateUpdaterService",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "AIStateUpdaterService",
        "print",
        "print",
        "print",
        "print",
        "workflow_state.set_global_state",
        "workflow_state.get_global_state",
        "workflow_state.get_state_history_count",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "traceback.print_exc",
        "type",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_config_integration.py:test_config_integration"
    },
    {
      "type": "function",
      "name": "test_configuration_loading",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_config_integration.py",
      "line_number": 98,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u4e0d\u540c\u914d\u7f6e\u52a0\u8f7d\u65b9\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "ConfigurationLoader",
        "default_loader.load_config",
        "print",
        "print",
        "os.path.exists",
        "print",
        "default_loader.reload_config",
        "print",
        "print",
        "ConfigurationLoader",
        "file_loader.load_config",
        "print",
        "print",
        "print",
        "traceback.print_exc",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_config_integration.py:test_configuration_loading"
    },
    {
      "type": "class",
      "name": "StateQueryTool",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/state_query_tool.py",
      "line_number": 42,
      "complexity": 1,
      "docstring": "\u72b6\u6001\u67e5\u8be2\u5de5\u5177\u4e3b\u7c7b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "_load_config",
        "create_sample_state",
        "load_state_from_file",
        "save_state_to_file",
        "_export_to_markdown",
        "display_current_state",
        "display_state_history",
        "compare_states",
        "display_memory_analysis",
        "interactive_mode",
        "_show_help",
        "_print_success",
        "_print_error",
        "_print_warning"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/state_query_tool.py:StateQueryTool"
    },
    {
      "type": "function",
      "name": "main",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/state_query_tool.py",
      "line_number": 488,
      "complexity": 1,
      "docstring": "\u4e3b\u51fd\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "argparse.ArgumentParser",
        "parser.add_argument",
        "parser.add_argument",
        "parser.add_argument",
        "parser.add_argument",
        "parser.add_argument",
        "parser.add_argument",
        "parser.add_argument",
        "parser.add_argument",
        "parser.add_argument",
        "parser.add_argument",
        "parser.parse_args",
        "StateQueryTool",
        "tool.load_state_from_file",
        "tool.interactive_mode",
        "tool.create_sample_state",
        "WorkflowState",
        "tool._print_warning",
        "tool.display_current_state",
        "tool.display_state_history",
        "tool.display_memory_analysis",
        "tool.display_state_history",
        "tool.display_state_history",
        "tool.save_state_to_file",
        "any",
        "tool.display_current_state",
        "tool.display_state_history",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/state_query_tool.py:main"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/state_query_tool.py",
      "line_number": 45,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u72b6\u6001\u67e5\u8be2\u5de5\u5177",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "config_path"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._load_config",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/state_query_tool.py:__init__"
    },
    {
      "type": "function",
      "name": "_load_config",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/state_query_tool.py",
      "line_number": 59,
      "complexity": 1,
      "docstring": "\u52a0\u8f7d\u914d\u7f6e\u6587\u4ef6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "ConfigurationLoader",
        "loader.load_config",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/state_query_tool.py:_load_config"
    },
    {
      "type": "function",
      "name": "create_sample_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/state_query_tool.py",
      "line_number": 71,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u793a\u4f8b\u72b6\u6001\u6570\u636e\u7528\u4e8e\u6f14\u793a",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "WorkflowState",
        "enumerate",
        "print",
        "state.set_global_state",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/state_query_tool.py:create_sample_state"
    },
    {
      "type": "function",
      "name": "load_state_from_file",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/state_query_tool.py",
      "line_number": 99,
      "complexity": 1,
      "docstring": "\u4ece\u6587\u4ef6\u52a0\u8f7d\u72b6\u6001\u6570\u636e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "file_path"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Path",
        "path.exists",
        "self._print_error",
        "path.suffix.lower",
        "self._print_error",
        "open",
        "json.load",
        "self._print_warning",
        "path.suffix.lower",
        "self._print_error",
        "open",
        "pickle.load",
        "isinstance",
        "self._print_error",
        "type"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/state_query_tool.py:load_state_from_file"
    },
    {
      "type": "function",
      "name": "save_state_to_file",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/state_query_tool.py",
      "line_number": 132,
      "complexity": 1,
      "docstring": "\u4fdd\u5b58\u72b6\u6001\u5230\u6587\u4ef6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "state",
        "file_path",
        "format"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Path",
        "path.parent.mkdir",
        "self._print_success",
        "format.lower",
        "state.get_state_history",
        "self._print_error",
        "state.get_global_state",
        "state.is_state_update_enabled",
        "state_data['history'].append",
        "open",
        "json.dump",
        "format.lower",
        "open",
        "pickle.dump",
        "format.lower",
        "entry.timestamp.isoformat",
        "open",
        "csv.writer",
        "writer.writerow",
        "state.get_state_history",
        "format.lower",
        "self._export_to_markdown",
        "self._print_error",
        "writer.writerow",
        "entry.timestamp.isoformat"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/state_query_tool.py:save_state_to_file"
    },
    {
      "type": "function",
      "name": "_export_to_markdown",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/state_query_tool.py",
      "line_number": 188,
      "complexity": 1,
      "docstring": "\u5bfc\u51fa\u72b6\u6001\u4e3aMarkdown\u683c\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "state",
        "file_path"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "open",
        "f.write",
        "f.write",
        "f.write",
        "state.get_global_state",
        "f.write",
        "f.write",
        "f.write",
        "hasattr",
        "f.write",
        "f.write",
        "state.get_state_history",
        "f.write",
        "f.write",
        "f.write",
        "f.write",
        "state.analyze_memory_usage",
        "memory_info.items",
        "entry.timestamp.strftime",
        "f.write",
        "datetime.now().strftime",
        "state.is_state_update_enabled",
        "f.write",
        "f.write",
        "len",
        "datetime.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/state_query_tool.py:_export_to_markdown"
    },
    {
      "type": "function",
      "name": "display_current_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/state_query_tool.py",
      "line_number": 230,
      "complexity": 1,
      "docstring": "\u663e\u793a\u5f53\u524d\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "state.get_global_state",
        "Panel",
        "console.print",
        "print",
        "print",
        "print",
        "state.get_global_state"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/state_query_tool.py:display_current_state"
    },
    {
      "type": "function",
      "name": "display_state_history",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/state_query_tool.py",
      "line_number": 245,
      "complexity": 1,
      "docstring": "\u663e\u793a\u72b6\u6001\u5386\u53f2",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "state",
        "limit",
        "source_filter",
        "search_term"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "state.get_state_history",
        "self._print_warning",
        "Table",
        "table.add_column",
        "table.add_column",
        "table.add_column",
        "console.print",
        "print",
        "enumerate",
        "entry.timestamp.strftime",
        "table.add_row",
        "entry.timestamp.strftime",
        "print",
        "print",
        "print",
        "search_term.lower",
        "entry.state_snapshot.lower",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/state_query_tool.py:display_state_history"
    },
    {
      "type": "function",
      "name": "compare_states",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/state_query_tool.py",
      "line_number": 285,
      "complexity": 1,
      "docstring": "\u6bd4\u8f83\u4e24\u4e2a\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "state1_text",
        "state2_text",
        "label1",
        "label2"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "list",
        "print",
        "list",
        "print",
        "difflib.unified_diff",
        "''.join",
        "Panel",
        "console.print",
        "console.print",
        "difflib.unified_diff",
        "print",
        "state1_text.splitlines",
        "state2_text.splitlines",
        "state1_text.splitlines",
        "state2_text.splitlines",
        "print",
        "line.rstrip"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/state_query_tool.py:compare_states"
    },
    {
      "type": "function",
      "name": "display_memory_analysis",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/state_query_tool.py",
      "line_number": 325,
      "complexity": 1,
      "docstring": "\u663e\u793a\u5185\u5b58\u5206\u6790",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "hasattr",
        "self._print_warning",
        "state.analyze_memory_usage",
        "Table",
        "table.add_column",
        "table.add_column",
        "table.add_column",
        "analysis.items",
        "console.print",
        "print",
        "analysis.items",
        "print",
        "self._print_error",
        "isinstance",
        "table.add_row",
        "print",
        "str",
        "key.lower",
        "key.lower",
        "float",
        "float"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/state_query_tool.py:display_memory_analysis"
    },
    {
      "type": "function",
      "name": "interactive_mode",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/state_query_tool.py",
      "line_number": 367,
      "complexity": 1,
      "docstring": "\u4ea4\u4e92\u5f0f\u6a21\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "console.print",
        "console.print",
        "print",
        "print",
        "command.split",
        "parts[0].lower",
        "Prompt.ask",
        "input('\u67e5\u8be2\u547d\u4ee4> ').strip",
        "print",
        "self._print_error",
        "self._show_help",
        "input",
        "self.display_current_state",
        "self.display_state_history",
        "int",
        "' '.join",
        "self.display_state_history",
        "parts[1].isdigit",
        "len",
        "self._print_error",
        "self.display_state_history",
        "len",
        "len",
        "self._print_error",
        "self.display_memory_analysis",
        "self.save_state_to_file",
        "len",
        "self._print_error",
        "self._print_error",
        "len",
        "self._print_error",
        "state.get_state_history",
        "int",
        "int",
        "self.compare_states",
        "self._print_error",
        "self._print_error",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/state_query_tool.py:interactive_mode"
    },
    {
      "type": "function",
      "name": "_show_help",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/state_query_tool.py",
      "line_number": 446,
      "complexity": 1,
      "docstring": "\u663e\u793a\u5e2e\u52a9\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "console.print",
        "print",
        "Panel"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/state_query_tool.py:_show_help"
    },
    {
      "type": "function",
      "name": "_print_success",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/state_query_tool.py",
      "line_number": 466,
      "complexity": 1,
      "docstring": "\u6253\u5370\u6210\u529f\u6d88\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "message"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "console.print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/state_query_tool.py:_print_success"
    },
    {
      "type": "function",
      "name": "_print_error",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/state_query_tool.py",
      "line_number": 473,
      "complexity": 1,
      "docstring": "\u6253\u5370\u9519\u8bef\u6d88\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "message"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "console.print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/state_query_tool.py:_print_error"
    },
    {
      "type": "function",
      "name": "_print_warning",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/state_query_tool.py",
      "line_number": 480,
      "complexity": 1,
      "docstring": "\u6253\u5370\u8b66\u544a\u6d88\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "message"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "console.print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/state_query_tool.py:_print_warning"
    },
    {
      "type": "function",
      "name": "create_test_agent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_decision_system.py",
      "line_number": 23,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u6d4b\u8bd5\u7528\u7684MultiStepAgent_v2\u5b9e\u4f8b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "RegisteredAgent",
        "MultiStepAgent_v2",
        "Agent"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_decision_system.py:create_test_agent"
    },
    {
      "type": "function",
      "name": "test_basic_decision_functionality",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_decision_system.py",
      "line_number": 41,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u57fa\u672c\u51b3\u7b56\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "create_test_agent",
        "agent.workflow_state.set_global_state",
        "StateCondition",
        "agent.add_conditional_decision",
        "print",
        "agent.evaluate_workflow_decision",
        "print",
        "print",
        "agent.workflow_state.set_global_state",
        "agent.evaluate_workflow_decision",
        "print",
        "print",
        "print",
        "traceback.print_exc"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_decision_system.py:test_basic_decision_functionality"
    },
    {
      "type": "function",
      "name": "test_validation_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_decision_system.py",
      "line_number": 94,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u9a8c\u8bc1\u51b3\u7b56\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "create_test_agent",
        "agent.workflow_state.set_global_state",
        "StateCondition",
        "agent.add_validation_decision",
        "print",
        "agent.evaluate_workflow_decision",
        "print",
        "print",
        "agent.workflow_state.set_global_state",
        "agent.evaluate_workflow_decision",
        "print",
        "print",
        "print",
        "traceback.print_exc"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_decision_system.py:test_validation_decision"
    },
    {
      "type": "function",
      "name": "test_complex_state_conditions",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_decision_system.py",
      "line_number": 147,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u590d\u6742\u72b6\u6001\u6761\u4ef6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "create_test_agent",
        "agent.workflow_state.set_global_state",
        "StateCondition",
        "agent.create_decision_node",
        "approval_node.add_condition",
        "approval_node.add_decision_path",
        "approval_node.add_decision_path",
        "approval_node.set_default_path",
        "print",
        "agent.evaluate_workflow_decision",
        "print",
        "print",
        "print",
        "print",
        "len",
        "print",
        "traceback.print_exc",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_decision_system.py:test_complex_state_conditions"
    },
    {
      "type": "function",
      "name": "test_decision_statistics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_decision_system.py",
      "line_number": 211,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u51b3\u7b56\u7edf\u8ba1\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "create_test_agent",
        "agent.reset_decision_statistics",
        "range",
        "agent.get_decision_statistics",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "agent.list_decision_nodes",
        "print",
        "print",
        "agent.workflow_state.set_global_state",
        "StateCondition",
        "agent.add_conditional_decision",
        "agent.evaluate_workflow_decision",
        "print",
        "print",
        "len",
        "print",
        "traceback.print_exc",
        "len",
        "str",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_decision_system.py:test_decision_statistics"
    },
    {
      "type": "function",
      "name": "test_edge_cases",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_decision_system.py",
      "line_number": 274,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u8fb9\u7f18\u60c5\u51b5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "create_test_agent",
        "agent.workflow_state.set_global_state",
        "StateCondition",
        "agent.add_conditional_decision",
        "agent.evaluate_workflow_decision",
        "print",
        "agent.workflow_state.set_global_state",
        "StateCondition",
        "agent.add_conditional_decision",
        "agent.evaluate_workflow_decision",
        "print",
        "print",
        "agent.evaluate_workflow_decision",
        "print",
        "print",
        "traceback.print_exc",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_decision_system.py:test_edge_cases"
    },
    {
      "type": "function",
      "name": "main",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_decision_system.py",
      "line_number": 340,
      "complexity": 1,
      "docstring": "\u8fd0\u884c\u6240\u6709\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "len",
        "print",
        "print",
        "test_func",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_decision_system.py:main"
    },
    {
      "type": "function",
      "name": "test_serialization_fix",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_memory_optimization.py",
      "line_number": 21,
      "complexity": 1,
      "docstring": "Test that the serialization problem is now fixed",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "WorkflowState",
        "state.set_global_state",
        "range",
        "state.set_global_state",
        "pickle.dumps",
        "print",
        "pickle.loads",
        "print",
        "state.get_global_state",
        "deserialized_state.get_global_state",
        "deserialized_state.set_global_state",
        "print",
        "print",
        "print",
        "print",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_memory_optimization.py:test_serialization_fix"
    },
    {
      "type": "function",
      "name": "test_memory_analysis",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_memory_optimization.py",
      "line_number": 61,
      "complexity": 1,
      "docstring": "Test memory usage analysis features",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "WorkflowState",
        "enumerate",
        "state.set_global_state",
        "state.get_memory_usage",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_memory_optimization.py:test_memory_analysis"
    },
    {
      "type": "function",
      "name": "test_history_compression",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_memory_optimization.py",
      "line_number": 93,
      "complexity": 1,
      "docstring": "Test history compression functionality",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "WorkflowState",
        "range",
        "state.set_global_state",
        "state.get_memory_usage",
        "print",
        "state.compress_history",
        "print",
        "state.get_memory_usage",
        "print",
        "state.get_decompressed_history",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_memory_optimization.py:test_history_compression"
    },
    {
      "type": "function",
      "name": "test_full_optimization",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_memory_optimization.py",
      "line_number": 146,
      "complexity": 1,
      "docstring": "Test the complete optimization pipeline",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "WorkflowState",
        "enumerate",
        "state.set_global_state",
        "state.optimize_memory",
        "state.set_global_state",
        "print",
        "print",
        "state.set_global_state",
        "state.get_global_state",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "', '.join"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_memory_optimization.py:test_full_optimization"
    },
    {
      "type": "function",
      "name": "main",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_memory_optimization.py",
      "line_number": 212,
      "complexity": 1,
      "docstring": "Run all memory optimization tests",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "len",
        "print",
        "print",
        "print",
        "print",
        "test_func",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_memory_optimization.py:main"
    },
    {
      "type": "class",
      "name": "MetricType",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 22,
      "complexity": 1,
      "docstring": "\u6307\u6807\u7c7b\u578b\u679a\u4e3e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:MetricType"
    },
    {
      "type": "class",
      "name": "MetricUnit",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 30,
      "complexity": 1,
      "docstring": "\u6307\u6807\u5355\u4f4d\u679a\u4e3e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:MetricUnit"
    },
    {
      "type": "class",
      "name": "MetricDefinition",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 41,
      "complexity": 1,
      "docstring": "\u6307\u6807\u5b9a\u4e49",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:MetricDefinition"
    },
    {
      "type": "class",
      "name": "MetricValue",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 49,
      "complexity": 1,
      "docstring": "\u6307\u6807\u503c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "NamedTuple"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:MetricValue"
    },
    {
      "type": "class",
      "name": "MetricStatistics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 56,
      "complexity": 1,
      "docstring": "\u6307\u6807\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "update"
      ],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:MetricStatistics"
    },
    {
      "type": "class",
      "name": "PerformanceTimer",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 86,
      "complexity": 1,
      "docstring": "\u6027\u80fd\u8ba1\u65f6\u5668\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "__enter__",
        "__exit__"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:PerformanceTimer"
    },
    {
      "type": "class",
      "name": "MetricCollector",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 104,
      "complexity": 1,
      "docstring": "\u6307\u6807\u6536\u96c6\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "_register_default_metrics",
        "register_metric",
        "record_counter",
        "record_gauge",
        "record_timer",
        "record_histogram",
        "_record_metric",
        "get_timer",
        "get_metric_statistics",
        "get_all_statistics",
        "get_recent_values",
        "clear_metrics",
        "export_metrics",
        "_export_json",
        "_export_prometheus"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:MetricCollector"
    },
    {
      "type": "class",
      "name": "SystemResourceMonitor",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 368,
      "complexity": 1,
      "docstring": "\u7cfb\u7edf\u8d44\u6e90\u76d1\u63a7\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "start_monitoring",
        "stop_monitoring",
        "_monitor_loop"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:SystemResourceMonitor"
    },
    {
      "type": "class",
      "name": "PerformanceMonitor",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 419,
      "complexity": 1,
      "docstring": "\u6027\u80fd\u76d1\u63a7\u4e3b\u7c7b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "enable",
        "disable",
        "is_enabled",
        "record_workflow_state_memory",
        "record_state_update",
        "record_ai_call",
        "record_cache_hit",
        "record_cache_miss",
        "_update_success_rate",
        "_update_cache_hit_rate",
        "get_timer",
        "get_performance_report",
        "export_metrics",
        "clear_metrics",
        "shutdown"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:PerformanceMonitor"
    },
    {
      "type": "function",
      "name": "get_performance_monitor",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 576,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u5168\u5c40\u6027\u80fd\u76d1\u63a7\u5b9e\u4f8b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "PerformanceMonitor"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:get_performance_monitor"
    },
    {
      "type": "function",
      "name": "configure_performance_monitoring",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 583,
      "complexity": 1,
      "docstring": "\u914d\u7f6e\u6027\u80fd\u76d1\u63a7",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "enabled",
        "system_monitoring"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "PerformanceMonitor",
        "_global_monitor.enable",
        "_global_monitor.disable"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:configure_performance_monitoring"
    },
    {
      "type": "function",
      "name": "monitor_performance",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 595,
      "complexity": 1,
      "docstring": "\u6027\u80fd\u76d1\u63a7\u88c5\u9970\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "metric_name",
        "tags"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "get_performance_monitor",
        "monitor.is_enabled",
        "func",
        "monitor.get_timer",
        "func"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:monitor_performance"
    },
    {
      "type": "function",
      "name": "update",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 68,
      "complexity": 1,
      "docstring": "\u66f4\u65b0\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "value"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "min",
        "max",
        "self.recent_values.append",
        "len",
        "sorted",
        "len",
        "int",
        "int",
        "int"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:update"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 422,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "enable_system_monitoring"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "MetricCollector",
        "SystemResourceMonitor",
        "self.system_monitor.start_monitoring"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:__init__"
    },
    {
      "type": "function",
      "name": "__enter__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 95,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "time.perf_counter"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:__enter__"
    },
    {
      "type": "function",
      "name": "__exit__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 99,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "exc_type",
        "exc_val",
        "exc_tb"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.metric_collector.record_timer",
        "time.perf_counter"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:__exit__"
    },
    {
      "type": "function",
      "name": "_register_default_metrics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 117,
      "complexity": 1,
      "docstring": "\u6ce8\u518c\u9ed8\u8ba4\u6307\u6807",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "MetricDefinition",
        "MetricDefinition",
        "MetricDefinition",
        "MetricDefinition",
        "MetricDefinition",
        "MetricDefinition",
        "MetricDefinition",
        "MetricDefinition",
        "MetricDefinition",
        "MetricDefinition",
        "MetricDefinition",
        "MetricDefinition",
        "MetricDefinition",
        "MetricDefinition",
        "self.register_metric"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:_register_default_metrics"
    },
    {
      "type": "function",
      "name": "register_metric",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 218,
      "complexity": 1,
      "docstring": "\u6ce8\u518c\u6307\u6807",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "metric"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.debug"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:register_metric"
    },
    {
      "type": "function",
      "name": "record_counter",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 224,
      "complexity": 1,
      "docstring": "\u8bb0\u5f55\u8ba1\u6570\u5668\u6307\u6807",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "name",
        "value",
        "tags"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._record_metric"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:record_counter"
    },
    {
      "type": "function",
      "name": "record_gauge",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 228,
      "complexity": 1,
      "docstring": "\u8bb0\u5f55\u6d4b\u91cf\u4eea\u6307\u6807",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "name",
        "value",
        "tags"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._record_metric"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:record_gauge"
    },
    {
      "type": "function",
      "name": "record_timer",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 232,
      "complexity": 1,
      "docstring": "\u8bb0\u5f55\u8ba1\u65f6\u5668\u6307\u6807",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "name",
        "duration_ms",
        "tags"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._record_metric"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:record_timer"
    },
    {
      "type": "function",
      "name": "record_histogram",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 236,
      "complexity": 1,
      "docstring": "\u8bb0\u5f55\u76f4\u65b9\u56fe\u6307\u6807",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "name",
        "value",
        "tags"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._record_metric"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:record_histogram"
    },
    {
      "type": "function",
      "name": "_record_metric",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 240,
      "complexity": 1,
      "docstring": "\u8bb0\u5f55\u6307\u6807\u503c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "name",
        "value",
        "tags"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "MetricValue",
        "self._values[name].append",
        "self._statistics[name].update",
        "logger.warning",
        "datetime.now",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:_record_metric"
    },
    {
      "type": "function",
      "name": "get_timer",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 508,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u8ba1\u65f6\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "metric_name",
        "tags"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.metric_collector.get_timer"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:get_timer"
    },
    {
      "type": "function",
      "name": "get_metric_statistics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 261,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6307\u6807\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "name"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._statistics.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:get_metric_statistics"
    },
    {
      "type": "function",
      "name": "get_all_statistics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 266,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6240\u6709\u6307\u6807\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "dict"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:get_all_statistics"
    },
    {
      "type": "function",
      "name": "get_recent_values",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 271,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6700\u8fd1\u7684\u6307\u6807\u503c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "name",
        "limit"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._values.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:get_recent_values"
    },
    {
      "type": "function",
      "name": "clear_metrics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 562,
      "complexity": 1,
      "docstring": "\u6e05\u9664\u6240\u6709\u6307\u6807\u6570\u636e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.metric_collector.clear_metrics",
        "logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:clear_metrics"
    },
    {
      "type": "function",
      "name": "export_metrics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 558,
      "complexity": 1,
      "docstring": "\u5bfc\u51fa\u6307\u6807",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "format"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.metric_collector.export_metrics"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:export_metrics"
    },
    {
      "type": "function",
      "name": "_export_json",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 297,
      "complexity": 1,
      "docstring": "\u5bfc\u51fa\u4e3aJSON\u683c\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._statistics.items",
        "json.dumps",
        "datetime.now().isoformat",
        "self._metrics.get",
        "datetime.now",
        "float",
        "float"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:_export_json"
    },
    {
      "type": "function",
      "name": "_export_prometheus",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 327,
      "complexity": 1,
      "docstring": "\u5bfc\u51fa\u4e3aPrometheus\u683c\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._statistics.items",
        "'\\n'.join",
        "self._metrics.get",
        "lines.append",
        "{MetricType.COUNTER: 'counter', MetricType.GAUGE: 'gauge', MetricType.HISTOGRAM: 'histogram', MetricType.TIMER: 'histogram'}.get",
        "lines.append",
        "lines.append",
        "lines.append",
        "lines.append",
        "float",
        "lines.append",
        "float",
        "lines.append",
        "lines.append",
        "lines.append",
        "lines.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:_export_prometheus"
    },
    {
      "type": "function",
      "name": "start_monitoring",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 377,
      "complexity": 1,
      "docstring": "\u5f00\u59cb\u76d1\u63a7\u7cfb\u7edf\u8d44\u6e90",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "interval"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "threading.Thread",
        "self._monitor_thread.start",
        "logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:start_monitoring"
    },
    {
      "type": "function",
      "name": "stop_monitoring",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 388,
      "complexity": 1,
      "docstring": "\u505c\u6b62\u76d1\u63a7\u7cfb\u7edf\u8d44\u6e90",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "self._monitor_thread.join"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:stop_monitoring"
    },
    {
      "type": "function",
      "name": "_monitor_loop",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 395,
      "complexity": 1,
      "docstring": "\u76d1\u63a7\u5faa\u73af",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "psutil.virtual_memory",
        "self.metric_collector.record_gauge",
        "psutil.cpu_percent",
        "self.metric_collector.record_gauge",
        "time.sleep",
        "logger.error",
        "time.sleep"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:_monitor_loop"
    },
    {
      "type": "function",
      "name": "enable",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 430,
      "complexity": 1,
      "docstring": "\u542f\u7528\u6027\u80fd\u76d1\u63a7",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:enable"
    },
    {
      "type": "function",
      "name": "disable",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 435,
      "complexity": 1,
      "docstring": "\u7981\u7528\u6027\u80fd\u76d1\u63a7",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:disable"
    },
    {
      "type": "function",
      "name": "is_enabled",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 440,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u662f\u5426\u542f\u7528",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:is_enabled"
    },
    {
      "type": "function",
      "name": "record_workflow_state_memory",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 444,
      "complexity": 1,
      "docstring": "\u8bb0\u5f55WorkflowState\u5185\u5b58\u6307\u6807",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "memory_bytes",
        "history_count",
        "serialized_size"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.metric_collector.record_gauge",
        "self.metric_collector.record_gauge",
        "self.metric_collector.record_gauge"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:record_workflow_state_memory"
    },
    {
      "type": "function",
      "name": "record_state_update",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 453,
      "complexity": 1,
      "docstring": "\u8bb0\u5f55\u72b6\u6001\u66f4\u65b0\u6307\u6807",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "duration_ms",
        "success"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.metric_collector.record_timer",
        "self.metric_collector.record_counter"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:record_state_update"
    },
    {
      "type": "function",
      "name": "record_ai_call",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 461,
      "complexity": 1,
      "docstring": "\u8bb0\u5f55AI\u8c03\u7528\u6307\u6807",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "duration_ms",
        "tokens",
        "success"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.metric_collector.record_timer",
        "self.metric_collector.record_counter",
        "self.metric_collector.record_histogram",
        "self._update_success_rate"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:record_ai_call"
    },
    {
      "type": "function",
      "name": "record_cache_hit",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 473,
      "complexity": 1,
      "docstring": "\u8bb0\u5f55\u7f13\u5b58\u547d\u4e2d",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.metric_collector.record_counter",
        "self._update_cache_hit_rate"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:record_cache_hit"
    },
    {
      "type": "function",
      "name": "record_cache_miss",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 481,
      "complexity": 1,
      "docstring": "\u8bb0\u5f55\u7f13\u5b58\u5931\u6548",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.metric_collector.record_counter",
        "self._update_cache_hit_rate"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:record_cache_miss"
    },
    {
      "type": "function",
      "name": "_update_success_rate",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 489,
      "complexity": 1,
      "docstring": "\u66f4\u65b0\u6210\u529f\u7387\u6307\u6807",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "metric_name",
        "success"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.metric_collector.get_metric_statistics",
        "metric_name.replace"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:_update_success_rate"
    },
    {
      "type": "function",
      "name": "_update_cache_hit_rate",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 497,
      "complexity": 1,
      "docstring": "\u66f4\u65b0\u7f13\u5b58\u547d\u4e2d\u7387",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.metric_collector.get_metric_statistics",
        "self.metric_collector.get_metric_statistics",
        "self.metric_collector.record_gauge"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:_update_cache_hit_rate"
    },
    {
      "type": "function",
      "name": "get_performance_report",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 512,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6027\u80fd\u62a5\u544a",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.metric_collector.get_all_statistics",
        "stats.items",
        "datetime.now().isoformat",
        "round",
        "datetime.now",
        "round",
        "round",
        "int",
        "int",
        "round",
        "round",
        "round",
        "round",
        "float",
        "float",
        "float"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:get_performance_report"
    },
    {
      "type": "function",
      "name": "shutdown",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 567,
      "complexity": 1,
      "docstring": "\u5173\u95ed\u6027\u80fd\u76d1\u63a7",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.system_monitor.stop_monitoring",
        "logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:shutdown"
    },
    {
      "type": "function",
      "name": "decorator",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 597,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "func"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "get_performance_monitor",
        "monitor.is_enabled",
        "func",
        "monitor.get_timer",
        "func"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:decorator"
    },
    {
      "type": "function",
      "name": "wrapper",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py",
      "line_number": 598,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "get_performance_monitor",
        "monitor.is_enabled",
        "func",
        "monitor.get_timer",
        "func"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:wrapper"
    },
    {
      "type": "function",
      "name": "create_test_workflow_with_ai_fields",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_hybrid_approach.py",
      "line_number": 31,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u5e26\u6709AI\u8bc4\u4f30\u5b57\u6bb5\u7684\u6d4b\u8bd5\u5de5\u4f5c\u6d41",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "WorkflowDefinition",
        "WorkflowStep",
        "WorkflowStep",
        "WorkflowStep",
        "WorkflowMetadata",
        "ControlFlow"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_hybrid_approach.py:create_test_workflow_with_ai_fields"
    },
    {
      "type": "function",
      "name": "create_test_workflow_with_string_condition",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_hybrid_approach.py",
      "line_number": 75,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u5e26\u6709\u4f20\u7edf\u5b57\u7b26\u4e32\u6761\u4ef6\u7684\u6d4b\u8bd5\u5de5\u4f5c\u6d41",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "WorkflowDefinition",
        "WorkflowStep",
        "WorkflowStep",
        "WorkflowStep",
        "WorkflowMetadata",
        "ControlFlow"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_hybrid_approach.py:create_test_workflow_with_string_condition"
    },
    {
      "type": "function",
      "name": "test_workflow_validation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_hybrid_approach.py",
      "line_number": 116,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5de5\u4f5c\u6d41\u9a8c\u8bc1\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "create_test_workflow_with_ai_fields",
        "workflow1.validate",
        "logger.info",
        "create_test_workflow_with_string_condition",
        "workflow2.validate",
        "logger.info",
        "create_test_workflow_with_ai_fields",
        "workflow3.validate",
        "logger.info",
        "create_test_workflow_with_ai_fields",
        "workflow4.validate",
        "logger.info",
        "logger.warning",
        "logger.warning",
        "logger.warning",
        "logger.warning",
        "len",
        "len",
        "len",
        "len",
        "len",
        "len",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_hybrid_approach.py:test_workflow_validation"
    },
    {
      "type": "function",
      "name": "test_ai_field_evaluation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_hybrid_approach.py",
      "line_number": 153,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5AI\u5e03\u5c14\u5b57\u6bb5\u8bc4\u4f30",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "MockTestResultEvaluator",
        "ControlFlowEvaluator",
        "Result",
        "evaluator.set_context",
        "ControlFlow",
        "evaluator.evaluate_control_flow_condition",
        "logger.info",
        "evaluator.evaluate_control_flow_condition",
        "logger.info",
        "Result",
        "evaluator.set_context",
        "evaluator.evaluate_control_flow_condition",
        "logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_hybrid_approach.py:test_ai_field_evaluation"
    },
    {
      "type": "function",
      "name": "test_string_condition_evaluation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_hybrid_approach.py",
      "line_number": 209,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u4f20\u7edf\u5b57\u7b26\u4e32\u6761\u4ef6\u8bc4\u4f30",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "MockTestResultEvaluator",
        "ControlFlowEvaluator",
        "Result",
        "evaluator.set_context",
        "evaluator.evaluate_condition",
        "logger.info",
        "evaluator.evaluate_condition",
        "logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_hybrid_approach.py:test_string_condition_evaluation"
    },
    {
      "type": "function",
      "name": "test_workflow_serialization",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_hybrid_approach.py",
      "line_number": 242,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5de5\u4f5c\u6d41\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "create_test_workflow_with_ai_fields",
        "WorkflowLoader.save_to_file",
        "logger.info",
        "logger.info",
        "WorkflowLoader.load_from_file",
        "logger.info",
        "logger.info",
        "os.path.exists",
        "open",
        "json.load",
        "os.remove"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_hybrid_approach.py:test_workflow_serialization"
    },
    {
      "type": "function",
      "name": "run_all_tests",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_hybrid_approach.py",
      "line_number": 290,
      "complexity": 1,
      "docstring": "\u8fd0\u884c\u6240\u6709\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "sum",
        "len",
        "logger.info",
        "logger.info",
        "logger.info",
        "logger.warning",
        "test_func",
        "logger.info",
        "logger.error",
        "results.values"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_hybrid_approach.py:run_all_tests"
    },
    {
      "type": "function",
      "name": "test_performance_integration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_performance_integration.py",
      "line_number": 20,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6027\u80fd\u76d1\u63a7\u96c6\u6210",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "WorkflowState",
        "print",
        "print",
        "enumerate",
        "print",
        "workflow_state.get_state_history",
        "print",
        "workflow_state.get_state_history_count",
        "print",
        "print",
        "monitor.get_performance_report",
        "print",
        "stats.items",
        "print",
        "workflow_state.get_memory_usage",
        "print",
        "memory_info.items",
        "print",
        "workflow_state.get_ai_updater_status",
        "print",
        "ai_status.items",
        "print",
        "monitor.metric_collector.record_counter",
        "monitor.metric_collector.record_gauge",
        "monitor.metric_collector.record_timer",
        "monitor.get_performance_report",
        "print",
        "updated_stats.items",
        "print",
        "workflow_state.get_state_summary",
        "print",
        "print",
        "print",
        "hasattr",
        "print",
        "print",
        "print",
        "print",
        "workflow_state.set_global_state",
        "time.sleep",
        "print",
        "isinstance",
        "isinstance",
        "print",
        "metrics.items",
        "print",
        "print",
        "print",
        "category.lower",
        "print",
        "len",
        "print",
        "type",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_performance_integration.py:test_performance_integration"
    },
    {
      "type": "function",
      "name": "test_performance_monitoring_kpis",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_performance_integration.py",
      "line_number": 118,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6027\u80fd\u76d1\u63a7KPI\u6536\u96c6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "get_performance_monitor",
        "print",
        "print",
        "print",
        "monitor.get_performance_report",
        "stats.items",
        "print",
        "monitor.metric_collector.record_counter",
        "print",
        "monitor.metric_collector.record_timer",
        "print",
        "print",
        "isinstance",
        "float",
        "metrics.items",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_performance_integration.py:test_performance_monitoring_kpis"
    },
    {
      "type": "function",
      "name": "main",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_performance_integration.py",
      "line_number": 170,
      "complexity": 1,
      "docstring": "\u4e3b\u6d4b\u8bd5\u51fd\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "test_performance_integration",
        "test_performance_monitoring_kpis",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "traceback.print_exc"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_performance_integration.py:main"
    },
    {
      "type": "function",
      "name": "test_evaluator_with_unittest_output",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/debug_ai_evaluator.py",
      "line_number": 17,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u8bc4\u4f30\u5668\u5bf9\u5b9e\u9645unittest\u8f93\u51fa\u7684\u5224\u65ad",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "MockTestResultEvaluator",
        "print",
        "print",
        "enumerate",
        "print",
        "print",
        "print",
        "print",
        "print",
        "evaluator.evaluate_test_result",
        "print",
        "print",
        "print",
        "Result",
        "Result",
        "Result",
        "repr",
        "repr",
        "repr"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/debug_ai_evaluator.py:test_evaluator_with_unittest_output"
    },
    {
      "type": "class",
      "name": "Result",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/agent_base.py",
      "line_number": 18,
      "complexity": 1,
      "docstring": "\u6267\u884c\u7ed3\u679c\u7c7b\n\n\u7528\u4e8e\u5c01\u88c5\u667a\u80fd\u4f53\u6267\u884c\u64cd\u4f5c\u540e\u7684\u7ed3\u679c\u4fe1\u606f\uff0c\u5305\u62ec\u6267\u884c\u72b6\u6001\u3001\u4ee3\u7801\u3001\u8f93\u51fa\u7b49\u3002\n\u652f\u6301\u540c\u6b65\u548c\u5f02\u6b65\u6267\u884c\u7ed3\u679c\u7684\u7edf\u4e00\u8868\u793a\u3002\n\n\u6ce8\u610f\uff1a\u5bf9\u4e8e\u5355\u5143\u6d4b\u8bd5\u6216\u9a8c\u8bc1\u7c7b\u6307\u4ee4\uff0csuccess=True\u8868\u793a\u6210\u529f\u5b8c\u6210\u4e86\u6d4b\u8bd5\u6216\u9a8c\u8bc1\u64cd\u4f5c\uff0c\n\u800c\u4e0d\u662f\u6d4b\u8bd5\u7ed3\u679c\u662f\u5426\u901a\u8fc7\u3002\u6d4b\u8bd5\u6216\u9a8c\u8bc1\u7684\u5b9e\u9645\u7ed3\u679c\uff08\u901a\u8fc7/\u5931\u8d25\uff09\u8bb0\u5f55\u5728return_value\u4e2d\u3002\n    \nAttributes:\n    success (bool): \u6267\u884c\u6210\u529f\u6807\u5fd7\n    code (str): \u6839\u636e\u6307\u4ee4\u7531\u8bed\u8a00\u6a21\u578b\u751f\u6210\u7684\u4ee3\u7801\n    stdout (str): \u6807\u51c6\u8f93\u51fa\u5185\u5bb9\n    stderr (str): \u6807\u51c6\u9519\u8bef\u8f93\u51fa\u5185\u5bb9\n    return_value (str): \u6267\u884c\u7ed3\u679c\u7684\u8fd4\u56de\u503c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "__str__",
        "__repr__",
        "to_dict"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:Result"
    },
    {
      "type": "class",
      "name": "AgentBase",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/agent_base.py",
      "line_number": 423,
      "complexity": 1,
      "docstring": "\u667a\u80fd\u4f53\u57fa\u7c7b\nchat \u548c execute \u7684\u5212\u5206\u786e\u5b9e\u53cd\u6620\u4e86\u4eba\u7c7b\uff08\u4ee5\u53ca\u53ef\u80fd\u662f\u667a\u80fd\u4f53\uff09\u4e0e\u4e16\u754c\u4ea4\u4e92\u7684\u4e24\u79cd\u57fa\u672c\u65b9\u5f0f\uff1a\u901a\u8fc7\u8bed\u8a00\u8fdb\u884c\u4ea4\u6d41\u548c\u601d\u8003 (chat)\uff0c\u4ee5\u53ca\u901a\u8fc7\u884c\u52a8\u6539\u53d8\u6216\u611f\u77e5\u4e16\u754c (execute)\u3002\n\u610f\u5411\u6027 (Intentionality): \u54f2\u5b66\u4e2d\u6307\u5fc3\u7075\u72b6\u6001\uff08\u5982\u4fe1\u5ff5\u3001\u6b32\u671b\u3001\u610f\u56fe\uff09\u6307\u5411\u6216\u5173\u4e8e\u4e16\u754c\u4e2d\u5bf9\u8c61\u7684\u7279\u6027\u3002\nchat \u53ef\u4ee5\u88ab\u770b\u4f5c\u662f\u5904\u7406\u548c\u8868\u8fbe\u610f\u5411\u6027\u72b6\u6001\u7684\u4e3b\u8981\u65b9\u5f0f\uff0c\u4f8b\u5982\u7406\u89e3\u7528\u6237\u7684\u610f\u56fe\uff0c\u8868\u8fbe\u667a\u80fd\u4f53\u7684\"\u4fe1\u5ff5\"\uff08\u77e5\u8bc6\u5e93\uff09\u6216\"\u610f\u56fe\"\uff08\u4e0b\u4e00\u6b65\u8ba1\u5212\uff09\u3002\nexecute \u5219\u662f\u5c06\u8fd9\u4e9b\u610f\u5411\u6027\u72b6\u6001\uff08\u7279\u522b\u662f\u884c\u52a8\u610f\u56fe\uff09\u8f6c\u5316\u4e3a\u5b9e\u9645\u884c\u52a8\u7684\u673a\u5236\u3002",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "loadKnowledge",
        "calculate_memory_tokens",
        "execute_stream",
        "execute_sync",
        "chat_stream",
        "chat_sync",
        "classify_instruction"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:AgentBase"
    },
    {
      "type": "function",
      "name": "reduce_memory_decorator",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/agent_base.py",
      "line_number": 73,
      "complexity": 1,
      "docstring": "\u88c5\u9970\u5668\uff1a\u5728\u51fd\u6570\u6267\u884c\u540e\u68c0\u67e5memory\u5927\u5c0f\uff0c\u5982\u679c\u8d85\u8fc7max_tokens\u5219\u51cf\u5c11memory\n\u91cd\u8981\u7684\u662f\u4fdd\u6301memory\u4e2dmessage\u7684\u4ea4\u66ff\u987a\u5e8f\n\u53ef\u4ee5\u76f4\u63a5\u88c5\u9970\u51fd\u6570\u6216\u4f7f\u7528\u53c2\u6570\uff1a@reduce_memory_decorator \u6216 @reduce_memory_decorator(max_tokens=1000)\n\n\u52a8\u6001\u8bbe\u7f6e max_tokens \u7684\u4f18\u5148\u7ea7:\n1. \u88c5\u9970\u5668\u53c2\u6570: @reduce_memory_decorator(max_tokens=value)\n2. \u73af\u5883\u53d8\u91cf: AGENT_MAX_TOKENS\n3. \u5168\u5c40\u5e38\u91cf: MAX_TOKENS",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "func"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "os.environ.get",
        "functools.wraps",
        "sum",
        "decorator",
        "int",
        "decorated_func",
        "sum",
        "len",
        "len",
        "len",
        "hasattr",
        "sum",
        "tiktoken.encoding_for_model",
        "_reduce_memory",
        "isinstance",
        "essential_messages.append",
        "other_messages.append",
        "len",
        "isinstance",
        "isinstance",
        "human_ai_pairs.append",
        "temp_memory_for_others.insert",
        "temp_memory_for_others.insert",
        "temp_memory_for_others.extend",
        "tiktoken.encoding_for_model",
        "_reduce_memory",
        "hasattr",
        "hasattr",
        "tiktoken.encoding_for_model",
        "len",
        "hasattr",
        "encoding.encode",
        "len",
        "len",
        "len",
        "len",
        "hasattr",
        "tiktoken.encoding_for_model",
        "len",
        "encoding.encode",
        "encoding.encode",
        "encoding.encode",
        "encoding.encode",
        "encoding.encode",
        "encoding.encode",
        "len",
        "len",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:reduce_memory_decorator"
    },
    {
      "type": "function",
      "name": "reduce_memory_decorator_compress",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/agent_base.py",
      "line_number": 254,
      "complexity": 1,
      "docstring": "\u538b\u7f29\u7248\u5185\u5b58\u7ba1\u7406\u88c5\u9970\u5668\uff1a\u5728\u51fd\u6570\u6267\u884c\u540e\u68c0\u67e5memory\u5927\u5c0f\uff0c\u5982\u679c\u8d85\u8fc7max_tokens\u5219\u4f7f\u7528\u538b\u7f29\u7b56\u7565\u51cf\u5c11memory\n\u538b\u7f29\u7b56\u7565\uff1a\u4fdd\u7559protected\u6d88\u606f\u548c\u6700\u540e10\u6761\u6d88\u606f\uff0c\u538b\u7f29\u4e2d\u95f4\u7684\u6d88\u606f\n\u53ef\u4ee5\u76f4\u63a5\u88c5\u9970\u51fd\u6570\u6216\u4f7f\u7528\u53c2\u6570\uff1a@reduce_memory_decorator_compress \u6216 @reduce_memory_decorator_compress(max_tokens=1000)\n\n\u52a8\u6001\u8bbe\u7f6e max_tokens \u7684\u4f18\u5148\u7ea7:\n1. \u88c5\u9970\u5668\u53c2\u6570: @reduce_memory_decorator_compress(max_tokens=value)\n2. \u73af\u5883\u53d8\u91cf: AGENT_MAX_TOKENS\n3. \u5168\u5c40\u5e38\u91cf: MAX_TOKENS",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "func"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "os.environ.get",
        "functools.wraps",
        "print",
        "sum",
        "print",
        "print",
        "print",
        "sum",
        "len",
        "reversed",
        "decorator",
        "int",
        "decorated_func",
        "sum",
        "compress_messages",
        "print",
        "_fallback_token_strategy",
        "len",
        "print",
        "print",
        "hasattr",
        "sum",
        "tiktoken.encoding_for_model",
        "_reduce_memory_compress",
        "isinstance",
        "protected_messages.append",
        "regular_messages.append",
        "len",
        "print",
        "_fallback_token_strategy",
        "len",
        "print",
        "len",
        "selected_messages.insert",
        "tiktoken.encoding_for_model",
        "_reduce_memory_compress",
        "hasattr",
        "hasattr",
        "tiktoken.encoding_for_model",
        "len",
        "hasattr",
        "encoding.encode",
        "len",
        "len",
        "len",
        "encoding.encode",
        "encoding.encode",
        "hasattr",
        "tiktoken.encoding_for_model",
        "len",
        "encoding.encode",
        "len",
        "len",
        "len",
        "len",
        "encoding.encode"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:reduce_memory_decorator_compress"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/agent_base.py",
      "line_number": 431,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "llm",
        "system_message"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "SystemMessage"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:__init__"
    },
    {
      "type": "function",
      "name": "__str__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/agent_base.py",
      "line_number": 42,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:__str__"
    },
    {
      "type": "function",
      "name": "__repr__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/agent_base.py",
      "line_number": 58,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.__str__"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:__repr__"
    },
    {
      "type": "function",
      "name": "to_dict",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/agent_base.py",
      "line_number": 61,
      "complexity": 1,
      "docstring": "\u8f6c\u6362\u4e3a\u5b57\u5178\u683c\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:to_dict"
    },
    {
      "type": "function",
      "name": "decorator",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/agent_base.py",
      "line_number": 280,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "decorated_func"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "functools.wraps",
        "decorated_func",
        "sum",
        "hasattr",
        "sum",
        "tiktoken.encoding_for_model",
        "_reduce_memory_compress",
        "tiktoken.encoding_for_model",
        "_reduce_memory_compress",
        "hasattr",
        "hasattr",
        "tiktoken.encoding_for_model",
        "len",
        "hasattr",
        "tiktoken.encoding_for_model",
        "len",
        "encoding.encode",
        "encoding.encode"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:decorator"
    },
    {
      "type": "function",
      "name": "_reduce_memory",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/agent_base.py",
      "line_number": 155,
      "complexity": 1,
      "docstring": "\u4f7f\u7528 tiktoken \u7cbe\u786e\u8ba1\u7b97\u5e76\u51cf\u5c11 agent \u7684 memory \u4ee5\u6ee1\u8db3 max_tokens_limit \u9650\u5236\u3002\n\u4f18\u5148\u4fdd\u7559 SystemMessage \u548c\u6807\u8bb0\u4e3a protected=True \u7684\u6d88\u606f\u3002\n\u7136\u540e\u4ece\u6700\u65b0\u7684\u666e\u901a\u6d88\u606f\u5f00\u59cb\u5411\u524d\u586b\u5145\u5269\u4f59\u7a7a\u95f4\u3002",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "agent",
        "max_tokens_limit",
        "encoding"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "sum",
        "len",
        "len",
        "len",
        "isinstance",
        "essential_messages.append",
        "other_messages.append",
        "len",
        "isinstance",
        "isinstance",
        "human_ai_pairs.append",
        "temp_memory_for_others.insert",
        "temp_memory_for_others.insert",
        "temp_memory_for_others.extend",
        "hasattr",
        "encoding.encode",
        "len",
        "len",
        "len",
        "len",
        "encoding.encode",
        "encoding.encode",
        "encoding.encode",
        "encoding.encode",
        "len",
        "len",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:_reduce_memory"
    },
    {
      "type": "function",
      "name": "_reduce_memory_compress",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/agent_base.py",
      "line_number": 327,
      "complexity": 1,
      "docstring": "\u4f7f\u7528\u538b\u7f29\u7b56\u7565\u51cf\u5c11 agent \u7684 memory \u4ee5\u6ee1\u8db3 max_tokens_limit \u9650\u5236\u3002\n\u7b56\u7565\uff1a\u4fdd\u7559 protected \u6d88\u606f\u548c\u6700\u540e10\u6761\u6d88\u606f\uff0c\u538b\u7f29\u4e2d\u95f4\u7684\u6d88\u606f\u3002",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "agent",
        "max_tokens_limit",
        "encoding"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "sum",
        "print",
        "print",
        "print",
        "sum",
        "len",
        "compress_messages",
        "print",
        "_fallback_token_strategy",
        "len",
        "print",
        "print",
        "isinstance",
        "protected_messages.append",
        "regular_messages.append",
        "len",
        "print",
        "_fallback_token_strategy",
        "len",
        "print",
        "hasattr",
        "encoding.encode",
        "len",
        "len",
        "len",
        "encoding.encode",
        "len",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:_reduce_memory_compress"
    },
    {
      "type": "function",
      "name": "_fallback_token_strategy",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/agent_base.py",
      "line_number": 395,
      "complexity": 1,
      "docstring": "Fallback\u7b56\u7565\uff1a\u57fa\u4e8etoken\u9650\u5236\u9009\u62e9\u6d88\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "messages",
        "available_tokens",
        "encoding"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "reversed",
        "len",
        "selected_messages.insert",
        "encoding.encode",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:_fallback_token_strategy"
    },
    {
      "type": "function",
      "name": "loadKnowledge",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/agent_base.py",
      "line_number": 446,
      "complexity": 1,
      "docstring": "\u52a0\u8f7d\u77e5\u8bc6\u5230agent\u7684\u8bb0\u5fc6\u4e2d\uff0c\u786e\u4fdd\u6d88\u606f\u4ea4\u66ff\nArgs:\n    knowledge: \u77e5\u8bc6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "knowledge"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "HumanMessage",
        "AIMessage",
        "isinstance",
        "self.memory.append",
        "self.memory.append",
        "self.memory.append",
        "self.memory.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:loadKnowledge"
    },
    {
      "type": "function",
      "name": "calculate_memory_tokens",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/agent_base.py",
      "line_number": 465,
      "complexity": 1,
      "docstring": "\u8ba1\u7b97memory\u7684token\u6570\u91cf\nArgs:\n    model_name: \u6a21\u578b\u540d\u79f0\nReturns:\n    int: token\u6570\u91cf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "model_name"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "tiktoken.encoding_for_model",
        "sum",
        "len",
        "encoding.encode"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:calculate_memory_tokens"
    },
    {
      "type": "function",
      "name": "execute_stream",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/agent_base.py",
      "line_number": 477,
      "complexity": 1,
      "docstring": "\u6267\u884c\u6d41\u5f0f\u65b9\u6cd5\nArgs:\n    instruction: \u6267\u884c\u6307\u4ee4\nReturns:\n    Iterator[object]: \u6d41\u5f0f\u7ed3\u679c\n    \u6d41\u5f0f\u7ed3\u679c\u7684\u7ed3\u6784\u662f\u8fc7\u7a0b\u52a0\u72b6\u6001\u3002\u6d41\u7684\u524d\u9762\u662f\u8fc7\u7a0b\uff0c\u6d41\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u662f\u6700\u7ec8\u72b6\u6001\u3002",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:execute_stream"
    },
    {
      "type": "function",
      "name": "execute_sync",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/agent_base.py",
      "line_number": 489,
      "complexity": 1,
      "docstring": "\u540c\u6b65\u6267\u884c\u65b9\u6cd5\nArgs:\n    instruction: \u6267\u884c\u6307\u4ee4\nReturns:\n    Result: \u6267\u884c\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:execute_sync"
    },
    {
      "type": "function",
      "name": "chat_stream",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/agent_base.py",
      "line_number": 500,
      "complexity": 1,
      "docstring": "\u6d41\u5f0f\u804a\u5929\u65b9\u6cd5\nArgs:\n    message: \u804a\u5929\u6d88\u606f\nReturns:\n    Iterator[object]: \u6d41\u5f0f\u7ed3\u679c\uff0c\u5305\u62ec\u6587\u672c\u7247\u6bb5\u548c\u6700\u7ec8\u7684Result\u5bf9\u8c61",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "message",
        "response_format"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "HumanMessage",
        "self.memory.append",
        "self.llm.stream",
        "AIMessage",
        "self.memory.append",
        "Result"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:chat_stream"
    },
    {
      "type": "function",
      "name": "chat_sync",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/agent_base.py",
      "line_number": 524,
      "complexity": 1,
      "docstring": "\u540c\u6b65\u804a\u5929\u65b9\u6cd5\uff0c\u786e\u4fdd\u6d88\u606f\u4ea4\u66ff\nArgs:\n    message: \u804a\u5929\u6d88\u606f\nReturns:\n    Result: \u804a\u5929\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "message",
        "response_format"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "HumanMessage",
        "self.memory.append",
        "AIMessage",
        "self.memory.append",
        "Result",
        "self.llm.invoke"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:chat_sync"
    },
    {
      "type": "function",
      "name": "classify_instruction",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/agent_base.py",
      "line_number": 543,
      "complexity": 1,
      "docstring": "\u5224\u65ad\u7528\u6237\u6307\u4ee4\u662f\"\u601d\u7ef4\"\u8fd8\u662f\"\u52a8\u4f5c\"\nArgs:\n    instruction: \u7528\u6237\u6307\u4ee4\nReturns:\n    bool: \u5982\u679c\u662f\u52a8\u4f5c\u7c7b\u578b\u8fd4\u56deTrue\uff0c\u5426\u5219\u8fd4\u56deFalse",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "HumanMessage",
        "temp_messages.append",
        "self.llm.invoke",
        "classification_prompt.format",
        "response.content.lower().strip",
        "response.content.lower"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:classify_instruction"
    },
    {
      "type": "function",
      "name": "wrapper",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/agent_base.py",
      "line_number": 282,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [
        "functools.wraps(decorated_func)"
      ],
      "inheritance": [],
      "calls": [
        "functools.wraps",
        "decorated_func",
        "sum",
        "hasattr",
        "sum",
        "tiktoken.encoding_for_model",
        "_reduce_memory_compress",
        "tiktoken.encoding_for_model",
        "_reduce_memory_compress",
        "hasattr",
        "hasattr",
        "tiktoken.encoding_for_model",
        "len",
        "hasattr",
        "tiktoken.encoding_for_model",
        "len",
        "encoding.encode",
        "encoding.encode"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:wrapper"
    },
    {
      "type": "class",
      "name": "StateHistoryEntry",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 59,
      "complexity": 1,
      "docstring": "\u72b6\u6001\u5386\u53f2\u6761\u76ee",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "NamedTuple"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:StateHistoryEntry"
    },
    {
      "type": "class",
      "name": "PromptScenario",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 65,
      "complexity": 1,
      "docstring": "\u63d0\u793a\u6a21\u677f\u573a\u666f\u679a\u4e3e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:PromptScenario"
    },
    {
      "type": "class",
      "name": "PromptTemplate",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 75,
      "complexity": 1,
      "docstring": "\u63d0\u793a\u6a21\u677f\u7c7b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "render",
        "_prepare_safe_variables",
        "get_required_variables"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:PromptTemplate"
    },
    {
      "type": "class",
      "name": "PromptTemplateManager",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 175,
      "complexity": 1,
      "docstring": "\u63d0\u793a\u6a21\u677f\u7ba1\u7406\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "_initialize_default_templates",
        "get_template",
        "add_template",
        "list_templates",
        "render_template",
        "get_template_variables",
        "validate_variables"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:PromptTemplateManager"
    },
    {
      "type": "class",
      "name": "ParsedStateInfo",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 458,
      "complexity": 1,
      "docstring": "\u89e3\u6790\u540e\u7684\u72b6\u6001\u4fe1\u606f\u7ed3\u6784",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "NamedTuple"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:ParsedStateInfo"
    },
    {
      "type": "class",
      "name": "ResponseQuality",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 468,
      "complexity": 1,
      "docstring": "\u54cd\u5e94\u8d28\u91cf\u7b49\u7ea7",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:ResponseQuality"
    },
    {
      "type": "class",
      "name": "ResponseParser",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 477,
      "complexity": 1,
      "docstring": "\u667a\u80fdLLM\u54cd\u5e94\u89e3\u6790\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "parse_response",
        "_preprocess_response",
        "_extract_main_content",
        "_extract_entities",
        "_calculate_confidence",
        "_analyze_sentiment",
        "_recognize_intent",
        "_assess_quality",
        "_create_empty_parsed_info",
        "validate_parsed_info",
        "suggest_improvements"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:ResponseParser"
    },
    {
      "type": "class",
      "name": "StateRelevanceType",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 807,
      "complexity": 1,
      "docstring": "\u72b6\u6001\u76f8\u5173\u6027\u7c7b\u578b\u679a\u4e3e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:StateRelevanceType"
    },
    {
      "type": "class",
      "name": "InstructionOptimizationType",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 815,
      "complexity": 1,
      "docstring": "\u6307\u4ee4\u4f18\u5316\u7c7b\u578b\u679a\u4e3e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:InstructionOptimizationType"
    },
    {
      "type": "class",
      "name": "OptimizationStrategy",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 825,
      "complexity": 1,
      "docstring": "\u4f18\u5316\u7b56\u7565\u679a\u4e3e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:OptimizationStrategy"
    },
    {
      "type": "class",
      "name": "DecisionNodeType",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 833,
      "complexity": 1,
      "docstring": "\u51b3\u7b56\u8282\u70b9\u7c7b\u578b\u679a\u4e3e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:DecisionNodeType"
    },
    {
      "type": "class",
      "name": "ConditionOperator",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 843,
      "complexity": 1,
      "docstring": "\u6761\u4ef6\u64cd\u4f5c\u7b26\u679a\u4e3e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:ConditionOperator"
    },
    {
      "type": "class",
      "name": "DecisionResult",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 862,
      "complexity": 1,
      "docstring": "\u51b3\u7b56\u7ed3\u679c\u7ed3\u6784",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "NamedTuple"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:DecisionResult"
    },
    {
      "type": "class",
      "name": "InstructionOptimizationResult",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 873,
      "complexity": 1,
      "docstring": "\u6307\u4ee4\u4f18\u5316\u7ed3\u679c\u7ed3\u6784",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "NamedTuple"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:InstructionOptimizationResult"
    },
    {
      "type": "class",
      "name": "StateContextExtractor",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 885,
      "complexity": 1,
      "docstring": "\u72b6\u6001\u4e0a\u4e0b\u6587\u63d0\u53d6\u5668 - \u667a\u80fd\u5206\u6790\u548c\u63d0\u53d6\u76f8\u5173\u72b6\u6001\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "extract_relevant_context",
        "_analyze_step_requirements",
        "_extract_state_entities",
        "_categorize_state_relevance",
        "_generate_context_summary"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:StateContextExtractor"
    },
    {
      "type": "class",
      "name": "InstructionOptimizer",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 1101,
      "complexity": 1,
      "docstring": "\u6307\u4ee4\u4f18\u5316\u5668\u62bd\u8c61\u63a5\u53e3",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "can_optimize",
        "optimize_instruction",
        "get_optimization_priority"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "ABC"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:InstructionOptimizer"
    },
    {
      "type": "class",
      "name": "StateAwareInstructionOptimizer",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 1149,
      "complexity": 1,
      "docstring": "\u72b6\u6001\u611f\u77e5\u7684\u6307\u4ee4\u4f18\u5316\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "can_optimize",
        "optimize_instruction",
        "get_optimization_priority",
        "_analyze_instruction_context",
        "_determine_optimization_types",
        "_apply_optimizations",
        "_enhance_context",
        "_add_error_prevention",
        "_improve_efficiency",
        "_optimize_clarity",
        "_add_dependency_awareness",
        "_assess_instruction_complexity",
        "_assess_step_complexity",
        "_get_historical_errors",
        "_get_recent_failures",
        "_analyze_dependencies",
        "_calculate_optimization_confidence",
        "_predict_improvement",
        "_assess_optimization_risk",
        "_generate_optimization_reasoning",
        "_get_applied_enhancements",
        "_update_optimization_stats",
        "get_optimization_statistics",
        "reset_optimization_statistics"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "InstructionOptimizer"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:StateAwareInstructionOptimizer"
    },
    {
      "type": "class",
      "name": "StateCondition",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 1663,
      "complexity": 1,
      "docstring": "\u72b6\u6001\u6761\u4ef6\u7c7b - \u8868\u793a\u4e00\u4e2a\u53ef\u8bc4\u4f30\u7684\u72b6\u6001\u6761\u4ef6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "evaluate",
        "_extract_state_value",
        "_parse_value",
        "_evaluate_condition",
        "_safe_compare",
        "_safe_contains"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:StateCondition"
    },
    {
      "type": "class",
      "name": "DecisionNode",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 1861,
      "complexity": 1,
      "docstring": "\u51b3\u7b56\u8282\u70b9\u7c7b - \u57fa\u4e8e\u72b6\u6001\u8fdb\u884c\u6761\u4ef6\u51b3\u7b56",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "add_condition",
        "add_decision_path",
        "set_default_path",
        "set_logic_operator",
        "evaluate_decision"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:DecisionNode"
    },
    {
      "type": "class",
      "name": "StateAwareDecisionManager",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2002,
      "complexity": 1,
      "docstring": "\u72b6\u6001\u611f\u77e5\u51b3\u7b56\u7ba1\u7406\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "register_decision_node",
        "create_conditional_node",
        "create_validation_node",
        "evaluate_decision",
        "list_decision_nodes",
        "get_decision_statistics",
        "reset_decision_statistics",
        "_update_decision_statistics"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:StateAwareDecisionManager"
    },
    {
      "type": "class",
      "name": "WorkflowErrorType",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2134,
      "complexity": 1,
      "docstring": "\u5de5\u4f5c\u6d41\u9519\u8bef\u7c7b\u578b\u679a\u4e3e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:WorkflowErrorType"
    },
    {
      "type": "class",
      "name": "WorkflowErrorContext",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2149,
      "complexity": 1,
      "docstring": "\u5de5\u4f5c\u6d41\u9519\u8bef\u4e0a\u4e0b\u6587",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "to_dict"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:WorkflowErrorContext"
    },
    {
      "type": "class",
      "name": "StateAwareErrorHandler",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2183,
      "complexity": 1,
      "docstring": "\u72b6\u6001\u611f\u77e5\u9519\u8bef\u5904\u7406\u5668\u7684\u62bd\u8c61\u57fa\u7c7b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "can_handle",
        "handle_error",
        "get_priority"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "ABC"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:StateAwareErrorHandler"
    },
    {
      "type": "class",
      "name": "GenericErrorHandler",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2223,
      "complexity": 1,
      "docstring": "\u901a\u7528\u9519\u8bef\u5904\u7406\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "can_handle",
        "get_priority",
        "handle_error",
        "_handle_api_error",
        "_handle_timeout_error",
        "_handle_validation_error",
        "_handle_file_error",
        "_handle_database_error",
        "_handle_network_error",
        "_handle_auth_error",
        "_handle_permission_error",
        "_handle_config_error",
        "_handle_agent_error",
        "_handle_unknown_error",
        "_create_fallback_result",
        "get_error_statistics"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "StateAwareErrorHandler"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:GenericErrorHandler"
    },
    {
      "type": "class",
      "name": "WorkflowErrorDispatcher",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2474,
      "complexity": 1,
      "docstring": "\u5de5\u4f5c\u6d41\u9519\u8bef\u5206\u53d1\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "register_handler",
        "classify_error",
        "dispatch_error"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:WorkflowErrorDispatcher"
    },
    {
      "type": "class",
      "name": "FallbackStrategy",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2577,
      "complexity": 1,
      "docstring": "\u56de\u9000\u7b56\u7565\u679a\u4e3e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:FallbackStrategy"
    },
    {
      "type": "class",
      "name": "FallbackStateGenerator",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2586,
      "complexity": 1,
      "docstring": "\u56de\u9000\u72b6\u6001\u751f\u6210\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "generate_fallback_state",
        "_generate_template_based_state",
        "_generate_rule_based_state",
        "_generate_minimal_state",
        "_generate_notification_state"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:FallbackStateGenerator"
    },
    {
      "type": "class",
      "name": "AICallCacheEntry",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2723,
      "complexity": 1,
      "docstring": "AI\u8c03\u7528\u7f13\u5b58\u6761\u76ee",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "NamedTuple"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:AICallCacheEntry"
    },
    {
      "type": "class",
      "name": "LRUCache",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2731,
      "complexity": 1,
      "docstring": "LRU\u7f13\u5b58\u5b9e\u73b0\uff0c\u7528\u4e8eAI\u8c03\u7528\u7ed3\u679c\u7f13\u5b58",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "get",
        "put",
        "clear",
        "get_stats",
        "reset_stats"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:LRUCache"
    },
    {
      "type": "class",
      "name": "ContextHasher",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2807,
      "complexity": 1,
      "docstring": "\u4e0a\u4e0b\u6587\u54c8\u5e0c\u751f\u6210\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "hash_context"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:ContextHasher"
    },
    {
      "type": "class",
      "name": "AICallConditionChecker",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2872,
      "complexity": 1,
      "docstring": "AI\u8c03\u7528\u6761\u4ef6\u68c0\u67e5\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "should_make_ai_call",
        "_has_significant_change",
        "_has_error_condition",
        "_is_state_transition",
        "_should_update_by_time",
        "_is_initialization",
        "set_significance_threshold",
        "set_time_threshold",
        "get_configuration"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:AICallConditionChecker"
    },
    {
      "type": "class",
      "name": "AIStateUpdater",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 3001,
      "complexity": 1,
      "docstring": "AI\u72b6\u6001\u66f4\u65b0\u5668\u62bd\u8c61\u63a5\u53e3",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "update_state",
        "should_update"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "ABC"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:AIStateUpdater"
    },
    {
      "type": "class",
      "name": "AIStateUpdaterService",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 3032,
      "complexity": 1,
      "docstring": "\u57fa\u4e8eDeepSeek\u7684AI\u72b6\u6001\u66f4\u65b0\u5668\u670d\u52a1\u5b9e\u73b0",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "_validate_llm_connection",
        "should_update",
        "update_state",
        "_get_system_message",
        "_build_state_update_prompt",
        "_detect_scenario",
        "_prepare_template_variables",
        "_validate_generated_state",
        "get_last_parsed_info",
        "_store_parsed_info",
        "_execute_fallback_strategies",
        "_retry_with_simplified_prompt",
        "_send_failure_notification",
        "get_fallback_statistics",
        "reset_fallback_statistics",
        "get_fallback_statistics",
        "reset_fallback_statistics",
        "_update_fallback_statistics",
        "get_cache_statistics",
        "clear_cache",
        "reset_cache_statistics",
        "get_condition_checker_config",
        "update_condition_checker_config",
        "get_performance_statistics"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "AIStateUpdater"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:AIStateUpdaterService"
    },
    {
      "type": "class",
      "name": "RegisteredAgent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 3846,
      "complexity": 1,
      "docstring": "\u5b58\u50a8\u5df2\u6ce8\u518c\u7684 Agent \u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:RegisteredAgent"
    },
    {
      "type": "class",
      "name": "WorkflowState",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 3853,
      "complexity": 1,
      "docstring": "\u5de5\u4f5c\u6d41\u72b6\u6001\u7ba1\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "should_break_loop",
        "increment_loop_counter",
        "reset_step_status_from",
        "get_global_state",
        "set_global_state",
        "is_state_update_enabled",
        "enable_state_updates",
        "disable_state_updates",
        "clear_global_state",
        "get_state_history",
        "get_state_history_count",
        "clear_state_history",
        "get_state_summary",
        "set_max_history_size",
        "__init_ai_updater",
        "update_state_with_ai",
        "set_ai_updater",
        "get_ai_updater_status",
        "__getstate__",
        "__setstate__",
        "get_memory_usage",
        "compress_history",
        "decompress_history_entry",
        "get_decompressed_history",
        "optimize_memory"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:WorkflowState"
    },
    {
      "type": "class",
      "name": "MultiStepAgent_v2",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 4335,
      "complexity": 1,
      "docstring": "\u65b0\u7248\u591a\u6b65\u9aa4\u667a\u80fd\u4f53\uff1a\u4e0d\u4f9d\u8d56 workflow engine\u3001state manager\u3001agent registry\u3002\n\u53ea\u5b9e\u73b0 execute_multi_step\uff0c\u8ba1\u5212\u548c\u72b6\u6001\u5b58\u50a8\u5728 StatefulExecutor \u7684\u53d8\u91cf\u4e2d\uff0c\u6210\u5458 Agent \u901a\u8fc7\u53d8\u91cf\u6ce8\u518c\u3002",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "register_agent",
        "plan_execution",
        "select_next_executable_step",
        "_add_new_tasks",
        "get_plan",
        "update_step_status",
        "find_step_index_by_id",
        "jump_to_step",
        "loop_back_to_step",
        "handle_generate_fix_task_and_loop",
        "execute_single_step",
        "execute_multi_step",
        "_initialize_execution_context",
        "_should_continue_execution",
        "_execute_workflow_iteration",
        "_handle_no_executable_steps",
        "_process_no_steps_decision",
        "_execute_single_workflow_step",
        "_handle_step_success",
        "_handle_step_failure",
        "_process_success_decision",
        "_process_failure_decision",
        "_handle_generate_new_task_decision",
        "_handle_navigation_decision",
        "_handle_fix_task_decision",
        "_handle_skip_step_decision",
        "_execute_fix_task",
        "_handle_retry_logic",
        "_record_failure_information",
        "_check_user_interrupt",
        "_clear_failure_records",
        "_trigger_ai_state_update",
        "_generate_state_aware_instruction",
        "_build_state_update_context",
        "_handle_workflow_error",
        "_apply_recovery_action",
        "get_error_statistics",
        "reset_error_statistics",
        "enable_instruction_optimization",
        "disable_instruction_optimization",
        "set_optimization_strategy",
        "get_optimization_statistics",
        "reset_optimization_statistics",
        "create_decision_node",
        "add_conditional_decision",
        "add_validation_decision",
        "evaluate_workflow_decision",
        "list_decision_nodes",
        "get_decision_statistics",
        "reset_decision_statistics",
        "_generate_execution_summary",
        "make_decision",
        "_try_state_aware_decision",
        "_create_dynamic_decision",
        "_create_test_decision",
        "_create_validation_decision",
        "_create_approval_decision",
        "_create_error_recovery_decision",
        "_evaluate_workflow_level_decisions",
        "_check_completion_conditions",
        "_check_loop_conditions",
        "_convert_decision_result",
        "_make_traditional_decision",
        "_get_fallback_decision",
        "_generate_decision_prompt",
        "_parse_decision"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Agent"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:MultiStepAgent_v2"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 4341,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "llm",
        "registered_agents",
        "max_retries",
        "thinker_system_message",
        "thinker_chat_system_message",
        "planning_prompt_template",
        "use_autonomous_planning"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "super().__init__",
        "StatefulExecutor",
        "self.device.set_variable",
        "WorkflowState",
        "WorkflowErrorDispatcher",
        "self.error_dispatcher.register_handler",
        "StateAwareInstructionOptimizer",
        "StateAwareDecisionManager",
        "logger.info",
        "self.device.set_variable",
        "GenericErrorHandler",
        "super"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:__init__"
    },
    {
      "type": "function",
      "name": "render",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 101,
      "complexity": 1,
      "docstring": "\u6e32\u67d3\u6a21\u677f\n\nArgs:\n    variables: \u6a21\u677f\u53d8\u91cf\u5b57\u5178\n    \nReturns:\n    (system_message, user_message) \u5143\u7ec4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "variables"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._prepare_safe_variables",
        "self.user_template.safe_substitute",
        "ValueError"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:render"
    },
    {
      "type": "function",
      "name": "_prepare_safe_variables",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 119,
      "complexity": 1,
      "docstring": "\u51c6\u5907\u5b89\u5168\u7684\u53d8\u91cf\u5b57\u5178\uff0c\u4e3a\u7f3a\u5931\u53d8\u91cf\u63d0\u4f9b\u9ed8\u8ba4\u503c\n\nArgs:\n    variables: \u539f\u59cb\u53d8\u91cf\u5b57\u5178\n    \nReturns:\n    \u5b89\u5168\u7684\u53d8\u91cf\u5b57\u5178",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "variables"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "variables.items",
        "defaults.items",
        "isinstance",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_prepare_safe_variables"
    },
    {
      "type": "function",
      "name": "get_required_variables",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 157,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6a21\u677f\u6240\u9700\u7684\u53d8\u91cf\u5217\u8868\n\nReturns:\n    \u53d8\u91cf\u540d\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "re.findall",
        "variables.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:get_required_variables"
    },
    {
      "type": "function",
      "name": "_initialize_default_templates",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 188,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u9ed8\u8ba4\u6a21\u677f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "PromptTemplate",
        "PromptTemplate",
        "PromptTemplate",
        "PromptTemplate",
        "PromptTemplate",
        "PromptTemplate"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_initialize_default_templates"
    },
    {
      "type": "function",
      "name": "get_template",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 368,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6307\u5b9a\u573a\u666f\u7684\u6a21\u677f\n\nArgs:\n    scenario: \u573a\u666f\u679a\u4e3e\u503c\n    \nReturns:\n    \u6a21\u677f\u5b9e\u4f8b\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u8fd4\u56deNone",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "scenario"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._templates.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:get_template"
    },
    {
      "type": "function",
      "name": "add_template",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 380,
      "complexity": 1,
      "docstring": "\u6dfb\u52a0\u65b0\u6a21\u677f\n\nArgs:\n    template: \u6a21\u677f\u5b9e\u4f8b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "template"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:add_template"
    },
    {
      "type": "function",
      "name": "list_templates",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 390,
      "complexity": 1,
      "docstring": "\u5217\u51fa\u6240\u6709\u6a21\u677f\n\nReturns:\n    [(scenario, version, description), ...] \u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._templates.items"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:list_templates"
    },
    {
      "type": "function",
      "name": "render_template",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 400,
      "complexity": 1,
      "docstring": "\u6e32\u67d3\u6307\u5b9a\u573a\u666f\u7684\u6a21\u677f\n\nArgs:\n    scenario: \u573a\u666f\u679a\u4e3e\u503c\n    variables: \u6a21\u677f\u53d8\u91cf\u5b57\u5178\n    \nReturns:\n    (system_message, user_message) \u5143\u7ec4\n    \nRaises:\n    ValueError: \u6a21\u677f\u4e0d\u5b58\u5728\u6216\u6e32\u67d3\u5931\u8d25",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "scenario",
        "variables"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_template",
        "ValueError",
        "template.render",
        "self._logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:render_template"
    },
    {
      "type": "function",
      "name": "get_template_variables",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 424,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6307\u5b9a\u573a\u666f\u6a21\u677f\u6240\u9700\u7684\u53d8\u91cf\u5217\u8868\n\nArgs:\n    scenario: \u573a\u666f\u679a\u4e3e\u503c\n    \nReturns:\n    \u53d8\u91cf\u540d\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "scenario"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_template",
        "template.get_required_variables"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:get_template_variables"
    },
    {
      "type": "function",
      "name": "validate_variables",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 439,
      "complexity": 1,
      "docstring": "\u9a8c\u8bc1\u53d8\u91cf\u662f\u5426\u6ee1\u8db3\u6a21\u677f\u8981\u6c42\n\nArgs:\n    scenario: \u573a\u666f\u679a\u4e3e\u503c\n    variables: \u5f85\u9a8c\u8bc1\u7684\u53d8\u91cf\u5b57\u5178\n    \nReturns:\n    (\u662f\u5426\u901a\u8fc7\u9a8c\u8bc1, \u7f3a\u5931\u7684\u53d8\u91cf\u5217\u8868)",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "scenario",
        "variables"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_template_variables",
        "set",
        "set",
        "list",
        "variables.keys",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:validate_variables"
    },
    {
      "type": "function",
      "name": "parse_response",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 529,
      "complexity": 1,
      "docstring": "\u89e3\u6790LLM\u54cd\u5e94\u5e76\u63d0\u53d6\u7ed3\u6784\u5316\u4fe1\u606f\n\nArgs:\n    raw_response: \u539f\u59cbLLM\u54cd\u5e94\n    context: \u53ef\u9009\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\n    \nReturns:\n    ParsedStateInfo: \u89e3\u6790\u540e\u7684\u7ed3\u6784\u5316\u72b6\u6001\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "raw_response",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._logger.debug",
        "self._preprocess_response",
        "self._extract_main_content",
        "self._extract_entities",
        "self._calculate_confidence",
        "self._assess_quality",
        "ParsedStateInfo",
        "self._logger.info",
        "self._create_empty_parsed_info",
        "self._analyze_sentiment",
        "self._recognize_intent",
        "self._logger.error",
        "self._create_empty_parsed_info",
        "quality_metrics.get",
        "len",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:parse_response"
    },
    {
      "type": "function",
      "name": "_preprocess_response",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 587,
      "complexity": 1,
      "docstring": "\u9884\u5904\u7406\u54cd\u5e94\u6587\u672c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "response"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "re.sub",
        "re.sub",
        "re.sub",
        "response.strip"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_preprocess_response"
    },
    {
      "type": "function",
      "name": "_extract_main_content",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 600,
      "complexity": 1,
      "docstring": "\u63d0\u53d6\u4e3b\u8981\u72b6\u6001\u5185\u5bb9",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "content"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "re.split",
        "len",
        "max",
        "main_sentence.strip",
        "main_sentence.strip",
        "len",
        "len",
        "len",
        "s.strip",
        "s.strip"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_extract_main_content"
    },
    {
      "type": "function",
      "name": "_extract_entities",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 617,
      "complexity": 1,
      "docstring": "\u63d0\u53d6\u5173\u952e\u5b9e\u4f53\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "content",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "any",
        "re.findall",
        "any",
        "re.search",
        "','.join",
        "any",
        "match.group",
        "str",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_extract_entities"
    },
    {
      "type": "function",
      "name": "_calculate_confidence",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 659,
      "complexity": 1,
      "docstring": "\u8ba1\u7b97\u7f6e\u4fe1\u5ea6\u8bc4\u5206",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "content",
        "entities"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "min",
        "sum",
        "min",
        "re.search",
        "min",
        "len",
        "max"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_calculate_confidence"
    },
    {
      "type": "function",
      "name": "_analyze_sentiment",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 688,
      "complexity": 1,
      "docstring": "\u5206\u6790\u60c5\u611f\u503e\u5411",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "content"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "sum",
        "sum",
        "sum",
        "sum"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_analyze_sentiment"
    },
    {
      "type": "function",
      "name": "_recognize_intent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 707,
      "complexity": 1,
      "docstring": "\u8bc6\u522b\u610f\u56fe",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "content"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._intent_patterns.items",
        "sum",
        "max"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_recognize_intent"
    },
    {
      "type": "function",
      "name": "_assess_quality",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 722,
      "complexity": 1,
      "docstring": "\u8bc4\u4f30\u54cd\u5e94\u8d28\u91cf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "content",
        "entities",
        "confidence"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "len",
        "len",
        "len",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_assess_quality"
    },
    {
      "type": "function",
      "name": "_create_empty_parsed_info",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 747,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u7a7a\u7684\u89e3\u6790\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "reason"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "ParsedStateInfo"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_create_empty_parsed_info"
    },
    {
      "type": "function",
      "name": "validate_parsed_info",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 758,
      "complexity": 1,
      "docstring": "\u9a8c\u8bc1\u89e3\u6790\u540e\u7684\u4fe1\u606f\u662f\u5426\u7b26\u5408\u8981\u6c42\n\nArgs:\n    parsed_info: \u89e3\u6790\u540e\u7684\u72b6\u6001\u4fe1\u606f\n    min_confidence: \u6700\u5c0f\u7f6e\u4fe1\u5ea6\u9608\u503c\n    \nReturns:\n    Tuple[bool, List[str]]: (\u662f\u5426\u6709\u6548, \u95ee\u9898\u5217\u8868)",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "parsed_info",
        "min_confidence"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "issues.append",
        "len",
        "issues.append",
        "parsed_info.quality_metrics.get",
        "issues.append",
        "issues.append",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:validate_parsed_info"
    },
    {
      "type": "function",
      "name": "suggest_improvements",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 791,
      "complexity": 1,
      "docstring": "\u5efa\u8bae\u6539\u8fdb\u63aa\u65bd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "parsed_info"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "suggestions.append",
        "len",
        "suggestions.append",
        "parsed_info.quality_metrics.get",
        "suggestions.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:suggest_improvements"
    },
    {
      "type": "function",
      "name": "extract_relevant_context",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 913,
      "complexity": 1,
      "docstring": "\u63d0\u53d6\u4e0e\u5f53\u524d\u6b65\u9aa4\u76f8\u5173\u7684\u72b6\u6001\u4e0a\u4e0b\u6587\n\nArgs:\n    step: \u5f53\u524d\u6b65\u9aa4\u4fe1\u606f\n    global_state: \u5168\u5c40\u5de5\u4f5c\u6d41\u72b6\u6001\n    \nReturns:\n    \u76f8\u5173\u72b6\u6001\u4e0a\u4e0b\u6587\u5b57\u5178",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._analyze_step_requirements",
        "global_state.get_global_state",
        "self._extract_state_entities",
        "self._categorize_state_relevance",
        "self._generate_context_summary",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:extract_relevant_context"
    },
    {
      "type": "function",
      "name": "_analyze_step_requirements",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 956,
      "complexity": 1,
      "docstring": "\u5206\u6790\u6b65\u9aa4\u9700\u6c42\u548c\u7c7b\u578b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.step_type_keywords.items",
        "step.get('instruction', '').lower",
        "step.get('name', '').lower",
        "step.get('expected_output', '').lower",
        "step.get('agent_name', '').lower",
        "any",
        "analysis['step_types'].append",
        "analysis['keywords'].extend",
        "step.get",
        "step.get",
        "step.get",
        "step.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_analyze_step_requirements"
    },
    {
      "type": "function",
      "name": "_extract_state_entities",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 978,
      "complexity": 1,
      "docstring": "\u4ece\u72b6\u6001\u5185\u5bb9\u4e2d\u63d0\u53d6\u5b9e\u4f53\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "state_content",
        "step_analysis"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "state_content.lower",
        "re.findall",
        "re.findall",
        "re.findall",
        "dict",
        "re.findall"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_extract_state_entities"
    },
    {
      "type": "function",
      "name": "_categorize_state_relevance",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 1024,
      "complexity": 1,
      "docstring": "\u6839\u636e\u76f8\u5173\u6027\u5bf9\u72b6\u6001\u4fe1\u606f\u8fdb\u884c\u5206\u7c7b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "state_content",
        "step_analysis",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "set",
        "line.strip",
        "line.lower",
        "sum",
        "self.state_priority_patterns.items",
        "state_content.split",
        "line.strip",
        "self.step_type_keywords.get",
        "sum",
        "any",
        "context['extracted_entities'].items",
        "context['high_relevance'].append",
        "isinstance",
        "context['medium_relevance'].append",
        "isinstance",
        "context['low_relevance'].append",
        "entities.items",
        "str(entity).lower",
        "str",
        "key.lower",
        "str(value).lower",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_categorize_state_relevance"
    },
    {
      "type": "function",
      "name": "_generate_context_summary",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 1072,
      "complexity": 1,
      "docstring": "\u751f\u6210\u4e0a\u4e0b\u6587\u6458\u8981",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context",
        "step_analysis"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "summary_parts.append",
        "summary_parts.extend",
        "context['extracted_entities'].items",
        "summary_parts.append",
        "'\\n'.join",
        "summary_parts.append",
        "isinstance",
        "entity_summary.append",
        "len",
        "isinstance",
        "entity_summary.append",
        "'; '.join",
        "', '.join",
        "', '.join",
        "list",
        "', '.join",
        "str",
        "entities.items"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_generate_context_summary"
    },
    {
      "type": "function",
      "name": "can_optimize",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 1179,
      "complexity": 1,
      "docstring": "\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u4f18\u5316\u6307\u4ee4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction",
        "step",
        "global_state",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "global_state.get_global_state",
        "instruction.strip",
        "len",
        "len",
        "state_content.strip"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:can_optimize"
    },
    {
      "type": "function",
      "name": "optimize_instruction",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 1200,
      "complexity": 1,
      "docstring": "\u4f18\u5316\u6307\u4ee4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction",
        "step",
        "global_state",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._analyze_instruction_context",
        "self._determine_optimization_types",
        "self._apply_optimizations",
        "self._calculate_optimization_confidence",
        "self._predict_improvement",
        "self._assess_optimization_risk",
        "self._generate_optimization_reasoning",
        "InstructionOptimizationResult",
        "self._update_optimization_stats",
        "self.logger.info",
        "self.logger.error",
        "InstructionOptimizationResult",
        "self._get_applied_enhancements",
        "str",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:optimize_instruction"
    },
    {
      "type": "function",
      "name": "get_optimization_priority",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 1260,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u4f18\u5316\u5668\u4f18\u5148\u7ea7",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:get_optimization_priority"
    },
    {
      "type": "function",
      "name": "_analyze_instruction_context",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 1264,
      "complexity": 1,
      "docstring": "\u5206\u6790\u6307\u4ee4\u548c\u4e0a\u4e0b\u6587",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction",
        "step",
        "global_state",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "self._assess_instruction_complexity",
        "any",
        "any",
        "step.get",
        "self._assess_step_complexity",
        "len",
        "len",
        "self._get_historical_errors",
        "self._get_recent_failures",
        "self._analyze_dependencies",
        "instruction.lower",
        "global_state.get_global_state",
        "str",
        "instruction.lower",
        "instruction.lower"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_analyze_instruction_context"
    },
    {
      "type": "function",
      "name": "_determine_optimization_types",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 1284,
      "complexity": 1,
      "docstring": "\u786e\u5b9a\u9700\u8981\u5e94\u7528\u7684\u4f18\u5316\u7c7b\u578b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "analysis"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "optimization_types.append",
        "optimization_types.append",
        "optimization_types.append",
        "optimization_types.append",
        "optimization_types.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_determine_optimization_types"
    },
    {
      "type": "function",
      "name": "_apply_optimizations",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 1315,
      "complexity": 1,
      "docstring": "\u5e94\u7528\u6307\u4ee4\u4f18\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction",
        "step",
        "global_state",
        "context",
        "analysis",
        "optimization_types"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._enhance_context",
        "self._add_error_prevention",
        "self._improve_efficiency",
        "self._optimize_clarity",
        "self._add_dependency_awareness"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_apply_optimizations"
    },
    {
      "type": "function",
      "name": "_enhance_context",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 1335,
      "complexity": 1,
      "docstring": "\u589e\u5f3a\u4e0a\u4e0b\u6587\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction",
        "global_state",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "global_state.get_global_state",
        "state_content.lower",
        "key_info.append",
        "state_content.lower",
        "key_info.append",
        "state_content.lower",
        "key_info.append",
        "state_content.lower",
        "key_info.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_enhance_context"
    },
    {
      "type": "function",
      "name": "_add_error_prevention",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 1359,
      "complexity": 1,
      "docstring": "\u6dfb\u52a0\u9519\u8bef\u9884\u9632\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction",
        "analysis"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "prevention_tips.append",
        "prevention_tips.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_add_error_prevention"
    },
    {
      "type": "function",
      "name": "_improve_efficiency",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 1377,
      "complexity": 1,
      "docstring": "\u63d0\u5347\u6548\u7387",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction",
        "step",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "step.get('name', '').lower",
        "efficiency_tips.append",
        "efficiency_tips.append",
        "step.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_improve_efficiency"
    },
    {
      "type": "function",
      "name": "_optimize_clarity",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 1396,
      "complexity": 1,
      "docstring": "\u4f18\u5316\u6e05\u6670\u5ea6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction",
        "step"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "step.get",
        "step.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_optimize_clarity"
    },
    {
      "type": "function",
      "name": "_add_dependency_awareness",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 1413,
      "complexity": 1,
      "docstring": "\u6dfb\u52a0\u4f9d\u8d56\u5173\u7cfb\u611f\u77e5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction",
        "analysis"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_add_dependency_awareness"
    },
    {
      "type": "function",
      "name": "_assess_instruction_complexity",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 1429,
      "complexity": 1,
      "docstring": "\u8bc4\u4f30\u6307\u4ee4\u590d\u6742\u5ea6 (0.0-1.0)",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "sum",
        "min",
        "sum",
        "min",
        "min",
        "len",
        "len",
        "term.lower",
        "instruction.lower",
        "instruction.lower"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_assess_instruction_complexity"
    },
    {
      "type": "function",
      "name": "_assess_step_complexity",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 1451,
      "complexity": 1,
      "docstring": "\u8bc4\u4f30\u6b65\u9aa4\u590d\u6742\u5ea6 (0.0-1.0)",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "step.get('name', '').lower",
        "any",
        "step.get",
        "step.get",
        "step.get",
        "min",
        "len",
        "len",
        "step.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_assess_step_complexity"
    },
    {
      "type": "function",
      "name": "_get_historical_errors",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 1478,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u5386\u53f2\u9519\u8bef\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "context.get",
        "errors.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_get_historical_errors"
    },
    {
      "type": "function",
      "name": "_get_recent_failures",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 1486,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u8fd1\u671f\u5931\u8d25\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "global_state.get_global_state",
        "failures.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_get_recent_failures"
    },
    {
      "type": "function",
      "name": "_analyze_dependencies",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 1494,
      "complexity": 1,
      "docstring": "\u5206\u6790\u4f9d\u8d56\u5173\u7cfb",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "step.get",
        "len",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_analyze_dependencies"
    },
    {
      "type": "function",
      "name": "_calculate_optimization_confidence",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 1504,
      "complexity": 1,
      "docstring": "\u8ba1\u7b97\u4f18\u5316\u7f6e\u4fe1\u5ea6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "analysis",
        "optimization_types"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "min",
        "min",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_calculate_optimization_confidence"
    },
    {
      "type": "function",
      "name": "_predict_improvement",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 1525,
      "complexity": 1,
      "docstring": "\u9884\u6d4b\u6539\u8fdb\u7a0b\u5ea6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "analysis",
        "optimization_types"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "min",
        "type_improvements.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_predict_improvement"
    },
    {
      "type": "function",
      "name": "_assess_optimization_risk",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 1547,
      "complexity": 1,
      "docstring": "\u8bc4\u4f30\u4f18\u5316\u98ce\u9669",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "original",
        "optimized",
        "analysis"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "risk_factors.append",
        "risk_factors.append",
        "min",
        "len",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_assess_optimization_risk"
    },
    {
      "type": "function",
      "name": "_generate_optimization_reasoning",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 1573,
      "complexity": 1,
      "docstring": "\u751f\u6210\u4f18\u5316\u7406\u7531",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "optimization_types",
        "analysis"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "'\uff1b'.join",
        "reasons.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_generate_optimization_reasoning"
    },
    {
      "type": "function",
      "name": "_get_applied_enhancements",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 1595,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u5e94\u7528\u7684\u589e\u5f3a\u529f\u80fd\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "optimization_types"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "enhancements.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_get_applied_enhancements"
    },
    {
      "type": "function",
      "name": "_update_optimization_stats",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 1613,
      "complexity": 1,
      "docstring": "\u66f4\u65b0\u4f18\u5316\u7edf\u8ba1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.optimization_stats['optimization_types_used'].get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_update_optimization_stats"
    },
    {
      "type": "function",
      "name": "get_optimization_statistics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 6007,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6307\u4ee4\u4f18\u5316\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "hasattr",
        "self.instruction_optimizer.get_optimization_statistics"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:get_optimization_statistics"
    },
    {
      "type": "function",
      "name": "reset_optimization_statistics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 6020,
      "complexity": 1,
      "docstring": "\u91cd\u7f6e\u6307\u4ee4\u4f18\u5316\u7edf\u8ba1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "hasattr",
        "self.instruction_optimizer.reset_optimization_statistics",
        "logger.info",
        "logger.warning"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:reset_optimization_statistics"
    },
    {
      "type": "function",
      "name": "evaluate",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 1682,
      "complexity": 1,
      "docstring": "\u8bc4\u4f30\u6761\u4ef6\n\nArgs:\n    global_state: \u5168\u5c40\u5de5\u4f5c\u6d41\u72b6\u6001\n    \nReturns:\n    (\u662f\u5426\u6ee1\u8db3\u6761\u4ef6, \u8bc4\u4f30\u8be6\u60c5)",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._extract_state_value",
        "self._evaluate_condition",
        "logger.error",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:evaluate"
    },
    {
      "type": "function",
      "name": "_extract_state_value",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 1719,
      "complexity": 1,
      "docstring": "\u4ece\u5168\u5c40\u72b6\u6001\u4e2d\u63d0\u53d6\u503c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "global_state.get_global_state",
        "self.state_path.split",
        "json.loads",
        "re.search",
        "part.lower",
        "state_content.lower",
        "match.group(1).strip().strip",
        "self._parse_value",
        "isinstance",
        "value.get",
        "re.escape",
        "re.escape",
        "re.escape",
        "match.group(1).strip",
        "match.group"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_extract_state_value"
    },
    {
      "type": "function",
      "name": "_parse_value",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 1767,
      "complexity": 1,
      "docstring": "\u89e3\u6790\u5b57\u7b26\u4e32\u503c\u4e3a\u9002\u5f53\u7684\u7c7b\u578b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "value_str"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "value_str.lower",
        "float",
        "int"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_parse_value"
    },
    {
      "type": "function",
      "name": "_evaluate_condition",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 1792,
      "complexity": 1,
      "docstring": "\u8bc4\u4f30\u5177\u4f53\u7684\u6761\u4ef6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "actual_value"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._safe_compare",
        "self._safe_compare",
        "self._safe_compare",
        "self._safe_compare",
        "self._safe_contains",
        "self._safe_contains",
        "str(actual_value).startswith",
        "str",
        "str(actual_value).endswith",
        "str",
        "str",
        "str",
        "hasattr",
        "hasattr",
        "isinstance",
        "bool",
        "actual_value.strip",
        "bool",
        "isinstance",
        "re.search",
        "actual_value.strip",
        "str",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_evaluate_condition"
    },
    {
      "type": "function",
      "name": "_safe_compare",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 1834,
      "complexity": 1,
      "docstring": "\u5b89\u5168\u7684\u6570\u503c\u6bd4\u8f83",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "a",
        "b",
        "comparison_func"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "comparison_func",
        "isinstance",
        "isinstance",
        "float",
        "float",
        "comparison_func"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_safe_compare"
    },
    {
      "type": "function",
      "name": "_safe_contains",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 1850,
      "complexity": 1,
      "docstring": "\u5b89\u5168\u7684\u5305\u542b\u68c0\u67e5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "container",
        "item"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "hasattr",
        "str",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_safe_contains"
    },
    {
      "type": "function",
      "name": "add_condition",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 1882,
      "complexity": 1,
      "docstring": "\u6dfb\u52a0\u6761\u4ef6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "condition"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.conditions.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:add_condition"
    },
    {
      "type": "function",
      "name": "add_decision_path",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 1886,
      "complexity": 1,
      "docstring": "\u6dfb\u52a0\u51b3\u7b56\u8def\u5f84",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "condition_result",
        "next_step_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:add_decision_path"
    },
    {
      "type": "function",
      "name": "set_default_path",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 1890,
      "complexity": 1,
      "docstring": "\u8bbe\u7f6e\u9ed8\u8ba4\u8def\u5f84",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "next_step_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:set_default_path"
    },
    {
      "type": "function",
      "name": "set_logic_operator",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 1894,
      "complexity": 1,
      "docstring": "\u8bbe\u7f6e\u903b\u8f91\u64cd\u4f5c\u7b26\uff08AND/OR\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "operator"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "operator.upper",
        "operator.upper"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:set_logic_operator"
    },
    {
      "type": "function",
      "name": "evaluate_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2042,
      "complexity": 1,
      "docstring": "\u8bc4\u4f30\u6307\u5b9a\u51b3\u7b56\u8282\u70b9\n\nArgs:\n    node_id: \u51b3\u7b56\u8282\u70b9ID\n    global_state: \u5168\u5c40\u5de5\u4f5c\u6d41\u72b6\u6001\n    \nReturns:\n    \u51b3\u7b56\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "node_id",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "node.evaluate_decision",
        "self._update_decision_statistics",
        "logger.info",
        "logger.error",
        "DecisionResult"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:evaluate_decision"
    },
    {
      "type": "function",
      "name": "register_decision_node",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2017,
      "complexity": 1,
      "docstring": "\u6ce8\u518c\u51b3\u7b56\u8282\u70b9",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "node"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:register_decision_node"
    },
    {
      "type": "function",
      "name": "create_conditional_node",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2022,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u6761\u4ef6\u51b3\u7b56\u8282\u70b9\u7684\u5feb\u6377\u65b9\u6cd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "node_id",
        "condition",
        "true_step",
        "false_step",
        "description"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "DecisionNode",
        "node.add_condition",
        "node.add_decision_path",
        "node.add_decision_path",
        "self.register_decision_node"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:create_conditional_node"
    },
    {
      "type": "function",
      "name": "create_validation_node",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2032,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u9a8c\u8bc1\u51b3\u7b56\u8282\u70b9\u7684\u5feb\u6377\u65b9\u6cd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "node_id",
        "condition",
        "valid_step",
        "invalid_step",
        "description"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "DecisionNode",
        "node.add_condition",
        "node.add_decision_path",
        "node.add_decision_path",
        "self.register_decision_node"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:create_validation_node"
    },
    {
      "type": "function",
      "name": "list_decision_nodes",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 6049,
      "complexity": 1,
      "docstring": "\u5217\u51fa\u6240\u6709\u51b3\u7b56\u8282\u70b9",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.decision_manager.list_decision_nodes"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:list_decision_nodes"
    },
    {
      "type": "function",
      "name": "get_decision_statistics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 6053,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u51b3\u7b56\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.decision_manager.get_decision_statistics"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:get_decision_statistics"
    },
    {
      "type": "function",
      "name": "reset_decision_statistics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 6057,
      "complexity": 1,
      "docstring": "\u91cd\u7f6e\u51b3\u7b56\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.decision_manager.reset_decision_statistics",
        "logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:reset_decision_statistics"
    },
    {
      "type": "function",
      "name": "_update_decision_statistics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2106,
      "complexity": 1,
      "docstring": "\u66f4\u65b0\u51b3\u7b56\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "node",
        "result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_update_decision_statistics"
    },
    {
      "type": "function",
      "name": "to_dict",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2168,
      "complexity": 1,
      "docstring": "\u8f6c\u6362\u4e3a\u5b57\u5178\u683c\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.timestamp.isoformat",
        "self.global_state.get_state_summary"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:to_dict"
    },
    {
      "type": "function",
      "name": "can_handle",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2242,
      "complexity": 1,
      "docstring": "\u901a\u7528\u5904\u7406\u5668\u53ef\u4ee5\u5904\u7406\u6240\u6709\u7c7b\u578b\u7684\u9519\u8bef",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "error_context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:can_handle"
    },
    {
      "type": "function",
      "name": "handle_error",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2250,
      "complexity": 1,
      "docstring": "\u5904\u7406\u9519\u8bef",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "error_context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.handled_errors.append",
        "self.recovery_strategies.get",
        "handler_func",
        "result.get",
        "error_context.global_state.set_global_state",
        "logger.error",
        "self._create_fallback_result"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:handle_error"
    },
    {
      "type": "function",
      "name": "get_priority",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2246,
      "complexity": 1,
      "docstring": "\u901a\u7528\u5904\u7406\u5668\u4f18\u5148\u7ea7\u6700\u4f4e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:get_priority"
    },
    {
      "type": "function",
      "name": "_handle_api_error",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2283,
      "complexity": 1,
      "docstring": "\u5904\u7406API\u9519\u8bef",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "error_context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "error_context.global_state.get_global_state",
        "error_context.error_message.lower"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_handle_api_error"
    },
    {
      "type": "function",
      "name": "_handle_timeout_error",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2310,
      "complexity": 1,
      "docstring": "\u5904\u7406\u8d85\u65f6\u9519\u8bef",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "error_context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "error_context.global_state.get_global_state"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_handle_timeout_error"
    },
    {
      "type": "function",
      "name": "_handle_validation_error",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2323,
      "complexity": 1,
      "docstring": "\u5904\u7406\u9a8c\u8bc1\u9519\u8bef",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "error_context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "error_context.global_state.get_global_state"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_handle_validation_error"
    },
    {
      "type": "function",
      "name": "_handle_file_error",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2335,
      "complexity": 1,
      "docstring": "\u5904\u7406\u6587\u4ef6\u9519\u8bef",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "error_context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "error_context.global_state.get_global_state",
        "error_context.error_message.lower"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_handle_file_error"
    },
    {
      "type": "function",
      "name": "_handle_database_error",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2361,
      "complexity": 1,
      "docstring": "\u5904\u7406\u6570\u636e\u5e93\u9519\u8bef",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "error_context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "error_context.global_state.get_global_state"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_handle_database_error"
    },
    {
      "type": "function",
      "name": "_handle_network_error",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2373,
      "complexity": 1,
      "docstring": "\u5904\u7406\u7f51\u7edc\u9519\u8bef",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "error_context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "error_context.global_state.get_global_state"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_handle_network_error"
    },
    {
      "type": "function",
      "name": "_handle_auth_error",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2385,
      "complexity": 1,
      "docstring": "\u5904\u7406\u8ba4\u8bc1\u9519\u8bef",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "error_context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "error_context.global_state.get_global_state"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_handle_auth_error"
    },
    {
      "type": "function",
      "name": "_handle_permission_error",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2397,
      "complexity": 1,
      "docstring": "\u5904\u7406\u6743\u9650\u9519\u8bef",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "error_context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "error_context.global_state.get_global_state"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_handle_permission_error"
    },
    {
      "type": "function",
      "name": "_handle_config_error",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2409,
      "complexity": 1,
      "docstring": "\u5904\u7406\u914d\u7f6e\u9519\u8bef",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "error_context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "error_context.global_state.get_global_state"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_handle_config_error"
    },
    {
      "type": "function",
      "name": "_handle_agent_error",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2421,
      "complexity": 1,
      "docstring": "\u5904\u7406\u4ee3\u7406\u6267\u884c\u9519\u8bef",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "error_context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "error_context.global_state.get_global_state"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_handle_agent_error"
    },
    {
      "type": "function",
      "name": "_handle_unknown_error",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2433,
      "complexity": 1,
      "docstring": "\u5904\u7406\u672a\u77e5\u9519\u8bef",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "error_context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "error_context.global_state.get_global_state"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_handle_unknown_error"
    },
    {
      "type": "function",
      "name": "_create_fallback_result",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2445,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u56de\u9000\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "error_context",
        "handler_error"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "error_context.global_state.get_global_state",
        "str",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_create_fallback_result"
    },
    {
      "type": "function",
      "name": "get_error_statistics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 5974,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u9519\u8bef\u5904\u7406\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.error_statistics.copy"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:get_error_statistics"
    },
    {
      "type": "function",
      "name": "register_handler",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2498,
      "complexity": 1,
      "docstring": "\u6ce8\u518c\u9519\u8bef\u5904\u7406\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "handler"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.error_handlers.append",
        "self.error_handlers.sort",
        "h.get_priority"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:register_handler"
    },
    {
      "type": "function",
      "name": "classify_error",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2504,
      "complexity": 1,
      "docstring": "\u5206\u7c7b\u9519\u8bef\u7c7b\u578b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "error"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "str(error).lower",
        "any",
        "any",
        "str",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any",
        "any"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:classify_error"
    },
    {
      "type": "function",
      "name": "dispatch_error",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2536,
      "complexity": 1,
      "docstring": "\u5206\u53d1\u9519\u8bef\u5230\u9002\u5f53\u7684\u5904\u7406\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "error",
        "step",
        "global_state",
        "execution_context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.classify_error",
        "WorkflowErrorContext",
        "logger.error",
        "handler.can_handle",
        "handler.handle_error",
        "logger.info",
        "global_state.get_global_state",
        "str",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:dispatch_error"
    },
    {
      "type": "function",
      "name": "generate_fallback_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2617,
      "complexity": 1,
      "docstring": "\u6839\u636e\u6307\u5b9a\u7b56\u7565\u751f\u6210\u56de\u9000\u72b6\u6001\n\nArgs:\n    strategy: \u56de\u9000\u7b56\u7565\n    current_state: \u5f53\u524d\u5de5\u4f5c\u6d41\u72b6\u6001\n    context: \u4e0a\u4e0b\u6587\u4fe1\u606f\n    failure_reason: \u5931\u8d25\u539f\u56e0\n    \nReturns:\n    \u751f\u6210\u7684\u56de\u9000\u72b6\u6001\u63cf\u8ff0",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "strategy",
        "current_state",
        "context",
        "failure_reason"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.logger.info",
        "self._generate_template_based_state",
        "self.logger.error",
        "self._generate_rule_based_state",
        "self._generate_minimal_state",
        "self._generate_notification_state",
        "self._generate_minimal_state"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:generate_fallback_state"
    },
    {
      "type": "function",
      "name": "_generate_template_based_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2652,
      "complexity": 1,
      "docstring": "\u57fa\u4e8e\u6a21\u677f\u751f\u6210\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "context.get",
        "step_info.get",
        "context.get",
        "context.get",
        "context.get",
        "step_info.get",
        "random.choice",
        "template.format",
        "random.choice",
        "random.choice",
        "template.replace",
        "execution_result.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_generate_template_based_state"
    },
    {
      "type": "function",
      "name": "_generate_rule_based_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2674,
      "complexity": 1,
      "docstring": "\u57fa\u4e8e\u89c4\u5219\u751f\u6210\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_state",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "context.get",
        "step_info.get",
        "context.get",
        "context.get",
        "parts.append",
        "context.get",
        "execution_result.get",
        "'\uff0c'.join",
        "str(error_info).lower",
        "parts.append",
        "parts.append",
        "execution_result.get",
        "parts.append",
        "str(error_info).lower",
        "parts.append",
        "parts.append",
        "str",
        "str",
        "parts.append",
        "str",
        "len",
        "parts.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_generate_rule_based_state"
    },
    {
      "type": "function",
      "name": "_generate_minimal_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2712,
      "complexity": 1,
      "docstring": "\u751f\u6210\u6700\u5c0f\u72b6\u6001\u63cf\u8ff0",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "dt.now().strftime",
        "random.choice",
        "dt.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_generate_minimal_state"
    },
    {
      "type": "function",
      "name": "_generate_notification_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2718,
      "complexity": 1,
      "docstring": "\u751f\u6210\u901a\u77e5\u64cd\u4f5c\u5458\u7684\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "failure_reason"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_generate_notification_state"
    },
    {
      "type": "function",
      "name": "get",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2751,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u7f13\u5b58\u9879",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "key"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.cache.pop",
        "entry._replace"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:get"
    },
    {
      "type": "function",
      "name": "put",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2768,
      "complexity": 1,
      "docstring": "\u6dfb\u52a0\u7f13\u5b58\u9879",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "key",
        "entry"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.cache.pop",
        "len",
        "self.cache.popitem"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:put"
    },
    {
      "type": "function",
      "name": "clear",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2781,
      "complexity": 1,
      "docstring": "\u6e05\u7a7a\u7f13\u5b58",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.cache.clear"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:clear"
    },
    {
      "type": "function",
      "name": "get_stats",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2786,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u7f13\u5b58\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "max"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:get_stats"
    },
    {
      "type": "function",
      "name": "reset_stats",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2797,
      "complexity": 1,
      "docstring": "\u91cd\u7f6e\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:reset_stats"
    },
    {
      "type": "function",
      "name": "hash_context",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2811,
      "complexity": 1,
      "docstring": "\u751f\u6210\u4e0a\u4e0b\u6587\u7684\u54c8\u5e0c\u503c\n\nArgs:\n    current_state: \u5f53\u524d\u5de5\u4f5c\u6d41\u72b6\u6001\n    context: \u4e0a\u4e0b\u6587\u4fe1\u606f\n    include_timestamp: \u662f\u5426\u5305\u542b\u65f6\u95f4\u6233\uff08\u5f71\u54cd\u7f13\u5b58\u6709\u6548\u6027\uff09\n    \nReturns:\n    \u4e0a\u4e0b\u6587\u54c8\u5e0c\u5b57\u7b26\u4e32",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "current_state",
        "context",
        "include_timestamp"
      ],
      "decorators": [
        "staticmethod"
      ],
      "inheritance": [],
      "calls": [
        "context.get",
        "context.get",
        "context.get",
        "hash_components.append",
        "context.get",
        "'|'.join",
        "hashlib.md5(combined_string.encode('utf-8')).hexdigest",
        "current_state.get_global_state",
        "hash_components.append",
        "current_state.get_state_history",
        "enumerate",
        "hash_components.append",
        "hash_components.append",
        "hash_components.append",
        "hash_components.append",
        "hash_components.append",
        "context.get",
        "hash_components.append",
        "hash_components.append",
        "str",
        "str",
        "dt.now().isoformat",
        "hashlib.md5",
        "combined_string.encode",
        "step_info.get",
        "step_info.get",
        "step_info.get",
        "dt.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:hash_context"
    },
    {
      "type": "function",
      "name": "should_make_ai_call",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2880,
      "complexity": 1,
      "docstring": "\u5224\u65ad\u662f\u5426\u5e94\u8be5\u8fdb\u884cAI\u8c03\u7528\n\nArgs:\n    current_state: \u5f53\u524d\u5de5\u4f5c\u6d41\u72b6\u6001\n    context: \u4e0a\u4e0b\u6587\u4fe1\u606f\n    \nReturns:\n    (should_call, reason) \u5143\u7ec4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_state",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._is_initialization",
        "self._has_significant_change",
        "self._has_error_condition",
        "self._is_state_transition",
        "self._should_update_by_time"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:should_make_ai_call"
    },
    {
      "type": "function",
      "name": "_has_significant_change",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2915,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u662f\u5426\u6709\u663e\u8457\u53d8\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "context.get",
        "context.get",
        "step_info.get('type', '').lower",
        "any",
        "str",
        "len",
        "step_info.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_has_significant_change"
    },
    {
      "type": "function",
      "name": "_has_error_condition",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2936,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u662f\u5426\u6709\u9519\u8bef\u6761\u4ef6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "context.get",
        "context.get('step_status', '').lower",
        "context.get",
        "str(execution_result).lower",
        "any",
        "context.get",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_has_error_condition"
    },
    {
      "type": "function",
      "name": "_is_state_transition",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2958,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u662f\u5426\u4e3a\u72b6\u6001\u8f6c\u6362",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "context.get('step_status', '').lower",
        "any",
        "context.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_is_state_transition"
    },
    {
      "type": "function",
      "name": "_should_update_by_time",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2964,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u662f\u5426\u5e94\u57fa\u4e8e\u65f6\u95f4\u8fdb\u884c\u66f4\u65b0",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "current_state.get_state_history",
        "(dt.now() - last_update).total_seconds",
        "dt.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_should_update_by_time"
    },
    {
      "type": "function",
      "name": "_is_initialization",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2978,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u662f\u5426\u4e3a\u521d\u59cb\u5316\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "current_state.get_global_state",
        "global_state.strip",
        "current_state.get_state_history_count"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_is_initialization"
    },
    {
      "type": "function",
      "name": "set_significance_threshold",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2986,
      "complexity": 1,
      "docstring": "\u8bbe\u7f6e\u663e\u8457\u6027\u9608\u503c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "threshold"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "max",
        "min"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:set_significance_threshold"
    },
    {
      "type": "function",
      "name": "set_time_threshold",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2990,
      "complexity": 1,
      "docstring": "\u8bbe\u7f6e\u65f6\u95f4\u9608\u503c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "seconds"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "max"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:set_time_threshold"
    },
    {
      "type": "function",
      "name": "get_configuration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 2994,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u914d\u7f6e\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:get_configuration"
    },
    {
      "type": "function",
      "name": "update_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 3212,
      "complexity": 1,
      "docstring": "\u4f7f\u7528DeepSeek\u548c\u52a8\u6001\u6a21\u677f\u751f\u6210\u65b0\u7684\u72b6\u6001\u63cf\u8ff0\uff0c\u96c6\u6210\u7f13\u5b58\u548c\u6761\u4ef6\u903b\u8f91\n\nArgs:\n    current_state: \u5f53\u524d\u5de5\u4f5c\u6d41\u72b6\u6001\n    context: \u4e0a\u4e0b\u6587\u4fe1\u606f\n    \nReturns:\n    \u65b0\u7684\u72b6\u6001\u63cf\u8ff0\u5b57\u7b26\u4e32\uff0c\u5931\u8d25\u65f6\u8fd4\u56deNone",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_state",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._detect_scenario",
        "self._logger.debug",
        "range",
        "self._logger.error",
        "self._execute_fallback_strategies",
        "self._logger.error",
        "self.should_update",
        "self.condition_checker.should_make_ai_call",
        "self.context_hasher.hash_context",
        "self.cache.get",
        "self._logger.info",
        "self._logger.debug",
        "self._logger.debug",
        "self._logger.info",
        "self._prepare_template_variables",
        "self.template_manager.render_template",
        "self._logger.debug",
        "self.llm.invoke",
        "SystemMessage",
        "HumanMessage",
        "response.content.strip",
        "self.response_parser.parse_response",
        "self._store_parsed_info",
        "self._validate_generated_state",
        "self._logger.warning",
        "self._logger.error",
        "self._logger.info",
        "self._logger.warning",
        "time.sleep",
        "AICallCacheEntry",
        "self.cache.put",
        "self._logger.debug",
        "parsed_info.quality_metrics.get",
        "dt.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:update_state"
    },
    {
      "type": "function",
      "name": "should_update",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 3168,
      "complexity": 1,
      "docstring": "\u5224\u65ad\u662f\u5426\u5e94\u8be5\u66f4\u65b0\u72b6\u6001\n\n\u7b80\u5355\u7b56\u7565\uff1a\n1. \u5982\u679c\u6b65\u9aa4\u6267\u884c\u5b8c\u6210\uff08\u6210\u529f\u6216\u5931\u8d25\uff09\u5219\u66f4\u65b0\n2. \u5982\u679c\u72b6\u6001\u4e3a\u7a7a\u5219\u66f4\u65b0\n3. \u5982\u679c\u4e0a\u4e0b\u6587\u5305\u542b\u91cd\u8981\u53d8\u5316\u5219\u66f4\u65b0",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_state",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "current_state.get_global_state",
        "context.get",
        "context.get",
        "self._logger.debug",
        "current_state.is_state_update_enabled",
        "self._logger.debug",
        "current_global_state.strip",
        "self._logger.debug",
        "self._logger.debug",
        "context.get",
        "self._logger.debug",
        "self._logger.debug",
        "self._logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:should_update"
    },
    {
      "type": "function",
      "name": "_validate_llm_connection",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 3155,
      "complexity": 1,
      "docstring": "\u9a8c\u8bc1LLM\u8fde\u63a5\u662f\u5426\u6b63\u5e38",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.llm.invoke",
        "SystemMessage",
        "HumanMessage",
        "self._logger.info",
        "ValueError",
        "self._logger.error",
        "RuntimeError"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_validate_llm_connection"
    },
    {
      "type": "function",
      "name": "_get_system_message",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 3318,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u72b6\u6001\u66f4\u65b0\u7684\u7cfb\u7edf\u63d0\u793a\u6d88\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_get_system_message"
    },
    {
      "type": "function",
      "name": "_build_state_update_prompt",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 3337,
      "complexity": 1,
      "docstring": "\u6784\u5efa\u72b6\u6001\u66f4\u65b0\u63d0\u793a",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_state",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "current_state.get_global_state",
        "current_state.get_state_history",
        "context.get",
        "context.get",
        "context.get",
        "context.get",
        "prompt_parts.extend",
        "prompt_parts.extend",
        "'\\n'.join",
        "enumerate",
        "prompt_parts.append",
        "prompt_parts.extend",
        "execution_result.get",
        "prompt_parts.extend",
        "reversed",
        "prompt_parts.append",
        "prompt_parts.append",
        "str",
        "step_info.get",
        "step_info.get",
        "entry.timestamp.strftime",
        "execution_result.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_build_state_update_prompt"
    },
    {
      "type": "function",
      "name": "_detect_scenario",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 3400,
      "complexity": 1,
      "docstring": "\u68c0\u6d4b\u5f53\u524d\u573a\u666f\u7c7b\u578b\n\nArgs:\n    current_state: \u5f53\u524d\u5de5\u4f5c\u6d41\u72b6\u6001\n    context: \u4e0a\u4e0b\u6587\u4fe1\u606f\n\nReturns:\n    \u68c0\u6d4b\u5230\u7684\u573a\u666f\u7c7b\u578b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_state",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "current_state.get_global_state",
        "context.get('step_status', '').lower",
        "context.get",
        "context.get",
        "context.get",
        "isinstance",
        "current_state.get_state_history_count",
        "isinstance",
        "context.get",
        "context.get",
        "current_global_state.strip",
        "current_state.get_state_history_count",
        "execution_result.get",
        "step_info.get",
        "step_info.get",
        "execution_result.lower"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_detect_scenario"
    },
    {
      "type": "function",
      "name": "_prepare_template_variables",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 3451,
      "complexity": 1,
      "docstring": "\u51c6\u5907\u6a21\u677f\u53d8\u91cf\n\nArgs:\n    current_state: \u5f53\u524d\u5de5\u4f5c\u6d41\u72b6\u6001\n    context: \u4e0a\u4e0b\u6587\u4fe1\u606f\n    \nReturns:\n    \u6a21\u677f\u53d8\u91cf\u5b57\u5178",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_state",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "current_state.get_global_state",
        "current_state.get_state_history",
        "context.get",
        "context.get",
        "context.get",
        "context.get",
        "enumerate",
        "'\\n'.join",
        "isinstance",
        "step_info.get",
        "step_info.get",
        "context.get",
        "str",
        "reversed",
        "entry.timestamp.strftime",
        "history_items.append",
        "execution_result.get",
        "execution_result.get",
        "isinstance",
        "str",
        "str",
        "execution_result.get",
        "str",
        "current_state.get_state_history_count",
        "execution_result.lower",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_prepare_template_variables"
    },
    {
      "type": "function",
      "name": "_validate_generated_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 3531,
      "complexity": 1,
      "docstring": "\u9a8c\u8bc1\u751f\u6210\u7684\u72b6\u6001\u63cf\u8ff0\u662f\u5426\u6709\u6548\uff08\u4f7f\u7528\u667a\u80fd\u89e3\u6790\u5668\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "state",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._logger.warning",
        "self.response_parser.parse_response",
        "self.response_parser.validate_parsed_info",
        "self._logger.debug",
        "isinstance",
        "self._logger.warning",
        "self.response_parser.suggest_improvements",
        "self._logger.error",
        "self._logger.info",
        "parsed_info.quality_metrics.get",
        "'; '.join",
        "'; '.join"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_validate_generated_state"
    },
    {
      "type": "function",
      "name": "get_last_parsed_info",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 3565,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6700\u540e\u4e00\u6b21\u89e3\u6790\u7684\u72b6\u6001\u4fe1\u606f\uff08\u7528\u4e8e\u8c03\u8bd5\u548c\u76d1\u63a7\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "getattr"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:get_last_parsed_info"
    },
    {
      "type": "function",
      "name": "_store_parsed_info",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 3571,
      "complexity": 1,
      "docstring": "\u5b58\u50a8\u89e3\u6790\u4fe1\u606f\u4f9b\u540e\u7eed\u67e5\u8be2",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "parsed_info"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_store_parsed_info"
    },
    {
      "type": "function",
      "name": "_execute_fallback_strategies",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 3576,
      "complexity": 1,
      "docstring": "\u6267\u884c\u591a\u5c42\u56de\u9000\u7b56\u7565\n\nArgs:\n    current_state: \u5f53\u524d\u5de5\u4f5c\u6d41\u72b6\u6001\n    context: \u4e0a\u4e0b\u6587\u4fe1\u606f\n    \nReturns:\n    \u751f\u6210\u7684\u56de\u9000\u72b6\u6001\u63cf\u8ff0\uff0c\u5931\u8d25\u65f6\u8fd4\u56deNone",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_state",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._logger.info",
        "enumerate",
        "self._logger.error",
        "self._logger.debug",
        "len",
        "self._retry_with_simplified_prompt",
        "self._logger.info",
        "self._logger.warning",
        "self._logger.error",
        "self.fallback_generator.generate_fallback_state",
        "self.fallback_generator.generate_fallback_state",
        "self.fallback_generator.generate_fallback_state",
        "self.fallback_generator.generate_fallback_state",
        "self._logger.warning",
        "self._send_failure_notification"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_execute_fallback_strategies"
    },
    {
      "type": "function",
      "name": "_retry_with_simplified_prompt",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 3635,
      "complexity": 1,
      "docstring": "\u4f7f\u7528\u7b80\u5316\u63d0\u793a\u91cd\u8bd5LLM\u8c03\u7528\n\nArgs:\n    current_state: \u5f53\u524d\u5de5\u4f5c\u6d41\u72b6\u6001\n    context: \u4e0a\u4e0b\u6587\u4fe1\u606f\n    \nReturns:\n    \u751f\u6210\u7684\u72b6\u6001\u63cf\u8ff0\uff0c\u5931\u8d25\u65f6\u8fd4\u56deNone",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_state",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._logger.debug",
        "context.get",
        "step_info.get",
        "context.get",
        "context.get",
        "self.llm.invoke",
        "self._logger.warning",
        "SystemMessage",
        "HumanMessage",
        "response.content.strip",
        "self._logger.error",
        "len",
        "self._logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_retry_with_simplified_prompt"
    },
    {
      "type": "function",
      "name": "_send_failure_notification",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 3683,
      "complexity": 1,
      "docstring": "\u53d1\u9001\u5931\u8d25\u901a\u77e5\n\nArgs:\n    context: \u4e0a\u4e0b\u6587\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._logger.warning",
        "context.get",
        "self._logger.error",
        "dt.now().isoformat",
        "step_info.get",
        "context.get",
        "self._logger.error",
        "dt.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_send_failure_notification"
    },
    {
      "type": "function",
      "name": "get_fallback_statistics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 3730,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u56de\u9000\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "getattr"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:get_fallback_statistics"
    },
    {
      "type": "function",
      "name": "reset_fallback_statistics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 3739,
      "complexity": 1,
      "docstring": "\u91cd\u7f6e\u56de\u9000\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:reset_fallback_statistics"
    },
    {
      "type": "function",
      "name": "_update_fallback_statistics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 3748,
      "complexity": 1,
      "docstring": "\u66f4\u65b0\u56de\u9000\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "strategy",
        "success"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "sum",
        "sum",
        "hasattr",
        "self.reset_fallback_statistics",
        "datetime.now().isoformat",
        "self._fallback_stats['strategies_used'].values",
        "self._fallback_stats['strategies_used'].values",
        "datetime.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_update_fallback_statistics"
    },
    {
      "type": "function",
      "name": "get_cache_statistics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 3774,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u7f13\u5b58\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.cache.get_stats"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:get_cache_statistics"
    },
    {
      "type": "function",
      "name": "clear_cache",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 3784,
      "complexity": 1,
      "docstring": "\u6e05\u7a7a\u7f13\u5b58",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.cache.clear",
        "self._logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:clear_cache"
    },
    {
      "type": "function",
      "name": "reset_cache_statistics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 3793,
      "complexity": 1,
      "docstring": "\u91cd\u7f6e\u7f13\u5b58\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.cache.reset_stats",
        "self._logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:reset_cache_statistics"
    },
    {
      "type": "function",
      "name": "get_condition_checker_config",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 3802,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6761\u4ef6\u68c0\u67e5\u5668\u914d\u7f6e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.condition_checker.get_configuration"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:get_condition_checker_config"
    },
    {
      "type": "function",
      "name": "update_condition_checker_config",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 3812,
      "complexity": 1,
      "docstring": "\u66f4\u65b0\u6761\u4ef6\u68c0\u67e5\u5668\u914d\u7f6e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "significance_threshold",
        "time_threshold_seconds"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.condition_checker.set_significance_threshold",
        "self._logger.info",
        "self.condition_checker.set_time_threshold",
        "self._logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:update_condition_checker_config"
    },
    {
      "type": "function",
      "name": "get_performance_statistics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 3829,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u7efc\u5408\u6027\u80fd\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_cache_statistics",
        "self.get_condition_checker_config",
        "self.get_fallback_statistics",
        "getattr",
        "len",
        "len",
        "getattr",
        "self.template_manager.list_templates"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:get_performance_statistics"
    },
    {
      "type": "function",
      "name": "should_break_loop",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 3913,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u662f\u5426\u5e94\u8be5\u9000\u51fa\u5faa\u73af\uff08\u9632\u6b62\u65e0\u9650\u5faa\u73af\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "target_step_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.loop_counters.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:should_break_loop"
    },
    {
      "type": "function",
      "name": "increment_loop_counter",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 3918,
      "complexity": 1,
      "docstring": "\u589e\u52a0\u5faa\u73af\u8ba1\u6570\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "target_step_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.loop_counters.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:increment_loop_counter"
    },
    {
      "type": "function",
      "name": "reset_step_status_from",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 3923,
      "complexity": 1,
      "docstring": "\u91cd\u7f6e\u4ece\u6307\u5b9a\u7d22\u5f15\u5f00\u59cb\u7684\u6b65\u9aa4\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "start_index",
        "plan"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "range",
        "len",
        "plan[i].get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:reset_step_status_from"
    },
    {
      "type": "function",
      "name": "get_global_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 3931,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u5f53\u524d\u5168\u5c40\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:get_global_state"
    },
    {
      "type": "function",
      "name": "set_global_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 3936,
      "complexity": 1,
      "docstring": "\u8bbe\u7f6e\u5168\u5c40\u72b6\u6001\uff08\u53d7\u66f4\u65b0\u5f00\u5173\u63a7\u5236\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "new_state",
        "source"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "new_state.strip",
        "self._logger.debug",
        "isinstance",
        "TypeError",
        "self._logger.info",
        "self._logger.debug",
        "StateHistoryEntry",
        "self._state_history.append",
        "self._logger.debug",
        "dt.now",
        "copy.deepcopy",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:set_global_state"
    },
    {
      "type": "function",
      "name": "is_state_update_enabled",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 3966,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u72b6\u6001\u66f4\u65b0\u662f\u5426\u542f\u7528",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:is_state_update_enabled"
    },
    {
      "type": "function",
      "name": "enable_state_updates",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 3970,
      "complexity": 1,
      "docstring": "\u542f\u7528\u72b6\u6001\u66f4\u65b0",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:enable_state_updates"
    },
    {
      "type": "function",
      "name": "disable_state_updates",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 3976,
      "complexity": 1,
      "docstring": "\u7981\u7528\u72b6\u6001\u66f4\u65b0",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:disable_state_updates"
    },
    {
      "type": "function",
      "name": "clear_global_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 3982,
      "complexity": 1,
      "docstring": "\u6e05\u7a7a\u5168\u5c40\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._logger.info",
        "self._logger.debug"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:clear_global_state"
    },
    {
      "type": "function",
      "name": "get_state_history",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 3993,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u72b6\u6001\u5386\u53f2\u8bb0\u5f55",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "limit"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "list"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:get_state_history"
    },
    {
      "type": "function",
      "name": "get_state_history_count",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 4001,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u72b6\u6001\u5386\u53f2\u8bb0\u5f55\u6570\u91cf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:get_state_history_count"
    },
    {
      "type": "function",
      "name": "clear_state_history",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 4006,
      "complexity": 1,
      "docstring": "\u6e05\u7a7a\u72b6\u6001\u5386\u53f2",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "self._state_history.clear",
        "self._logger.info",
        "self._logger.debug"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:clear_state_history"
    },
    {
      "type": "function",
      "name": "get_state_summary",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 4016,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u72b6\u6001\u6458\u8981\uff0c\u5305\u542b\u5f53\u524d\u72b6\u6001\u548c\u5386\u53f2\u6982\u89c8",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "latest_history.timestamp.strftime"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:get_state_summary"
    },
    {
      "type": "function",
      "name": "set_max_history_size",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 4031,
      "complexity": 1,
      "docstring": "\u8bbe\u7f6e\u6700\u5927\u5386\u53f2\u8bb0\u5f55\u6570\u91cf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "max_size"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "ValueError",
        "len",
        "len",
        "deque",
        "self._logger.info",
        "self._logger.info",
        "list",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:set_max_history_size"
    },
    {
      "type": "function",
      "name": "__init_ai_updater",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 4052,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316AI\u72b6\u6001\u66f4\u65b0\u5668\uff08\u61d2\u52a0\u8f7d\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "hasattr",
        "AIStateUpdaterService",
        "self._logger.info",
        "self._logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:__init_ai_updater"
    },
    {
      "type": "function",
      "name": "update_state_with_ai",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 4062,
      "complexity": 1,
      "docstring": "\u4f7f\u7528AI\u66f4\u65b0\u72b6\u6001\n\nArgs:\n    context: \u5305\u542b\u6b65\u9aa4\u4fe1\u606f\u3001\u6267\u884c\u7ed3\u679c\u7b49\u7684\u4e0a\u4e0b\u6587\u5b57\u5178\n            \u652f\u6301\u7684\u5b57\u6bb5\uff1a\n            - step_info: \u6b65\u9aa4\u4fe1\u606f\u5b57\u5178\n            - execution_result: \u6267\u884c\u7ed3\u679c\n            - step_status: \u6b65\u9aa4\u72b6\u6001 ('completed', 'failed', etc.)\n            - error_info: \u9519\u8bef\u4fe1\u606f\n\nReturns:\n    \u662f\u5426\u6210\u529f\u66f4\u65b0\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.__init_ai_updater",
        "self._ai_updater.update_state",
        "self._logger.warning",
        "self.set_global_state",
        "self._logger.info",
        "self._logger.debug",
        "self._logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:update_state_with_ai"
    },
    {
      "type": "function",
      "name": "set_ai_updater",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 4101,
      "complexity": 1,
      "docstring": "\u8bbe\u7f6e\u81ea\u5b9a\u4e49AI\u72b6\u6001\u66f4\u65b0\u5668\n\nArgs:\n    updater: \u5b9e\u73b0AIStateUpdater\u63a5\u53e3\u7684\u66f4\u65b0\u5668\u5b9e\u4f8b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "updater"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._logger.info",
        "isinstance",
        "TypeError",
        "type"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:set_ai_updater"
    },
    {
      "type": "function",
      "name": "get_ai_updater_status",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 4115,
      "complexity": 1,
      "docstring": "\u83b7\u53d6AI\u72b6\u6001\u66f4\u65b0\u5668\u72b6\u6001\u4fe1\u606f\n\nReturns:\n    \u5305\u542b\u72b6\u6001\u4fe1\u606f\u7684\u5b57\u5178",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.__init_ai_updater",
        "getattr",
        "self.is_state_update_enabled",
        "type",
        "hasattr",
        "getattr",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:get_ai_updater_status"
    },
    {
      "type": "function",
      "name": "__getstate__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 4147,
      "complexity": 1,
      "docstring": "\u81ea\u5b9a\u4e49\u5e8f\u5217\u5316\u72b6\u6001\uff0c\u6392\u9664\u4e0d\u53ef\u5e8f\u5217\u5316\u7684\u5bf9\u8c61",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.__dict__.copy",
        "state.pop"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:__getstate__"
    },
    {
      "type": "function",
      "name": "__setstate__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 4154,
      "complexity": 1,
      "docstring": "\u81ea\u5b9a\u4e49\u53cd\u5e8f\u5217\u5316\u72b6\u6001\uff0c\u91cd\u65b0\u521b\u5efa\u7ebf\u7a0b\u9501",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.__dict__.update",
        "threading.RLock"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:__setstate__"
    },
    {
      "type": "function",
      "name": "get_memory_usage",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 4160,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u5185\u5b58\u4f7f\u7528\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "sys.getsizeof",
        "sys.getsizeof",
        "pickle.dumps",
        "len",
        "len",
        "sum",
        "logger.error",
        "str",
        "sys.getsizeof",
        "len",
        "sys.getsizeof"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:get_memory_usage"
    },
    {
      "type": "function",
      "name": "compress_history",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 4199,
      "complexity": 1,
      "docstring": "\u538b\u7f29\u5386\u53f2\u8bb0\u5f55\u4ee5\u8282\u7701\u5185\u5b58",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "compression_level"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "deque",
        "logger.info",
        "logger.error",
        "isinstance",
        "entry.state_snapshot.encode",
        "gzip.compress",
        "compressed_history.append",
        "entry.state_snapshot.startswith",
        "len",
        "StateHistoryEntry",
        "compressed_history.append",
        "compressed_history.append",
        "len",
        "len",
        "compressed_data.hex"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:compress_history"
    },
    {
      "type": "function",
      "name": "decompress_history_entry",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 4245,
      "complexity": 1,
      "docstring": "\u89e3\u538b\u7f29\u5355\u4e2a\u5386\u53f2\u8bb0\u5f55\u6761\u76ee",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "state_snapshot"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "state_snapshot.startswith",
        "bytes.fromhex",
        "gzip.decompress",
        "decompressed_data.decode",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:decompress_history_entry"
    },
    {
      "type": "function",
      "name": "get_decompressed_history",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 4265,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u89e3\u538b\u7f29\u540e\u7684\u5386\u53f2\u8bb0\u5f55",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "limit"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "list",
        "self.decompress_history_entry",
        "StateHistoryEntry",
        "decompressed_history.append",
        "list"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:get_decompressed_history"
    },
    {
      "type": "function",
      "name": "optimize_memory",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 4283,
      "complexity": 1,
      "docstring": "\u6267\u884c\u5185\u5b58\u4f18\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "enable_compression",
        "compression_level"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_memory_usage",
        "self.get_memory_usage",
        "optimization_results['initial_usage'].get",
        "optimization_results['final_usage'].get",
        "self.compress_history",
        "len",
        "deque",
        "optimization_results['optimizations_applied'].append",
        "logger.info",
        "logger.info",
        "logger.error",
        "str",
        "optimization_results['optimizations_applied'].append",
        "logger.info",
        "len",
        "entry.state_snapshot.strip"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:optimize_memory"
    },
    {
      "type": "function",
      "name": "register_agent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 4573,
      "complexity": 1,
      "docstring": "\u6ce8\u518c\u4e00\u4e2a\u65b0\u7684 Agent\u3002",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "name",
        "instance"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "getattr",
        "RegisteredAgent",
        "self.registered_agents.append",
        "self.device.set_variable",
        "logger.debug"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:register_agent"
    },
    {
      "type": "function",
      "name": "plan_execution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 4584,
      "complexity": 1,
      "docstring": "\u6839\u636e\u4e3b\u6307\u4ee4\u89c4\u5212\u6267\u884c\u6b65\u9aa4\uff0c\u652f\u6301\u81ea\u5b9a\u4e49\u63d0\u793a\u8bcd\u6a21\u677f\u3002",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "main_instruction"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "'\\n'.join",
        "hasattr",
        "self.planning_prompt_template.format",
        "enumerate",
        "self.device.set_variable",
        "logger.debug",
        "print",
        "self.chat_sync",
        "isinstance",
        "logger.warning",
        "self.device.get_variable",
        "self.device.get_variable",
        "self.device.get_variable",
        "', '.join",
        "logger.warning",
        "self.chat_sync",
        "isinstance",
        "json.loads",
        "logger.warning",
        "self.chat_sync",
        "extract_code",
        "logger.debug",
        "plan_data.get",
        "logger.debug",
        "logger.warning",
        "isinstance",
        "isinstance",
        "logger.warning",
        "json.loads",
        "json.loads",
        "json.loads",
        "self.chat_sync",
        "step.get",
        "json.dumps",
        "json.dumps",
        "hasattr",
        "hasattr",
        "isinstance",
        "plan_result.startswith",
        "json.loads",
        "isinstance",
        "logger.error",
        "error_obj.get",
        "len",
        "len",
        "self.thinker.memory.pop",
        "plan_result[len('```json'):].strip",
        "plan_result.endswith",
        "plan_data.get",
        "re.findall",
        "', '.join",
        "locals().get",
        "re.search",
        "json.loads",
        "isinstance",
        "locals",
        "json.loads",
        "len",
        "len",
        "array_match.group",
        "isinstance"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:plan_execution"
    },
    {
      "type": "function",
      "name": "select_next_executable_step",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 4854,
      "complexity": 1,
      "docstring": "\u7b80\u5316\u7684\u6b65\u9aa4\u9009\u62e9 - \u7edf\u4e00\u51b3\u7b56\u673a\u5236\u65b9\u68482",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "plan"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "enumerate",
        "step.get",
        "pending_steps.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:select_next_executable_step"
    },
    {
      "type": "function",
      "name": "_add_new_tasks",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 4872,
      "complexity": 1,
      "docstring": "\u6dfb\u52a0\u65b0\u4efb\u52a1\u5230\u8ba1\u5212\u4e2d",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "new_tasks"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_plan",
        "self.device.set_variable",
        "logger.debug",
        "new_task.get",
        "plan.append",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_add_new_tasks"
    },
    {
      "type": "function",
      "name": "get_plan",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 4893,
      "complexity": 1,
      "docstring": "\u4ece StatefulExecutor \u83b7\u53d6\u5f53\u524d\u8ba1\u5212\u3002",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.device.get_variable"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:get_plan"
    },
    {
      "type": "function",
      "name": "update_step_status",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 4897,
      "complexity": 1,
      "docstring": "\u66f4\u65b0 current_plan \u4e2d\u67d0\u4e00\u6b65\u9aa4\u7684\u72b6\u6001\u548c\u7ed3\u679c\u3002",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step_idx",
        "status",
        "result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.device.execute_code",
        "self.device.set_variable",
        "self.device.execute_code",
        "dt.now().isoformat",
        "bool",
        "getattr",
        "getattr",
        "getattr",
        "getattr",
        "dt.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:update_step_status"
    },
    {
      "type": "function",
      "name": "find_step_index_by_id",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 4927,
      "complexity": 1,
      "docstring": "\u6839\u636e\u6b65\u9aa4ID\u67e5\u627e\u7d22\u5f15",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_plan",
        "enumerate",
        "step.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:find_step_index_by_id"
    },
    {
      "type": "function",
      "name": "jump_to_step",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 4935,
      "complexity": 1,
      "docstring": "\u8df3\u8f6c\u5230\u6307\u5b9a\u6b65\u9aa4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "target_step_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.find_step_index_by_id",
        "self.get_plan",
        "range",
        "self.device.set_variable",
        "logger.debug",
        "logger.warning",
        "logger.debug",
        "len",
        "plan[i].get",
        "plan[i].get",
        "plan[i].get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:jump_to_step"
    },
    {
      "type": "function",
      "name": "loop_back_to_step",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 4958,
      "complexity": 1,
      "docstring": "\u5faa\u73af\u56de\u5230\u6307\u5b9a\u6b65\u9aa4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "target_step_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.workflow_state.should_break_loop",
        "self.find_step_index_by_id",
        "logger.warning",
        "self.get_plan",
        "self.workflow_state.reset_step_status_from",
        "self.device.set_variable",
        "self.workflow_state.increment_loop_counter",
        "logger.debug",
        "logger.warning",
        "self.workflow_state.loop_counters.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:loop_back_to_step"
    },
    {
      "type": "function",
      "name": "handle_generate_fix_task_and_loop",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 4984,
      "complexity": 1,
      "docstring": "\u5904\u7406\u751f\u6210\u4fee\u590d\u4efb\u52a1\u5e76\u5faa\u73af\u7684\u590d\u5408\u51b3\u7b56",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decision"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "decision.get",
        "self.workflow_state.should_break_loop",
        "decision.get",
        "self.get_plan",
        "plan.insert",
        "self.device.set_variable",
        "logger.debug",
        "print",
        "print",
        "logger.warning",
        "decision.get",
        "decision.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:handle_generate_fix_task_and_loop"
    },
    {
      "type": "function",
      "name": "execute_single_step",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 5026,
      "complexity": 1,
      "docstring": "\u6267\u884c\u8ba1\u5212\u4e2d\u7684\u5355\u4e2a\u6b65\u9aa4\u3002\n\nArgs:\n    step: \u6b65\u9aa4\u5b9a\u4e49\n    task_history: \u4efb\u52a1\u5386\u53f2\u8bb0\u5f55\n    global_state: \u5168\u5c40\u5de5\u4f5c\u6d41\u72b6\u6001\uff08\u53ef\u9009\uff09\n    \nReturns:\n    \u6267\u884c\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step",
        "task_history",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "step.get",
        "step.get",
        "step.get",
        "Result",
        "self._generate_state_aware_instruction",
        "Result",
        "target_agent.chat_stream",
        "target_agent.execute_stream",
        "isinstance",
        "Result",
        "isinstance",
        "Result",
        "task.get",
        "getattr",
        "task.get('task', {}).get",
        "getattr",
        "previous_results.append",
        "print",
        "str",
        "task.get",
        "task.get",
        "hasattr",
        "isinstance",
        "getattr",
        "getattr",
        "Result",
        "task.get",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:execute_single_step"
    },
    {
      "type": "function",
      "name": "execute_multi_step",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 5102,
      "complexity": 1,
      "docstring": "\u4e3b\u5165\u53e3\uff1a\u89c4\u5212\u5e76\u6267\u884c\u591a\u6b65\u9aa4\u4efb\u52a1 - \u91cd\u6784\u540e\u7684\u7b80\u5316\u7248\u672c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "main_instruction",
        "interactive"
      ],
      "decorators": [
        "reduce_memory_decorator_compress"
      ],
      "inheritance": [],
      "calls": [
        "self._initialize_execution_context",
        "self._should_continue_execution",
        "self._generate_execution_summary",
        "self._execute_workflow_iteration",
        "logger.error",
        "self._handle_workflow_error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:execute_multi_step"
    },
    {
      "type": "function",
      "name": "_initialize_execution_context",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 5123,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u6267\u884c\u4e0a\u4e0b\u6587",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "main_instruction"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "WorkflowState",
        "self.device.set_variable",
        "self.plan_execution"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_initialize_execution_context"
    },
    {
      "type": "function",
      "name": "_should_continue_execution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 5146,
      "complexity": 1,
      "docstring": "\u5224\u65ad\u662f\u5426\u5e94\u8be5\u7ee7\u7eed\u6267\u884c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_should_continue_execution"
    },
    {
      "type": "function",
      "name": "_execute_workflow_iteration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 5151,
      "complexity": 1,
      "docstring": "\u6267\u884c\u4e00\u4e2a\u5de5\u4f5c\u6d41\u8fed\u4ee3\n\nReturns:\n    bool: \u662f\u5426\u5e94\u8be5\u8df3\u51fa\u4e3b\u5faa\u73af",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context",
        "interactive"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_plan",
        "self.select_next_executable_step",
        "self._execute_single_workflow_step",
        "self._handle_no_executable_steps",
        "self._check_user_interrupt"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_execute_workflow_iteration"
    },
    {
      "type": "function",
      "name": "_handle_no_executable_steps",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 5183,
      "complexity": 1,
      "docstring": "\u5904\u7406\u6ca1\u6709\u53ef\u6267\u884c\u6b65\u9aa4\u7684\u60c5\u51b5\n\nReturns:\n    bool: \u662f\u5426\u5e94\u8be5\u8df3\u51fa\u4e3b\u5faa\u73af",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.make_decision",
        "print",
        "print",
        "self._process_no_steps_decision",
        "context['task_history'][-1].get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_handle_no_executable_steps"
    },
    {
      "type": "function",
      "name": "_process_no_steps_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 5208,
      "complexity": 1,
      "docstring": "\u5904\u7406\u6ca1\u6709\u53ef\u6267\u884c\u6b65\u9aa4\u65f6\u7684\u51b3\u7b56\u7ed3\u679c\n\nReturns:\n    bool: \u662f\u5426\u5e94\u8be5\u8df3\u51fa\u4e3b\u5faa\u73af",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decision",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._clear_failure_records",
        "decision.get",
        "self._add_new_tasks",
        "self.get_plan",
        "decision.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_process_no_steps_decision"
    },
    {
      "type": "function",
      "name": "_execute_single_workflow_step",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 5232,
      "complexity": 1,
      "docstring": "\u6267\u884c\u5355\u4e2a\u5de5\u4f5c\u6d41\u6b65\u9aa4\n\nReturns:\n    bool: \u662f\u5426\u5e94\u8be5\u8df3\u51fa\u4e3b\u5faa\u73af",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_idx",
        "current_step",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "self.update_step_status",
        "self.execute_single_step",
        "context['task_history'].append",
        "self._trigger_ai_state_update",
        "self._handle_step_success",
        "self._handle_step_failure",
        "dt.now().isoformat",
        "len",
        "current_step.get",
        "dt.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_execute_single_workflow_step"
    },
    {
      "type": "function",
      "name": "_handle_step_success",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 5267,
      "complexity": 1,
      "docstring": "\u5904\u7406\u6b65\u9aa4\u6267\u884c\u6210\u529f\u7684\u60c5\u51b5\n\nReturns:\n    bool: \u662f\u5426\u5e94\u8be5\u8df3\u51fa\u4e3b\u5faa\u73af",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_idx",
        "exec_result",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.update_step_status",
        "self.make_decision",
        "print",
        "print",
        "self._process_success_decision"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_handle_step_success"
    },
    {
      "type": "function",
      "name": "_handle_step_failure",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 5290,
      "complexity": 1,
      "docstring": "\u5904\u7406\u6b65\u9aa4\u6267\u884c\u5931\u8d25\u7684\u60c5\u51b5\n\nReturns:\n    bool: \u662f\u5426\u5e94\u8be5\u8df3\u51fa\u4e3b\u5faa\u73af",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_idx",
        "current_step",
        "exec_result",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.update_step_status",
        "self.make_decision",
        "print",
        "print",
        "self._process_failure_decision",
        "current_step.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_handle_step_failure"
    },
    {
      "type": "function",
      "name": "_process_success_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 5315,
      "complexity": 1,
      "docstring": "\u5904\u7406\u6210\u529f\u540e\u7684\u51b3\u7b56\n\nReturns:\n    bool: \u662f\u5426\u5e94\u8be5\u8df3\u51fa\u4e3b\u5faa\u73af",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decision",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._clear_failure_records",
        "self._handle_generate_new_task_decision",
        "self._handle_navigation_decision",
        "self._handle_fix_task_decision",
        "self._handle_skip_step_decision"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_process_success_decision"
    },
    {
      "type": "function",
      "name": "_process_failure_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 5348,
      "complexity": 1,
      "docstring": "\u5904\u7406\u5931\u8d25\u540e\u7684\u51b3\u7b56\n\nReturns:\n    bool: \u662f\u5426\u5e94\u8be5\u8df3\u51fa\u4e3b\u5faa\u73af",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decision",
        "context",
        "current_idx"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.update_step_status",
        "self._handle_generate_new_task_decision",
        "self._handle_skip_step_decision",
        "self._handle_retry_logic"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_process_failure_decision"
    },
    {
      "type": "function",
      "name": "_handle_generate_new_task_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 5377,
      "complexity": 1,
      "docstring": "\u5904\u7406\u751f\u6210\u65b0\u4efb\u52a1\u7684\u51b3\u7b56",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decision",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "decision.get",
        "self._add_new_tasks",
        "self.get_plan"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_handle_generate_new_task_decision"
    },
    {
      "type": "function",
      "name": "_handle_navigation_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 5387,
      "complexity": 1,
      "docstring": "\u5904\u7406\u8df3\u8f6c\u548c\u5faa\u73af\u51b3\u7b56",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decision",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "decision.get",
        "logger.warning",
        "self.jump_to_step",
        "self.loop_back_to_step"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_handle_navigation_decision"
    },
    {
      "type": "function",
      "name": "_handle_fix_task_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 5409,
      "complexity": 1,
      "docstring": "\u5904\u7406\u4fee\u590d\u4efb\u52a1\u51b3\u7b56",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decision",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.handle_generate_fix_task_and_loop",
        "self._execute_fix_task"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_handle_fix_task_decision"
    },
    {
      "type": "function",
      "name": "_handle_skip_step_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 5419,
      "complexity": 1,
      "docstring": "\u5904\u7406\u8df3\u8fc7\u6b65\u9aa4\u7684\u51b3\u7b56",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decision",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "decision.get",
        "self.find_step_index_by_id",
        "logger.warning",
        "self.get_plan",
        "logger.warning",
        "len",
        "self.device.set_variable",
        "logger.debug",
        "print",
        "logger.warning",
        "decision.get",
        "plan[target_index].get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_handle_skip_step_decision"
    },
    {
      "type": "function",
      "name": "_execute_fix_task",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 5450,
      "complexity": 1,
      "docstring": "\u6267\u884c\u4fee\u590d\u4efb\u52a1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decision",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_plan",
        "decision.get",
        "len",
        "print",
        "self.update_step_status",
        "self.execute_single_step",
        "context['task_history'].append",
        "self.loop_back_to_step",
        "context.get",
        "self.update_step_status",
        "print",
        "self.update_step_status",
        "print",
        "dt.now().isoformat",
        "fix_task.get",
        "dt.now",
        "fix_task.get",
        "fix_task.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_execute_fix_task"
    },
    {
      "type": "function",
      "name": "_handle_retry_logic",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 5487,
      "complexity": 1,
      "docstring": "\u5904\u7406\u91cd\u8bd5\u903b\u8f91\n\nReturns:\n    bool: \u662f\u5426\u5e94\u8be5\u8df3\u51fa\u4e3b\u5faa\u73af",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._record_failure_information"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_handle_retry_logic"
    },
    {
      "type": "function",
      "name": "_record_failure_information",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 5506,
      "complexity": 1,
      "docstring": "\u8bb0\u5f55\u5931\u8d25\u4fe1\u606f\u4ee5\u4f9b\u4e0b\u6b21\u91cd\u8bd5\u53c2\u8003",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.device.set_variable",
        "self.device.set_variable",
        "self.device.set_variable",
        "step.get",
        "step.get",
        "step.get('result', {}).get",
        "json.dumps",
        "logger.warning",
        "step.get",
        "step.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_record_failure_information"
    },
    {
      "type": "function",
      "name": "_check_user_interrupt",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 5527,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u7528\u6237\u662f\u5426\u8981\u6c42\u4e2d\u65ad",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "input",
        "user_input.lower"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_check_user_interrupt"
    },
    {
      "type": "function",
      "name": "_clear_failure_records",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 5532,
      "complexity": 1,
      "docstring": "\u6e05\u9664\u5931\u8d25\u8bb0\u5f55",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.device.set_variable",
        "self.device.set_variable",
        "logger.warning"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_clear_failure_records"
    },
    {
      "type": "function",
      "name": "_trigger_ai_state_update",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 5541,
      "complexity": 1,
      "docstring": "\u89e6\u53d1AI\u72b6\u6001\u66f4\u65b0\u5668\n\nArgs:\n    step: \u6267\u884c\u7684\u6b65\u9aa4\u4fe1\u606f\n    exec_result: \u6b65\u9aa4\u6267\u884c\u7ed3\u679c\n    context: \u5de5\u4f5c\u6d41\u6267\u884c\u4e0a\u4e0b\u6587",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step",
        "exec_result",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._build_state_update_context",
        "self.workflow_state.update_state_with_ai",
        "self.workflow_state.is_state_update_enabled",
        "logger.debug",
        "logger.info",
        "logger.isEnabledFor",
        "logger.warning",
        "logger.error",
        "context.setdefault('state_update_errors', []).append",
        "self.workflow_state.get_state_summary",
        "logger.debug",
        "context.setdefault",
        "step.get",
        "step.get",
        "str",
        "dt.now().isoformat",
        "step.get",
        "step.get",
        "step.get",
        "dt.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_trigger_ai_state_update"
    },
    {
      "type": "function",
      "name": "_generate_state_aware_instruction",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 5583,
      "complexity": 1,
      "docstring": "\u751f\u6210\u5305\u542b\u5168\u5c40\u72b6\u6001\u4fe1\u606f\u7684\u72b6\u6001\u611f\u77e5\u6307\u4ee4\uff0c\u96c6\u6210\u6307\u4ee4\u4f18\u5316\u7cfb\u7edf\n\nArgs:\n    step: \u5f53\u524d\u6b65\u9aa4\u4fe1\u606f\n    instruction: \u539f\u59cb\u6307\u4ee4\n    previous_results: \u524d\u5e8f\u6b65\u9aa4\u7ed3\u679c\n    global_state: \u5168\u5c40\u5de5\u4f5c\u6d41\u72b6\u6001\n    \nReturns:\n    \u589e\u5f3a\u548c\u4f18\u5316\u7684\u72b6\u6001\u611f\u77e5\u6307\u4ee4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step",
        "instruction",
        "previous_results",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._state_extractor.extract_relevant_context",
        "step.get",
        "global_state.get_global_state",
        "global_state.get_state_history_count",
        "hasattr",
        "hasattr",
        "hasattr",
        "StateContextExtractor",
        "current_state.strip",
        "global_state.get_state_history",
        "self._state_extractor._analyze_step_requirements",
        "step_analysis.get",
        "self.instruction_optimizer.can_optimize",
        "step.get",
        "step.get",
        "step.get",
        "step.get",
        "state_context['extracted_entities'].items",
        "any",
        "len",
        "enumerate",
        "self.instruction_optimizer.optimize_instruction",
        "logger.error",
        "step.get",
        "', '.join",
        "len",
        "chr(10).join",
        "reversed",
        "risk_assessment.get",
        "logger.info",
        "logger.warning",
        "isinstance",
        "isinstance",
        "chr",
        "len",
        "entry.timestamp.strftime",
        "len",
        "entity_type.replace('_', ' ').title",
        "', '.join",
        "len",
        "', '.join",
        "risk_assessment.get",
        "entity_type.replace('_', ' ').title",
        "', '.join",
        "entity_type.replace",
        "str",
        "list",
        "entities.items",
        "entity_type.replace"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_generate_state_aware_instruction"
    },
    {
      "type": "function",
      "name": "_build_state_update_context",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 5779,
      "complexity": 1,
      "docstring": "\u6784\u5efaAI\u72b6\u6001\u66f4\u65b0\u5668\u6240\u9700\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\n\nArgs:\n    step: \u6267\u884c\u7684\u6b65\u9aa4\u4fe1\u606f\n    exec_result: \u6b65\u9aa4\u6267\u884c\u7ed3\u679c\n    workflow_context: \u5de5\u4f5c\u6d41\u6267\u884c\u4e0a\u4e0b\u6587\n    \nReturns:\n    \u72b6\u6001\u66f4\u65b0\u4e0a\u4e0b\u6587\u5b57\u5178",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step",
        "exec_result",
        "workflow_context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "workflow_context.get",
        "workflow_context.get",
        "step.get",
        "step.get",
        "step.get",
        "step.get",
        "step.get",
        "len",
        "len",
        "len",
        "workflow_context.get",
        "workflow_context.get",
        "hasattr",
        "dt.now().isoformat",
        "getattr",
        "workflow_context.get",
        "getattr",
        "getattr",
        "getattr",
        "getattr",
        "getattr",
        "isinstance",
        "s.get",
        "s.get",
        "task_item.get",
        "task_item.get",
        "recent_history.append",
        "dt.now",
        "task.get",
        "getattr",
        "task_item.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_build_state_update_context"
    },
    {
      "type": "function",
      "name": "_handle_workflow_error",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 5861,
      "complexity": 1,
      "docstring": "\u5904\u7406\u5de5\u4f5c\u6d41\u6267\u884c\u9519\u8bef\uff0c\u4f7f\u7528\u72b6\u6001\u611f\u77e5\u7684\u9519\u8bef\u5904\u7406\u673a\u5236",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context",
        "error"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "context.get",
        "self.error_dispatcher.dispatch_error",
        "error_result.get",
        "error_result.get",
        "context.get",
        "context.get",
        "context.get",
        "context.get",
        "context.get",
        "context.get",
        "error_result.get",
        "logger.info",
        "logger.error",
        "self.error_statistics['error_types'].get",
        "logger.error",
        "logger.error",
        "self._apply_recovery_action",
        "error_result.get",
        "str",
        "str",
        "error_result.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_handle_workflow_error"
    },
    {
      "type": "function",
      "name": "_apply_recovery_action",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 5934,
      "complexity": 1,
      "docstring": "\u5e94\u7528\u6062\u590d\u52a8\u4f5c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "action",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "logger.error",
        "logger.info",
        "logger.info",
        "logger.info",
        "action.startswith",
        "int",
        "logger.info",
        "logger.info",
        "logger.warning",
        "action.split"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_apply_recovery_action"
    },
    {
      "type": "function",
      "name": "reset_error_statistics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 5978,
      "complexity": 1,
      "docstring": "\u91cd\u7f6e\u9519\u8bef\u5904\u7406\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:reset_error_statistics"
    },
    {
      "type": "function",
      "name": "enable_instruction_optimization",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 5989,
      "complexity": 1,
      "docstring": "\u542f\u7528\u6307\u4ee4\u4f18\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:enable_instruction_optimization"
    },
    {
      "type": "function",
      "name": "disable_instruction_optimization",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 5994,
      "complexity": 1,
      "docstring": "\u7981\u7528\u6307\u4ee4\u4f18\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:disable_instruction_optimization"
    },
    {
      "type": "function",
      "name": "set_optimization_strategy",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 5999,
      "complexity": 1,
      "docstring": "\u8bbe\u7f6e\u4f18\u5316\u7b56\u7565",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "strategy"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "hasattr",
        "logger.info",
        "logger.warning"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:set_optimization_strategy"
    },
    {
      "type": "function",
      "name": "create_decision_node",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 6028,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u51b3\u7b56\u8282\u70b9",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "node_id",
        "node_type",
        "description"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "DecisionNode",
        "self.decision_manager.register_decision_node"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:create_decision_node"
    },
    {
      "type": "function",
      "name": "add_conditional_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 6035,
      "complexity": 1,
      "docstring": "\u6dfb\u52a0\u6761\u4ef6\u51b3\u7b56\u8282\u70b9\u7684\u5feb\u6377\u65b9\u6cd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "node_id",
        "condition",
        "true_step",
        "false_step",
        "description"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.decision_manager.create_conditional_node"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:add_conditional_decision"
    },
    {
      "type": "function",
      "name": "add_validation_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 6040,
      "complexity": 1,
      "docstring": "\u6dfb\u52a0\u9a8c\u8bc1\u51b3\u7b56\u8282\u70b9\u7684\u5feb\u6377\u65b9\u6cd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "node_id",
        "condition",
        "valid_step",
        "invalid_step",
        "description"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.decision_manager.create_validation_node"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:add_validation_decision"
    },
    {
      "type": "function",
      "name": "evaluate_workflow_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 6045,
      "complexity": 1,
      "docstring": "\u8bc4\u4f30\u5de5\u4f5c\u6d41\u51b3\u7b56\u8282\u70b9",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "node_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.decision_manager.evaluate_decision"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:evaluate_workflow_decision"
    },
    {
      "type": "function",
      "name": "_generate_execution_summary",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 6062,
      "complexity": 1,
      "docstring": "\u751f\u6210\u6700\u7ec8\u6267\u884c\u6458\u8981",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "len",
        "len",
        "len",
        "s.get",
        "s.get",
        "s.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_generate_execution_summary"
    },
    {
      "type": "function",
      "name": "make_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 6080,
      "complexity": 1,
      "docstring": "\u5206\u6790\u5f53\u524d\u6267\u884c\u7ed3\u679c\u5e76\u51b3\u5b9a\u4e0b\u4e00\u6b65\u64cd\u4f5c\uff08\u652f\u6301\u72b6\u6001\u611f\u77e5\u51b3\u7b56\uff09\n\nArgs:\n    current_result: \u5f53\u524d\u6267\u884c\u7ed3\u679c\uff08Result\u5bf9\u8c61\u6216\u5176\u4ed6\u7ed3\u679c\uff09\n    task_history: \u4efb\u52a1\u6267\u884c\u5386\u53f2\u8bb0\u5f55\uff08\u53ef\u9009\uff09\n    context: \u989d\u5916\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\uff08\u53ef\u9009\uff09\n    \nReturns:\n    \u51b3\u7b56\u7ed3\u679c\u5b57\u5178\uff0c\u5305\u542baction\u3001reason\u548cnew_tasks",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_result",
        "task_history",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._try_state_aware_decision",
        "logger.debug",
        "self._make_traditional_decision",
        "logger.info",
        "logger.error",
        "self._get_fallback_decision",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:make_decision"
    },
    {
      "type": "function",
      "name": "_try_state_aware_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 6107,
      "complexity": 1,
      "docstring": "\u5c1d\u8bd5\u4f7f\u7528\u72b6\u6001\u611f\u77e5\u51b3\u7b56\u7cfb\u7edf\n\nReturns:\n    \u51b3\u7b56\u7ed3\u679c\u5b57\u5178\u6216None\uff08\u5982\u679c\u65e0\u6cd5\u4f7f\u7528\u72b6\u6001\u611f\u77e5\u51b3\u7b56\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_result",
        "task_history",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_plan",
        "self.select_next_executable_step",
        "self._evaluate_workflow_level_decisions",
        "current_step.get",
        "self.decision_manager.list_decision_nodes",
        "self._create_dynamic_decision",
        "logger.warning",
        "self.decision_manager.evaluate_decision",
        "self._convert_decision_result"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_try_state_aware_decision"
    },
    {
      "type": "function",
      "name": "_create_dynamic_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 6153,
      "complexity": 1,
      "docstring": "\u57fa\u4e8e\u6b65\u9aa4\u7c7b\u578b\u548c\u5168\u5c40\u72b6\u6001\u52a8\u6001\u521b\u5efa\u51b3\u7b56\n\nArgs:\n    current_step: \u5f53\u524d\u6b65\u9aa4\u4fe1\u606f\n    current_result: \u6267\u884c\u7ed3\u679c\n    context: \u4e0a\u4e0b\u6587\u4fe1\u606f\n    \nReturns:\n    \u51b3\u7b56\u7ed3\u679c\u6216None",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_step",
        "current_result",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "current_step.get('name', '').lower",
        "current_step.get('instruction', '').lower",
        "self.workflow_state.get_global_state().lower",
        "any",
        "any",
        "any",
        "any",
        "self._create_test_decision",
        "self._create_validation_decision",
        "self._create_approval_decision",
        "self._create_error_recovery_decision",
        "logger.error",
        "current_step.get",
        "current_step.get",
        "self.workflow_state.get_global_state"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_create_dynamic_decision"
    },
    {
      "type": "function",
      "name": "_create_test_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 6196,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u6d4b\u8bd5\u6b65\u9aa4\u7684\u51b3\u7b56",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_step",
        "current_result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "isinstance",
        "current_result.stdout.lower",
        "any",
        "current_step.get",
        "any"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_create_test_decision"
    },
    {
      "type": "function",
      "name": "_create_validation_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 6228,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u9a8c\u8bc1\u6b65\u9aa4\u7684\u51b3\u7b56",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_step",
        "current_result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "isinstance"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_create_validation_decision"
    },
    {
      "type": "function",
      "name": "_create_approval_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 6248,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u5ba1\u6279\u6b65\u9aa4\u7684\u51b3\u7b56",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_step",
        "current_result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "isinstance"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_create_approval_decision"
    },
    {
      "type": "function",
      "name": "_create_error_recovery_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 6268,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u9519\u8bef\u6062\u590d\u51b3\u7b56",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_step",
        "current_result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "self.get_plan"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_create_error_recovery_decision"
    },
    {
      "type": "function",
      "name": "_evaluate_workflow_level_decisions",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 6286,
      "complexity": 1,
      "docstring": "\u8bc4\u4f30\u5de5\u4f5c\u6d41\u7ea7\u522b\u7684\u51b3\u7b56\uff08\u5982\u5b8c\u6210\u6761\u4ef6\u3001\u5faa\u73af\u63a7\u5236\u7b49\uff09\n\nReturns:\n    \u5de5\u4f5c\u6d41\u7ea7\u522b\u7684\u51b3\u7b56\u7ed3\u679c\u6216None",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_result",
        "task_history",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._check_completion_conditions",
        "self._check_loop_conditions",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_evaluate_workflow_level_decisions"
    },
    {
      "type": "function",
      "name": "_check_completion_conditions",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 6310,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u5de5\u4f5c\u6d41\u5b8c\u6210\u6761\u4ef6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_plan",
        "self.workflow_state.get_global_state().lower",
        "len",
        "any",
        "logger.error",
        "self.workflow_state.get_global_state",
        "len",
        "step.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_check_completion_conditions"
    },
    {
      "type": "function",
      "name": "_check_loop_conditions",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 6337,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u5faa\u73af\u63a7\u5236\u6761\u4ef6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_result",
        "task_history"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.workflow_state.loop_counters.items",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_check_loop_conditions"
    },
    {
      "type": "function",
      "name": "_convert_decision_result",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 6356,
      "complexity": 1,
      "docstring": "\u5c06StateAwareDecisionManager\u7684DecisionResult\u8f6c\u6362\u4e3a\u6807\u51c6\u51b3\u7b56\u683c\u5f0f\n\nArgs:\n    decision_result: StateAwareDecisionManager\u7684\u51b3\u7b56\u7ed3\u679c\n    current_step: \u5f53\u524d\u6b65\u9aa4\u4fe1\u606f\n    \nReturns:\n    \u6807\u51c6\u683c\u5f0f\u7684\u51b3\u7b56\u5b57\u5178",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decision_result",
        "current_step"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.error",
        "self._get_fallback_decision",
        "current_step.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_convert_decision_result"
    },
    {
      "type": "function",
      "name": "_make_traditional_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 6397,
      "complexity": 1,
      "docstring": "\u4f20\u7edf\u7684\u57fa\u4e8eLLM\u7684\u51b3\u7b56\u65b9\u6cd5\n\nReturns:\n    \u51b3\u7b56\u7ed3\u679c\u5b57\u5178",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_result",
        "task_history",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._generate_decision_prompt",
        "self.chat_sync",
        "self._parse_decision",
        "logger.warning",
        "self._get_fallback_decision",
        "logger.error",
        "self._get_fallback_decision"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_make_traditional_decision"
    },
    {
      "type": "function",
      "name": "_get_fallback_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 6422,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u56de\u9000\u51b3\u7b56\n\nArgs:\n    reason: \u9700\u8981\u56de\u9000\u7684\u539f\u56e0\n    \nReturns:\n    \u56de\u9000\u51b3\u7b56\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "reason"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_get_fallback_decision"
    },
    {
      "type": "function",
      "name": "_generate_decision_prompt",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 6439,
      "complexity": 1,
      "docstring": "\u751f\u6210\u7528\u4e8e\u51b3\u7b56\u7684\u63d0\u793a (\u65b9\u68482: \u652f\u6301\u5faa\u73af\u548c\u6761\u4ef6\u5206\u652f\u63a7\u5236)\n\nArgs:\n    current_result: \u5f53\u524d\u6267\u884c\u7ed3\u679c\n    task_history: \u4efb\u52a1\u6267\u884c\u5386\u53f2\n    context: \u989d\u5916\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\n    \nReturns:\n    \u51b3\u7b56\u63d0\u793a\u5b57\u7b26\u4e32",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_result",
        "task_history",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_plan",
        "isinstance",
        "'\\n'.join",
        "str",
        "'\\n'.join",
        "task_history[-1].get('task', {}).get",
        "isinstance",
        "'\\n'.join",
        "'\\n'.join",
        "str",
        "len",
        "len",
        "getattr",
        "isinstance",
        "step.get",
        "step.get",
        "task_history[-1].get",
        "item.get",
        "task.get",
        "task.get",
        "item.get",
        "getattr",
        "history_items.append",
        "step.get",
        "step.get",
        "context.items",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_generate_decision_prompt"
    },
    {
      "type": "function",
      "name": "_parse_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py",
      "line_number": 6609,
      "complexity": 1,
      "docstring": "\u89e3\u6790\u51b3\u7b56\u6587\u672c\u4e3a\u7ed3\u6784\u5316\u51b3\u7b56\n\nArgs:\n    decision_text: \u51b3\u7b56\u6587\u672c\uff08\u53ef\u80fd\u5305\u542bJSON\uff09\n    \nReturns:\n    \u89e3\u6790\u540e\u7684\u51b3\u7b56\u5b57\u5178",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decision_text"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "extract_code",
        "json.loads",
        "decision_text.lower",
        "logger.error",
        "re.search",
        "decision_text.lower",
        "decision_text.lower",
        "json.loads",
        "lang.lower",
        "json.loads",
        "match.group"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_parse_decision"
    },
    {
      "type": "function",
      "name": "check_file_contents",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_current_files.py",
      "line_number": 14,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u6587\u4ef6\u5185\u5bb9",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "test_content.split",
        "enumerate",
        "open",
        "f.read",
        "print",
        "print",
        "open",
        "f.read",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "line.strip"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_current_files.py:check_file_contents"
    },
    {
      "type": "function",
      "name": "run_test_and_analyze",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_current_files.py",
      "line_number": 62,
      "complexity": 1,
      "docstring": "\u8fd0\u884c\u6d4b\u8bd5\u5e76\u5206\u6790\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "subprocess.run",
        "print",
        "print",
        "print",
        "print",
        "print",
        "MockTestResultEvaluator",
        "evaluator.evaluate_test_result",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "str",
        "repr",
        "repr",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_current_files.py:run_test_and_analyze"
    },
    {
      "type": "function",
      "name": "main",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_current_files.py",
      "line_number": 110,
      "complexity": 1,
      "docstring": "\u4e3b\u51fd\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "check_file_contents",
        "run_test_and_analyze",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_current_files.py:main"
    },
    {
      "type": "function",
      "name": "test_basic_functionality",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/simple_test_parser.py",
      "line_number": 9,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u57fa\u672c\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "ParserFactory.create_rule_parser",
        "parser.parse_response",
        "print",
        "print",
        "print",
        "print",
        "print",
        "result.extracted_entities.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/simple_test_parser.py:test_basic_functionality"
    },
    {
      "type": "function",
      "name": "test_fallback_mechanism",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/simple_test_parser.py",
      "line_number": 32,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u964d\u7ea7\u673a\u5236",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "ParserFactory.create_hybrid_parser",
        "parser.parse_response",
        "print",
        "print",
        "parser.get_stats",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/simple_test_parser.py:test_fallback_mechanism"
    },
    {
      "type": "function",
      "name": "test_configuration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/simple_test_parser.py",
      "line_number": 52,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u914d\u7f6e\u9009\u9879",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "ParserFactory.create_rule_parser",
        "parser.parse_response",
        "print",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/simple_test_parser.py:test_configuration"
    },
    {
      "type": "function",
      "name": "debug_ai_evaluation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/debug_ai_evaluation.py",
      "line_number": 15,
      "complexity": 1,
      "docstring": "\u8c03\u8bd5AI\u8bc4\u4f30\u903b\u8f91",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "subprocess.run",
        "print",
        "print",
        "print",
        "print",
        "Result",
        "print",
        "print",
        "print",
        "print",
        "print",
        "MockTestResultEvaluator",
        "evaluator.evaluate_test_result",
        "print",
        "print",
        "print",
        "print",
        "evaluator.evaluate_test_result",
        "print",
        "print",
        "print",
        "print",
        "print",
        "f'{test_result.stdout} {test_result.stderr} {test_result.return_value}'.lower",
        "print",
        "print",
        "print",
        "print",
        "print",
        "any",
        "any",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "str",
        "repr",
        "repr",
        "repr",
        "repr",
        "repr"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/debug_ai_evaluation.py:debug_ai_evaluation"
    },
    {
      "type": "function",
      "name": "main",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/calculator_static_workflow.py",
      "line_number": 22,
      "complexity": 1,
      "docstring": "\u4e3b\u51fd\u6570\uff1a\u6f14\u793a\u8ba1\u7b97\u5668\u9759\u6001\u5de5\u4f5c\u6d41",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "ChatOpenAI",
        "print",
        "Agent",
        "Agent",
        "Agent",
        "print",
        "MultiStepAgent_v3",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "os.getenv",
        "print",
        "print",
        "print",
        "agent_v3.execute_multi_step",
        "print",
        "print",
        "print",
        "print",
        "os.getenv",
        "print",
        "print",
        "print",
        "traceback.print_exc",
        "RegisteredAgent",
        "RegisteredAgent",
        "RegisteredAgent",
        "str",
        "type"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/calculator_static_workflow.py:main"
    },
    {
      "type": "function",
      "name": "test_agent_naming_consistency",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/verify_agent_naming_fix.py",
      "line_number": 17,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5Agent\u547d\u540d\u4e00\u81f4\u6027\u4fee\u590d\u6548\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "Agent",
        "Agent",
        "IntelligentAgentWrapper",
        "IntelligentAgentWrapper",
        "cognitive_agents.items",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "hasattr",
        "hasattr",
        "print",
        "print",
        "coder.classify_instruction",
        "print",
        "print",
        "print",
        "list",
        "getattr",
        "getattr",
        "cognitive_agents.keys",
        "getattr",
        "getattr",
        "type",
        "type"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/verify_agent_naming_fix.py:test_agent_naming_consistency"
    },
    {
      "type": "class",
      "name": "Calculator",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/calculator_backup.py",
      "line_number": 1,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "add",
        "subtract",
        "multiply",
        "divide"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/calculator_backup.py:Calculator"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/calculator_backup.py",
      "line_number": 2,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/calculator_backup.py:__init__"
    },
    {
      "type": "function",
      "name": "add",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/calculator_backup.py",
      "line_number": 5,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "a",
        "b"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/calculator_backup.py:add"
    },
    {
      "type": "function",
      "name": "subtract",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/calculator_backup.py",
      "line_number": 8,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "a",
        "b"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/calculator_backup.py:subtract"
    },
    {
      "type": "function",
      "name": "multiply",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/calculator_backup.py",
      "line_number": 11,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "a",
        "b"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/calculator_backup.py:multiply"
    },
    {
      "type": "function",
      "name": "divide",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/calculator_backup.py",
      "line_number": 14,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "a",
        "b"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "ZeroDivisionError"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/calculator_backup.py:divide"
    },
    {
      "type": "class",
      "name": "MockChatOpenAI",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py",
      "line_number": 39,
      "complexity": 1,
      "docstring": "Mock ChatOpenAI for testing",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "invoke",
        "set_responses",
        "set_failure"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py:MockChatOpenAI"
    },
    {
      "type": "class",
      "name": "TestAIStateUpdaterServiceBasicOperations",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py",
      "line_number": 82,
      "complexity": 1,
      "docstring": "Test basic operations of AIStateUpdaterService",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_initialization",
        "test_should_update_basic_conditions"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py:TestAIStateUpdaterServiceBasicOperations"
    },
    {
      "type": "class",
      "name": "TestAIStateUpdaterServiceLLMIntegration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py",
      "line_number": 134,
      "complexity": 1,
      "docstring": "Test LLM integration with mocking",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_successful_state_update",
        "test_llm_failure_with_retry",
        "test_llm_complete_failure_fallback",
        "test_invalid_llm_response_parsing"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py:TestAIStateUpdaterServiceLLMIntegration"
    },
    {
      "type": "class",
      "name": "TestAIStateUpdaterServicePromptConstruction",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py",
      "line_number": 244,
      "complexity": 1,
      "docstring": "Test prompt construction and template management",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_prompt_construction_called",
        "test_scenario_detection",
        "test_template_variable_preparation"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py:TestAIStateUpdaterServicePromptConstruction"
    },
    {
      "type": "class",
      "name": "TestAIStateUpdaterServiceResponseParsing",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py",
      "line_number": 315,
      "complexity": 1,
      "docstring": "Test response parsing and validation",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_valid_response_parsing",
        "test_invalid_response_handling",
        "test_sentiment_analysis",
        "test_intent_recognition"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py:TestAIStateUpdaterServiceResponseParsing"
    },
    {
      "type": "class",
      "name": "TestAIStateUpdaterServiceFallbackMechanisms",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py",
      "line_number": 395,
      "complexity": 1,
      "docstring": "Test fallback mechanisms and error recovery",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_fallback_strategy_execution",
        "test_simplified_retry_mechanism",
        "test_fallback_statistics_tracking"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py:TestAIStateUpdaterServiceFallbackMechanisms"
    },
    {
      "type": "class",
      "name": "TestAIStateUpdaterServiceErrorHandling",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py",
      "line_number": 483,
      "complexity": 1,
      "docstring": "Test comprehensive error handling",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_timeout_error_handling",
        "test_api_error_handling",
        "test_authentication_error_handling",
        "test_malformed_context_handling"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py:TestAIStateUpdaterServiceErrorHandling"
    },
    {
      "type": "class",
      "name": "TestAIStateUpdaterServiceIntegration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py",
      "line_number": 556,
      "complexity": 1,
      "docstring": "Test integration scenarios",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_end_to_end_success_scenario",
        "test_complex_failure_recovery_scenario",
        "test_performance_under_load"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py:TestAIStateUpdaterServiceIntegration"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py",
      "line_number": 41,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "model",
        "temperature",
        "max_tokens"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py:__init__"
    },
    {
      "type": "function",
      "name": "invoke",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py",
      "line_number": 50,
      "complexity": 1,
      "docstring": "Mock invoke method",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "messages"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Mock",
        "self.responses.pop",
        "Exception",
        "Exception",
        "Exception"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py:invoke"
    },
    {
      "type": "function",
      "name": "set_responses",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py",
      "line_number": 72,
      "complexity": 1,
      "docstring": "Set predefined responses",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "responses"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "responses.copy"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py:set_responses"
    },
    {
      "type": "function",
      "name": "set_failure",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py",
      "line_number": 76,
      "complexity": 1,
      "docstring": "Set failure mode",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "should_fail",
        "failure_type"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py:set_failure"
    },
    {
      "type": "function",
      "name": "setUp",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py",
      "line_number": 559,
      "complexity": 1,
      "docstring": "Set up test environment",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "MockChatOpenAI",
        "AIStateUpdaterService",
        "WorkflowState"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py:setUp"
    },
    {
      "type": "function",
      "name": "test_initialization",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py",
      "line_number": 97,
      "complexity": 1,
      "docstring": "Test AIStateUpdaterService initialization",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.assertIsNotNone",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertTrue",
        "self.assertTrue",
        "self.assertIsInstance",
        "self.assertIsInstance",
        "self.assertIsInstance"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py:test_initialization"
    },
    {
      "type": "function",
      "name": "test_should_update_basic_conditions",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py",
      "line_number": 115,
      "complexity": 1,
      "docstring": "Test basic conditions for should_update",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.workflow_state.disable_state_updates",
        "self.assertFalse",
        "self.workflow_state.enable_state_updates",
        "self.assertFalse",
        "self.assertTrue",
        "self.updater.should_update",
        "self.updater.should_update",
        "self.updater.should_update"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py:test_should_update_basic_conditions"
    },
    {
      "type": "function",
      "name": "test_successful_state_update",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py",
      "line_number": 148,
      "complexity": 1,
      "docstring": "Test successful state update with valid LLM response",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.mock_llm.set_responses",
        "self.updater.update_state",
        "self.assertIsNotNone",
        "self.assertEqual",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py:test_successful_state_update"
    },
    {
      "type": "function",
      "name": "test_llm_failure_with_retry",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py",
      "line_number": 173,
      "complexity": 1,
      "docstring": "Test LLM failure with retry mechanism",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.mock_llm.set_failure",
        "self.mock_llm.set_responses",
        "self.updater.update_state",
        "self.assertIsNotNone",
        "self.assertEqual",
        "self.assertEqual",
        "Exception",
        "Mock"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py:test_llm_failure_with_retry"
    },
    {
      "type": "function",
      "name": "test_llm_complete_failure_fallback",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py",
      "line_number": 207,
      "complexity": 1,
      "docstring": "Test complete LLM failure triggers fallback",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.mock_llm.set_failure",
        "self.updater.update_state",
        "self.assertIsNotNone",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py:test_llm_complete_failure_fallback"
    },
    {
      "type": "function",
      "name": "test_invalid_llm_response_parsing",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py",
      "line_number": 224,
      "complexity": 1,
      "docstring": "Test handling of invalid LLM responses",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.subTest",
        "self.mock_llm.set_responses",
        "self.updater.update_state",
        "self.assertIsNotNone",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py:test_invalid_llm_response_parsing"
    },
    {
      "type": "function",
      "name": "test_prompt_construction_called",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py",
      "line_number": 254,
      "complexity": 1,
      "docstring": "Test that prompt construction is called correctly",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "mock_build_prompt"
      ],
      "decorators": [
        "patch.object(AIStateUpdaterService, '_build_state_update_prompt')"
      ],
      "inheritance": [],
      "calls": [
        "patch.object",
        "self.mock_llm.set_responses",
        "self.updater.update_state",
        "mock_build_prompt.assert_called_once_with"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py:test_prompt_construction_called"
    },
    {
      "type": "function",
      "name": "test_scenario_detection",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py",
      "line_number": 269,
      "complexity": 1,
      "docstring": "Test scenario detection for template selection",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.subTest",
        "self.updater._detect_scenario",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py:test_scenario_detection"
    },
    {
      "type": "function",
      "name": "test_template_variable_preparation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py",
      "line_number": 291,
      "complexity": 1,
      "docstring": "Test template variable preparation",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.workflow_state.set_global_state",
        "self.updater._prepare_template_variables",
        "self.assertIn",
        "self.assertIn",
        "self.assertIn",
        "self.assertIn",
        "self.assertEqual",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py:test_template_variable_preparation"
    },
    {
      "type": "function",
      "name": "test_valid_response_parsing",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py",
      "line_number": 328,
      "complexity": 1,
      "docstring": "Test parsing of valid responses",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.subTest",
        "self.updater.response_parser.parse_response",
        "self.assertIsInstance",
        "self.assertGreater",
        "self.assertGreaterEqual",
        "self.assertLessEqual",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py:test_valid_response_parsing"
    },
    {
      "type": "function",
      "name": "test_invalid_response_handling",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py",
      "line_number": 346,
      "complexity": 1,
      "docstring": "Test handling of invalid responses",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.subTest",
        "self.updater.response_parser.parse_response",
        "self.assertIsInstance",
        "response.strip",
        "self.assertLessEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py:test_invalid_response_handling"
    },
    {
      "type": "function",
      "name": "test_sentiment_analysis",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py",
      "line_number": 365,
      "complexity": 1,
      "docstring": "Test sentiment analysis functionality",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.subTest",
        "self.updater.response_parser.parse_response",
        "self.assertIsNotNone"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py:test_sentiment_analysis"
    },
    {
      "type": "function",
      "name": "test_intent_recognition",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py",
      "line_number": 379,
      "complexity": 1,
      "docstring": "Test intent recognition functionality",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.subTest",
        "self.updater.response_parser.parse_response",
        "self.assertIsNotNone"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py:test_intent_recognition"
    },
    {
      "type": "function",
      "name": "test_fallback_strategy_execution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py",
      "line_number": 412,
      "complexity": 1,
      "docstring": "Test execution of fallback strategies",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.subTest",
        "self.updater.fallback_generator.generate_fallback_state",
        "self.assertIsNotNone",
        "self.assertGreater",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py:test_fallback_strategy_execution"
    },
    {
      "type": "function",
      "name": "test_simplified_retry_mechanism",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py",
      "line_number": 435,
      "complexity": 1,
      "docstring": "Test simplified retry mechanism",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.updater.update_state",
        "self.assertIsNotNone",
        "self.assertGreater",
        "len",
        "Exception",
        "Mock"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py:test_simplified_retry_mechanism"
    },
    {
      "type": "function",
      "name": "test_fallback_statistics_tracking",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py",
      "line_number": 462,
      "complexity": 1,
      "docstring": "Test fallback statistics tracking",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.updater.get_fallback_statistics",
        "self.mock_llm.set_failure",
        "self.updater.update_state",
        "self.updater.get_fallback_statistics",
        "self.assertGreaterEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py:test_fallback_statistics_tracking"
    },
    {
      "type": "function",
      "name": "test_timeout_error_handling",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py",
      "line_number": 492,
      "complexity": 1,
      "docstring": "Test handling of timeout errors",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.mock_llm.set_failure",
        "self.updater.update_state",
        "self.assertIsNotNone"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py:test_timeout_error_handling"
    },
    {
      "type": "function",
      "name": "test_api_error_handling",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py",
      "line_number": 506,
      "complexity": 1,
      "docstring": "Test handling of API errors",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.mock_llm.set_failure",
        "self.updater.update_state",
        "self.assertIsNotNone"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py:test_api_error_handling"
    },
    {
      "type": "function",
      "name": "test_authentication_error_handling",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py",
      "line_number": 520,
      "complexity": 1,
      "docstring": "Test handling of authentication errors",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.mock_llm.set_failure",
        "self.updater.update_state",
        "self.assertIsNotNone"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py:test_authentication_error_handling"
    },
    {
      "type": "function",
      "name": "test_malformed_context_handling",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py",
      "line_number": 534,
      "complexity": 1,
      "docstring": "Test handling of malformed context data",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.subTest",
        "self.updater.update_state",
        "self.assertIsInstance",
        "self.assertGreater",
        "self.fail",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py:test_malformed_context_handling"
    },
    {
      "type": "function",
      "name": "test_end_to_end_success_scenario",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py",
      "line_number": 565,
      "complexity": 1,
      "docstring": "Test complete success scenario",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.workflow_state.set_global_state",
        "self.mock_llm.set_responses",
        "self.updater.update_state",
        "self.assertIsNotNone",
        "self.assertEqual",
        "self.assertEqual",
        "self.updater.get_last_parsed_info",
        "self.assertIsNotNone",
        "self.assertIsInstance",
        "datetime.now().isoformat",
        "datetime.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py:test_end_to_end_success_scenario"
    },
    {
      "type": "function",
      "name": "test_complex_failure_recovery_scenario",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py",
      "line_number": 599,
      "complexity": 1,
      "docstring": "Test complex failure and recovery scenario",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.updater.update_state",
        "self.assertIsNotNone",
        "self.assertGreater",
        "len",
        "Exception",
        "Mock",
        "Mock"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py:test_complex_failure_recovery_scenario"
    },
    {
      "type": "function",
      "name": "test_performance_under_load",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py",
      "line_number": 637,
      "complexity": 1,
      "docstring": "Test performance characteristics",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.mock_llm.set_responses",
        "time.time",
        "range",
        "time.time",
        "self.assertLess",
        "self.updater.update_state",
        "results.append",
        "self.assertIsNotNone"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py:test_performance_under_load"
    },
    {
      "type": "function",
      "name": "mock_invoke_with_retry",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py",
      "line_number": 187,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "messages"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Exception",
        "Mock"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py:mock_invoke_with_retry"
    },
    {
      "type": "function",
      "name": "mock_invoke_with_simplified_retry",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py",
      "line_number": 444,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "messages"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Exception",
        "Mock"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py:mock_invoke_with_simplified_retry"
    },
    {
      "type": "function",
      "name": "complex_mock_invoke",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py",
      "line_number": 614,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "messages"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Exception",
        "Mock",
        "Mock"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_ai_state_updater_unit.py:complex_mock_invoke"
    },
    {
      "type": "class",
      "name": "MockResult",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_result_fix.py",
      "line_number": 16,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_result_fix.py:MockResult"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_result_fix.py",
      "line_number": 17,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "success"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_result_fix.py:__init__"
    },
    {
      "type": "function",
      "name": "test_evaluator_selection",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_evaluator_usage.py",
      "line_number": 15,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u8bc4\u4f30\u5668\u9009\u62e9\u903b\u8f91",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "ChatOpenAI",
        "print",
        "os.environ.get",
        "MultiStepAgent_v3",
        "print",
        "print",
        "print",
        "MultiStepAgent_v3",
        "print",
        "print",
        "print",
        "MultiStepAgent_v3",
        "print",
        "print",
        "print",
        "os.getenv",
        "print",
        "print",
        "print",
        "MultiStepAgent_v3",
        "print",
        "print",
        "isinstance",
        "print",
        "print",
        "print",
        "print",
        "print",
        "isinstance",
        "isinstance",
        "isinstance",
        "type",
        "type",
        "type",
        "isinstance",
        "type",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_evaluator_usage.py:test_evaluator_selection"
    },
    {
      "type": "function",
      "name": "test_mock_evaluator_capability",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_evaluator_usage.py",
      "line_number": 100,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5Mock\u8bc4\u4f30\u5668\u7684\u80fd\u529b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "MockTestResultEvaluator",
        "mock_evaluator.evaluate_test_result",
        "print",
        "print",
        "case.get",
        "case.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_evaluator_usage.py:test_mock_evaluator_capability"
    },
    {
      "type": "function",
      "name": "test_rule_parser",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_response_parser_v2.py",
      "line_number": 20,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u89c4\u5219\u89e3\u6790\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "ParserFactory.create_rule_parser",
        "enumerate",
        "parser.parse_response",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "result.extracted_entities.get",
        "result.quality_metrics.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_response_parser_v2.py:test_rule_parser"
    },
    {
      "type": "function",
      "name": "test_transformer_parser",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_response_parser_v2.py",
      "line_number": 44,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5Transformer\u89e3\u6790\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "ParserFactory.create_transformer_parser",
        "parser.parse_response",
        "print",
        "print",
        "print",
        "print",
        "result.extracted_entities.get",
        "print",
        "print",
        "print",
        "result.extracted_entities.get",
        "result.extracted_entities.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_response_parser_v2.py:test_transformer_parser"
    },
    {
      "type": "function",
      "name": "test_deepseek_parser",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_response_parser_v2.py",
      "line_number": 67,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5DeepSeek\u89e3\u6790\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "os.getenv",
        "print",
        "ParserFactory.create_deepseek_parser",
        "parser.parse_response",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "result.extracted_entities.get",
        "print",
        "print",
        "print",
        "result.extracted_entities.get",
        "result.extracted_entities.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_response_parser_v2.py:test_deepseek_parser"
    },
    {
      "type": "function",
      "name": "test_embedding_parser",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_response_parser_v2.py",
      "line_number": 99,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5d4c\u5165\u89e3\u6790\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "ParserFactory.create_embedding_parser",
        "parser.parse_response",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "result.extracted_entities.get",
        "print",
        "print",
        "print",
        "result.extracted_entities.get",
        "result.extracted_entities.get",
        "result.extracted_entities.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_response_parser_v2.py:test_embedding_parser"
    },
    {
      "type": "function",
      "name": "test_hybrid_parser",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_response_parser_v2.py",
      "line_number": 124,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6df7\u5408\u89e3\u6790\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "ParserFactory.create_hybrid_parser",
        "parser.parse_response",
        "print",
        "print",
        "print",
        "parser.get_stats",
        "print",
        "print",
        "print",
        "print",
        "result.extracted_entities.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_response_parser_v2.py:test_hybrid_parser"
    },
    {
      "type": "function",
      "name": "test_config_variations",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_response_parser_v2.py",
      "line_number": 157,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u4e0d\u540c\u914d\u7f6e\u9009\u9879",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "ParserConfig",
        "MultiMethodResponseParser",
        "parser1.parse_response",
        "print",
        "print",
        "print",
        "ParserConfig",
        "MultiMethodResponseParser",
        "parser2.parse_response",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_response_parser_v2.py:test_config_variations"
    },
    {
      "type": "function",
      "name": "test_performance",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_response_parser_v2.py",
      "line_number": 193,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6027\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "ParserFactory.create_rule_parser",
        "time.time",
        "time.time",
        "print",
        "print",
        "print",
        "parser.get_stats",
        "print",
        "print",
        "parser.parse_response",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_response_parser_v2.py:test_performance"
    },
    {
      "type": "function",
      "name": "main",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_response_parser_v2.py",
      "line_number": 224,
      "complexity": 1,
      "docstring": "\u4e3b\u6d4b\u8bd5\u51fd\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "test_rule_parser",
        "test_transformer_parser",
        "test_deepseek_parser",
        "test_embedding_parser",
        "test_hybrid_parser",
        "test_config_variations",
        "test_performance",
        "print",
        "print",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_response_parser_v2.py:main"
    },
    {
      "type": "class",
      "name": "MockChatOpenAI",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_integration_state_ai_instruction.py",
      "line_number": 29,
      "complexity": 1,
      "docstring": "Mock ChatOpenAI for integration testing",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "invoke",
        "set_responses",
        "set_failure"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_integration_state_ai_instruction.py:MockChatOpenAI"
    },
    {
      "type": "class",
      "name": "TestStateAndAIUpdaterIntegration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_integration_state_ai_instruction.py",
      "line_number": 63,
      "complexity": 1,
      "docstring": "Test integration between WorkflowState and AI State Updater",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_end_to_end_state_update_flow",
        "test_ai_updater_with_workflow_state_integration",
        "test_ai_updater_failure_with_fallback"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_integration_state_ai_instruction.py:TestStateAndAIUpdaterIntegration"
    },
    {
      "type": "class",
      "name": "TestStateAndInstructionGenerationIntegration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_integration_state_ai_instruction.py",
      "line_number": 161,
      "complexity": 1,
      "docstring": "Test integration between WorkflowState and instruction generation",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_instruction_generation_with_different_states",
        "test_state_aware_instruction_with_history",
        "test_state_integration_with_agent_execution"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_integration_state_ai_instruction.py:TestStateAndInstructionGenerationIntegration"
    },
    {
      "type": "class",
      "name": "TestFullWorkflowIntegration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_integration_state_ai_instruction.py",
      "line_number": 294,
      "complexity": 1,
      "docstring": "Test full workflow with state management, AI updates, and instruction generation",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_ai_state_updater_initialization",
        "test_error_recovery_with_state_management"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_integration_state_ai_instruction.py:TestFullWorkflowIntegration"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_integration_state_ai_instruction.py",
      "line_number": 31,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "model"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_integration_state_ai_instruction.py:__init__"
    },
    {
      "type": "function",
      "name": "invoke",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_integration_state_ai_instruction.py",
      "line_number": 37,
      "complexity": 1,
      "docstring": "Mock invoke method",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "messages"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Mock",
        "Exception",
        "self.responses.pop"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_integration_state_ai_instruction.py:invoke"
    },
    {
      "type": "function",
      "name": "set_responses",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_integration_state_ai_instruction.py",
      "line_number": 54,
      "complexity": 1,
      "docstring": "Set predefined responses",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "responses"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "responses.copy"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_integration_state_ai_instruction.py:set_responses"
    },
    {
      "type": "function",
      "name": "set_failure",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_integration_state_ai_instruction.py",
      "line_number": 58,
      "complexity": 1,
      "docstring": "Set failure mode",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "should_fail"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_integration_state_ai_instruction.py:set_failure"
    },
    {
      "type": "function",
      "name": "setUp",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_integration_state_ai_instruction.py",
      "line_number": 297,
      "complexity": 1,
      "docstring": "Set up test environment",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "MockChatOpenAI",
        "MultiStepAgent_v2"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_integration_state_ai_instruction.py:setUp"
    },
    {
      "type": "function",
      "name": "test_end_to_end_state_update_flow",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_integration_state_ai_instruction.py",
      "line_number": 76,
      "complexity": 1,
      "docstring": "Test complete flow: context -> AI updater -> state update -> history",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.workflow_state.set_global_state",
        "self.mock_llm.set_responses",
        "self.workflow_state.set_ai_updater",
        "self.workflow_state.update_state_with_ai",
        "self.assertTrue",
        "self.assertGreaterEqual",
        "self.workflow_state.get_global_state",
        "self.assertEqual",
        "self.workflow_state.get_state_history",
        "self.assertGreaterEqual",
        "self.assertGreater",
        "datetime.now().isoformat",
        "len",
        "self.workflow_state.get_state_history_count",
        "datetime.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_integration_state_ai_instruction.py:test_end_to_end_state_update_flow"
    },
    {
      "type": "function",
      "name": "test_ai_updater_with_workflow_state_integration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_integration_state_ai_instruction.py",
      "line_number": 121,
      "complexity": 1,
      "docstring": "Test AI updater's integration with WorkflowState methods",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.workflow_state.disable_state_updates",
        "self.ai_updater.should_update",
        "self.assertFalse",
        "self.workflow_state.enable_state_updates",
        "self.ai_updater.should_update",
        "self.assertTrue"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_integration_state_ai_instruction.py:test_ai_updater_with_workflow_state_integration"
    },
    {
      "type": "function",
      "name": "test_ai_updater_failure_with_fallback",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_integration_state_ai_instruction.py",
      "line_number": 140,
      "complexity": 1,
      "docstring": "Test that AI updater failures trigger fallback mechanism",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.workflow_state.set_global_state",
        "self.mock_llm.set_failure",
        "self.ai_updater.update_state",
        "self.assertIsNotNone",
        "self.assertGreater",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_integration_state_ai_instruction.py:test_ai_updater_failure_with_fallback"
    },
    {
      "type": "function",
      "name": "test_instruction_generation_with_different_states",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_integration_state_ai_instruction.py",
      "line_number": 172,
      "complexity": 1,
      "docstring": "Test how different global states influence instruction generation",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.subTest",
        "self.workflow_state.set_global_state",
        "self.agent._generate_state_aware_instruction",
        "self.assertIsNotNone",
        "self.assertGreater",
        "instruction.lower",
        "any",
        "len",
        "keyword.lower"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_integration_state_ai_instruction.py:test_instruction_generation_with_different_states"
    },
    {
      "type": "function",
      "name": "test_state_aware_instruction_with_history",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_integration_state_ai_instruction.py",
      "line_number": 228,
      "complexity": 1,
      "docstring": "Test instruction generation includes state history when relevant",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.agent._generate_state_aware_instruction",
        "self.assertIsNotNone",
        "self.assertGreater",
        "self.assertIn",
        "self.workflow_state.set_global_state",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_integration_state_ai_instruction.py:test_state_aware_instruction_with_history"
    },
    {
      "type": "function",
      "name": "test_state_integration_with_agent_execution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_integration_state_ai_instruction.py",
      "line_number": 263,
      "complexity": 1,
      "docstring": "Test state integration during actual agent step execution",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.workflow_state.set_global_state",
        "self.mock_llm.set_responses",
        "self.agent.execute_single_step",
        "self.assertIsNotNone"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_integration_state_ai_instruction.py:test_state_integration_with_agent_execution"
    },
    {
      "type": "function",
      "name": "test_ai_state_updater_initialization",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_integration_state_ai_instruction.py",
      "line_number": 303,
      "complexity": 1,
      "docstring": "Test that the AI state updater is properly initialized in the workflow state",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.assertIsNotNone",
        "self.agent.workflow_state.set_global_state",
        "self.agent.workflow_state.get_global_state",
        "self.assertEqual",
        "self.assertTrue",
        "self.agent.workflow_state.is_state_update_enabled"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_integration_state_ai_instruction.py:test_ai_state_updater_initialization"
    },
    {
      "type": "function",
      "name": "test_error_recovery_with_state_management",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_integration_state_ai_instruction.py",
      "line_number": 318,
      "complexity": 1,
      "docstring": "Test error recovery scenarios with state management",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.agent.workflow_state.set_global_state",
        "self.mock_llm.set_responses",
        "AIStateUpdaterService",
        "self.agent.workflow_state.set_ai_updater",
        "self.agent.workflow_state.update_state_with_ai",
        "self.assertTrue",
        "self.agent.workflow_state.get_global_state",
        "self.assertIsNotNone",
        "self.agent.workflow_state.get_state_history",
        "self.assertGreaterEqual",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_integration_state_ai_instruction.py:test_error_recovery_with_state_management"
    },
    {
      "type": "function",
      "name": "test_transformer_with_proxy",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_proxy_transformer.py",
      "line_number": 11,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5e26\u4ee3\u7406\u914d\u7f6e\u7684Transformer\u89e3\u6790\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "MultiStepAgent_v2",
        "print",
        "print",
        "Agent",
        "multi_agent.register_agent",
        "print",
        "multi_agent.configure_response_parser",
        "print",
        "hasattr",
        "multi_agent.execute_multi_step",
        "print",
        "print",
        "print",
        "multi_agent.get_natural_language_analysis_summary",
        "print",
        "print",
        "hasattr",
        "print",
        "hasattr",
        "print",
        "enumerate",
        "print",
        "print",
        "type",
        "print",
        "print",
        "print",
        "print",
        "len",
        "getattr",
        "getattr",
        "getattr"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_proxy_transformer.py:test_transformer_with_proxy"
    },
    {
      "type": "function",
      "name": "test_proxy_configuration_methods",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_proxy_transformer.py",
      "line_number": 89,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u4e0d\u540c\u7684\u4ee3\u7406\u914d\u7f6e\u65b9\u6cd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "MultiStepAgent_v2",
        "agent.configure_response_parser",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_proxy_transformer.py:test_proxy_configuration_methods"
    },
    {
      "type": "function",
      "name": "test_exit_on_max_create_terminal",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_exit_on_max_create_terminal.py",
      "line_number": 18,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5728\u6ca1\u6709\u73b0\u6709\u7ec8\u6b62\u6b65\u9aa4\u65f6\u521b\u5efa\u65b0\u7ec8\u6b62\u6b65\u9aa4\u7684\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "ChatOpenAI",
        "Agent",
        "MultiStepAgent_v3",
        "print",
        "print",
        "print",
        "print",
        "print",
        "agent_v3._fix_workflow_references",
        "print",
        "print",
        "print",
        "enumerate",
        "print",
        "print",
        "step2.get",
        "control_flow.get",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "step.get",
        "print",
        "print",
        "print",
        "agent_v3.workflow_loader.load_from_dict",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "next",
        "print",
        "control_flow.get",
        "print",
        "print",
        "print",
        "os.getenv",
        "RegisteredAgent",
        "RegisteredAgent",
        "len",
        "len",
        "print",
        "print",
        "control_flow.get",
        "control_flow.get",
        "control_flow.get",
        "target_step.get('control_flow', {}).get",
        "control_flow.get",
        "step.get",
        "len",
        "target_step.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_exit_on_max_create_terminal.py:test_exit_on_max_create_terminal"
    },
    {
      "type": "class",
      "name": "TestStepExecutor",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_loop_fix.py",
      "line_number": 21,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6b65\u9aa4\u6267\u884c\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "execute_step"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_loop_fix.py:TestStepExecutor"
    },
    {
      "type": "class",
      "name": "TestAIEvaluator",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_loop_fix.py",
      "line_number": 132,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "evaluate_test_result"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_loop_fix.py:TestAIEvaluator"
    },
    {
      "type": "function",
      "name": "create_test_workflow",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_loop_fix.py",
      "line_number": 78,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u6d4b\u8bd5\u5de5\u4f5c\u6d41",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "WorkflowDefinition",
        "WorkflowMetadata",
        "WorkflowStep",
        "WorkflowStep",
        "WorkflowStep",
        "ControlFlow",
        "ControlFlow",
        "ControlFlow"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_loop_fix.py:create_test_workflow"
    },
    {
      "type": "function",
      "name": "test_loop_fix",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_loop_fix.py",
      "line_number": 125,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5faa\u73af\u4fee\u590d",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "TestAIEvaluator",
        "StaticWorkflowEngine",
        "TestStepExecutor",
        "engine.set_step_executor",
        "create_test_workflow",
        "print",
        "print",
        "print",
        "print",
        "print",
        "engine.execute_workflow",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "executor.execution_count.items",
        "executor.execution_count.get",
        "executor.execution_count.get",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "kwargs.get",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_loop_fix.py:test_loop_fix"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_loop_fix.py",
      "line_number": 133,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_loop_fix.py:__init__"
    },
    {
      "type": "function",
      "name": "execute_step",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_loop_fix.py",
      "line_number": 28,
      "complexity": 1,
      "docstring": "\u6a21\u62df\u6b65\u9aa4\u6267\u884c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "self.execution_count.get",
        "print",
        "Result",
        "print",
        "Result",
        "print",
        "Result",
        "Result"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_loop_fix.py:execute_step"
    },
    {
      "type": "function",
      "name": "evaluate_test_result",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_loop_fix.py",
      "line_number": 136,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "kwargs.get",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_loop_fix.py:evaluate_test_result"
    },
    {
      "type": "class",
      "name": "AgentSpecification",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py",
      "line_number": 24,
      "complexity": 1,
      "docstring": "\u5b58\u50a8 Agent \u5143\u6570\u636e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py:AgentSpecification"
    },
    {
      "type": "class",
      "name": "WorkflowState",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py",
      "line_number": 31,
      "complexity": 1,
      "docstring": "\u5de5\u4f5c\u6d41\u72b6\u6001\u7ba1\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "should_break_loop",
        "increment_loop_counter",
        "reset_step_status_from"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py:WorkflowState"
    },
    {
      "type": "class",
      "name": "MultiStepAgent_v2",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py",
      "line_number": 58,
      "complexity": 1,
      "docstring": "\u65b0\u7248\u591a\u6b65\u9aa4\u667a\u80fd\u4f53\uff1a\u4e0d\u4f9d\u8d56 workflow engine\u3001state manager\u3001agent registry\u3002\n\u53ea\u5b9e\u73b0 execute_multi_step\uff0c\u8ba1\u5212\u548c\u72b6\u6001\u5b58\u50a8\u5728 StatefulExecutor \u7684\u53d8\u91cf\u4e2d\uff0c\u6210\u5458 Agent \u901a\u8fc7\u53d8\u91cf\u6ce8\u518c\u3002",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "register_agent",
        "ensure_decision_maker_agent",
        "plan_execution",
        "can_execute_step",
        "select_next_executable_step",
        "_add_new_tasks",
        "get_plan",
        "update_step_status",
        "find_step_index_by_id",
        "jump_to_step",
        "loop_back_to_step",
        "handle_generate_fix_task_and_loop",
        "execute_single_step",
        "execute_multi_step",
        "make_decision",
        "_generate_decision_prompt",
        "_parse_decision"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Agent"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py:MultiStepAgent_v2"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py",
      "line_number": 64,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "llm",
        "agent_specs",
        "max_retries",
        "thinker_system_message",
        "thinker_chat_system_message",
        "planning_prompt_template",
        "use_autonomous_planning"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "super().__init__",
        "StatefulExecutor",
        "self.device.set_variable",
        "WorkflowState",
        "self.device.set_variable",
        "super"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py:__init__"
    },
    {
      "type": "function",
      "name": "should_break_loop",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py",
      "line_number": 42,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u662f\u5426\u5e94\u8be5\u9000\u51fa\u5faa\u73af\uff08\u9632\u6b62\u65e0\u9650\u5faa\u73af\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "target_step_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.loop_counters.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py:should_break_loop"
    },
    {
      "type": "function",
      "name": "increment_loop_counter",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py",
      "line_number": 47,
      "complexity": 1,
      "docstring": "\u589e\u52a0\u5faa\u73af\u8ba1\u6570\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "target_step_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.loop_counters.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py:increment_loop_counter"
    },
    {
      "type": "function",
      "name": "reset_step_status_from",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py",
      "line_number": 52,
      "complexity": 1,
      "docstring": "\u91cd\u7f6e\u4ece\u6307\u5b9a\u7d22\u5f15\u5f00\u59cb\u7684\u6b65\u9aa4\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "start_index",
        "plan"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "range",
        "len",
        "plan[i].get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py:reset_step_status_from"
    },
    {
      "type": "function",
      "name": "register_agent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py",
      "line_number": 272,
      "complexity": 1,
      "docstring": "\u6ce8\u518c\u4e00\u4e2a\u65b0\u7684 Agent\u3002",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "name",
        "instance"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "getattr",
        "AgentSpecification",
        "self.agent_specs.append",
        "self.device.set_variable",
        "logger.debug"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py:register_agent"
    },
    {
      "type": "function",
      "name": "ensure_decision_maker_agent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py",
      "line_number": 281,
      "complexity": 1,
      "docstring": "\u786e\u4fdd\u6ce8\u518c\u4e86\u51b3\u7b56\u667a\u80fd\u4f53\uff08\u5982\u679c\u8fd8\u6ca1\u6709\u7684\u8bdd\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "any",
        "Agent",
        "self.register_agent",
        "logger.debug"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py:ensure_decision_maker_agent"
    },
    {
      "type": "function",
      "name": "plan_execution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py",
      "line_number": 294,
      "complexity": 1,
      "docstring": "\u6839\u636e\u4e3b\u6307\u4ee4\u89c4\u5212\u6267\u884c\u6b65\u9aa4\uff0c\u652f\u6301\u81ea\u5b9a\u4e49\u63d0\u793a\u8bcd\u6a21\u677f\u3002",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "main_instruction"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "'\\n'.join",
        "hasattr",
        "self.planning_prompt_template.format",
        "enumerate",
        "self.device.set_variable",
        "logger.debug",
        "print",
        "self.ensure_decision_maker_agent",
        "self.chat_sync",
        "isinstance",
        "logger.warning",
        "self.device.get_variable",
        "self.device.get_variable",
        "self.device.get_variable",
        "', '.join",
        "logger.warning",
        "self.chat_sync",
        "isinstance",
        "json.loads",
        "logger.warning",
        "self.chat_sync",
        "extract_code",
        "logger.debug",
        "plan_data.get",
        "logger.debug",
        "logger.warning",
        "isinstance",
        "isinstance",
        "logger.warning",
        "json.loads",
        "json.loads",
        "json.loads",
        "self.chat_sync",
        "step.get",
        "json.dumps",
        "json.dumps",
        "hasattr",
        "hasattr",
        "isinstance",
        "plan_result.startswith",
        "json.loads",
        "isinstance",
        "logger.error",
        "error_obj.get",
        "len",
        "len",
        "self.thinker.memory.pop",
        "plan_result[len('```json'):].strip",
        "plan_result.endswith",
        "plan_data.get",
        "re.findall",
        "', '.join",
        "locals().get",
        "re.search",
        "json.loads",
        "isinstance",
        "locals",
        "json.loads",
        "len",
        "len",
        "array_match.group",
        "isinstance"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py:plan_execution"
    },
    {
      "type": "function",
      "name": "can_execute_step",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py",
      "line_number": 563,
      "complexity": 1,
      "docstring": "\u57fa\u4e8eAgent\u8bb0\u5fc6\u548c\u7cfb\u7edf\u72b6\u6001\u5224\u65ad\u6b65\u9aa4\u53ef\u6267\u884c\u6027",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "step.get",
        "step.get",
        "step.get",
        "step.get",
        "self.chat_sync",
        "response_text.lower",
        "response_text.find",
        "response_text[reason_start + 3:].strip",
        "logger.warning"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py:can_execute_step"
    },
    {
      "type": "function",
      "name": "select_next_executable_step",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py",
      "line_number": 625,
      "complexity": 1,
      "docstring": "\u667a\u80fd\u9009\u62e9\u4e0b\u4e00\u4e2a\u53ef\u6267\u884c\u6b65\u9aa4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "plan"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "enumerate",
        "enumerate",
        "step.get",
        "len",
        "self.can_execute_step",
        "len",
        "step_descriptions.append",
        "self.chat_sync",
        "re.search",
        "logger.warning",
        "pending_steps.append",
        "executable_steps.append",
        "chr(10).join",
        "len",
        "int",
        "logger.warning",
        "match.group",
        "len",
        "step.get",
        "step.get",
        "chr"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py:select_next_executable_step"
    },
    {
      "type": "function",
      "name": "_add_new_tasks",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py",
      "line_number": 700,
      "complexity": 1,
      "docstring": "\u6dfb\u52a0\u65b0\u4efb\u52a1\u5230\u8ba1\u5212\u4e2d",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "new_tasks"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_plan",
        "self.device.set_variable",
        "logger.debug",
        "new_task.get",
        "plan.append",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py:_add_new_tasks"
    },
    {
      "type": "function",
      "name": "get_plan",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py",
      "line_number": 721,
      "complexity": 1,
      "docstring": "\u4ece StatefulExecutor \u83b7\u53d6\u5f53\u524d\u8ba1\u5212\u3002",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.device.get_variable"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py:get_plan"
    },
    {
      "type": "function",
      "name": "update_step_status",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py",
      "line_number": 725,
      "complexity": 1,
      "docstring": "\u66f4\u65b0 current_plan \u4e2d\u67d0\u4e00\u6b65\u9aa4\u7684\u72b6\u6001\u548c\u7ed3\u679c\u3002",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step_idx",
        "status",
        "result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.device.execute_code",
        "self.device.set_variable",
        "self.device.execute_code",
        "dt.now().isoformat",
        "bool",
        "getattr",
        "getattr",
        "getattr",
        "getattr",
        "dt.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py:update_step_status"
    },
    {
      "type": "function",
      "name": "find_step_index_by_id",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py",
      "line_number": 755,
      "complexity": 1,
      "docstring": "\u6839\u636e\u6b65\u9aa4ID\u67e5\u627e\u7d22\u5f15",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_plan",
        "enumerate",
        "step.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py:find_step_index_by_id"
    },
    {
      "type": "function",
      "name": "jump_to_step",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py",
      "line_number": 763,
      "complexity": 1,
      "docstring": "\u8df3\u8f6c\u5230\u6307\u5b9a\u6b65\u9aa4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "target_step_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.find_step_index_by_id",
        "self.get_plan",
        "range",
        "self.device.set_variable",
        "logger.debug",
        "logger.warning",
        "logger.debug",
        "len",
        "plan[i].get",
        "plan[i].get",
        "plan[i].get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py:jump_to_step"
    },
    {
      "type": "function",
      "name": "loop_back_to_step",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py",
      "line_number": 786,
      "complexity": 1,
      "docstring": "\u5faa\u73af\u56de\u5230\u6307\u5b9a\u6b65\u9aa4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "target_step_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.workflow_state.should_break_loop",
        "self.find_step_index_by_id",
        "logger.warning",
        "self.get_plan",
        "self.workflow_state.reset_step_status_from",
        "self.device.set_variable",
        "self.workflow_state.increment_loop_counter",
        "logger.debug",
        "logger.warning",
        "self.workflow_state.loop_counters.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py:loop_back_to_step"
    },
    {
      "type": "function",
      "name": "handle_generate_fix_task_and_loop",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py",
      "line_number": 812,
      "complexity": 1,
      "docstring": "\u5904\u7406\u751f\u6210\u4fee\u590d\u4efb\u52a1\u5e76\u5faa\u73af\u7684\u590d\u5408\u51b3\u7b56",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decision"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "decision.get",
        "self.workflow_state.should_break_loop",
        "decision.get",
        "self.get_plan",
        "plan.insert",
        "self.device.set_variable",
        "logger.debug",
        "print",
        "print",
        "logger.warning",
        "decision.get",
        "decision.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py:handle_generate_fix_task_and_loop"
    },
    {
      "type": "function",
      "name": "execute_single_step",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py",
      "line_number": 854,
      "complexity": 1,
      "docstring": "\u6267\u884c\u8ba1\u5212\u4e2d\u7684\u5355\u4e2a\u6b65\u9aa4\u3002",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "step.get",
        "step.get",
        "step.get",
        "Result",
        "self.chat_stream",
        "self.execute_stream",
        "isinstance",
        "Result",
        "isinstance",
        "Result",
        "print",
        "str",
        "hasattr",
        "isinstance",
        "getattr",
        "getattr",
        "Result",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py:execute_single_step"
    },
    {
      "type": "function",
      "name": "execute_multi_step",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py",
      "line_number": 918,
      "complexity": 1,
      "docstring": "\u4e3b\u5165\u53e3\uff1a\u89c4\u5212\u5e76\u6267\u884c\u591a\u6b65\u9aa4\u4efb\u52a1 (\u65b9\u68482: \u52a8\u6001\u63a7\u5236\u6d41)",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "main_instruction",
        "interactive"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "WorkflowState",
        "self.device.set_variable",
        "self.plan_execution",
        "self.get_plan",
        "self.select_next_executable_step",
        "print",
        "self.update_step_status",
        "self.execute_single_step",
        "task_history.append",
        "self.make_decision",
        "print",
        "print",
        "self.update_step_status",
        "self.make_decision",
        "print",
        "print",
        "self.update_step_status",
        "self.make_decision",
        "print",
        "print",
        "input",
        "len",
        "len",
        "len",
        "len",
        "task_history[-1].get",
        "hasattr",
        "dt.now().isoformat",
        "hasattr",
        "self.update_step_status",
        "user_input.lower",
        "s.get",
        "s.get",
        "s.get",
        "decision.get",
        "self._add_new_tasks",
        "self.get_plan",
        "len",
        "current_step.get",
        "current_step.get",
        "self.device.set_variable",
        "self.device.set_variable",
        "decision.get",
        "dt.now",
        "self.device.set_variable",
        "self.device.set_variable",
        "decision.get",
        "decision.get",
        "self.device.set_variable",
        "print",
        "decision.get",
        "decision.get",
        "self.device.set_variable",
        "print",
        "hasattr",
        "logger.warning",
        "logger.warning",
        "new_task.get",
        "plan.append",
        "decision.get",
        "new_task.get",
        "plan.append",
        "self.jump_to_step",
        "logger.warning",
        "decision.get",
        "step.get",
        "step.get",
        "step.get('result', {}).get",
        "json.dumps",
        "self.device.set_variable",
        "self.device.set_variable",
        "self.device.set_variable",
        "json.dumps",
        "self.loop_back_to_step",
        "logger.warning",
        "self.handle_generate_fix_task_and_loop",
        "json.dumps",
        "step.get",
        "logger.warning",
        "len",
        "self.get_plan",
        "decision.get",
        "len",
        "step.get",
        "len",
        "print",
        "self.update_step_status",
        "self.execute_single_step",
        "task_history.append",
        "self.loop_back_to_step",
        "self.update_step_status",
        "print",
        "self.update_step_status",
        "print",
        "dt.now().isoformat",
        "fix_task.get",
        "dt.now",
        "fix_task.get",
        "fix_task.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py:execute_multi_step"
    },
    {
      "type": "function",
      "name": "make_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py",
      "line_number": 1214,
      "complexity": 1,
      "docstring": "\u5206\u6790\u5f53\u524d\u6267\u884c\u7ed3\u679c\u5e76\u51b3\u5b9a\u4e0b\u4e00\u6b65\u64cd\u4f5c\n\nArgs:\n    current_result: \u5f53\u524d\u6267\u884c\u7ed3\u679c\uff08Result\u5bf9\u8c61\u6216\u5176\u4ed6\u7ed3\u679c\uff09\n    task_history: \u4efb\u52a1\u6267\u884c\u5386\u53f2\u8bb0\u5f55\uff08\u53ef\u9009\uff09\n    context: \u989d\u5916\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\uff08\u53ef\u9009\uff09\n    \nReturns:\n    \u51b3\u7b56\u7ed3\u679c\u5b57\u5178\uff0c\u5305\u542baction\u3001reason\u548cnew_tasks",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_result",
        "task_history",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._generate_decision_prompt",
        "self.chat_sync",
        "self._parse_decision",
        "logger.warning",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py:make_decision"
    },
    {
      "type": "function",
      "name": "_generate_decision_prompt",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py",
      "line_number": 1251,
      "complexity": 1,
      "docstring": "\u751f\u6210\u7528\u4e8e\u51b3\u7b56\u7684\u63d0\u793a (\u65b9\u68482: \u652f\u6301\u5faa\u73af\u548c\u6761\u4ef6\u5206\u652f\u63a7\u5236)\n\nArgs:\n    current_result: \u5f53\u524d\u6267\u884c\u7ed3\u679c\n    task_history: \u4efb\u52a1\u6267\u884c\u5386\u53f2\n    context: \u989d\u5916\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\n    \nReturns:\n    \u51b3\u7b56\u63d0\u793a\u5b57\u7b26\u4e32",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_result",
        "task_history",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_plan",
        "isinstance",
        "'\\n'.join",
        "str",
        "'\\n'.join",
        "task_history[-1].get('task', {}).get",
        "isinstance",
        "'\\n'.join",
        "'\\n'.join",
        "str",
        "len",
        "len",
        "isinstance",
        "step.get",
        "step.get",
        "task_history[-1].get",
        "item.get",
        "task.get",
        "task.get",
        "item.get",
        "getattr",
        "history_items.append",
        "step.get",
        "step.get",
        "context.items",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py:_generate_decision_prompt"
    },
    {
      "type": "function",
      "name": "_parse_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py",
      "line_number": 1421,
      "complexity": 1,
      "docstring": "\u89e3\u6790\u51b3\u7b56\u6587\u672c\u4e3a\u7ed3\u6784\u5316\u51b3\u7b56\n\nArgs:\n    decision_text: \u51b3\u7b56\u6587\u672c\uff08\u53ef\u80fd\u5305\u542bJSON\uff09\n    \nReturns:\n    \u89e3\u6790\u540e\u7684\u51b3\u7b56\u5b57\u5178",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decision_text"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "extract_code",
        "json.loads",
        "decision_text.lower",
        "logger.error",
        "re.search",
        "decision_text.lower",
        "decision_text.lower",
        "lang.lower",
        "json.loads",
        "json.loads",
        "match.group"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py:_parse_decision"
    },
    {
      "type": "function",
      "name": "test_unittest_outputs",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_unittest_output.py",
      "line_number": 17,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5404\u79cdunittest\u8f93\u51fa\u573a\u666f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "MockTestResultEvaluator",
        "print",
        "print",
        "enumerate",
        "print",
        "print",
        "print",
        "print",
        "evaluator.evaluate_test_result",
        "print",
        "print",
        "print",
        "print",
        "len",
        "print",
        "print",
        "Result",
        "Result",
        "Result",
        "Result",
        "Result",
        "Result",
        "len",
        "repr"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_unittest_output.py:test_unittest_outputs"
    },
    {
      "type": "class",
      "name": "MockLLM",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py",
      "line_number": 26,
      "complexity": 1,
      "docstring": "\u6a21\u62df LLM \u7c7b\u7528\u4e8e\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "invoke"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py:MockLLM"
    },
    {
      "type": "class",
      "name": "TestTaskMasterConfig",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py",
      "line_number": 37,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5 TaskMasterConfig \u7c7b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "tearDown",
        "test_default_config",
        "test_config_modification",
        "test_config_validation",
        "test_config_save_load"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py:TestTaskMasterConfig"
    },
    {
      "type": "class",
      "name": "TestTaskMasterDataMapper",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py",
      "line_number": 83,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5 TaskMasterDataMapper \u7c7b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_status_mapping",
        "test_tm_task_to_step_format",
        "test_step_to_tm_task_format",
        "test_agent_specs_formatting",
        "test_format_validation"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py:TestTaskMasterDataMapper"
    },
    {
      "type": "class",
      "name": "TestTaskMasterClient",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py",
      "line_number": 171,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5 TaskMasterClient \u7c7b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "tearDown",
        "test_initialization",
        "test_add_task",
        "test_get_tasks",
        "test_next_task",
        "test_research_function"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py:TestTaskMasterClient"
    },
    {
      "type": "class",
      "name": "TestTaskMasterAgent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py",
      "line_number": 221,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5 TaskMasterAgent \u7c7b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "tearDown",
        "test_initialization",
        "test_register_agent",
        "test_project_status",
        "test_research_function",
        "test_complexity_analysis",
        "test_enhanced_decision_making",
        "test_sync_with_tm",
        "test_execution_modes"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py:TestTaskMasterAgent"
    },
    {
      "type": "class",
      "name": "TestWorkflowState",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py",
      "line_number": 318,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5de5\u4f5c\u6d41\u72b6\u6001\u7ba1\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "test_workflow_state_initialization",
        "test_performance_metrics"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py:TestWorkflowState"
    },
    {
      "type": "class",
      "name": "MockResponse",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py",
      "line_number": 32,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py:MockResponse"
    },
    {
      "type": "function",
      "name": "run_basic_tests",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py",
      "line_number": 340,
      "complexity": 1,
      "docstring": "\u8fd0\u884c\u57fa\u672c\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "unittest.TestSuite",
        "unittest.TextTestRunner",
        "runner.run",
        "print",
        "print",
        "print",
        "print",
        "print",
        "result.wasSuccessful",
        "unittest.TestLoader().loadTestsFromTestCase",
        "test_suite.addTests",
        "print",
        "print",
        "print",
        "print",
        "unittest.TestLoader",
        "len",
        "len",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py:run_basic_tests"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py",
      "line_number": 28,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py:__init__"
    },
    {
      "type": "function",
      "name": "invoke",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py",
      "line_number": 31,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "messages"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "MockResponse"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py:invoke"
    },
    {
      "type": "function",
      "name": "setUp",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py",
      "line_number": 224,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "tempfile.mkdtemp",
        "MockLLM",
        "Agent",
        "TaskMasterAgent",
        "AgentSpecification"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py:setUp"
    },
    {
      "type": "function",
      "name": "tearDown",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py",
      "line_number": 241,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "shutil.rmtree"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py:tearDown"
    },
    {
      "type": "function",
      "name": "test_default_config",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py",
      "line_number": 47,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u9ed8\u8ba4\u914d\u7f6e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "TaskMasterConfig",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "fresh_config.get",
        "fresh_config.get_complexity_threshold",
        "fresh_config.is_research_enabled"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py:test_default_config"
    },
    {
      "type": "function",
      "name": "test_config_modification",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py",
      "line_number": 55,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u914d\u7f6e\u4fee\u6539",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.config.set",
        "self.assertEqual",
        "self.config.set",
        "self.assertEqual",
        "self.config.get_complexity_threshold",
        "self.config.is_research_enabled"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py:test_config_modification"
    },
    {
      "type": "function",
      "name": "test_config_validation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py",
      "line_number": 63,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u914d\u7f6e\u9a8c\u8bc1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.assertTrue",
        "self.config.set",
        "self.assertFalse",
        "self.config.set",
        "self.config.validate_config",
        "self.config.validate_config"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py:test_config_validation"
    },
    {
      "type": "function",
      "name": "test_config_save_load",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py",
      "line_number": 74,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u914d\u7f6e\u4fdd\u5b58\u548c\u52a0\u8f7d",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.config.set",
        "self.assertTrue",
        "TaskMasterConfig",
        "self.assertEqual",
        "self.config.save_config",
        "new_config.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py:test_config_save_load"
    },
    {
      "type": "function",
      "name": "test_status_mapping",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py",
      "line_number": 90,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u72b6\u6001\u6620\u5c04",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.mapper._map_status_to_tm",
        "self.mapper._map_status_to_tm",
        "self.mapper._map_status_to_multistep",
        "self.mapper._map_status_to_multistep"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py:test_status_mapping"
    },
    {
      "type": "function",
      "name": "test_tm_task_to_step_format",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py",
      "line_number": 100,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5 Task Master AI \u4efb\u52a1\u8f6c\u6362\u4e3a\u6b65\u9aa4\u683c\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.mapper.tm_task_to_step_format",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py:test_tm_task_to_step_format"
    },
    {
      "type": "function",
      "name": "test_step_to_tm_task_format",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py",
      "line_number": 121,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6b65\u9aa4\u683c\u5f0f\u8f6c\u6362\u4e3a Task Master AI \u4efb\u52a1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.mapper.step_to_tm_task_format",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py:test_step_to_tm_task_format"
    },
    {
      "type": "function",
      "name": "test_agent_specs_formatting",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py",
      "line_number": 142,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u667a\u80fd\u4f53\u89c4\u683c\u683c\u5f0f\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Agent",
        "self.mapper.agent_specs_to_tm_format",
        "self.assertIn",
        "self.assertIn",
        "self.mapper.agent_specs_to_name_list",
        "self.assertEqual",
        "AgentSpecification",
        "AgentSpecification"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py:test_agent_specs_formatting"
    },
    {
      "type": "function",
      "name": "test_format_validation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py",
      "line_number": 157,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u683c\u5f0f\u9a8c\u8bc1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.assertTrue",
        "self.assertFalse",
        "self.mapper.validate_step_format",
        "self.mapper.validate_step_format"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py:test_format_validation"
    },
    {
      "type": "function",
      "name": "test_initialization",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py",
      "line_number": 244,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5 TaskMasterAgent \u521d\u59cb\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.assertEqual",
        "self.assertTrue",
        "self.assertIsInstance",
        "self.assertIsInstance",
        "len",
        "self.tm_agent.tm_client.is_initialized"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py:test_initialization"
    },
    {
      "type": "function",
      "name": "test_add_task",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py",
      "line_number": 187,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6dfb\u52a0\u4efb\u52a1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.client.add_task",
        "self.assertIsNotNone",
        "self.assertEqual",
        "task.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py:test_add_task"
    },
    {
      "type": "function",
      "name": "test_get_tasks",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py",
      "line_number": 197,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u83b7\u53d6\u4efb\u52a1\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.client.add_task",
        "self.client.get_tasks",
        "self.assertIsInstance"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py:test_get_tasks"
    },
    {
      "type": "function",
      "name": "test_next_task",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py",
      "line_number": 205,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u83b7\u53d6\u4e0b\u4e00\u4e2a\u4efb\u52a1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.client.add_task",
        "self.client.next_task",
        "self.assertIsInstance",
        "type"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py:test_next_task"
    },
    {
      "type": "function",
      "name": "test_research_function",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py",
      "line_number": 268,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u7814\u7a76\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.tm_agent.research",
        "self.assertIsInstance"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py:test_research_function"
    },
    {
      "type": "function",
      "name": "test_register_agent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py",
      "line_number": 251,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u667a\u80fd\u4f53\u6ce8\u518c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Agent",
        "self.tm_agent.register_agent",
        "self.assertTrue",
        "self.assertEqual",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py:test_register_agent"
    },
    {
      "type": "function",
      "name": "test_project_status",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py",
      "line_number": 259,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u9879\u76ee\u72b6\u6001\u83b7\u53d6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.tm_agent.get_project_status",
        "self.assertIsInstance",
        "self.assertIn",
        "self.assertIn",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py:test_project_status"
    },
    {
      "type": "function",
      "name": "test_complexity_analysis",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py",
      "line_number": 273,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u590d\u6742\u5ea6\u5206\u6790",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.tm_agent.get_complexity_analysis",
        "self.assertIsInstance"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py:test_complexity_analysis"
    },
    {
      "type": "function",
      "name": "test_enhanced_decision_making",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py",
      "line_number": 278,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u589e\u5f3a\u51b3\u7b56\u5236\u5b9a",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.tm_agent.enhanced_decision_making",
        "self.assertIsInstance",
        "self.assertIn",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py:test_enhanced_decision_making"
    },
    {
      "type": "function",
      "name": "test_sync_with_tm",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py",
      "line_number": 293,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u4e0e Task Master AI \u540c\u6b65",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.tm_agent.sync_with_tm",
        "self.assertTrue",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py:test_sync_with_tm"
    },
    {
      "type": "function",
      "name": "test_execution_modes",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py",
      "line_number": 299,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u4e0d\u540c\u6267\u884c\u6a21\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.assertEqual",
        "self.tm_agent.execute_multi_step"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py:test_execution_modes"
    },
    {
      "type": "function",
      "name": "test_workflow_state_initialization",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py",
      "line_number": 321,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5de5\u4f5c\u6d41\u72b6\u6001\u521d\u59cb\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "TaskMasterWorkflowState",
        "self.assertIsNone",
        "self.assertEqual",
        "self.assertIsInstance",
        "self.assertIsInstance"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py:test_workflow_state_initialization"
    },
    {
      "type": "function",
      "name": "test_performance_metrics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py",
      "line_number": 330,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6027\u80fd\u6307\u6807",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "TaskMasterWorkflowState",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_task_master_agent.py:test_performance_metrics"
    },
    {
      "type": "function",
      "name": "fix_calculator_exception_consistency",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/fix_calculator_comprehensive.py",
      "line_number": 14,
      "complexity": 1,
      "docstring": "\u4fee\u590dCalculator\u5f02\u5e38\u7c7b\u578b\u4e00\u81f4\u6027\u95ee\u9898",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "'\\nclass Calculator:\\n    def __init__(self):\\n        pass\\n    \\n    def add(self, a, b):\\n        return a + b\\n    \\n    def subtract(self, a, b):\\n        return a - b\\n    \\n    def multiply(self, a, b):\\n        return a * b\\n    \\n    def divide(self, a, b):\\n        if b == 0:\\n            raise ZeroDivisionError(\"Cannot divide by zero\")\\n        return a / b\\n'.strip",
        "\"\\nimport unittest\\nfrom calculator import Calculator\\n\\nclass TestCalculator(unittest.TestCase):\\n    def setUp(self):\\n        self.calc = Calculator()\\n    \\n    def test_add(self):\\n        self.assertEqual(self.calc.add(2, 3), 5)\\n        self.assertEqual(self.calc.add(-1, 1), 0)\\n        self.assertEqual(self.calc.add(0, 0), 0)\\n    \\n    def test_subtract(self):\\n        self.assertEqual(self.calc.subtract(5, 3), 2)\\n        self.assertEqual(self.calc.subtract(3, 5), -2)\\n        self.assertEqual(self.calc.subtract(0, 0), 0)\\n    \\n    def test_multiply(self):\\n        self.assertEqual(self.calc.multiply(2, 3), 6)\\n        self.assertEqual(self.calc.multiply(-1, 1), -1)\\n        self.assertEqual(self.calc.multiply(0, 5), 0)\\n    \\n    def test_divide(self):\\n        self.assertEqual(self.calc.divide(6, 3), 2)\\n        self.assertEqual(self.calc.divide(5, 2), 2.5)\\n        self.assertEqual(self.calc.divide(0, 5), 0)\\n        \\n    def test_divide_by_zero(self):\\n        with self.assertRaises(ZeroDivisionError):\\n            self.calc.divide(5, 0)\\n\\nif __name__ == '__main__':\\n    unittest.main()\\n\".strip",
        "print",
        "print",
        "print",
        "print",
        "print",
        "open",
        "f.write",
        "open",
        "f.write",
        "subprocess.run",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/fix_calculator_comprehensive.py:fix_calculator_exception_consistency"
    },
    {
      "type": "function",
      "name": "create_backup_files",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/fix_calculator_comprehensive.py",
      "line_number": 116,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u5907\u4efd\u6587\u4ef6\u9632\u6b62\u88ab\u8986\u76d6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "open",
        "f.read",
        "open",
        "f.read",
        "open",
        "f.write",
        "open",
        "f.write"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/fix_calculator_comprehensive.py:create_backup_files"
    },
    {
      "type": "function",
      "name": "main",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/fix_calculator_comprehensive.py",
      "line_number": 140,
      "complexity": 1,
      "docstring": "\u4e3b\u51fd\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "fix_calculator_exception_consistency",
        "create_backup_files",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/fix_calculator_comprehensive.py:main"
    },
    {
      "type": "class",
      "name": "TestNaturalLanguageState",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_natural_language_state.py",
      "line_number": 30,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u81ea\u7136\u8bed\u8a00\u72b6\u6001\u7ba1\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_global_state_updater_basic",
        "test_global_state_updater_with_llm",
        "test_workflow_execution_context_state_management",
        "test_control_flow_evaluator_natural_language",
        "test_data_extraction_from_natural_language",
        "test_workflow_definition_with_global_state"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_natural_language_state.py:TestNaturalLanguageState"
    },
    {
      "type": "function",
      "name": "run_integration_test",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_natural_language_state.py",
      "line_number": 259,
      "complexity": 1,
      "docstring": "\u8fd0\u884c\u96c6\u6210\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "Mock",
        "StaticWorkflowEngine",
        "print",
        "hasattr",
        "print",
        "hasattr",
        "print",
        "print",
        "print",
        "traceback.print_exc"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_natural_language_state.py:run_integration_test"
    },
    {
      "type": "function",
      "name": "setUp",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_natural_language_state.py",
      "line_number": 33,
      "complexity": 1,
      "docstring": "\u8bbe\u7f6e\u6d4b\u8bd5\u73af\u5883",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Mock",
        "WorkflowDefinition",
        "WorkflowExecutionContext",
        "WorkflowMetadata",
        "WorkflowStep",
        "WorkflowStep"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_natural_language_state.py:setUp"
    },
    {
      "type": "function",
      "name": "test_global_state_updater_basic",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_natural_language_state.py",
      "line_number": 67,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u57fa\u7840\u7684\u5168\u5c40\u72b6\u6001\u66f4\u65b0\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "GlobalStateUpdater",
        "StepExecution",
        "updater.update_state",
        "print",
        "print",
        "self.assertIn",
        "self.assertIn",
        "self.assertTrue",
        "print",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_natural_language_state.py:test_global_state_updater_basic"
    },
    {
      "type": "function",
      "name": "test_global_state_updater_with_llm",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_natural_language_state.py",
      "line_number": 93,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u4f7f\u7528LLM\u7684\u667a\u80fd\u72b6\u6001\u66f4\u65b0",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "Mock",
        "GlobalStateUpdater",
        "StepExecution",
        "updater.update_state",
        "print",
        "print",
        "self.mock_llm.invoke.assert_called_once",
        "self.assertIn",
        "self.assertIn",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_natural_language_state.py:test_global_state_updater_with_llm"
    },
    {
      "type": "function",
      "name": "test_workflow_execution_context_state_management",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_natural_language_state.py",
      "line_number": 138,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5de5\u4f5c\u6d41\u6267\u884c\u4e0a\u4e0b\u6587\u7684\u72b6\u6001\u7ba1\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "self.execution_context.update_global_state",
        "self.assertEqual",
        "self.assertEqual",
        "self.execution_context.update_global_state",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.execution_context.get_state_summary",
        "print",
        "self.assertIn",
        "self.assertIn",
        "self.execution_context.get_state_history",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "print",
        "len",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_natural_language_state.py:test_workflow_execution_context_state_management"
    },
    {
      "type": "function",
      "name": "test_control_flow_evaluator_natural_language",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_natural_language_state.py",
      "line_number": 172,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u63a7\u5236\u6d41\u8bc4\u4f30\u5668\u7684\u81ea\u7136\u8bed\u8a00\u652f\u6301",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "Mock",
        "ControlFlowEvaluator",
        "evaluator.set_context",
        "evaluator.evaluate_natural_language_condition",
        "print",
        "print",
        "self.assertTrue",
        "self.mock_llm.invoke.assert_called_once",
        "self.mock_llm.reset_mock",
        "Mock",
        "evaluator.evaluate_natural_language_condition",
        "print",
        "print",
        "self.assertFalse",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_natural_language_state.py:test_control_flow_evaluator_natural_language"
    },
    {
      "type": "function",
      "name": "test_data_extraction_from_natural_language",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_natural_language_state.py",
      "line_number": 212,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u4ece\u81ea\u7136\u8bed\u8a00\u72b6\u6001\u4e2d\u63d0\u53d6\u7ed3\u6784\u5316\u6570\u636e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "GlobalStateUpdater",
        "updater.extract_structured_data",
        "print",
        "print",
        "self.assertIn",
        "self.assertEqual",
        "self.assertEqual",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_natural_language_state.py:test_data_extraction_from_natural_language"
    },
    {
      "type": "function",
      "name": "test_workflow_definition_with_global_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_natural_language_state.py",
      "line_number": 242,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5de5\u4f5c\u6d41\u5b9a\u4e49\u4e2d\u7684\u5168\u5c40\u72b6\u6001\u5b57\u6bb5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "self.assertTrue",
        "self.assertEqual",
        "self.assertTrue",
        "self.assertIsInstance",
        "print",
        "print",
        "print",
        "hasattr",
        "hasattr"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_natural_language_state.py:test_workflow_definition_with_global_state"
    },
    {
      "type": "class",
      "name": "Calculator",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/calculator.py",
      "line_number": 2,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "add",
        "subtract",
        "multiply",
        "divide"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/calculator.py:Calculator"
    },
    {
      "type": "function",
      "name": "add",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/calculator.py",
      "line_number": 3,
      "complexity": 1,
      "docstring": "Performs addition of two numbers.",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "a",
        "b"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/calculator.py:add"
    },
    {
      "type": "function",
      "name": "subtract",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/calculator.py",
      "line_number": 7,
      "complexity": 1,
      "docstring": "Performs subtraction of two numbers.",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "a",
        "b"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/calculator.py:subtract"
    },
    {
      "type": "function",
      "name": "multiply",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/calculator.py",
      "line_number": 11,
      "complexity": 1,
      "docstring": "Performs multiplication of two numbers.",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "a",
        "b"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/calculator.py:multiply"
    },
    {
      "type": "function",
      "name": "divide",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/calculator.py",
      "line_number": 15,
      "complexity": 1,
      "docstring": "Performs division of two numbers.\nHandles division by zero error.",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "a",
        "b"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "ValueError"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/calculator.py:divide"
    },
    {
      "type": "class",
      "name": "TestCalculator",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_calculator_backup.py",
      "line_number": 4,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_add",
        "test_subtract",
        "test_multiply",
        "test_divide",
        "test_divide_by_zero"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_calculator_backup.py:TestCalculator"
    },
    {
      "type": "function",
      "name": "setUp",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_calculator_backup.py",
      "line_number": 5,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Calculator"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_calculator_backup.py:setUp"
    },
    {
      "type": "function",
      "name": "test_add",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_calculator_backup.py",
      "line_number": 8,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.calc.add",
        "self.calc.add",
        "self.calc.add"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_calculator_backup.py:test_add"
    },
    {
      "type": "function",
      "name": "test_subtract",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_calculator_backup.py",
      "line_number": 13,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.calc.subtract",
        "self.calc.subtract",
        "self.calc.subtract"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_calculator_backup.py:test_subtract"
    },
    {
      "type": "function",
      "name": "test_multiply",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_calculator_backup.py",
      "line_number": 18,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.calc.multiply",
        "self.calc.multiply",
        "self.calc.multiply"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_calculator_backup.py:test_multiply"
    },
    {
      "type": "function",
      "name": "test_divide",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_calculator_backup.py",
      "line_number": 23,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.calc.divide",
        "self.calc.divide",
        "self.calc.divide"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_calculator_backup.py:test_divide"
    },
    {
      "type": "function",
      "name": "test_divide_by_zero",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_calculator_backup.py",
      "line_number": 28,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.assertRaises",
        "self.calc.divide"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_calculator_backup.py:test_divide_by_zero"
    },
    {
      "type": "function",
      "name": "test_jump_functionality",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_jump_fix.py",
      "line_number": 12,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u8df3\u8f6c\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "MultiStepAgent_v2",
        "Agent",
        "multi_agent.register_agent",
        "print",
        "print",
        "multi_agent.execute_multi_step",
        "print",
        "print",
        "print",
        "print",
        "traceback.print_exc"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_jump_fix.py:test_jump_functionality"
    },
    {
      "type": "class",
      "name": "Device",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py",
      "line_number": 476,
      "complexity": 1,
      "docstring": "\u6267\u884c\u5668\uff0c\u6267\u884cPython\u4ee3\u7801\u3002",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "execute_code"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:Device"
    },
    {
      "type": "class",
      "name": "StatefulExecutor",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py",
      "line_number": 513,
      "complexity": 1,
      "docstring": "\u6709\u72b6\u6001\u7684\u6267\u884c\u5668\uff0c\u6267\u884cPython\u4ee3\u7801\u3002\n\u4f7f\u7528\u65e5\u5fd7\u6536\u96c6\u7cfb\u7edf\u8ddf\u8e2a\u6267\u884c\u8f93\u51fa\u3002",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "execute_code",
        "get_variable",
        "set_variable",
        "_create_ipython_instance"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Device"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:StatefulExecutor"
    },
    {
      "type": "class",
      "name": "Thinker",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py",
      "line_number": 698,
      "complexity": 1,
      "docstring": "\u4ee3\u7801\u751f\u6210\u5668\uff0c\u628a\u81ea\u7136\u8bed\u8a00\u6307\u4ee4\u7ffb\u8bd1\u6210Python\u4ee3\u7801\u5e76\u6267\u884c\u3002\n\u5305\u542b\u4e86\u4ee3\u7801\u4fee\u6539\u5faa\u73af",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "chat_stream",
        "chat_sync",
        "execute_sync",
        "execute_stream",
        "generateResult_sync",
        "generateResult_stream",
        "resetEvaluators"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "AgentBase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:Thinker"
    },
    {
      "type": "class",
      "name": "Evaluator",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py",
      "line_number": 1184,
      "complexity": 1,
      "docstring": "\u884c\u4e3a\u8bc4\u4f30\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "loadKnowledge",
        "evaluate"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:Evaluator"
    },
    {
      "type": "class",
      "name": "Agent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py",
      "line_number": 1330,
      "complexity": 1,
      "docstring": "\u667a\u80fd\u4f53\nrun\u65b9\u6cd5\uff1a\u8f93\u5165\u81ea\u7136\u8bed\u8a00\uff0c\u7ffb\u8bd1\u6210Python\u4ee3\u7801\uff0c\u6267\u884c\u4ee3\u7801\uff0c\u8bc4\u4f30\u4ee3\u7801\u6267\u884c\u7ed3\u679c\uff0c\u751f\u6210\u6700\u7ec8\u7ed3\u679c\nchat\u65b9\u6cd5\uff1a\u8f93\u5165\u81ea\u7136\u8bed\u8a00\uff0c\u8f93\u51fa\u81ea\u7136\u8bed\u8a00\uff0c\u65e0\u526f\u4f5c\u7528",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "chat_stream",
        "chat_sync",
        "loadEvaluationSystemMessage",
        "loadKnowledge",
        "loadPythonModules",
        "evaluate_all",
        "_log_evaluation_summary",
        "_apply_fallback_logic",
        "execute_sync",
        "execute_stream",
        "generateResult_sync",
        "generateResult_stream",
        "resetEvaluators",
        "set_api_specification",
        "set_agent_name"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "AgentBase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:Agent"
    },
    {
      "type": "class",
      "name": "TeeOutput",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py",
      "line_number": 568,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "write",
        "flush",
        "encoding",
        "errors",
        "fileno",
        "isatty",
        "mode",
        "name"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:TeeOutput"
    },
    {
      "type": "function",
      "name": "extract_code",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py",
      "line_number": 15,
      "complexity": 1,
      "docstring": "\u4ece\u6587\u672c\u4e2d\u63d0\u53d6\u4ee3\u7801\u5757\n\u8fd4\u56de [(\u8bed\u8a00, \u4ee3\u7801)] \u7684\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "text",
        "lang"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "re.findall",
        "text.split",
        "result.append",
        "line.strip",
        "stripped.startswith",
        "stripped.startswith",
        "stripped.startswith",
        "stripped.startswith",
        "stripped.startswith",
        "code_lines.append",
        "code.strip",
        "'\\n'.join",
        "stripped.startswith"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:extract_code"
    },
    {
      "type": "function",
      "name": "execute_code",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py",
      "line_number": 534,
      "complexity": 1,
      "docstring": "\u6267\u884c\u7ed9\u5b9a\u7684Python\u4ee3\u7801\uff0c\u5e76\u8fd4\u56de\u6267\u884c\u7ed3\u679c\u3002\n\n\u53c2\u6570:\ncode (str): \u8981\u6267\u884c\u7684Python\u4ee3\u7801\u3002k\n\n\u8fd4\u56de:\nResult: \u6267\u884c\u7ed3\u679c\u5bf9\u8c61\uff0c\u5305\u542b\u6267\u884c\u6210\u529f\u4e0e\u5426\u3001\u4ee3\u7801\u5185\u5bb9\u548c\u8f93\u51fa\u4fe1\u606f\u3002",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "code"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "StringIO",
        "TeeOutput",
        "TeeOutput",
        "compile",
        "self.ipython.run_cell",
        "captured_output.getvalue",
        "Result",
        "Result",
        "self.original.write",
        "self.captured.write",
        "self.original.flush",
        "self.original.flush",
        "self.captured.flush",
        "getattr",
        "getattr",
        "getattr",
        "getattr",
        "getattr",
        "self.get_variable",
        "Result",
        "str",
        "Result",
        "Result",
        "getattr",
        "repr",
        "str",
        "str",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:execute_code"
    },
    {
      "type": "function",
      "name": "_map_log_level",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py",
      "line_number": 119,
      "complexity": 1,
      "docstring": "Maps custom integer levels to standard logging levels.",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "custom_level_int"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:_map_log_level"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py",
      "line_number": 569,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "original",
        "captured"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:__init__"
    },
    {
      "type": "function",
      "name": "get_variable",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py",
      "line_number": 647,
      "complexity": 1,
      "docstring": "\u83b7\u53d6IPython\u73af\u5883\u4e2d\u7684\u53d8\u91cf\u503c\n\n\u53c2\u6570:\nvar_name (str): \u53d8\u91cf\u540d\n\n\u8fd4\u56de:\nany: \u53d8\u91cf\u7684\u503c\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u8fd4\u56deNone",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "var_name"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.ipython.user_ns.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:get_variable"
    },
    {
      "type": "function",
      "name": "set_variable",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py",
      "line_number": 659,
      "complexity": 1,
      "docstring": "\u5728IPython\u73af\u5883\u4e2d\u8bbe\u7f6e\u53d8\u91cf\u503c\n\n\u53c2\u6570:\nvar_name (str): \u53d8\u91cf\u540d\nvalue (any): \u53d8\u91cf\u503c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "var_name",
        "value"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:set_variable"
    },
    {
      "type": "function",
      "name": "_create_ipython_instance",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py",
      "line_number": 670,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u4e00\u4e2aIPython\u5b9e\u4f8b\u7528\u4e8e\u6267\u884c\u4ee3\u7801",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Config",
        "InteractiveShell.instance",
        "ipython.run_cell",
        "logging.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:_create_ipython_instance"
    },
    {
      "type": "function",
      "name": "chat_stream",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py",
      "line_number": 1369,
      "complexity": 1,
      "docstring": "\u4e0eLLM\u8fdb\u884c\u6d41\u5f0f\u5bf9\u8bdd\n\nArgs:\n    message: \u7528\u6237\u8f93\u5165\u7684\u6d88\u606f\n    response_format: \u53ef\u9009\u53c2\u6570\uff0c\u6307\u5b9a\u8fd4\u56de\u683c\u5f0f\u7684\u5b57\u5178\u3002\u4f8b\u5982 {\"type\": \"json_object\"}\n\nYields:\n    object: \u8fed\u4ee3\u5668\u524d\u9762\u7684\u5143\u7d20\u662f\u6267\u884c\u8fc7\u7a0b\u65e5\u5fd7\uff08\u5b57\u7b26\u4e32\uff09\uff0c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u662fResult\u5bf9\u8c61",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "message",
        "response_format"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.thinker.chat_stream",
        "isinstance",
        "Result",
        "isinstance",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:chat_stream"
    },
    {
      "type": "function",
      "name": "chat_sync",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py",
      "line_number": 1396,
      "complexity": 1,
      "docstring": "\u4e0eLLM\u8fdb\u884c\u540c\u6b65\u5bf9\u8bdd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "message",
        "response_format"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.thinker.chat_sync"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:chat_sync"
    },
    {
      "type": "function",
      "name": "execute_sync",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py",
      "line_number": 1538,
      "complexity": 1,
      "docstring": "\u540c\u6b65\u6267\u884c\u81ea\u7136\u8bed\u8a00\u6307\u4ee4\uff0c\u5c06\u5176\u7ffb\u8bd1\u4e3aPython\u4ee3\u7801\u5e76\u6267\u884c\u3002\n\n\u8be5\u65b9\u6cd5\u63a5\u6536\u81ea\u7136\u8bed\u8a00\u63cf\u8ff0\u7684\u4efb\u52a1\uff0c\u901a\u8fc7\u4ee5\u4e0b\u6d41\u7a0b\u5904\u7406\uff1a\n1. \u4f7f\u7528 Thinker \u5c06\u81ea\u7136\u8bed\u8a00\u7ffb\u8bd1\u4e3aPython\u4ee3\u7801\n2. \u6267\u884c\u751f\u6210\u7684\u4ee3\u7801\n3. \u8bc4\u4f30\u6267\u884c\u7ed3\u679c\u662f\u5426\u6ee1\u8db3\u4efb\u52a1\u8981\u6c42\uff08\u53ef\u9009\uff09\n4. \u751f\u6210\u6700\u7ec8\u7684\u6267\u884c\u7ed3\u679c\uff08\u53ef\u9009\uff09\n\nArgs:\n    instruction (str): \u81ea\u7136\u8bed\u8a00\u6307\u4ee4\uff0c\u4f8b\u5982\uff1a\n        - \"\u8ba1\u7b97 123 + 456\"\n        - \"\u751f\u6210\u4e00\u4e2a\u5305\u542b10\u4e2a\u968f\u673a\u6570\u7684\u5217\u8868\"\n        - \"\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u8ba1\u7b97\u5668\u51fd\u6570\"\n        - \"\u5206\u6790\u8fd9\u7ec4\u6570\u636e\u5e76\u751f\u6210\u56fe\u8868\"\n\nReturns:\n    Result: \u6267\u884c\u7ed3\u679c\u5bf9\u8c61\uff0c\u5305\u542b\u4ee5\u4e0b\u5c5e\u6027\uff1a\n        - success (bool): \u6267\u884c\u662f\u5426\u6210\u529f\n        - code (str): \u751f\u6210\u7684Python\u4ee3\u7801\n        - stdout (str): \u6807\u51c6\u8f93\u51fa\n        - stderr (str): \u9519\u8bef\u8f93\u51fa\n        - return_value: \u8fd4\u56de\u503c\uff0c\u6839\u636e\u914d\u7f6e\u53ef\u80fd\u662f\uff1a\n            - \u4ee3\u7801\u6267\u884c\u7684\u5b9e\u9645\u8fd4\u56de\u503c\uff08skip_generation=True\u65f6\uff09\n            - LLM\u751f\u6210\u7684\u81ea\u7136\u8bed\u8a00\u603b\u7ed3\uff08skip_generation=False\u65f6\uff09\n            - \u5d4c\u5957\u7684Result\u5bf9\u8c61\uff08\u7279\u5b9a\u914d\u7f6e\u4e0b\uff09\n\nNote:\n    - \u5982\u679c skip_evaluation=True\uff0c\u5c06\u8df3\u8fc7\u7ed3\u679c\u8bc4\u4f30\u6b65\u9aa4\n    - \u5982\u679c skip_generation=True\uff0c\u5c06\u8df3\u8fc7\u6700\u7ec8\u7ed3\u679c\u751f\u6210\u6b65\u9aa4\n    - max_retries \u63a7\u5236\u5931\u8d25\u65f6\u7684\u91cd\u8bd5\u6b21\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "range",
        "print",
        "Result",
        "self.thinker.execute_sync",
        "self.thinker.execute_sync",
        "self.thinker.execute_sync",
        "isinstance",
        "self.evaluate_all",
        "self.generateResult_sync",
        "Result",
        "self.generateResult_sync",
        "Result",
        "Result",
        "self.generateResult_sync",
        "Result",
        "Result"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:execute_sync"
    },
    {
      "type": "function",
      "name": "execute_stream",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py",
      "line_number": 1628,
      "complexity": 1,
      "docstring": "\u6267\u884c\u81ea\u7136\u8bed\u8a00\u6307\u4ee4\uff0c\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668\u3002\n\n\u8fed\u4ee3\u5668\u7684\u5143\u7d20\uff1a\n  - \u524d\u9762\u7684\u5143\u7d20\uff1a\u6267\u884c\u8fc7\u7a0b\u4e2d\u7684\u65e5\u5fd7\uff08\u5b57\u7b26\u4e32\uff09\n  - \u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff1a\u6267\u884c\u7ed3\u679c\uff08Result\u5bf9\u8c61\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "range",
        "logging.info",
        "self.thinker.execute_stream",
        "Result",
        "self.chat_stream",
        "self.thinker.execute_stream",
        "self.thinker.execute_stream",
        "isinstance",
        "isinstance",
        "isinstance",
        "isinstance",
        "isinstance",
        "self.generateResult_stream",
        "Result",
        "self.evaluate_all",
        "logging.error",
        "Result",
        "Result",
        "Result",
        "self.generateResult_stream",
        "self.generateResult_stream",
        "Result",
        "Result",
        "str",
        "self.generateResult_stream",
        "Result",
        "Result",
        "Result",
        "Result",
        "Result",
        "str",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:execute_stream"
    },
    {
      "type": "function",
      "name": "generateResult_sync",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py",
      "line_number": 1761,
      "complexity": 1,
      "docstring": "\u751f\u6210\u6700\u7ec8\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction",
        "result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "logger.info",
        "logger.info",
        "logger.info",
        "logger.info",
        "logger.info",
        "self.llm.invoke",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:generateResult_sync"
    },
    {
      "type": "function",
      "name": "generateResult_stream",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py",
      "line_number": 1809,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction",
        "result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "logger.info",
        "logger.info",
        "logger.info",
        "logger.info",
        "logger.info",
        "self.llm.stream",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:generateResult_stream"
    },
    {
      "type": "function",
      "name": "resetEvaluators",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py",
      "line_number": 1856,
      "complexity": 1,
      "docstring": "\u91cd\u7f6e\u6240\u6709\u8bc4\u4f30\u5668\u3002\n\u53ef\u4ee5\u9009\u62e9\u6027\u5730\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u8bc4\u4f30\u5668\u3002\n\n\u53c2\u6570:\nevaluationSystemMessage (str, optional): \u8bc4\u4f30\u5668\u4f7f\u7528\u7684\u7cfb\u7edf\u6d88\u606f\u3002\u5982\u679c\u63d0\u4f9b\uff0c\u5c06\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8bc4\u4f30\u5668\u3002",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "evaluationSystemMessage"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logging.info",
        "self.evaluators.append",
        "logging.info",
        "self.evaluators.append",
        "logging.info",
        "Evaluator",
        "Evaluator",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:resetEvaluators"
    },
    {
      "type": "function",
      "name": "loadKnowledge",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py",
      "line_number": 1420,
      "complexity": 1,
      "docstring": "\u52a0\u8f7d\u77e5\u8bc6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "knowledge"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.thinker.loadKnowledge",
        "evaluator.loadKnowledge"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:loadKnowledge"
    },
    {
      "type": "function",
      "name": "evaluate",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py",
      "line_number": 1197,
      "complexity": 1,
      "docstring": "\u8bc4\u4f30\u4efb\u52a1\u662f\u5426\u5b8c\u6210.\n\u8fd4\u56de\u503c\uff1a\u662f\u5426\u5b8c\u6210\uff0c\u539f\u56e0",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction",
        "result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logging.info",
        "PromptTemplate.from_template(self.system_message).format",
        "logging.debug",
        "logging.debug",
        "logging.debug",
        "logging.info",
        "logging.error",
        "logging.debug",
        "self.llm.invoke",
        "logging.debug",
        "logging.debug",
        "extract_code",
        "j.get",
        "j.get",
        "isinstance",
        "logging.debug",
        "logging.debug",
        "logging.info",
        "PromptTemplate.from_template",
        "logging.debug",
        "logging.debug",
        "logging.debug",
        "logging.error",
        "logging.info",
        "logging.info",
        "len",
        "len",
        "re.search",
        "json.loads",
        "taskIsComplete.lower",
        "str",
        "str",
        "len",
        "match.group",
        "logging.debug",
        "json.loads",
        "re.search",
        "logging.error",
        "logging.debug",
        "match.group",
        "logging.debug",
        "logging.debug",
        "extracted[0][1].strip().replace('```', '').strip",
        "logging.debug",
        "json.loads",
        "str",
        "json.loads",
        "logging.error",
        "logging.debug",
        "content.lower",
        "content.lower",
        "str",
        "extracted[0][1].strip().replace",
        "content.lower",
        "content.lower",
        "extracted[0][1].strip",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:evaluate"
    },
    {
      "type": "function",
      "name": "loadEvaluationSystemMessage",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py",
      "line_number": 1402,
      "complexity": 1,
      "docstring": "\u6dfb\u52a0\u65b0\u7684\u8bc4\u4f30\u7cfb\u7edf\u6d88\u606f\u3002\n\u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8bc4\u4f30\u5668\u5e76\u6dfb\u52a0\u5230\u73b0\u6709\u8bc4\u4f30\u5668\u5217\u8868\u4e2d\uff0c\u800c\u4e0d\u4f1a\u6e05\u9664\u73b0\u6709\u8bc4\u4f30\u5668\u3002\n\u5982\u679c\u9700\u8981\u6e05\u9664\u73b0\u6709\u8bc4\u4f30\u5668\uff0c\u8bf7\u4f7f\u7528resetEvaluators\u65b9\u6cd5\u3002\n\n\u53c2\u6570:\nevaluationSystemMessage (str): \u8bc4\u4f30\u5668\u4f7f\u7528\u7684\u7cfb\u7edf\u6d88\u606f\n\n\u8fd4\u56de:\nint: \u5f53\u524d\u8bc4\u4f30\u5668\u6570\u91cf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "evaluationSystemMessage"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Evaluator",
        "self.evaluators.append",
        "logging.info",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:loadEvaluationSystemMessage"
    },
    {
      "type": "function",
      "name": "loadPythonModules",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py",
      "line_number": 1428,
      "complexity": 1,
      "docstring": "\u52a0\u8f7dpython\u6a21\u5757",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "pythonModules"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.loadKnowledge",
        "import_module",
        "isinstance",
        "self.device.execute_code",
        "inspect.getsource"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:loadPythonModules"
    },
    {
      "type": "function",
      "name": "evaluate_all",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py",
      "line_number": 1442,
      "complexity": 1,
      "docstring": "\u4f7f\u7528\u6240\u6709\u8bc4\u4f30\u5668\u8fdb\u884c\u8bc4\u4f30\u3002\u5982\u679c\u4efb\u4f55\u4e00\u4e2a\u8bc4\u4f30\u5668\u5931\u8d25\uff0c\u7acb\u5373\u8fd4\u56de\u5931\u8d25\u7ed3\u679c\u3002\n\n\u53c2\u6570:\nresult (Result): \u4ee3\u7801\u6267\u884c\u7ed3\u679c\ninstruction (str, optional): \u7528\u6237\u7684\u539f\u59cb\u6307\u4ee4\uff0c\u7528\u4e8e\u8bc4\u4f30\u3002\u9ed8\u8ba4\u4e3aNone\u65f6\u4f7f\u7528\"\u6267\u884c\u4efb\u52a1\"\u4f5c\u4e3a\u5360\u4f4d\u7b26\u3002\n\n\u8fd4\u56de\u503c\uff1a(\u662f\u5426\u6240\u6709\u8bc4\u4f30\u90fd\u901a\u8fc7, \u8bc4\u4f30\u539f\u56e0\u5217\u8868)",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "result",
        "instruction"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logging.info",
        "logging.debug",
        "Result",
        "logging.info",
        "self._apply_fallback_logic",
        "logging.info",
        "enumerate",
        "'\\n'.join",
        "self._log_evaluation_summary",
        "len",
        "logging.info",
        "evaluator.evaluate",
        "len",
        "logging.info",
        "reasons.append",
        "logging.info",
        "failures.append",
        "self._log_evaluation_summary",
        "logging.error",
        "reasons.append",
        "enumerate",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:evaluate_all"
    },
    {
      "type": "function",
      "name": "_log_evaluation_summary",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py",
      "line_number": 1512,
      "complexity": 1,
      "docstring": "\u7edf\u4e00\u7684\u8bc4\u4f30\u603b\u7ed3\u65e5\u5fd7\u8f93\u51fa",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "status",
        "details"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logging.info",
        "logging.info",
        "logging.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:_log_evaluation_summary"
    },
    {
      "type": "function",
      "name": "_apply_fallback_logic",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py",
      "line_number": 1518,
      "complexity": 1,
      "docstring": "\u5e94\u7528\u515c\u5e95\u903b\u8f91\u8fdb\u884c\u8bc4\u4f30",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "result",
        "last_5000_chars"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logging.info",
        "logging.info",
        "self._log_evaluation_summary",
        "self._log_evaluation_summary"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:_apply_fallback_logic"
    },
    {
      "type": "function",
      "name": "set_api_specification",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py",
      "line_number": 1877,
      "complexity": 1,
      "docstring": "\u8bbe\u7f6e\u667a\u80fd\u4f53\u7684 API \u89c4\u8303\u8bf4\u660e\n\n\u53c2\u6570:\napi_spec (str): API \u89c4\u8303\u8bf4\u660e\uff0c\u63cf\u8ff0\u667a\u80fd\u4f53\u7684\u529f\u80fd\u548c\u4f7f\u7528\u65b9\u6cd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "api_spec"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logging.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:set_api_specification"
    },
    {
      "type": "function",
      "name": "set_agent_name",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py",
      "line_number": 1887,
      "complexity": 1,
      "docstring": "\u8bbe\u7f6e\u667a\u80fd\u4f53\u7684\u540d\u79f0\n\n\u53c2\u6570:\nname (str): \u667a\u80fd\u4f53\u540d\u79f0",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "name"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logging.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:set_agent_name"
    },
    {
      "type": "function",
      "name": "write",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py",
      "line_number": 573,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "text"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.original.write",
        "self.captured.write",
        "self.original.flush"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:write"
    },
    {
      "type": "function",
      "name": "flush",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py",
      "line_number": 578,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.original.flush",
        "self.captured.flush"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:flush"
    },
    {
      "type": "function",
      "name": "encoding",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py",
      "line_number": 583,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [
        "property"
      ],
      "inheritance": [],
      "calls": [
        "getattr"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:encoding"
    },
    {
      "type": "function",
      "name": "errors",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py",
      "line_number": 587,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [
        "property"
      ],
      "inheritance": [],
      "calls": [
        "getattr"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:errors"
    },
    {
      "type": "function",
      "name": "fileno",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py",
      "line_number": 591,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [
        "property"
      ],
      "inheritance": [],
      "calls": [
        "getattr"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:fileno"
    },
    {
      "type": "function",
      "name": "isatty",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py",
      "line_number": 594,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "getattr"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:isatty"
    },
    {
      "type": "function",
      "name": "mode",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py",
      "line_number": 598,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [
        "property"
      ],
      "inheritance": [],
      "calls": [
        "getattr"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:mode"
    },
    {
      "type": "function",
      "name": "name",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py",
      "line_number": 602,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [
        "property"
      ],
      "inheritance": [],
      "calls": [
        "getattr"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:name"
    },
    {
      "type": "function",
      "name": "create_test_agent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py",
      "line_number": 23,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u6d4b\u8bd5\u7528\u7684MultiStepAgent_v2\u5b9e\u4f8b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "RegisteredAgent",
        "MultiStepAgent_v2",
        "Agent"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py:create_test_agent"
    },
    {
      "type": "function",
      "name": "test_error_handler_initialization",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py",
      "line_number": 41,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u9519\u8bef\u5904\u7406\u673a\u5236\u521d\u59cb\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "create_test_agent",
        "hasattr",
        "isinstance",
        "hasattr",
        "agent.get_error_statistics",
        "print",
        "print",
        "traceback.print_exc"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py:test_error_handler_initialization"
    },
    {
      "type": "function",
      "name": "test_error_classification",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py",
      "line_number": 66,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u9519\u8bef\u5206\u7c7b\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "create_test_agent",
        "print",
        "FileNotFoundError",
        "PermissionError",
        "TimeoutError",
        "ConnectionError",
        "ValueError",
        "Exception",
        "dispatcher.classify_error",
        "print",
        "print",
        "traceback.print_exc",
        "type",
        "type"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py:test_error_classification"
    },
    {
      "type": "function",
      "name": "test_error_handling_workflow",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py",
      "line_number": 97,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u9519\u8bef\u5904\u7406\u5de5\u4f5c\u6d41",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "create_test_agent",
        "agent.get_error_statistics",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "dt.now",
        "FileNotFoundError",
        "PermissionError",
        "TimeoutError",
        "print",
        "agent.get_error_statistics",
        "agent._handle_workflow_error",
        "agent.get_error_statistics",
        "print",
        "len",
        "print",
        "traceback.print_exc",
        "type",
        "type"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py:test_error_handling_workflow"
    },
    {
      "type": "function",
      "name": "test_recovery_actions",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py",
      "line_number": 158,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6062\u590d\u52a8\u4f5c\u5e94\u7528",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "create_test_agent",
        "print",
        "print",
        "agent._apply_recovery_action",
        "print",
        "print",
        "traceback.print_exc",
        "context.get",
        "action.startswith",
        "context.get",
        "int",
        "context.get",
        "action.split"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py:test_recovery_actions"
    },
    {
      "type": "function",
      "name": "test_state_aware_error_handling",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py",
      "line_number": 198,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u72b6\u6001\u611f\u77e5\u7684\u9519\u8bef\u5904\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "create_test_agent",
        "agent.workflow_state.set_global_state",
        "FileNotFoundError",
        "print",
        "agent._handle_workflow_error",
        "agent.workflow_state.get_global_state",
        "print",
        "agent.workflow_state.get_state_history",
        "agent.get_error_statistics",
        "print",
        "len",
        "print",
        "traceback.print_exc"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py:test_state_aware_error_handling"
    },
    {
      "type": "function",
      "name": "test_error_statistics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py",
      "line_number": 247,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u9519\u8bef\u7edf\u8ba1\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "create_test_agent",
        "agent.get_error_statistics",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "stats['error_types'].items",
        "agent.reset_error_statistics",
        "agent.get_error_statistics",
        "print",
        "FileNotFoundError",
        "FileNotFoundError",
        "PermissionError",
        "TimeoutError",
        "agent._handle_workflow_error",
        "print",
        "len",
        "len",
        "print",
        "traceback.print_exc"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py:test_error_statistics"
    },
    {
      "type": "function",
      "name": "run_all_tests",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py",
      "line_number": 303,
      "complexity": 1,
      "docstring": "\u8fd0\u884c\u6240\u6709\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "test_func",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py:run_all_tests"
    },
    {
      "type": "function",
      "name": "test_agent_parser_initialization",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_enhanced_agent_parser_fix.py",
      "line_number": 20,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5Agent\u4e2d\u89e3\u6790\u5668\u521d\u59cb\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "enumerate",
        "print",
        "print",
        "print",
        "print",
        "hasattr",
        "parser_config.get",
        "ParserFactory.create_transformer_parser",
        "print",
        "print",
        "traceback.print_exc",
        "parser_config.get",
        "ParserFactory.create_embedding_parser",
        "parser_config.items",
        "parser_config.get",
        "parser_config.get",
        "ParserFactory.create_deepseek_parser",
        "print",
        "print",
        "print",
        "print",
        "parser_config.items",
        "parser_config.items"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_enhanced_agent_parser_fix.py:test_agent_parser_initialization"
    },
    {
      "type": "function",
      "name": "test_agent_parser_with_old_method",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_enhanced_agent_parser_fix.py",
      "line_number": 116,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u4f7f\u7528\u65e7\u65b9\u6cd5\uff08\u5e94\u8be5\u5931\u8d25\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "parser_config.get",
        "ParserFactory.create_transformer_parser",
        "print",
        "print",
        "str",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_enhanced_agent_parser_fix.py:test_agent_parser_with_old_method"
    },
    {
      "type": "function",
      "name": "create_mock_llm_with_states",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_global_state_integration.py",
      "line_number": 26,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u5177\u6709\u72b6\u6001\u66f4\u65b0\u80fd\u529b\u7684\u6a21\u62dfLLM",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Mock",
        "Mock",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_global_state_integration.py:create_mock_llm_with_states"
    },
    {
      "type": "function",
      "name": "test_global_state_integration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_global_state_integration.py",
      "line_number": 56,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5168\u5c40\u72b6\u6001\u4e0e\u589e\u5f3a\u6307\u4ee4\u7684\u5b8c\u6574\u96c6\u6210",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "create_mock_llm_with_states",
        "WorkflowDefinition",
        "MultiStepAgent_v3",
        "WorkflowExecutionContext",
        "agent.workflow_engine.execution_context.update_global_state",
        "print",
        "print",
        "enumerate",
        "print",
        "print",
        "print",
        "agent._build_enhanced_instruction",
        "print",
        "instruction.split",
        "WorkflowMetadata",
        "len",
        "StepExecution",
        "agent.workflow_engine._update_global_state",
        "print",
        "agent.workflow_engine.get_current_global_state",
        "print",
        "WorkflowStep",
        "WorkflowStep",
        "WorkflowStep",
        "line.startswith",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_global_state_integration.py:test_global_state_integration"
    },
    {
      "type": "function",
      "name": "test_state_continuity",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_global_state_integration.py",
      "line_number": 151,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u72b6\u6001\u7684\u8fde\u7eed\u6027\u548c\u4e00\u81f4\u6027",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "create_mock_llm_with_states",
        "MultiStepAgent_v3",
        "WorkflowDefinition",
        "WorkflowExecutionContext",
        "print",
        "enumerate",
        "agent.workflow_engine.execution_context.get_state_history",
        "print",
        "enumerate",
        "print",
        "zip",
        "agent.workflow_engine.execution_context.update_global_state",
        "agent._build_enhanced_instruction",
        "print",
        "print",
        "print",
        "print",
        "WorkflowMetadata",
        "WorkflowStep",
        "WorkflowStep",
        "WorkflowStep",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_global_state_integration.py:test_state_continuity"
    },
    {
      "type": "function",
      "name": "test_error_handling",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_global_state_integration.py",
      "line_number": 200,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u9519\u8bef\u5904\u7406\u60c5\u51b5\u4e0b\u7684\u72b6\u6001\u7ba1\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "MultiStepAgent_v3",
        "WorkflowDefinition",
        "WorkflowExecutionContext",
        "agent.workflow_engine.execution_context.update_global_state",
        "agent._build_enhanced_instruction",
        "print",
        "print",
        "print",
        "print",
        "print",
        "WorkflowMetadata",
        "WorkflowStep",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_global_state_integration.py:test_error_handling"
    },
    {
      "type": "function",
      "name": "main",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_global_state_integration.py",
      "line_number": 235,
      "complexity": 1,
      "docstring": "\u4e3b\u6d4b\u8bd5\u51fd\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "test_global_state_integration",
        "test_state_continuity",
        "test_error_handling",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "traceback.print_exc"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_global_state_integration.py:main"
    },
    {
      "type": "function",
      "name": "mock_invoke",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_global_state_integration.py",
      "line_number": 42,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "messages"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Mock",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_global_state_integration.py:mock_invoke"
    },
    {
      "type": "class",
      "name": "StateHistoryConfig",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/config_system.py",
      "line_number": 19,
      "complexity": 1,
      "docstring": "Configuration for state history management",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/config_system.py:StateHistoryConfig"
    },
    {
      "type": "class",
      "name": "AIUpdaterConfig",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/config_system.py",
      "line_number": 28,
      "complexity": 1,
      "docstring": "Configuration for AI updater settings",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/config_system.py:AIUpdaterConfig"
    },
    {
      "type": "class",
      "name": "MonitoringConfig",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/config_system.py",
      "line_number": 44,
      "complexity": 1,
      "docstring": "Configuration for monitoring and logging",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/config_system.py:MonitoringConfig"
    },
    {
      "type": "class",
      "name": "OptimizationConfig",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/config_system.py",
      "line_number": 56,
      "complexity": 1,
      "docstring": "Configuration for performance optimization",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/config_system.py:OptimizationConfig"
    },
    {
      "type": "class",
      "name": "ApplicationConfig",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/config_system.py",
      "line_number": 67,
      "complexity": 1,
      "docstring": "Main application configuration",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/config_system.py:ApplicationConfig"
    },
    {
      "type": "class",
      "name": "ConfigurationError",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/config_system.py",
      "line_number": 79,
      "complexity": 1,
      "docstring": "Configuration related errors",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Exception"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/config_system.py:ConfigurationError"
    },
    {
      "type": "class",
      "name": "ConfigurationLoader",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/config_system.py",
      "line_number": 83,
      "complexity": 1,
      "docstring": "Configuration file loader with validation and type safety",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "load_config",
        "get_config",
        "reload_config",
        "save_config",
        "_find_config_file",
        "_load_config_file",
        "_parse_config_data",
        "_parse_state_history_config",
        "_parse_ai_updater_config",
        "_parse_monitoring_config",
        "_parse_optimization_config",
        "_config_to_dict"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/config_system.py:ConfigurationLoader"
    },
    {
      "type": "function",
      "name": "get_config_loader",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/config_system.py",
      "line_number": 351,
      "complexity": 1,
      "docstring": "Get global configuration loader instance",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "ConfigurationLoader"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/config_system.py:get_config_loader"
    },
    {
      "type": "function",
      "name": "get_config",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/config_system.py",
      "line_number": 145,
      "complexity": 1,
      "docstring": "Get current configuration\n\nReturns:\n    ApplicationConfig object\n    \nRaises:\n    ConfigurationError: If configuration not loaded",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.load_config"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/config_system.py:get_config"
    },
    {
      "type": "function",
      "name": "reload_config",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/config_system.py",
      "line_number": 159,
      "complexity": 1,
      "docstring": "Reload configuration from file\n\nReturns:\n    ApplicationConfig object",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.load_config"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/config_system.py:reload_config"
    },
    {
      "type": "function",
      "name": "initialize_config",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/config_system.py",
      "line_number": 373,
      "complexity": 1,
      "docstring": "Initialize configuration system",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "config_path"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "ConfigurationLoader",
        "_global_config_loader.load_config"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/config_system.py:initialize_config"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/config_system.py",
      "line_number": 95,
      "complexity": 1,
      "docstring": "Initialize configuration loader\n\nArgs:\n    config_path: Optional path to configuration file",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "config_path"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/config_system.py:__init__"
    },
    {
      "type": "function",
      "name": "load_config",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/config_system.py",
      "line_number": 106,
      "complexity": 1,
      "docstring": "Load configuration from file\n\nArgs:\n    config_path: Optional path to configuration file\n    \nReturns:\n    ApplicationConfig object\n    \nRaises:\n    ConfigurationError: If configuration cannot be loaded or is invalid",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "config_path"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._find_config_file",
        "logger.warning",
        "ApplicationConfig",
        "self._load_config_file",
        "self._parse_config_data",
        "logger.info",
        "ConfigurationError",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/config_system.py:load_config"
    },
    {
      "type": "function",
      "name": "save_config",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/config_system.py",
      "line_number": 170,
      "complexity": 1,
      "docstring": "Save configuration to file\n\nArgs:\n    config: Configuration to save\n    output_path: Optional output path",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "config",
        "output_path"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._config_to_dict",
        "output_path.endswith",
        "logger.info",
        "output_path.endswith",
        "ConfigurationError",
        "open",
        "yaml.dump",
        "ConfigurationError",
        "open",
        "json.dump",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/config_system.py:save_config"
    },
    {
      "type": "function",
      "name": "_find_config_file",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/config_system.py",
      "line_number": 200,
      "complexity": 1,
      "docstring": "Find configuration file",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "os.path.exists",
        "os.path.exists"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/config_system.py:_find_config_file"
    },
    {
      "type": "function",
      "name": "_load_config_file",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/config_system.py",
      "line_number": 211,
      "complexity": 1,
      "docstring": "Load configuration file content",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "config_path"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "open",
        "config_path.endswith",
        "ConfigurationError",
        "config_path.endswith",
        "yaml.safe_load",
        "ConfigurationError",
        "json.load",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/config_system.py:_load_config_file"
    },
    {
      "type": "function",
      "name": "_parse_config_data",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/config_system.py",
      "line_number": 224,
      "complexity": 1,
      "docstring": "Parse configuration data into ApplicationConfig",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "config_data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "config_data.get",
        "config_data.get",
        "config_data.get",
        "config_data.get",
        "ApplicationConfig",
        "ConfigurationError",
        "self._parse_state_history_config",
        "self._parse_ai_updater_config",
        "self._parse_monitoring_config",
        "self._parse_optimization_config",
        "config_data.get",
        "config_data.get",
        "config_data.get",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/config_system.py:_parse_config_data"
    },
    {
      "type": "function",
      "name": "_parse_state_history_config",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/config_system.py",
      "line_number": 249,
      "complexity": 1,
      "docstring": "Parse state history configuration",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "StateHistoryConfig",
        "data.get",
        "data.get",
        "data.get",
        "data.get",
        "data.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/config_system.py:_parse_state_history_config"
    },
    {
      "type": "function",
      "name": "_parse_ai_updater_config",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/config_system.py",
      "line_number": 259,
      "complexity": 1,
      "docstring": "Parse AI updater configuration",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "AIUpdaterConfig",
        "data.get",
        "data.get",
        "data.get",
        "data.get",
        "data.get",
        "data.get",
        "data.get",
        "data.get",
        "data.get",
        "data.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/config_system.py:_parse_ai_updater_config"
    },
    {
      "type": "function",
      "name": "_parse_monitoring_config",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/config_system.py",
      "line_number": 276,
      "complexity": 1,
      "docstring": "Parse monitoring configuration",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "MonitoringConfig",
        "data.get",
        "data.get",
        "data.get",
        "data.get",
        "data.get",
        "data.get",
        "data.get",
        "data.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/config_system.py:_parse_monitoring_config"
    },
    {
      "type": "function",
      "name": "_parse_optimization_config",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/config_system.py",
      "line_number": 289,
      "complexity": 1,
      "docstring": "Parse optimization configuration",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "OptimizationConfig",
        "data.get",
        "data.get",
        "data.get",
        "data.get",
        "data.get",
        "data.get",
        "data.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/config_system.py:_parse_optimization_config"
    },
    {
      "type": "function",
      "name": "_config_to_dict",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/config_system.py",
      "line_number": 301,
      "complexity": 1,
      "docstring": "Convert ApplicationConfig to dictionary",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "config"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/config_system.py:_config_to_dict"
    },
    {
      "type": "class",
      "name": "TestCalculator",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_calculator.py",
      "line_number": 37,
      "complexity": 1,
      "docstring": "Unit tests for the Calculator class.",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "tearDown",
        "test_add",
        "test_subtract",
        "test_multiply",
        "test_divide",
        "test_divide_by_zero"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_calculator.py:TestCalculator"
    },
    {
      "type": "function",
      "name": "setUp",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_calculator.py",
      "line_number": 42,
      "complexity": 1,
      "docstring": "Set up for test methods.",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Calculator",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_calculator.py:setUp"
    },
    {
      "type": "function",
      "name": "tearDown",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_calculator.py",
      "line_number": 47,
      "complexity": 1,
      "docstring": "Clean up after test methods.",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_calculator.py:tearDown"
    },
    {
      "type": "function",
      "name": "test_add",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_calculator.py",
      "line_number": 51,
      "complexity": 1,
      "docstring": "Test the add method.",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "print",
        "self.calc.add",
        "self.calc.add",
        "self.calc.add",
        "self.calc.add",
        "self.calc.add"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_calculator.py:test_add"
    },
    {
      "type": "function",
      "name": "test_subtract",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_calculator.py",
      "line_number": 61,
      "complexity": 1,
      "docstring": "Test the subtract method.",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "print",
        "self.calc.subtract",
        "self.calc.subtract",
        "self.calc.subtract",
        "self.calc.subtract",
        "self.calc.subtract"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_calculator.py:test_subtract"
    },
    {
      "type": "function",
      "name": "test_multiply",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_calculator.py",
      "line_number": 71,
      "complexity": 1,
      "docstring": "Test the multiply method.",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "print",
        "self.calc.multiply",
        "self.calc.multiply",
        "self.calc.multiply",
        "self.calc.multiply",
        "self.calc.multiply"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_calculator.py:test_multiply"
    },
    {
      "type": "function",
      "name": "test_divide",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_calculator.py",
      "line_number": 81,
      "complexity": 1,
      "docstring": "Test the divide method for valid cases.",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "print",
        "self.calc.divide",
        "self.calc.divide",
        "self.calc.divide",
        "self.calc.divide",
        "self.calc.divide",
        "self.calc.divide"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_calculator.py:test_divide"
    },
    {
      "type": "function",
      "name": "test_divide_by_zero",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_calculator.py",
      "line_number": 92,
      "complexity": 1,
      "docstring": "Test the divide method for division by zero error.",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "self.assertRaisesRegex",
        "self.calc.divide"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_calculator.py:test_divide_by_zero"
    },
    {
      "type": "function",
      "name": "test_workflow_generation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_workflow_fix.py",
      "line_number": 27,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5de5\u4f5c\u6d41\u751f\u6210\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "os.getenv",
        "print",
        "print",
        "ChatOpenAI",
        "print",
        "Agent",
        "Agent",
        "print",
        "MultiStepAgent_v3",
        "print",
        "agent_v3._generate_workflow_plan",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "workflow_definition.validate",
        "print",
        "print",
        "print",
        "print",
        "getattr",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "traceback.print_exc",
        "os.getenv",
        "print",
        "getattr",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "RegisteredAgent",
        "RegisteredAgent",
        "len",
        "getattr",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "step.name.lower",
        "step.instruction.lower",
        "getattr",
        "print",
        "print",
        "getattr",
        "step.name.lower",
        "step.instruction.lower",
        "getattr",
        "getattr",
        "getattr",
        "getattr"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_workflow_fix.py:test_workflow_generation"
    },
    {
      "type": "function",
      "name": "main",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_workflow_fix.py",
      "line_number": 180,
      "complexity": 1,
      "docstring": "\u4e3b\u51fd\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "test_workflow_generation",
        "print",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_workflow_fix.py:main"
    },
    {
      "type": "function",
      "name": "create_deepseek_llm",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_status_fix.py",
      "line_number": 29,
      "complexity": 1,
      "docstring": "\u521b\u5efa DeepSeek LLM \u5ba2\u6237\u7aef",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "os.getenv",
        "ChatOpenAI",
        "ValueError"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_status_fix.py:create_deepseek_llm"
    },
    {
      "type": "function",
      "name": "create_test_agents",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_status_fix.py",
      "line_number": 44,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u6d4b\u8bd5\u667a\u80fd\u4f53",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "create_deepseek_llm",
        "Agent",
        "Agent",
        "AgentSpecification",
        "AgentSpecification"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_status_fix.py:create_test_agents"
    },
    {
      "type": "function",
      "name": "test_status_management_fix",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_status_fix.py",
      "line_number": 62,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u72b6\u6001\u7ba1\u7406\u4fee\u590d",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "Path",
        "test_project_dir.mkdir",
        "print",
        "print",
        "create_deepseek_llm",
        "create_test_agents",
        "print",
        "TaskMasterAgent",
        "print",
        "tm_agent.tm_client.clear_all_tasks",
        "print",
        "tm_agent.get_project_status",
        "print",
        "print",
        "tm_agent.tm_client.add_task",
        "print",
        "print",
        "tm_agent.get_project_status",
        "print",
        "tm_agent.tm_client.get_tasks",
        "print",
        "tm_agent.get_project_status",
        "print",
        "print",
        "tasks_file.exists",
        "print",
        "main_task.get",
        "print",
        "print",
        "tm_agent.tm_client.set_task_status",
        "main_task.get",
        "tm_agent.tm_client.set_task_status",
        "print",
        "tasks_data.get('master', {}).get",
        "print",
        "print",
        "status_breakdown.get",
        "logger.error",
        "print",
        "traceback.print_exc",
        "str",
        "str",
        "print",
        "str",
        "open",
        "json.load",
        "all_tasks.append",
        "task.get",
        "task.get",
        "print",
        "print",
        "print",
        "test_project_dir.resolve",
        "task_result.get",
        "subtask.get",
        "print",
        "tm_agent.tm_client.set_task_status",
        "print",
        "tm_agent.tm_client.set_task_status",
        "print",
        "tasks_data.get",
        "all_tasks.append",
        "status_breakdown.get",
        "str",
        "str",
        "len",
        "task.get",
        "print",
        "len",
        "task.get",
        "task.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_status_fix.py:test_status_management_fix"
    },
    {
      "type": "function",
      "name": "check_model_cache_directories",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/check_model_cache.py",
      "line_number": 10,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u6a21\u578b\u7f13\u5b58\u76ee\u5f55",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "os.environ.get",
        "print",
        "os.environ.get",
        "print",
        "print",
        "print",
        "print",
        "os.path.exists",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "os.path.abspath",
        "os.path.exists",
        "print",
        "print",
        "os.walk",
        "print",
        "print",
        "print",
        "os.path.join",
        "os.path.exists",
        "print",
        "os.listdir",
        "print",
        "sum",
        "print",
        "os.path.exists",
        "os.path.join",
        "os.path.isdir",
        "os.path.exists",
        "os.path.exists",
        "print",
        "os.path.getsize",
        "os.path.join",
        "print",
        "os.path.getsize",
        "os.path.join",
        "os.walk"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/check_model_cache.py:check_model_cache_directories"
    },
    {
      "type": "function",
      "name": "show_cache_configuration_examples",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/check_model_cache.py",
      "line_number": 86,
      "complexity": 1,
      "docstring": "\u663e\u793a\u7f13\u5b58\u914d\u7f6e\u793a\u4f8b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/check_model_cache.py:show_cache_configuration_examples"
    },
    {
      "type": "function",
      "name": "show_model_size_info",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/check_model_cache.py",
      "line_number": 126,
      "complexity": 1,
      "docstring": "\u663e\u793a\u6a21\u578b\u5927\u5c0f\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/check_model_cache.py:show_model_size_info"
    },
    {
      "type": "class",
      "name": "PerformanceProfiler",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_performance_load.py",
      "line_number": 23,
      "complexity": 1,
      "docstring": "\u6027\u80fd\u5206\u6790\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "start_measurement",
        "end_measurement",
        "get_statistics"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_performance_load.py:PerformanceProfiler"
    },
    {
      "type": "function",
      "name": "test_state_operation_latency",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_performance_load.py",
      "line_number": 99,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u72b6\u6001\u64cd\u4f5c\u5ef6\u8fdf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "PerformanceProfiler",
        "WorkflowState",
        "print",
        "range",
        "print",
        "range",
        "print",
        "range",
        "profiler.start_measurement",
        "workflow_state.set_global_state",
        "profiler.end_measurement",
        "profiler.start_measurement",
        "workflow_state.get_global_state",
        "profiler.end_measurement",
        "profiler.start_measurement",
        "workflow_state.get_state_history",
        "profiler.end_measurement",
        "profiler.get_statistics",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_performance_load.py:test_state_operation_latency"
    },
    {
      "type": "function",
      "name": "test_ai_updater_latency",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_performance_load.py",
      "line_number": 146,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5AI\u66f4\u65b0\u5668\u5ef6\u8fdf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "PerformanceProfiler",
        "WorkflowState",
        "AIStateUpdaterService",
        "print",
        "enumerate",
        "profiler.get_statistics",
        "profiler.start_measurement",
        "profiler.end_measurement",
        "time.sleep",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "range",
        "ai_updater.update_state",
        "workflow_state.set_global_state",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_performance_load.py:test_ai_updater_latency"
    },
    {
      "type": "function",
      "name": "test_memory_overhead",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_performance_load.py",
      "line_number": 197,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5185\u5b58\u5f00\u9500",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "PerformanceProfiler",
        "gc.collect",
        "print",
        "WorkflowState",
        "print",
        "workflow_state.clear_state_history",
        "workflow_state.clear_global_state",
        "gc.collect",
        "range",
        "gc.collect",
        "memory_points.append",
        "print",
        "len",
        "len",
        "sum",
        "sum",
        "sum",
        "sum",
        "print",
        "workflow_state.set_global_state",
        "profiler.process.memory_info",
        "profiler.process.memory_info",
        "profiler.process.memory_info",
        "zip"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_performance_load.py:test_memory_overhead"
    },
    {
      "type": "function",
      "name": "test_concurrent_load",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_performance_load.py",
      "line_number": 255,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5e76\u53d1\u8d1f\u8f7d",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "PerformanceProfiler",
        "WorkflowState",
        "range",
        "print",
        "time.perf_counter",
        "time.perf_counter",
        "print",
        "print",
        "print",
        "print",
        "print",
        "time.perf_counter",
        "time.perf_counter",
        "thread_times.append",
        "concurrent.futures.ThreadPoolExecutor",
        "concurrent.futures.as_completed",
        "print",
        "print",
        "print",
        "print",
        "workflow_state.set_global_state",
        "executor.submit",
        "future.result",
        "all_times.extend",
        "workflow_state.get_global_state",
        "workflow_state.get_state_history",
        "profiler.process.memory_info",
        "range",
        "profiler.process.memory_info",
        "statistics.mean",
        "statistics.median",
        "sorted",
        "int",
        "sorted",
        "int",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_performance_load.py:test_concurrent_load"
    },
    {
      "type": "function",
      "name": "test_state_history_scalability",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_performance_load.py",
      "line_number": 331,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u72b6\u6001\u5386\u53f2\u53ef\u6269\u5c55\u6027",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "PerformanceProfiler",
        "print",
        "WorkflowState",
        "workflow_state.set_max_history_size",
        "range",
        "range",
        "workflow_state.set_global_state",
        "profiler.start_measurement",
        "workflow_state.set_global_state",
        "profiler.end_measurement",
        "times.append",
        "print",
        "print",
        "range",
        "print",
        "print",
        "time.perf_counter",
        "workflow_state.get_state_history",
        "time.perf_counter",
        "history_times.append",
        "len",
        "statistics.mean",
        "max",
        "statistics.mean",
        "workflow_state.get_state_history"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_performance_load.py:test_state_history_scalability"
    },
    {
      "type": "function",
      "name": "generate_performance_report",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_performance_load.py",
      "line_number": 377,
      "complexity": 1,
      "docstring": "\u751f\u6210\u6027\u80fd\u62a5\u544a",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "test_state_operation_latency",
        "test_ai_updater_latency",
        "test_memory_overhead",
        "test_concurrent_load",
        "test_state_history_scalability",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "traceback.print_exc",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_performance_load.py:generate_performance_report"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_performance_load.py",
      "line_number": 26,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "psutil.Process"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_performance_load.py:__init__"
    },
    {
      "type": "function",
      "name": "start_measurement",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_performance_load.py",
      "line_number": 30,
      "complexity": 1,
      "docstring": "\u5f00\u59cb\u6d4b\u91cf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "test_name"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "time.perf_counter",
        "self.process.cpu_percent",
        "self.process.memory_info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_performance_load.py:start_measurement"
    },
    {
      "type": "function",
      "name": "end_measurement",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_performance_load.py",
      "line_number": 45,
      "complexity": 1,
      "docstring": "\u7ed3\u675f\u6d4b\u91cf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "test_name",
        "start_data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "time.perf_counter",
        "self.process.cpu_percent",
        "self.measurements[test_name]['times'].append",
        "self.measurements[test_name]['memory_usage'].append",
        "self.measurements[test_name]['cpu_usage'].append",
        "self.process.memory_info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_performance_load.py:end_measurement"
    },
    {
      "type": "function",
      "name": "get_statistics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_performance_load.py",
      "line_number": 64,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "test_name"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "statistics.mean",
        "statistics.median",
        "min",
        "max",
        "statistics.mean",
        "statistics.median",
        "min",
        "max",
        "statistics.mean",
        "statistics.median",
        "max",
        "statistics.stdev",
        "statistics.stdev",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_performance_load.py:get_statistics"
    },
    {
      "type": "function",
      "name": "worker_thread",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_performance_load.py",
      "line_number": 266,
      "complexity": 1,
      "docstring": "\u5de5\u4f5c\u7ebf\u7a0b\u51fd\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "thread_id",
        "operations_per_thread"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "range",
        "time.perf_counter",
        "time.perf_counter",
        "thread_times.append",
        "workflow_state.set_global_state",
        "workflow_state.get_global_state",
        "workflow_state.get_state_history"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_performance_load.py:worker_thread"
    },
    {
      "type": "function",
      "name": "debug_workflow_steps",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/debug_workflow_steps.py",
      "line_number": 18,
      "complexity": 1,
      "docstring": "\u8c03\u8bd5\u5de5\u4f5c\u6d41\u6b65\u9aa4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "ChatOpenAI",
        "Agent",
        "Agent",
        "MultiStepAgent_v3",
        "agent_v3._generate_workflow_plan",
        "print",
        "print",
        "enumerate",
        "print",
        "os.getenv",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "os.getenv",
        "print",
        "print",
        "print",
        "print",
        "RegisteredAgent",
        "RegisteredAgent",
        "len",
        "print",
        "print",
        "getattr",
        "print",
        "print",
        "print",
        "print",
        "print",
        "step.name.lower",
        "step.instruction.lower",
        "print",
        "getattr",
        "getattr"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/debug_workflow_steps.py:debug_workflow_steps"
    },
    {
      "type": "class",
      "name": "AgentSpecification",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py",
      "line_number": 25,
      "complexity": 1,
      "docstring": "\u5b58\u50a8 Agent \u5143\u6570\u636e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py:AgentSpecification"
    },
    {
      "type": "class",
      "name": "WorkflowState",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py",
      "line_number": 32,
      "complexity": 1,
      "docstring": "\u5de5\u4f5c\u6d41\u72b6\u6001\u7ba1\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "should_break_loop",
        "increment_loop_counter",
        "reset_step_status_from"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py:WorkflowState"
    },
    {
      "type": "class",
      "name": "MultiStepAgent_v2",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py",
      "line_number": 59,
      "complexity": 1,
      "docstring": "\u91cd\u6784\u540e\u7684\u591a\u6b65\u9aa4\u667a\u80fd\u4f53\uff1aexecute_multi_step \u65b9\u6cd5\u88ab\u62c6\u5206\u4e3a\u591a\u4e2a\u5c0f\u65b9\u6cd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "execute_multi_step",
        "_initialize_execution_context",
        "_should_continue_execution",
        "_execute_workflow_iteration",
        "_handle_no_executable_steps",
        "_process_no_steps_decision",
        "_execute_single_workflow_step",
        "_handle_step_success",
        "_handle_step_failure",
        "_process_success_decision",
        "_process_failure_decision",
        "_handle_generate_new_task_decision",
        "_handle_navigation_decision",
        "_handle_fix_task_decision",
        "_execute_fix_task",
        "_handle_retry_logic",
        "_record_failure_information",
        "_check_user_interrupt",
        "_clear_failure_records",
        "_add_new_tasks",
        "_handle_workflow_error",
        "_generate_execution_summary",
        "register_agent",
        "get_plan",
        "update_step_status"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Agent"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py:MultiStepAgent_v2"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py",
      "line_number": 64,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "llm",
        "agent_specs",
        "max_retries",
        "thinker_system_message",
        "thinker_chat_system_message",
        "planning_prompt_template",
        "use_autonomous_planning"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "super().__init__",
        "StatefulExecutor",
        "self.device.set_variable",
        "WorkflowState",
        "self.device.set_variable",
        "super"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py:__init__"
    },
    {
      "type": "function",
      "name": "should_break_loop",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py",
      "line_number": 43,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u662f\u5426\u5e94\u8be5\u9000\u51fa\u5faa\u73af\uff08\u9632\u6b62\u65e0\u9650\u5faa\u73af\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "target_step_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.loop_counters.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py:should_break_loop"
    },
    {
      "type": "function",
      "name": "increment_loop_counter",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py",
      "line_number": 48,
      "complexity": 1,
      "docstring": "\u589e\u52a0\u5faa\u73af\u8ba1\u6570\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "target_step_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.loop_counters.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py:increment_loop_counter"
    },
    {
      "type": "function",
      "name": "reset_step_status_from",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py",
      "line_number": 53,
      "complexity": 1,
      "docstring": "\u91cd\u7f6e\u4ece\u6307\u5b9a\u7d22\u5f15\u5f00\u59cb\u7684\u6b65\u9aa4\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "start_index",
        "plan"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "range",
        "len",
        "plan[i].get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py:reset_step_status_from"
    },
    {
      "type": "function",
      "name": "execute_multi_step",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py",
      "line_number": 107,
      "complexity": 1,
      "docstring": "\u4e3b\u5165\u53e3\uff1a\u89c4\u5212\u5e76\u6267\u884c\u591a\u6b65\u9aa4\u4efb\u52a1 - \u91cd\u6784\u540e\u7684\u7b80\u5316\u7248\u672c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "main_instruction",
        "interactive"
      ],
      "decorators": [
        "reduce_memory_decorator"
      ],
      "inheritance": [],
      "calls": [
        "self._initialize_execution_context",
        "self._should_continue_execution",
        "self._generate_execution_summary",
        "self._execute_workflow_iteration",
        "logger.error",
        "self._handle_workflow_error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py:execute_multi_step"
    },
    {
      "type": "function",
      "name": "_initialize_execution_context",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py",
      "line_number": 128,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u6267\u884c\u4e0a\u4e0b\u6587",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "main_instruction"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "WorkflowState",
        "self.device.set_variable",
        "self.plan_execution"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py:_initialize_execution_context"
    },
    {
      "type": "function",
      "name": "_should_continue_execution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py",
      "line_number": 151,
      "complexity": 1,
      "docstring": "\u5224\u65ad\u662f\u5426\u5e94\u8be5\u7ee7\u7eed\u6267\u884c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py:_should_continue_execution"
    },
    {
      "type": "function",
      "name": "_execute_workflow_iteration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py",
      "line_number": 156,
      "complexity": 1,
      "docstring": "\u6267\u884c\u4e00\u4e2a\u5de5\u4f5c\u6d41\u8fed\u4ee3\n\nReturns:\n    bool: \u662f\u5426\u5e94\u8be5\u8df3\u51fa\u4e3b\u5faa\u73af",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context",
        "interactive"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_plan",
        "self.select_next_executable_step",
        "self._execute_single_workflow_step",
        "self._handle_no_executable_steps",
        "self._check_user_interrupt"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py:_execute_workflow_iteration"
    },
    {
      "type": "function",
      "name": "_handle_no_executable_steps",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py",
      "line_number": 187,
      "complexity": 1,
      "docstring": "\u5904\u7406\u6ca1\u6709\u53ef\u6267\u884c\u6b65\u9aa4\u7684\u60c5\u51b5\n\nReturns:\n    bool: \u662f\u5426\u5e94\u8be5\u8df3\u51fa\u4e3b\u5faa\u73af",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.make_decision",
        "print",
        "print",
        "self._process_no_steps_decision",
        "context['task_history'][-1].get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py:_handle_no_executable_steps"
    },
    {
      "type": "function",
      "name": "_process_no_steps_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py",
      "line_number": 212,
      "complexity": 1,
      "docstring": "\u5904\u7406\u6ca1\u6709\u53ef\u6267\u884c\u6b65\u9aa4\u65f6\u7684\u51b3\u7b56\u7ed3\u679c\n\nReturns:\n    bool: \u662f\u5426\u5e94\u8be5\u8df3\u51fa\u4e3b\u5faa\u73af",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decision",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._clear_failure_records",
        "decision.get",
        "self._add_new_tasks",
        "self.get_plan",
        "decision.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py:_process_no_steps_decision"
    },
    {
      "type": "function",
      "name": "_execute_single_workflow_step",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py",
      "line_number": 236,
      "complexity": 1,
      "docstring": "\u6267\u884c\u5355\u4e2a\u5de5\u4f5c\u6d41\u6b65\u9aa4\n\nReturns:\n    bool: \u662f\u5426\u5e94\u8be5\u8df3\u51fa\u4e3b\u5faa\u73af",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_idx",
        "current_step",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "self.update_step_status",
        "self.execute_single_step",
        "context['task_history'].append",
        "self._handle_step_success",
        "self._handle_step_failure",
        "dt.now().isoformat",
        "len",
        "current_step.get",
        "dt.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py:_execute_single_workflow_step"
    },
    {
      "type": "function",
      "name": "_handle_step_success",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py",
      "line_number": 267,
      "complexity": 1,
      "docstring": "\u5904\u7406\u6b65\u9aa4\u6267\u884c\u6210\u529f\u7684\u60c5\u51b5\n\nReturns:\n    bool: \u662f\u5426\u5e94\u8be5\u8df3\u51fa\u4e3b\u5faa\u73af",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_idx",
        "exec_result",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.update_step_status",
        "self.make_decision",
        "print",
        "print",
        "self._process_success_decision"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py:_handle_step_success"
    },
    {
      "type": "function",
      "name": "_handle_step_failure",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py",
      "line_number": 290,
      "complexity": 1,
      "docstring": "\u5904\u7406\u6b65\u9aa4\u6267\u884c\u5931\u8d25\u7684\u60c5\u51b5\n\nReturns:\n    bool: \u662f\u5426\u5e94\u8be5\u8df3\u51fa\u4e3b\u5faa\u73af",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_idx",
        "current_step",
        "exec_result",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.update_step_status",
        "self.make_decision",
        "print",
        "print",
        "self._process_failure_decision",
        "current_step.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py:_handle_step_failure"
    },
    {
      "type": "function",
      "name": "_process_success_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py",
      "line_number": 315,
      "complexity": 1,
      "docstring": "\u5904\u7406\u6210\u529f\u540e\u7684\u51b3\u7b56\n\nReturns:\n    bool: \u662f\u5426\u5e94\u8be5\u8df3\u51fa\u4e3b\u5faa\u73af",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decision",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._clear_failure_records",
        "self._handle_generate_new_task_decision",
        "self._handle_navigation_decision",
        "self._handle_fix_task_decision"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py:_process_success_decision"
    },
    {
      "type": "function",
      "name": "_process_failure_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py",
      "line_number": 345,
      "complexity": 1,
      "docstring": "\u5904\u7406\u5931\u8d25\u540e\u7684\u51b3\u7b56\n\nReturns:\n    bool: \u662f\u5426\u5e94\u8be5\u8df3\u51fa\u4e3b\u5faa\u73af",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decision",
        "context",
        "current_idx"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.update_step_status",
        "self._handle_generate_new_task_decision",
        "self._handle_retry_logic"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py:_process_failure_decision"
    },
    {
      "type": "function",
      "name": "_handle_generate_new_task_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py",
      "line_number": 371,
      "complexity": 1,
      "docstring": "\u5904\u7406\u751f\u6210\u65b0\u4efb\u52a1\u7684\u51b3\u7b56",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decision",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "decision.get",
        "self._add_new_tasks",
        "self.get_plan"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py:_handle_generate_new_task_decision"
    },
    {
      "type": "function",
      "name": "_handle_navigation_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py",
      "line_number": 381,
      "complexity": 1,
      "docstring": "\u5904\u7406\u8df3\u8f6c\u548c\u5faa\u73af\u51b3\u7b56",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decision",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "decision.get",
        "logger.warning",
        "self.jump_to_step",
        "self.loop_back_to_step"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py:_handle_navigation_decision"
    },
    {
      "type": "function",
      "name": "_handle_fix_task_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py",
      "line_number": 403,
      "complexity": 1,
      "docstring": "\u5904\u7406\u4fee\u590d\u4efb\u52a1\u51b3\u7b56",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decision",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.handle_generate_fix_task_and_loop",
        "self._execute_fix_task"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py:_handle_fix_task_decision"
    },
    {
      "type": "function",
      "name": "_execute_fix_task",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py",
      "line_number": 413,
      "complexity": 1,
      "docstring": "\u6267\u884c\u4fee\u590d\u4efb\u52a1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decision",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_plan",
        "decision.get",
        "len",
        "print",
        "self.update_step_status",
        "self.execute_single_step",
        "context['task_history'].append",
        "self.loop_back_to_step",
        "self.update_step_status",
        "print",
        "self.update_step_status",
        "print",
        "dt.now().isoformat",
        "fix_task.get",
        "dt.now",
        "fix_task.get",
        "fix_task.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py:_execute_fix_task"
    },
    {
      "type": "function",
      "name": "_handle_retry_logic",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py",
      "line_number": 450,
      "complexity": 1,
      "docstring": "\u5904\u7406\u91cd\u8bd5\u903b\u8f91\n\nReturns:\n    bool: \u662f\u5426\u5e94\u8be5\u8df3\u51fa\u4e3b\u5faa\u73af",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._record_failure_information"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py:_handle_retry_logic"
    },
    {
      "type": "function",
      "name": "_record_failure_information",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py",
      "line_number": 469,
      "complexity": 1,
      "docstring": "\u8bb0\u5f55\u5931\u8d25\u4fe1\u606f\u4ee5\u4f9b\u4e0b\u6b21\u91cd\u8bd5\u53c2\u8003",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.device.set_variable",
        "self.device.set_variable",
        "self.device.set_variable",
        "step.get",
        "step.get",
        "step.get('result', {}).get",
        "json.dumps",
        "logger.warning",
        "step.get",
        "step.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py:_record_failure_information"
    },
    {
      "type": "function",
      "name": "_check_user_interrupt",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py",
      "line_number": 490,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u7528\u6237\u662f\u5426\u8981\u6c42\u4e2d\u65ad",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "input",
        "user_input.lower"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py:_check_user_interrupt"
    },
    {
      "type": "function",
      "name": "_clear_failure_records",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py",
      "line_number": 495,
      "complexity": 1,
      "docstring": "\u6e05\u9664\u5931\u8d25\u8bb0\u5f55",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.device.set_variable",
        "self.device.set_variable",
        "logger.warning"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py:_clear_failure_records"
    },
    {
      "type": "function",
      "name": "_add_new_tasks",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py",
      "line_number": 503,
      "complexity": 1,
      "docstring": "\u6dfb\u52a0\u65b0\u4efb\u52a1\u5230\u8ba1\u5212",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "new_tasks"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_plan",
        "self.device.set_variable",
        "print",
        "new_task.get",
        "plan.append",
        "json.dumps",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py:_add_new_tasks"
    },
    {
      "type": "function",
      "name": "_handle_workflow_error",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py",
      "line_number": 519,
      "complexity": 1,
      "docstring": "\u5904\u7406\u5de5\u4f5c\u6d41\u6267\u884c\u9519\u8bef",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context",
        "error"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.error",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py:_handle_workflow_error"
    },
    {
      "type": "function",
      "name": "_generate_execution_summary",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py",
      "line_number": 524,
      "complexity": 1,
      "docstring": "\u751f\u6210\u6700\u7ec8\u6267\u884c\u6458\u8981",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "len",
        "len",
        "len",
        "s.get",
        "s.get",
        "s.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py:_generate_execution_summary"
    },
    {
      "type": "function",
      "name": "register_agent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py",
      "line_number": 545,
      "complexity": 1,
      "docstring": "\u6ce8\u518c\u4e00\u4e2a\u65b0\u7684 Agent\u3002",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "name",
        "instance"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "getattr",
        "AgentSpecification",
        "self.agent_specs.append",
        "self.device.set_variable",
        "logger.debug"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py:register_agent"
    },
    {
      "type": "function",
      "name": "get_plan",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py",
      "line_number": 553,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u5f53\u524d\u8ba1\u5212",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.device.get_variable"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py:get_plan"
    },
    {
      "type": "function",
      "name": "update_step_status",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py",
      "line_number": 560,
      "complexity": 1,
      "docstring": "\u66f4\u65b0\u6b65\u9aa4\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step_index",
        "status",
        "result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_plan",
        "len",
        "self.device.set_variable"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py:update_step_status"
    },
    {
      "type": "function",
      "name": "llm_openrouter",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/aiTools.py",
      "line_number": 26,
      "complexity": 1,
      "docstring": "\u8fd4\u56de\u914d\u7f6e\u597d\u7684OpenRouter\u8bed\u8a00\u6a21\u578b\u5b9e\u4f8b\n\nArgs:\n    model: \u8981\u4f7f\u7528\u7684\u6a21\u578b\u540d\u79f0\uff0c\u9ed8\u8ba4\u4e3allama-4-maverick\n    \nReturns:\n    ChatOpenAI\u5b9e\u4f8b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "model"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "ChatOpenAI",
        "os.getenv"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/aiTools.py:llm_openrouter"
    },
    {
      "type": "function",
      "name": "search",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/aiTools.py",
      "line_number": 44,
      "complexity": 1,
      "docstring": "\u8c37\u6b4c\u641c\u7d22\n:param query:\u641c\u7d22\u5173\u952e\u8bcd\n:param site:\u641c\u7d22\u7f51\u7ad9\n\u53ef\u9009\u7684kwargs:\nnum: \u641c\u7d22\u7ed3\u679c\u6570\u91cf\n\u8fd4\u56de\u503c:\u641c\u7d22\u7ed3\u679c\u5b57\u5178\u5217\u8868\uff0c\u5b57\u5178\u683c\u5f0f\u4e3a\n{\n    \"title\": \"xxx\",\n    \"link\": \"xxx\"\n}",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "query",
        "site"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "os.getenv",
        "os.getenv",
        "build",
        "service.cse().list(q=query, cx=cse_id, **kwargs).execute",
        "results.append",
        "service.cse().list",
        "service.cse"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/aiTools.py:search"
    },
    {
      "type": "function",
      "name": "readWebPage",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/aiTools.py",
      "line_number": 73,
      "complexity": 1,
      "docstring": "\u8bfb\u53d6\u7f51\u9875\u5185\u5bb9\uff0c\u53bb\u6389html\u6807\u7b7e\uff0cJavaScript\u4ee3\u7801\uff0c\u4fdd\u7559\u7eaf\u6587\u672c\n:param url: \u7f51\u9875url\n:return: \u7f51\u9875\u7eaf\u6587\u672c\u5185\u5bb9\uff0c\u5982\u679c\u5931\u8d25\u5219\u8fd4\u56deNone",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "url"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "requests.get",
        "BeautifulSoup",
        "soup",
        "soup.get_text",
        "script_or_style.extract",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/aiTools.py:readWebPage"
    },
    {
      "type": "function",
      "name": "test_llm_response_format",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/debug_llm_response_format.py",
      "line_number": 16,
      "complexity": 1,
      "docstring": "Test if the LLM supports response_format parameter",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "HumanMessage",
        "print",
        "llm_deepseek.invoke",
        "print",
        "print",
        "llm_deepseek.invoke",
        "print",
        "print",
        "llm_deepseek.invoke",
        "print",
        "print",
        "inspect.signature",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "type",
        "list",
        "sig.parameters.keys"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/debug_llm_response_format.py:test_llm_response_format"
    },
    {
      "type": "class",
      "name": "MockLLM",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_caching_conditional_logic.py",
      "line_number": 33,
      "complexity": 1,
      "docstring": "Mock LLM\u7528\u4e8e\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "invoke"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_caching_conditional_logic.py:MockLLM"
    },
    {
      "type": "function",
      "name": "test_lru_cache",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_caching_conditional_logic.py",
      "line_number": 46,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5LRU\u7f13\u5b58\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "LRUCache",
        "AICallCacheEntry",
        "AICallCacheEntry",
        "AICallCacheEntry",
        "AICallCacheEntry",
        "cache.put",
        "cache.put",
        "cache.put",
        "cache.get",
        "cache.put",
        "cache.get_stats",
        "print",
        "datetime.now",
        "datetime.now",
        "datetime.now",
        "datetime.now",
        "cache.get",
        "cache.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_caching_conditional_logic.py:test_lru_cache"
    },
    {
      "type": "function",
      "name": "test_context_hasher",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_caching_conditional_logic.py",
      "line_number": 82,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u4e0a\u4e0b\u6587\u54c8\u5e0c\u751f\u6210",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "WorkflowState",
        "state.set_global_state",
        "ContextHasher.hash_context",
        "ContextHasher.hash_context",
        "ContextHasher.hash_context",
        "ContextHasher.hash_context",
        "time.sleep",
        "ContextHasher.hash_context",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_caching_conditional_logic.py:test_context_hasher"
    },
    {
      "type": "function",
      "name": "test_condition_checker",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_caching_conditional_logic.py",
      "line_number": 127,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5AI\u8c03\u7528\u6761\u4ef6\u68c0\u67e5\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "AICallConditionChecker",
        "WorkflowState",
        "checker.should_make_ai_call",
        "print",
        "state.set_global_state",
        "state.set_global_state",
        "checker.should_make_ai_call",
        "print",
        "checker.should_make_ai_call",
        "checker.should_make_ai_call",
        "checker.get_configuration",
        "checker.set_significance_threshold",
        "checker.set_time_threshold",
        "checker.get_configuration",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_caching_conditional_logic.py:test_condition_checker"
    },
    {
      "type": "function",
      "name": "test_ai_updater_integration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_caching_conditional_logic.py",
      "line_number": 183,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5AI\u72b6\u6001\u66f4\u65b0\u5668\u4e0e\u7f13\u5b58\u3001\u6761\u4ef6\u903b\u8f91\u7684\u96c6\u6210",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "MockLLM",
        "AIStateUpdaterService",
        "WorkflowState",
        "updater.update_state",
        "updater.update_state",
        "updater.get_cache_statistics",
        "updater.update_state",
        "updater.get_condition_checker_config",
        "updater.get_performance_statistics",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_caching_conditional_logic.py:test_ai_updater_integration"
    },
    {
      "type": "function",
      "name": "test_performance_impact",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_caching_conditional_logic.py",
      "line_number": 245,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6027\u80fd\u5f71\u54cd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "MockLLM",
        "MockLLM",
        "AIStateUpdaterService",
        "AIStateUpdaterService",
        "WorkflowState",
        "WorkflowState",
        "contexts.extend",
        "time.time",
        "time.time",
        "print",
        "print",
        "print",
        "print",
        "updater_optimized.get_cache_statistics",
        "print",
        "print",
        "updater_optimized.update_state",
        "time.time",
        "updater_basic.update_state",
        "time.time",
        "range",
        "cache_stats.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_caching_conditional_logic.py:test_performance_impact"
    },
    {
      "type": "function",
      "name": "run_all_tests",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_caching_conditional_logic.py",
      "line_number": 307,
      "complexity": 1,
      "docstring": "\u8fd0\u884c\u6240\u6709\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "len",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "test_func",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_caching_conditional_logic.py:run_all_tests"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_caching_conditional_logic.py",
      "line_number": 35,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_caching_conditional_logic.py:__init__"
    },
    {
      "type": "function",
      "name": "invoke",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_caching_conditional_logic.py",
      "line_number": 39,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "messages"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Mock",
        "logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_caching_conditional_logic.py:invoke"
    },
    {
      "type": "function",
      "name": "create_test_agent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_instruction_optimization.py",
      "line_number": 23,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u6d4b\u8bd5\u7528\u7684MultiStepAgent_v2\u5b9e\u4f8b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "RegisteredAgent",
        "MultiStepAgent_v2",
        "Agent"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_instruction_optimization.py:create_test_agent"
    },
    {
      "type": "function",
      "name": "setup_test_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_instruction_optimization.py",
      "line_number": 41,
      "complexity": 1,
      "docstring": "\u8bbe\u7f6e\u6d4b\u8bd5\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "agent"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "agent.workflow_state.set_global_state",
        "agent.workflow_state.set_global_state"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_instruction_optimization.py:setup_test_state"
    },
    {
      "type": "function",
      "name": "test_basic_optimization",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_instruction_optimization.py",
      "line_number": 62,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u57fa\u672c\u6307\u4ee4\u4f18\u5316\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "create_test_agent",
        "hasattr",
        "print",
        "setup_test_state",
        "agent.instruction_optimizer.can_optimize",
        "print",
        "agent.instruction_optimizer.optimize_instruction",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "traceback.print_exc",
        "len",
        "len",
        "', '.join"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_instruction_optimization.py:test_basic_optimization"
    },
    {
      "type": "function",
      "name": "test_optimization_statistics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_instruction_optimization.py",
      "line_number": 138,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u4f18\u5316\u7edf\u8ba1\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "create_test_agent",
        "setup_test_state",
        "agent.reset_optimization_statistics",
        "enumerate",
        "agent.get_optimization_statistics",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "agent.instruction_optimizer.can_optimize",
        "print",
        "traceback.print_exc",
        "agent.instruction_optimizer.optimize_instruction"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_instruction_optimization.py:test_optimization_statistics"
    },
    {
      "type": "function",
      "name": "test_integrated_state_aware_instruction",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_instruction_optimization.py",
      "line_number": 203,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u96c6\u6210\u7684\u72b6\u6001\u611f\u77e5\u6307\u4ee4\u751f\u6210",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "create_test_agent",
        "setup_test_state",
        "agent._generate_state_aware_instruction",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "traceback.print_exc",
        "print",
        "print",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_instruction_optimization.py:test_integrated_state_aware_instruction"
    },
    {
      "type": "function",
      "name": "run_all_tests",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/test_instruction_optimization.py",
      "line_number": 265,
      "complexity": 1,
      "docstring": "\u8fd0\u884c\u6240\u6709\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "print",
        "len",
        "print",
        "print",
        "print",
        "print",
        "test_func",
        "results.append",
        "print",
        "results.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/test_instruction_optimization.py:run_all_tests"
    },
    {
      "type": "class",
      "name": "GeminiConfig",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/gemini_flash_integration.py",
      "line_number": 39,
      "complexity": 1,
      "docstring": "Gemini Flash 2.5 \u914d\u7f6e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/gemini_flash_integration.py:GeminiConfig"
    },
    {
      "type": "class",
      "name": "GeminiFlashClient",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/gemini_flash_integration.py",
      "line_number": 48,
      "complexity": 1,
      "docstring": "Gemini Flash 2.5 \u5ba2\u6237\u7aef\uff08\u57fa\u4e8e pythonTask \u6a21\u578b\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "generate_content",
        "evaluate_breakpoint_condition",
        "analyze_bug_potential",
        "_parse_json_response",
        "_create_default_analysis",
        "generate_cognitive_strategy",
        "health_check"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/gemini_flash_integration.py:GeminiFlashClient"
    },
    {
      "type": "function",
      "name": "create_gemini_client",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/gemini_flash_integration.py",
      "line_number": 365,
      "complexity": 1,
      "docstring": "\u521b\u5efa Gemini Flash 2.5 \u5ba2\u6237\u7aef\uff08\u57fa\u4e8e pythonTask \u6a21\u578b\uff09\n\nArgs:\n    api_key: API\u5bc6\u94a5\uff0c\u5982\u679c\u4e3aNone\u5219\u4ece\u73af\u5883\u53d8\u91cf\u83b7\u53d6\uff08\u53ef\u9009\uff0cpythonTask\u5df2\u5904\u7406\uff09\n    model_name: \u6a21\u578b\u540d\u79f0\uff08\u53ef\u9009\uff0c\u5c06\u4f7f\u7528pythonTask\u7684\u9ed8\u8ba4\u914d\u7f6e\uff09\n    \nReturns:\n    Optional[GeminiFlashClient]: \u5ba2\u6237\u7aef\u5b9e\u4f8b\uff0c\u5931\u8d25\u65f6\u8fd4\u56deNone",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "api_key",
        "model_name"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "GeminiConfig",
        "GeminiFlashClient",
        "client.health_check",
        "logging.error",
        "os.getenv",
        "logging.warning",
        "logging.info",
        "logging.error",
        "logging.error",
        "os.getenv"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/gemini_flash_integration.py:create_gemini_client"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/gemini_flash_integration.py",
      "line_number": 51,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316 Gemini Flash 2.5 \u5ba2\u6237\u7aef\n\nArgs:\n    config: Gemini\u914d\u7f6e\uff08\u53ef\u9009\uff0c\u5c06\u4f7f\u7528 pythonTask \u4e2d\u7684\u9ed8\u8ba4\u914d\u7f6e\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "config"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logging.getLogger",
        "self.logger.info",
        "ImportError",
        "os.getenv",
        "self.logger.warning"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/gemini_flash_integration.py:__init__"
    },
    {
      "type": "function",
      "name": "generate_content",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/gemini_flash_integration.py",
      "line_number": 74,
      "complexity": 1,
      "docstring": "\u751f\u6210\u5185\u5bb9\n\nArgs:\n    prompt: \u8f93\u5165\u63d0\u793a\n    **kwargs: \u989d\u5916\u53c2\u6570\n    \nReturns:\n    str: \u751f\u6210\u7684\u5185\u5bb9",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "prompt"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.model.invoke",
        "self.logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/gemini_flash_integration.py:generate_content"
    },
    {
      "type": "function",
      "name": "evaluate_breakpoint_condition",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/gemini_flash_integration.py",
      "line_number": 114,
      "complexity": 1,
      "docstring": "\u8bc4\u4f30\u65ad\u70b9\u6761\u4ef6\n\nArgs:\n    condition: \u65ad\u70b9\u6761\u4ef6\uff08\u81ea\u7136\u8bed\u8a00\uff09\n    context: \u5f53\u524d\u4e0a\u4e0b\u6587\n    \nReturns:\n    bool: \u6761\u4ef6\u662f\u5426\u6ee1\u8db3",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "condition",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.generate_content",
        "response.strip().lower",
        "self.logger.warning",
        "self.logger.error",
        "json.dumps",
        "response.strip"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/gemini_flash_integration.py:evaluate_breakpoint_condition"
    },
    {
      "type": "function",
      "name": "analyze_bug_potential",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/gemini_flash_integration.py",
      "line_number": 156,
      "complexity": 1,
      "docstring": "\u5206\u6790\u6f5c\u5728\u7684bug\n\nArgs:\n    step_data: \u8ba4\u77e5\u6b65\u9aa4\u6570\u636e\n    \nReturns:\n    Dict[str, Any]: \u5206\u6790\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step_data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.generate_content",
        "self._parse_json_response",
        "all",
        "self.logger.warning",
        "self._create_default_analysis",
        "self.logger.error",
        "self._create_default_analysis",
        "json.dumps"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/gemini_flash_integration.py:analyze_bug_potential"
    },
    {
      "type": "function",
      "name": "_parse_json_response",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/gemini_flash_integration.py",
      "line_number": 206,
      "complexity": 1,
      "docstring": "\u667a\u80fd\u89e3\u6790JSON\u54cd\u5e94\uff0c\u5904\u7406\u5305\u542bmarkdown\u4ee3\u7801\u5757\u7684\u60c5\u51b5\n\nArgs:\n    response: \u539f\u59cb\u54cd\u5e94\n    \nReturns:\n    Dict[str, Any]: \u89e3\u6790\u540e\u7684JSON\u5bf9\u8c61\uff0c\u5931\u8d25\u65f6\u8fd4\u56de\u9ed8\u8ba4\u5206\u6790",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "response"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.logger.warning",
        "self._create_default_analysis",
        "response.strip",
        "json.loads",
        "self.logger.error",
        "re.search",
        "re.search",
        "match.group(1).strip",
        "self.logger.debug",
        "json.loads",
        "json_match.group().strip",
        "self.logger.debug",
        "json.loads",
        "self.logger.error",
        "self.logger.debug",
        "match.group",
        "json_match.group"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/gemini_flash_integration.py:_parse_json_response"
    },
    {
      "type": "function",
      "name": "_create_default_analysis",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/gemini_flash_integration.py",
      "line_number": 253,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u9ed8\u8ba4\u5206\u6790\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/gemini_flash_integration.py:_create_default_analysis"
    },
    {
      "type": "function",
      "name": "generate_cognitive_strategy",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/gemini_flash_integration.py",
      "line_number": 294,
      "complexity": 1,
      "docstring": "\u751f\u6210\u8ba4\u77e5\u7b56\u7565\u5efa\u8bae\n\nArgs:\n    task_description: \u4efb\u52a1\u63cf\u8ff0\n    context: \u4e0a\u4e0b\u6587\u4fe1\u606f\n    \nReturns:\n    Dict[str, Any]: \u7b56\u7565\u5efa\u8bae",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "task_description",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.generate_content",
        "json.loads",
        "self.logger.error",
        "json.dumps",
        "response.strip"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/gemini_flash_integration.py:generate_cognitive_strategy"
    },
    {
      "type": "function",
      "name": "health_check",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/gemini_flash_integration.py",
      "line_number": 348,
      "complexity": 1,
      "docstring": "\u5065\u5eb7\u68c0\u67e5\n\nReturns:\n    bool: \u5ba2\u6237\u7aef\u662f\u5426\u6b63\u5e38\u5de5\u4f5c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.generate_content",
        "response.lower",
        "self.logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/gemini_flash_integration.py:health_check"
    },
    {
      "type": "class",
      "name": "SuperEgoDemo",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_super_ego.py",
      "line_number": 36,
      "complexity": 1,
      "docstring": "\u8d85\u6211\u667a\u80fd\u4f53\u6f14\u793a\u7c7b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "demo_basic_supervision",
        "demo_ultra_think_engine",
        "demo_comprehensive_supervision",
        "demo_four_layer_integration",
        "demo_learning_and_reflection",
        "_print_supervision_result",
        "_print_meta_analysis_result",
        "_print_comprehensive_supervision_result",
        "run_full_demo"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_super_ego.py:SuperEgoDemo"
    },
    {
      "type": "function",
      "name": "main",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_super_ego.py",
      "line_number": 404,
      "complexity": 1,
      "docstring": "\u4e3b\u51fd\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "SuperEgoDemo",
        "demo.run_full_demo",
        "print",
        "print",
        "traceback.print_exc"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_super_ego.py:main"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_super_ego.py",
      "line_number": 39,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u6f14\u793a\u73af\u5883",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "ChatOpenAI",
        "SuperEgoAgent",
        "print",
        "self.super_ego.start_cognitive_monitoring",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_super_ego.py:__init__"
    },
    {
      "type": "function",
      "name": "demo_basic_supervision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_super_ego.py",
      "line_number": 64,
      "complexity": 1,
      "docstring": "\u6f14\u793a\u57fa\u7840\u8ba4\u77e5\u76d1\u7763\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "self.super_ego.supervise_cognitive_process",
        "self._print_supervision_result"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_super_ego.py:demo_basic_supervision"
    },
    {
      "type": "function",
      "name": "demo_ultra_think_engine",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_super_ego.py",
      "line_number": 99,
      "complexity": 1,
      "docstring": "\u6f14\u793aUltraThink\u5143\u8ba4\u77e5\u5f15\u64ce",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "self.super_ego.meta_cognitive_analysis",
        "self._print_meta_analysis_result",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_super_ego.py:demo_ultra_think_engine"
    },
    {
      "type": "function",
      "name": "demo_comprehensive_supervision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_super_ego.py",
      "line_number": 146,
      "complexity": 1,
      "docstring": "\u6f14\u793a\u7efc\u5408\u8ba4\u77e5\u76d1\u7763",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "self.super_ego.comprehensive_cognitive_supervision",
        "self._print_comprehensive_supervision_result"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_super_ego.py:demo_comprehensive_supervision"
    },
    {
      "type": "function",
      "name": "demo_four_layer_integration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_super_ego.py",
      "line_number": 179,
      "complexity": 1,
      "docstring": "\u6f14\u793a\u56db\u5c42\u8ba4\u77e5\u67b6\u6784\u96c6\u6210",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "CognitiveAgent",
        "print",
        "print",
        "print",
        "cognitive_agent.execute_sync",
        "print",
        "print",
        "cognitive_agent.get_super_ego_state",
        "super_ego_state.get",
        "print",
        "print",
        "print",
        "super_ego_state.get",
        "print",
        "print",
        "cognitive_health.get",
        "print",
        "cognitive_health.get",
        "cognitive_health.get",
        "', '.join"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_super_ego.py:demo_four_layer_integration"
    },
    {
      "type": "function",
      "name": "demo_learning_and_reflection",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_super_ego.py",
      "line_number": 227,
      "complexity": 1,
      "docstring": "\u6f14\u793a\u5b66\u4e60\u548c\u53cd\u601d\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "enumerate",
        "print",
        "self.super_ego.get_learning_summary",
        "print",
        "print",
        "self.super_ego.reflect_and_learn",
        "learning_summary.get",
        "print",
        "reflection.get",
        "reflection.get",
        "reflection.get",
        "learning_summary.get",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_super_ego.py:demo_learning_and_reflection"
    },
    {
      "type": "function",
      "name": "_print_supervision_result",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_super_ego.py",
      "line_number": 294,
      "complexity": 1,
      "docstring": "\u6253\u5370\u76d1\u7763\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "result.get",
        "result.get",
        "result.get",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "result.get",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_super_ego.py:_print_supervision_result"
    },
    {
      "type": "function",
      "name": "_print_meta_analysis_result",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_super_ego.py",
      "line_number": 317,
      "complexity": 1,
      "docstring": "\u6253\u5370\u5143\u8ba4\u77e5\u5206\u6790\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "result.get",
        "result.get",
        "result.get",
        "print",
        "print",
        "monitoring.get",
        "print",
        "strategy.get",
        "learning.get",
        "print",
        "strategy.get",
        "print",
        "learning.get",
        "print",
        "monitoring.get",
        "monitoring.get",
        "strategy.get",
        "', '.join",
        "strategy.get",
        "', '.join"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_super_ego.py:_print_meta_analysis_result"
    },
    {
      "type": "function",
      "name": "_print_comprehensive_supervision_result",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_super_ego.py",
      "line_number": 342,
      "complexity": 1,
      "docstring": "\u6253\u5370\u7efc\u5408\u76d1\u7763\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "result.get",
        "result.get",
        "print",
        "assessment.get",
        "assessment.get",
        "monitoring.get",
        "print",
        "monitoring.get",
        "print",
        "print",
        "print",
        "assessment.get",
        "', '.join",
        "', '.join",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_super_ego.py:_print_comprehensive_supervision_result"
    },
    {
      "type": "function",
      "name": "run_full_demo",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_super_ego.py",
      "line_number": 367,
      "complexity": 1,
      "docstring": "\u8fd0\u884c\u5b8c\u6574\u6f14\u793a",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "self.demo_basic_supervision",
        "self.demo_ultra_think_engine",
        "self.demo_comprehensive_supervision",
        "self.demo_four_layer_integration",
        "self.demo_learning_and_reflection",
        "print",
        "print",
        "print",
        "self.super_ego.get_supervision_summary",
        "print",
        "print",
        "print",
        "print",
        "state.get",
        "print",
        "print",
        "print",
        "print",
        "traceback.print_exc"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_super_ego.py:run_full_demo"
    },
    {
      "type": "function",
      "name": "test_refactored_workflow",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_refactored_workflow.py",
      "line_number": 28,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u91cd\u6784\u540e\u7684\u5de5\u4f5c\u6d41",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "EmbodiedCognitiveWorkflow",
        "print",
        "enumerate",
        "print",
        "print",
        "print",
        "sum",
        "len",
        "sum",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "workflow._can_handle_directly",
        "print",
        "print",
        "time.time",
        "workflow.reset_workflow",
        "print",
        "print",
        "print",
        "print",
        "print",
        "workflow.execute_cognitive_cycle",
        "workflow.get_workflow_status",
        "results.append",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "time.sleep",
        "print",
        "print",
        "print",
        "print",
        "print",
        "sum",
        "len",
        "sum",
        "len",
        "time.time",
        "len",
        "print",
        "print",
        "print",
        "results.append",
        "len",
        "r.get",
        "r.get",
        "r.get",
        "r.get",
        "str",
        "r.get",
        "r.get",
        "len",
        "str",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_refactored_workflow.py:test_refactored_workflow"
    },
    {
      "type": "function",
      "name": "test_simplified_vs_complex_prompts",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_simplified_prompts.py",
      "line_number": 18,
      "complexity": 1,
      "docstring": "\u5bf9\u6bd4\u7b80\u5316\u63d0\u793a\u4e0e\u590d\u6742\u63d0\u793a\u7684\u54cd\u5e94\u6548\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "os.getenv",
        "print",
        "print",
        "print",
        "ChatOpenAI",
        "print",
        "os.getenv",
        "llm.invoke",
        "print",
        "llm.invoke",
        "print",
        "llm.invoke",
        "print",
        "print",
        "traceback.print_exc",
        "ChatOpenAI",
        "print",
        "print",
        "response.content.strip",
        "print",
        "print",
        "print",
        "response.content.strip",
        "print",
        "print",
        "print",
        "response.content.strip",
        "print",
        "print",
        "print",
        "os.getenv",
        "json.loads",
        "print",
        "json.loads",
        "print",
        "print",
        "print",
        "json.loads",
        "print",
        "os.getenv",
        "response.content.strip",
        "print",
        "response.content.strip",
        "json.dumps",
        "print",
        "print",
        "response.content.strip",
        "print",
        "len",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_simplified_prompts.py:test_simplified_vs_complex_prompts"
    },
    {
      "type": "function",
      "name": "test_superego_simplified_methods",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_simplified_prompts.py",
      "line_number": 159,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u8d85\u6211\u667a\u80fd\u4f53\u7684\u7b80\u5316\u65b9\u6cd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "os.getenv",
        "SuperEgoAgent",
        "print",
        "print",
        "ChatOpenAI",
        "os.getenv",
        "print",
        "print",
        "ChatOpenAI",
        "print",
        "super_ego.strategy_optimizer.optimize_strategy",
        "super_ego.ultra_think.regulate_cognitive_strategy",
        "os.getenv",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "result.get",
        "result.get",
        "result.get",
        "result.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_simplified_prompts.py:test_superego_simplified_methods"
    },
    {
      "type": "function",
      "name": "test_super_ego_json_fixes",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_super_ego_fixes.py",
      "line_number": 25,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u8d85\u6211\u667a\u80fd\u4f53\u7684JSON\u89e3\u6790\u4fee\u590d",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "ChatOpenAI",
        "SuperEgoAgent",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "super_ego.supervise_cognitive_process",
        "print",
        "super_ego.reflect_and_learn",
        "super_ego.optimize_cognitive_strategy",
        "super_ego.get_supervision_summary",
        "print",
        "print",
        "print",
        "print",
        "print",
        "traceback.print_exc",
        "print",
        "super_ego.meta_cognitive_analysis",
        "print",
        "print",
        "reflection_result.get",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "meta_result.get",
        "print",
        "print",
        "result.get",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_super_ego_fixes.py:test_super_ego_json_fixes"
    },
    {
      "type": "function",
      "name": "test_structured_superego",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_structured_superego.py",
      "line_number": 18,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u7ed3\u6784\u5316\u8f93\u51fa\u7684SuperEgoAgent",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "os.getenv",
        "print",
        "print",
        "SuperEgoAgent",
        "print",
        "SuperEgoAgent",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "range",
        "print",
        "ChatOpenAI",
        "print",
        "os.getenv",
        "traditional_super_ego.strategy_optimizer.optimize_strategy",
        "print",
        "print",
        "structured_super_ego.strategy_optimizer.optimize_strategy",
        "print",
        "print",
        "print",
        "traditional_super_ego.ultra_think.regulate_cognitive_strategy",
        "print",
        "structured_super_ego.ultra_think.regulate_cognitive_strategy",
        "print",
        "print",
        "print",
        "print",
        "traceback.print_exc",
        "ChatOpenAI",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "structured_super_ego.strategy_optimizer.optimize_strategy",
        "_validate_strategy_schema",
        "os.getenv",
        "len",
        "traditional_result.get",
        "len",
        "structured_result.get",
        "traditional_regulation.get",
        "structured_regulation.get",
        "traditional_result.get",
        "structured_result.get",
        "_validate_strategy_schema",
        "_validate_regulation_schema"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_structured_superego.py:test_structured_superego"
    },
    {
      "type": "function",
      "name": "_validate_strategy_schema",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_structured_superego.py",
      "line_number": 151,
      "complexity": 1,
      "docstring": "\u9a8c\u8bc1\u7b56\u7565\u4f18\u5316\u7ed3\u679c\u662f\u5426\u7b26\u5408schema",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "isinstance",
        "isinstance",
        "isinstance"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_structured_superego.py:_validate_strategy_schema"
    },
    {
      "type": "function",
      "name": "_validate_regulation_schema",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_structured_superego.py",
      "line_number": 173,
      "complexity": 1,
      "docstring": "\u9a8c\u8bc1\u7b56\u7565\u8c03\u8282\u7ed3\u679c\u662f\u5426\u7b26\u5408schema",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "isinstance",
        "isinstance",
        "isinstance",
        "isinstance"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_structured_superego.py:_validate_regulation_schema"
    },
    {
      "type": "function",
      "name": "test_direct_structured_optimizer",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_structured_superego.py",
      "line_number": 195,
      "complexity": 1,
      "docstring": "\u76f4\u63a5\u6d4b\u8bd5\u7ed3\u6784\u5316\u54cd\u5e94\u4f18\u5316\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "os.getenv",
        "StructuredResponseOptimizer",
        "print",
        "print",
        "ChatOpenAI",
        "os.getenv",
        "optimizer.optimize_strategy_structured",
        "print",
        "print",
        "print",
        "optimizer.regulate_strategy_structured",
        "print",
        "print",
        "print",
        "print",
        "print",
        "ChatOpenAI",
        "print",
        "json.dumps",
        "print",
        "json.dumps",
        "print",
        "os.getenv",
        "_validate_strategy_schema",
        "_validate_regulation_schema"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_structured_superego.py:test_direct_structured_optimizer"
    },
    {
      "type": "class",
      "name": "StructuredResponseOptimizer",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/structured_response_optimizer.py",
      "line_number": 153,
      "complexity": 1,
      "docstring": "\u7ed3\u6784\u5316\u54cd\u5e94\u4f18\u5316\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "_safe_json_dumps",
        "_call_llm_with_schema",
        "_get_example_for_schema",
        "optimize_strategy_structured",
        "regulate_strategy_structured",
        "reflect_structured",
        "meta_learn_structured"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/structured_response_optimizer.py:StructuredResponseOptimizer"
    },
    {
      "type": "function",
      "name": "test_structured_responses",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/structured_response_optimizer.py",
      "line_number": 388,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u7ed3\u6784\u5316\u54cd\u5e94",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "os.getenv",
        "StructuredResponseOptimizer",
        "print",
        "ChatOpenAI",
        "os.getenv",
        "optimizer.optimize_strategy_structured",
        "print",
        "print",
        "ChatOpenAI",
        "print",
        "json.dumps",
        "print",
        "os.getenv"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/structured_response_optimizer.py:test_structured_responses"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/structured_response_optimizer.py",
      "line_number": 156,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "llm",
        "logger"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logging.getLogger"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/structured_response_optimizer.py:__init__"
    },
    {
      "type": "function",
      "name": "_safe_json_dumps",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/structured_response_optimizer.py",
      "line_number": 160,
      "complexity": 1,
      "docstring": "\u5b89\u5168\u5e8f\u5217\u5316\u4e3aJSON\u5b57\u7b26\u4e32\uff0c\u5904\u7406datetime\u7b49\u7279\u6b8a\u5bf9\u8c61",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "isinstance",
        "TypeError",
        "json.dumps",
        "obj.isoformat",
        "len",
        "self.logger.debug",
        "json.dumps",
        "self.logger.warning",
        "str",
        "type",
        "len",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/structured_response_optimizer.py:_safe_json_dumps"
    },
    {
      "type": "function",
      "name": "_call_llm_with_schema",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/structured_response_optimizer.py",
      "line_number": 178,
      "complexity": 1,
      "docstring": "\u4f7f\u7528 JSON schema \u8c03\u7528 LLM",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "prompt",
        "schema"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.logger.info",
        "self.llm.invoke",
        "response.content.strip",
        "content.startswith",
        "content.endswith",
        "json.loads",
        "hasattr",
        "hasattr",
        "content.strip",
        "self.logger.error",
        "self.llm.client.chat.completions.create",
        "json.loads",
        "json.dumps",
        "self.logger.warning",
        "self._get_example_for_schema"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/structured_response_optimizer.py:_call_llm_with_schema"
    },
    {
      "type": "function",
      "name": "_get_example_for_schema",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/structured_response_optimizer.py",
      "line_number": 222,
      "complexity": 1,
      "docstring": "\u6839\u636eJSON schema\u751f\u6210\u793a\u4f8b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "schema"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "schema.get",
        "properties.items",
        "field_schema.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/structured_response_optimizer.py:_get_example_for_schema"
    },
    {
      "type": "function",
      "name": "optimize_strategy_structured",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/structured_response_optimizer.py",
      "line_number": 245,
      "complexity": 1,
      "docstring": "\u4f7f\u7528\u7ed3\u6784\u5316\u8f93\u51fa\u4f18\u5316\u7b56\u7565",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_performance",
        "context",
        "goals"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._call_llm_with_schema",
        "self.logger.error",
        "self._safe_json_dumps",
        "self._safe_json_dumps",
        "self._safe_json_dumps"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/structured_response_optimizer.py:optimize_strategy_structured"
    },
    {
      "type": "function",
      "name": "regulate_strategy_structured",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/structured_response_optimizer.py",
      "line_number": 283,
      "complexity": 1,
      "docstring": "\u4f7f\u7528\u7ed3\u6784\u5316\u8f93\u51fa\u8c03\u8282\u7b56\u7565",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_context",
        "target_goals"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._call_llm_with_schema",
        "self.logger.error",
        "self._safe_json_dumps",
        "self._safe_json_dumps"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/structured_response_optimizer.py:regulate_strategy_structured"
    },
    {
      "type": "function",
      "name": "reflect_structured",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/structured_response_optimizer.py",
      "line_number": 319,
      "complexity": 1,
      "docstring": "\u4f7f\u7528\u7ed3\u6784\u5316\u8f93\u51fa\u8fdb\u884c\u53cd\u601d",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "experience",
        "outcome"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._call_llm_with_schema",
        "self.logger.error",
        "self._safe_json_dumps",
        "self._safe_json_dumps"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/structured_response_optimizer.py:reflect_structured"
    },
    {
      "type": "function",
      "name": "meta_learn_structured",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/structured_response_optimizer.py",
      "line_number": 353,
      "complexity": 1,
      "docstring": "\u4f7f\u7528\u7ed3\u6784\u5316\u8f93\u51fa\u8fdb\u884c\u5143\u5b66\u4e60",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "success_cases",
        "failure_cases"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._call_llm_with_schema",
        "self.logger.error",
        "self._safe_json_dumps",
        "self._safe_json_dumps"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/structured_response_optimizer.py:meta_learn_structured"
    },
    {
      "type": "function",
      "name": "json_serializer",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/structured_response_optimizer.py",
      "line_number": 162,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "obj"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "isinstance",
        "TypeError",
        "obj.isoformat",
        "type"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/structured_response_optimizer.py:json_serializer"
    },
    {
      "type": "class",
      "name": "WorkflowStatus",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py",
      "line_number": 33,
      "complexity": 1,
      "docstring": "\u5de5\u4f5c\u6d41\u72b6\u6001\u679a\u4e3e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:WorkflowStatus"
    },
    {
      "type": "class",
      "name": "DecisionType",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py",
      "line_number": 43,
      "complexity": 1,
      "docstring": "\u51b3\u7b56\u7c7b\u578b\u679a\u4e3e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:DecisionType"
    },
    {
      "type": "class",
      "name": "CycleOutcome",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py",
      "line_number": 51,
      "complexity": 1,
      "docstring": "\u5355\u8f6e\u8ba4\u77e5\u5faa\u73af\u7684\u6267\u884c\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:CycleOutcome"
    },
    {
      "type": "class",
      "name": "WorkflowContext",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py",
      "line_number": 59,
      "complexity": 1,
      "docstring": "\u5de5\u4f5c\u6d41\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "add_cycle_result",
        "update_current_state",
        "update_id_evaluation",
        "update_goal_status",
        "get_current_context"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:WorkflowContext"
    },
    {
      "type": "class",
      "name": "CognitiveAgent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py",
      "line_number": 102,
      "complexity": 1,
      "docstring": "\u8ba4\u77e5\u667a\u80fd\u4f53 - \u5177\u8eab\u8ba4\u77e5\u5de5\u4f5c\u6d41\u7cfb\u7edf\n\n\u57fa\u4e8e\u5177\u8eab\u8ba4\u77e5\u7406\u8bba\u7684\u667a\u80fd\u4f53\u5b9e\u73b0\uff0c\u73b0\u5df2\u5347\u7ea7\u4e3a\u56db\u5c42\u8ba4\u77e5\u67b6\u6784\uff1a\n\u8d85\u6211\u5c42(SuperEgo) - \u5143\u8ba4\u77e5\u76d1\u7763\u548c\u9053\u5fb7\u7ea6\u675f\n\u81ea\u6211\u5c42(Ego) - \u7406\u6027\u601d\u8003\u548c\u51b3\u7b56\n\u672c\u6211\u5c42(Id) - \u6b32\u671b\u9a71\u52a8\u548c\u76ee\u6807\u5bfc\u5411  \n\u8eab\u4f53\u5c42(Body) - \u6267\u884c\u548c\u611f\u77e5\n\n\u6838\u5fc3\u7279\u6027\uff1a\n- \u56db\u5c42\u67b6\u6784\uff1a\u8d85\u6211\u667a\u80fd\u4f53\u3001\u81ea\u6211\u667a\u80fd\u4f53\u3001\u672c\u6211\u667a\u80fd\u4f53\u3001\u8eab\u4f53\u667a\u80fd\u4f53\n- \u5143\u8ba4\u77e5\u76d1\u7763\uff1a\u8d85\u6211\u5c42\u63d0\u4f9b\u8ba4\u77e5\u8d28\u91cf\u63a7\u5236\u548c\u7b56\u7565\u4f18\u5316\n- \u81ea\u9002\u5e94\u6267\u884c\uff1a\u6839\u636e\u4efb\u52a1\u590d\u6742\u6027\u9009\u62e9\u76f4\u63a5\u5904\u7406\u6216\u8ba4\u77e5\u5faa\u73af\n- \u52a8\u6001\u51b3\u7b56\uff1a\u5b9e\u65f6\u72b6\u6001\u5206\u6790\u548c\u8def\u5f84\u8c03\u6574\n- \u76ee\u6807\u5bfc\u5411\uff1a\u4ee5\u7528\u6237\u9700\u6c42\u4e3a\u4e2d\u5fc3\u7684\u4ef7\u503c\u9a71\u52a8\u7cfb\u7edf\n- UltraThink\u80fd\u529b\uff1a\u5148\u8fdb\u7684\u5143\u8ba4\u77e5\u5206\u6790\u548c\u5b66\u4e60\u80fd\u529b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "execute_sync",
        "execute_stream",
        "execute_cognitive_cycle",
        "chat_sync",
        "chat_stream",
        "_can_handle_directly",
        "_execute_direct_task",
        "_execute_cognitive_cycle_full",
        "_initialize_workflow",
        "_execute_main_loop",
        "_execute_single_cycle",
        "_analyze_current_state",
        "_make_decision",
        "_handle_judgment_failed",
        "_handle_continue_cycle",
        "_handle_timeout",
        "_handle_workflow_exception",
        "_set_status",
        "current_cycle_count",
        "current_cycle_count",
        "_handle_evaluation_request",
        "_execute_cognitive_step",
        "_log",
        "get_workflow_status",
        "reset_workflow",
        "load_knowledge",
        "load_python_modules",
        "_super_ego_pre_supervision",
        "_super_ego_post_supervision",
        "get_super_ego_state",
        "enable_super_ego_monitoring",
        "disable_super_ego_monitoring"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "AgentBase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:CognitiveAgent"
    },
    {
      "type": "function",
      "name": "create_cognitive_agent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py",
      "line_number": 1008,
      "complexity": 1,
      "docstring": "\u4fbf\u5229\u51fd\u6570\uff1a\u521b\u5efa\u8ba4\u77e5\u667a\u80fd\u4f53\u5b9e\u4f8b\n\nArgs:\n    llm: \u8bed\u8a00\u6a21\u578b\n    **kwargs: \u5176\u4ed6\u914d\u7f6e\u53c2\u6570\n    \nReturns:\n    CognitiveAgent: \u8ba4\u77e5\u667a\u80fd\u4f53\u5b9e\u4f8b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "llm"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "CognitiveAgent"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:create_cognitive_agent"
    },
    {
      "type": "function",
      "name": "execute_cognitive_task",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py",
      "line_number": 1022,
      "complexity": 1,
      "docstring": "\u4fbf\u5229\u51fd\u6570\uff1a\u4e00\u6b21\u6027\u6267\u884c\u8ba4\u77e5\u4efb\u52a1\n\nArgs:\n    llm: \u8bed\u8a00\u6a21\u578b\n    task_description: \u4efb\u52a1\u63cf\u8ff0\n    **kwargs: \u5176\u4ed6\u914d\u7f6e\u53c2\u6570\n    \nReturns:\n    Result: \u6267\u884c\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "llm",
        "task_description"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "create_cognitive_agent",
        "agent.execute_sync"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:execute_cognitive_task"
    },
    {
      "type": "function",
      "name": "create_embodied_cognitive_workflow",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py",
      "line_number": 1041,
      "complexity": 1,
      "docstring": "\u5411\u540e\u517c\u5bb9\u51fd\u6570\uff1a\u521b\u5efa\u5177\u8eab\u8ba4\u77e5\u5de5\u4f5c\u6d41\u5b9e\u4f8b\uff08\u73b0\u5728\u8fd4\u56deCognitiveAgent\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "llm"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "create_cognitive_agent"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:create_embodied_cognitive_workflow"
    },
    {
      "type": "function",
      "name": "execute_embodied_cognitive_task",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py",
      "line_number": 1045,
      "complexity": 1,
      "docstring": "\u5411\u540e\u517c\u5bb9\u51fd\u6570\uff1a\u4e00\u6b21\u6027\u6267\u884c\u5177\u8eab\u8ba4\u77e5\u4efb\u52a1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "llm",
        "task_description"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "execute_cognitive_task"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:execute_embodied_cognitive_task"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py",
      "line_number": 121,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u8ba4\u77e5\u667a\u80fd\u4f53\n\nArgs:\n    llm: \u8bed\u8a00\u6a21\u578b\n    body_config: \u8eab\u4f53(Agent)\u7684\u914d\u7f6e\u53c2\u6570\n    ego_config: \u81ea\u6211\u667a\u80fd\u4f53\u7684\u914d\u7f6e\u53c2\u6570\n    id_config: \u672c\u6211\u667a\u80fd\u4f53\u7684\u914d\u7f6e\u53c2\u6570\n    super_ego_config: \u8d85\u6211\u667a\u80fd\u4f53\u7684\u914d\u7f6e\u53c2\u6570\n    enable_super_ego: \u662f\u5426\u542f\u7528\u8d85\u6211\u667a\u80fd\u4f53\n    max_cycles: \u9632\u6b62\u65e0\u9650\u5faa\u73af\u7684\u6700\u5927\u6b21\u6570\u9650\u5236\n    verbose: \u662f\u5426\u8f93\u51fa\u8be6\u7ec6\u7684\u8fc7\u7a0b\u65e5\u5fd7\n    system_message: \u7cfb\u7edf\u6d88\u606f\uff0c\u5982\u679c\u672a\u63d0\u4f9b\u5c06\u4f7f\u7528\u9ed8\u8ba4\u6d88\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "llm",
        "body_config",
        "ego_config",
        "id_config",
        "super_ego_config",
        "enable_super_ego",
        "max_cycles",
        "verbose",
        "system_message"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "super().__init__",
        "Agent",
        "self.body.loadKnowledge",
        "self.body.loadKnowledge",
        "self.body.loadKnowledge",
        "logging.getLogger",
        "EgoAgent",
        "IdAgent",
        "logging.basicConfig",
        "super",
        "SuperEgoAgent",
        "self.super_ego.start_cognitive_monitoring",
        "self.logger.info",
        "self.logger.warning"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:__init__"
    },
    {
      "type": "function",
      "name": "add_cycle_result",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py",
      "line_number": 70,
      "complexity": 1,
      "docstring": "\u6dfb\u52a0\u5faa\u73af\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "cycle_num",
        "result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.history.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:add_cycle_result"
    },
    {
      "type": "function",
      "name": "update_current_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py",
      "line_number": 74,
      "complexity": 1,
      "docstring": "\u66f4\u65b0\u5f53\u524d\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "state_analysis"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:update_current_state"
    },
    {
      "type": "function",
      "name": "update_id_evaluation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py",
      "line_number": 78,
      "complexity": 1,
      "docstring": "\u66f4\u65b0\u672c\u6211\u7684\u8bc4\u4f30\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "evaluation_result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:update_id_evaluation"
    },
    {
      "type": "function",
      "name": "update_goal_status",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py",
      "line_number": 82,
      "complexity": 1,
      "docstring": "\u66f4\u65b0\u76ee\u6807\u8fbe\u6210\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "achieved"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:update_goal_status"
    },
    {
      "type": "function",
      "name": "get_current_context",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py",
      "line_number": 86,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u5f53\u524d\u4e0a\u4e0b\u6587",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "'\\n\\n'.join"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:get_current_context"
    },
    {
      "type": "function",
      "name": "execute_sync",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py",
      "line_number": 208,
      "complexity": 1,
      "docstring": "\u540c\u6b65\u6267\u884c\u65b9\u6cd5 - \u6267\u884c\u8ba4\u77e5\u5faa\u73af\uff0c\u6839\u636e\u4efb\u52a1\u7279\u6027\u9009\u62e9\u5904\u7406\u65b9\u5f0f\uff1a\n- \u76f4\u63a5\u5904\u7406\uff1a\u80fd\u4e00\u6b21\u6027\u5b8c\u6210\u7684\u7b80\u5355\u4efb\u52a1\n- \u8ba4\u77e5\u5faa\u73af\uff1a\u9700\u8981\u601d\u8003\u3001\u89c4\u5212\u7684\u590d\u6742\u4efb\u52a1\n\nArgs:\n    instruction: \u6267\u884c\u6307\u4ee4\uff0c\u5982\u679c\u4e3aNone\u5219\u8fd4\u56de\u9519\u8bef\n    \nReturns:\n    Result: \u6267\u884c\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.logger.info",
        "print",
        "Result",
        "self._can_handle_directly",
        "self._super_ego_pre_supervision",
        "self.logger.info",
        "print",
        "self._execute_direct_task",
        "self.logger.info",
        "print",
        "self._execute_cognitive_cycle_full",
        "self._super_ego_post_supervision",
        "self.logger.error",
        "print",
        "Result",
        "str",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:execute_sync"
    },
    {
      "type": "function",
      "name": "execute_stream",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py",
      "line_number": 253,
      "complexity": 1,
      "docstring": "\u6d41\u5f0f\u6267\u884c\u65b9\u6cd5 - \u6267\u884c\u8ba4\u77e5\u5faa\u73af\u5e76\u8fd4\u56de\u6d41\u5f0f\u7ed3\u679c\n\nArgs:\n    instruction: \u6267\u884c\u6307\u4ee4\uff0c\u5982\u679c\u4e3aNone\u5219\u8fd4\u56de\u9519\u8bef\n    \nReturns:\n    Iterator[object]: \u6d41\u5f0f\u7ed3\u679c\uff0c\u5305\u542b\u8fc7\u7a0b\u4fe1\u606f\u548c\u6700\u7ec8\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._can_handle_directly",
        "Result",
        "self._execute_direct_task",
        "self._execute_cognitive_cycle_full",
        "Result",
        "str",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:execute_stream"
    },
    {
      "type": "function",
      "name": "execute_cognitive_cycle",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py",
      "line_number": 291,
      "complexity": 1,
      "docstring": "\u5411\u540e\u517c\u5bb9\u65b9\u6cd5 - \u91cd\u5b9a\u5411\u5230execute_sync\n\nArgs:\n    instruction: \u6267\u884c\u6307\u4ee4\n    \nReturns:\n    Result: \u6267\u884c\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.execute_sync"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:execute_cognitive_cycle"
    },
    {
      "type": "function",
      "name": "chat_sync",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py",
      "line_number": 303,
      "complexity": 1,
      "docstring": "\u540c\u6b65\u804a\u5929\u65b9\u6cd5 - \u8f6c\u53d1\u7ed9\u81ea\u6211\u667a\u80fd\u4f53\u5904\u7406\n\nArgs:\n    message: \u804a\u5929\u6d88\u606f\n    response_format: \u53ef\u9009\u7684\u54cd\u5e94\u683c\u5f0f\n    \nReturns:\n    Result: \u804a\u5929\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "message",
        "response_format"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.ego.chat_sync",
        "Result"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:chat_sync"
    },
    {
      "type": "function",
      "name": "chat_stream",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py",
      "line_number": 320,
      "complexity": 1,
      "docstring": "\u6d41\u5f0f\u804a\u5929\u65b9\u6cd5 - \u8f6c\u53d1\u7ed9\u81ea\u6211\u667a\u80fd\u4f53\u5904\u7406\n\nArgs:\n    message: \u804a\u5929\u6d88\u606f\n    response_format: \u53ef\u9009\u7684\u54cd\u5e94\u683c\u5f0f\n    \nReturns:\n    Iterator[object]: \u6d41\u5f0f\u804a\u5929\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "message",
        "response_format"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.ego.chat_stream",
        "Result"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:chat_stream"
    },
    {
      "type": "function",
      "name": "_can_handle_directly",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py",
      "line_number": 338,
      "complexity": 1,
      "docstring": "\u4f7f\u7528AI\u8bc4\u4f30\u4efb\u52a1\u662f\u5426\u53ef\u4ee5\u76f4\u63a5\u5904\u7406\n\n\u901a\u8fc7AI\u5206\u6790\u4efb\u52a1\u7684\u590d\u6742\u6027\u548c\u7279\u5f81\u6765\u5224\u65ad\uff1a\n- \u7b80\u5355\u4efb\u52a1\uff1a\u53ef\u4ee5\u4e00\u6b21\u6027\u5b8c\u6210\uff0c\u4e0d\u9700\u8981\u591a\u8f6e\u601d\u8003\u548c\u89c4\u5212\n- \u590d\u6742\u4efb\u52a1\uff1a\u9700\u8981\u591a\u6b65\u9aa4\u3001\u89c4\u5212\u3001\u6216\u8fed\u4ee3\u5f0f\u5904\u7406\n\nArgs:\n    instruction: \u7528\u6237\u6307\u4ee4\n    \nReturns:\n    bool: \u662f\u5426\u53ef\u4ee5\u76f4\u63a5\u5904\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.ego.chat_sync",
        "self._log",
        "self._log",
        "json.loads",
        "response_data.get",
        "response_data.get",
        "response_data.get",
        "self._log",
        "evaluation_result.return_value.strip",
        "self._log",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:_can_handle_directly"
    },
    {
      "type": "function",
      "name": "_execute_direct_task",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py",
      "line_number": 400,
      "complexity": 1,
      "docstring": "\u76f4\u63a5\u5904\u7406\u4efb\u52a1\u7684\u5feb\u901f\u8def\u5f84\n\nArgs:\n    instruction: \u7528\u6237\u6307\u4ee4\n    \nReturns:\n    Result: \u6267\u884c\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._log",
        "self.body.execute_sync",
        "self._log",
        "self._set_status",
        "Result",
        "self._log",
        "self._execute_cognitive_cycle_full",
        "self._log",
        "self._execute_cognitive_cycle_full"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:_execute_direct_task"
    },
    {
      "type": "function",
      "name": "_execute_cognitive_cycle_full",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py",
      "line_number": 437,
      "complexity": 1,
      "docstring": "\u6267\u884c\u5b8c\u6574\u7684\u8ba4\u77e5\u5faa\u73af\n\nArgs:\n    instruction: \u7528\u6237\u6307\u4ee4\n    \nReturns:\n    Result: \u6267\u884c\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._initialize_workflow",
        "self._execute_main_loop",
        "self._handle_workflow_exception"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:_execute_cognitive_cycle_full"
    },
    {
      "type": "function",
      "name": "_initialize_workflow",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py",
      "line_number": 453,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u5de5\u4f5c\u6d41\n\nArgs:\n    instruction: \u7528\u6237\u6307\u4ee4\n    \nReturns:\n    WorkflowContext: \u521d\u59cb\u5316\u540e\u7684\u5de5\u4f5c\u6d41\u4e0a\u4e0b\u6587",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._log",
        "self._log",
        "self.id_agent.initialize_value_system",
        "self._log",
        "self._set_status",
        "WorkflowContext",
        "self.id_agent.get_task_specification"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:_initialize_workflow"
    },
    {
      "type": "function",
      "name": "_execute_main_loop",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py",
      "line_number": 478,
      "complexity": 1,
      "docstring": "\u6267\u884c\u4e3b\u5faa\u73af\n\nArgs:\n    context: \u5de5\u4f5c\u6d41\u4e0a\u4e0b\u6587\n    \nReturns:\n    Result: \u6267\u884c\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._handle_timeout",
        "self._log",
        "self._execute_single_cycle",
        "context.add_cycle_result"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:_execute_main_loop"
    },
    {
      "type": "function",
      "name": "_execute_single_cycle",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py",
      "line_number": 508,
      "complexity": 1,
      "docstring": "\u6267\u884c\u5355\u8f6e\u8ba4\u77e5\u5faa\u73af\n\nArgs:\n    context: \u5de5\u4f5c\u6d41\u4e0a\u4e0b\u6587\n    \nReturns:\n    CycleOutcome: \u5faa\u73af\u6267\u884c\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._analyze_current_state",
        "self._make_decision",
        "self._handle_evaluation_request",
        "self._handle_judgment_failed",
        "self._handle_continue_cycle",
        "self._log",
        "self._handle_evaluation_request"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:_execute_single_cycle"
    },
    {
      "type": "function",
      "name": "_analyze_current_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py",
      "line_number": 539,
      "complexity": 1,
      "docstring": "\u5206\u6790\u5f53\u524d\u72b6\u6001\u5e76\u66f4\u65b0\u5230\u4e0a\u4e0b\u6587\n\nArgs:\n    context: \u5de5\u4f5c\u6d41\u4e0a\u4e0b\u6587",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "context.get_current_context",
        "self.ego.analyze_current_state",
        "self._log",
        "context.update_current_state"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:_analyze_current_state"
    },
    {
      "type": "function",
      "name": "_make_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py",
      "line_number": 553,
      "complexity": 1,
      "docstring": "\u505a\u51fa\u51b3\u7b56\n\nArgs:\n    state_analysis: \u72b6\u6001\u5206\u6790\u7ed3\u679c\n    \nReturns:\n    DecisionType: \u51b3\u7b56\u7c7b\u578b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "state_analysis"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.ego.decide_next_action",
        "self._log",
        "decision_mapping.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:_make_decision"
    },
    {
      "type": "function",
      "name": "_handle_judgment_failed",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py",
      "line_number": 575,
      "complexity": 1,
      "docstring": "\u5904\u7406\u5224\u65ad\u5931\u8d25\n\nArgs:\n    context: \u5de5\u4f5c\u6d41\u4e0a\u4e0b\u6587\n    \nReturns:\n    CycleOutcome: \u5305\u542b\u5931\u8d25\u7ed3\u679c\u7684\u5faa\u73af\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._log",
        "self._set_status",
        "Result",
        "CycleOutcome"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:_handle_judgment_failed"
    },
    {
      "type": "function",
      "name": "_handle_continue_cycle",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py",
      "line_number": 597,
      "complexity": 1,
      "docstring": "\u5904\u7406\u7ee7\u7eed\u5faa\u73af\n\nArgs:\n    context: \u5de5\u4f5c\u6d41\u4e0a\u4e0b\u6587\n    \nReturns:\n    CycleOutcome: \u5305\u542b\u5faa\u73af\u6570\u636e\u7684\u5faa\u73af\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._execute_cognitive_step",
        "CycleOutcome"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:_handle_continue_cycle"
    },
    {
      "type": "function",
      "name": "_handle_timeout",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py",
      "line_number": 615,
      "complexity": 1,
      "docstring": "\u5904\u7406\u8d85\u65f6\n\nReturns:\n    Result: \u8d85\u65f6\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._log",
        "self._set_status",
        "Result"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:_handle_timeout"
    },
    {
      "type": "function",
      "name": "_handle_workflow_exception",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py",
      "line_number": 627,
      "complexity": 1,
      "docstring": "\u5904\u7406\u5de5\u4f5c\u6d41\u5f02\u5e38\n\nArgs:\n    e: \u5f02\u5e38\u5bf9\u8c61\n    \nReturns:\n    Result: \u5f02\u5e38\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "e"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._log",
        "self._set_status",
        "Result",
        "str",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:_handle_workflow_exception"
    },
    {
      "type": "function",
      "name": "_set_status",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py",
      "line_number": 641,
      "complexity": 1,
      "docstring": "\u8bbe\u7f6e\u5de5\u4f5c\u6d41\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "status"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:_set_status"
    },
    {
      "type": "function",
      "name": "current_cycle_count",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py",
      "line_number": 652,
      "complexity": 1,
      "docstring": "\u8bbe\u7f6e\u5f53\u524d\u5faa\u73af\u6b21\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "value"
      ],
      "decorators": [
        "current_cycle_count.setter"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:current_cycle_count"
    },
    {
      "type": "function",
      "name": "_handle_evaluation_request",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py",
      "line_number": 656,
      "complexity": 1,
      "docstring": "\u5904\u7406\u81ea\u6211\u7684\u8bc4\u4f30\u8bf7\u6c42\n\nArgs:\n    context: \u5de5\u4f5c\u6d41\u4e0a\u4e0b\u6587\n    \nReturns:\n    CycleOutcome: \u5305\u542b\u8bc4\u4f30\u7ed3\u679c\u7684\u5faa\u73af\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.ego.request_id_evaluation",
        "self._log",
        "self.id_agent.generate_evaluation_instruction",
        "self._log",
        "self.body.execute_sync",
        "self._log",
        "self.id_agent.evaluate_goal_achievement",
        "self._log",
        "json.loads",
        "evaluation_data.get",
        "evaluation_data.get",
        "context.update_id_evaluation",
        "context.update_goal_status",
        "self._log",
        "self._set_status",
        "self.body.chat_sync",
        "Result",
        "CycleOutcome",
        "self._log",
        "CycleOutcome",
        "self._log",
        "context.update_id_evaluation",
        "context.update_goal_status",
        "self._set_status",
        "Result",
        "CycleOutcome",
        "CycleOutcome"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:_handle_evaluation_request"
    },
    {
      "type": "function",
      "name": "_execute_cognitive_step",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py",
      "line_number": 740,
      "complexity": 1,
      "docstring": "\u6267\u884c\u4e00\u4e2a\u8ba4\u77e5\u6b65\u9aa4\uff08\u89c2\u5bdf\u6216\u6267\u884c\uff09\n\nArgs:\n    context: \u5de5\u4f5c\u6d41\u4e0a\u4e0b\u6587\uff0c\u5305\u542b\u5f53\u524d\u72b6\u6001\u3001\u672c\u6211\u8bc4\u4f30\u7b49\u5b8c\u6574\u4fe1\u606f\n    \nReturns:\n    Optional[str]: \u6267\u884c\u7ed3\u679c\uff0c\u5931\u8d25\u65f6\u8fd4\u56deNone",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "context.get_current_context",
        "self.ego.chat_sync",
        "json.loads",
        "response_data.get('\u884c\u52a8\u7c7b\u578b', '\u6267\u884c').strip",
        "self.ego.generate_observation_instruction",
        "self._log",
        "self.body.execute_sync",
        "self.ego.generate_execution_instruction",
        "self._log",
        "self.body.execute_sync",
        "self._log",
        "decision_result.return_value.strip",
        "self._log",
        "self._log",
        "self._log",
        "self.ego.handle_execution_error",
        "self._log",
        "response_data.get",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:_execute_cognitive_step"
    },
    {
      "type": "function",
      "name": "_log",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py",
      "line_number": 822,
      "complexity": 1,
      "docstring": "\u8bb0\u5f55\u65e5\u5fd7",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "message"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "logging.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:_log"
    },
    {
      "type": "function",
      "name": "get_workflow_status",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py",
      "line_number": 828,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u5f53\u524d\u5de5\u4f5c\u6d41\u72b6\u6001\n\nReturns:\n    dict: \u5305\u542b\u72b6\u6001\u4fe1\u606f\u7684\u5b57\u5178",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.id_agent.get_current_goal",
        "self.id_agent.get_value_standard"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:get_workflow_status"
    },
    {
      "type": "function",
      "name": "reset_workflow",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py",
      "line_number": 843,
      "complexity": 1,
      "docstring": "\u91cd\u7f6e\u5de5\u4f5c\u6d41\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._set_status",
        "self.execution_history.clear"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:reset_workflow"
    },
    {
      "type": "function",
      "name": "load_knowledge",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py",
      "line_number": 855,
      "complexity": 1,
      "docstring": "\u5411\u6240\u6709\u7ec4\u4ef6\u52a0\u8f7d\u77e5\u8bc6\n\nArgs:\n    knowledge: \u8981\u52a0\u8f7d\u7684\u77e5\u8bc6\u5185\u5bb9",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "knowledge"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.ego.loadKnowledge",
        "self.id_agent.loadKnowledge",
        "self.body.loadKnowledge",
        "self._log"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:load_knowledge"
    },
    {
      "type": "function",
      "name": "load_python_modules",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py",
      "line_number": 867,
      "complexity": 1,
      "docstring": "\u5411\u8eab\u4f53\u52a0\u8f7dPython\u6a21\u5757\n\nArgs:\n    module_list: Python\u6a21\u5757\u540d\u79f0\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "module_list"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.body.loadPythonModules",
        "self._log"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:load_python_modules"
    },
    {
      "type": "function",
      "name": "_super_ego_pre_supervision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py",
      "line_number": 877,
      "complexity": 1,
      "docstring": "\u8d85\u6211\u6267\u884c\u524d\u76d1\u7763",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.logger.info",
        "self.super_ego.comprehensive_cognitive_supervision",
        "supervision_result.get",
        "time.time",
        "print",
        "self.logger.error",
        "assessment.get",
        "self.logger.warning",
        "print",
        "assessment.get",
        "self.logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:_super_ego_pre_supervision"
    },
    {
      "type": "function",
      "name": "_super_ego_post_supervision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py",
      "line_number": 914,
      "complexity": 1,
      "docstring": "\u8d85\u6211\u6267\u884c\u540e\u76d1\u7763",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction",
        "result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.logger.info",
        "self.super_ego.comprehensive_cognitive_supervision",
        "self.super_ego.reflect_and_learn",
        "supervision_result.get",
        "time.time",
        "result.to_dict",
        "assessment.get",
        "print",
        "self.logger.error",
        "hasattr",
        "self.logger.info",
        "reflection_result.get",
        "result.to_dict",
        "reflection_result.get",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:_super_ego_post_supervision"
    },
    {
      "type": "function",
      "name": "get_super_ego_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py",
      "line_number": 970,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u8d85\u6211\u72b6\u6001\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.super_ego.get_meta_cognitive_state",
        "self.super_ego.assess_cognitive_health",
        "self.super_ego.get_learning_summary",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:get_super_ego_state"
    },
    {
      "type": "function",
      "name": "enable_super_ego_monitoring",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py",
      "line_number": 990,
      "complexity": 1,
      "docstring": "\u542f\u7528\u8d85\u6211\u76d1\u63a7",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.super_ego.start_cognitive_monitoring",
        "self.logger.info",
        "self.logger.warning"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:enable_super_ego_monitoring"
    },
    {
      "type": "function",
      "name": "disable_super_ego_monitoring",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py",
      "line_number": 999,
      "complexity": 1,
      "docstring": "\u7981\u7528\u8d85\u6211\u76d1\u63a7",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.super_ego.stop_cognitive_monitoring",
        "self.logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:disable_super_ego_monitoring"
    },
    {
      "type": "class",
      "name": "CognitiveHealthStatus",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 44,
      "complexity": 1,
      "docstring": "\u8ba4\u77e5\u5065\u5eb7\u72b6\u6001\u679a\u4e3e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:CognitiveHealthStatus"
    },
    {
      "type": "class",
      "name": "BiasType",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 53,
      "complexity": 1,
      "docstring": "\u8ba4\u77e5\u504f\u5dee\u7c7b\u578b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:BiasType"
    },
    {
      "type": "class",
      "name": "LogicErrorType",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 63,
      "complexity": 1,
      "docstring": "\u903b\u8f91\u9519\u8bef\u7c7b\u578b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:LogicErrorType"
    },
    {
      "type": "class",
      "name": "CognitiveBias",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 74,
      "complexity": 1,
      "docstring": "\u8ba4\u77e5\u504f\u5dee\u6570\u636e\u7ed3\u6784",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:CognitiveBias"
    },
    {
      "type": "class",
      "name": "LogicError",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 85,
      "complexity": 1,
      "docstring": "\u903b\u8f91\u9519\u8bef\u6570\u636e\u7ed3\u6784",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:LogicError"
    },
    {
      "type": "class",
      "name": "ConsistencyIssue",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 97,
      "complexity": 1,
      "docstring": "\u4e00\u81f4\u6027\u95ee\u9898\u6570\u636e\u7ed3\u6784",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:ConsistencyIssue"
    },
    {
      "type": "class",
      "name": "CognitiveHealthAssessment",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 108,
      "complexity": 1,
      "docstring": "\u8ba4\u77e5\u5065\u5eb7\u8bc4\u4f30\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:CognitiveHealthAssessment"
    },
    {
      "type": "class",
      "name": "CognitiveBiasDetector",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 121,
      "complexity": 1,
      "docstring": "\u8ba4\u77e5\u504f\u5dee\u68c0\u6d4b\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "detect_confirmation_bias",
        "detect_anchoring_bias"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:CognitiveBiasDetector"
    },
    {
      "type": "class",
      "name": "LogicErrorIdentifier",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 212,
      "complexity": 1,
      "docstring": "\u903b\u8f91\u9519\u8bef\u8bc6\u522b\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "identify_circular_reasoning",
        "identify_false_dichotomy"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:LogicErrorIdentifier"
    },
    {
      "type": "class",
      "name": "ConsistencyChecker",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 304,
      "complexity": 1,
      "docstring": "\u4e00\u81f4\u6027\u68c0\u67e5\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "check_goal_action_consistency",
        "check_value_consistency"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:ConsistencyChecker"
    },
    {
      "type": "class",
      "name": "MoralCompass",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 394,
      "complexity": 1,
      "docstring": "\u9053\u5fb7\u6307\u5357\u9488 - \u63d0\u4f9b\u4f26\u7406\u6307\u5bfc\u548c\u4ef7\u503c\u7ea6\u675f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "evaluate_ethical_implications",
        "provide_moral_guidance"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:MoralCompass"
    },
    {
      "type": "class",
      "name": "CognitiveMonitor",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 479,
      "complexity": 1,
      "docstring": "\u8ba4\u77e5\u76d1\u63a7\u5668 - \u5b9e\u65f6\u76d1\u63a7\u8ba4\u77e5\u8fc7\u7a0b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "start_monitoring",
        "stop_monitoring",
        "monitor_real_time",
        "_assess_cognitive_status"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:CognitiveMonitor"
    },
    {
      "type": "class",
      "name": "StrategyOptimizer",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 553,
      "complexity": 1,
      "docstring": "\u7b56\u7565\u4f18\u5316\u5668 - \u4f18\u5316\u8ba4\u77e5\u7b56\u7565",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "_safe_json_parse",
        "_safe_json_dumps",
        "_invoke_llm_with_retry",
        "optimize_strategy",
        "get_best_strategy",
        "_fallback_optimize_strategy"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:StrategyOptimizer"
    },
    {
      "type": "class",
      "name": "ReflectionEngine",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 753,
      "complexity": 1,
      "docstring": "\u53cd\u601d\u5f15\u64ce - \u8ba4\u77e5\u53cd\u601d\u548c\u5b66\u4e60",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "_safe_json_parse",
        "_safe_json_dumps",
        "_invoke_llm_with_retry",
        "reflect_on_experience",
        "_fallback_reflect_on_experience",
        "generate_learning_summary"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:ReflectionEngine"
    },
    {
      "type": "class",
      "name": "UltraThinkEngine",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 968,
      "complexity": 1,
      "docstring": "UltraThink\u5143\u8ba4\u77e5\u5f15\u64ce - \u8d85\u6211\u7684\u6838\u5fc3\u8ba4\u77e5\u80fd\u529b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "_safe_json_parse",
        "_safe_json_dumps",
        "_invoke_llm_with_retry",
        "monitor_cognitive_process",
        "regulate_cognitive_strategy",
        "_fallback_regulate_strategy",
        "meta_learn_from_experience",
        "_assess_cognitive_efficiency",
        "_assess_resource_utilization",
        "_assess_strategy_effectiveness",
        "_detect_cognitive_anomalies"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:UltraThinkEngine"
    },
    {
      "type": "class",
      "name": "SuperEgoAgent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 1301,
      "complexity": 1,
      "docstring": "\u8d85\u6211\u667a\u80fd\u4f53 - \u5143\u8ba4\u77e5\u76d1\u7763\u5c42\n\n\u4f5c\u4e3a\u56db\u5c42\u8ba4\u77e5\u67b6\u6784\u7684\u6700\u9ad8\u5c42\uff0c\u8d85\u6211\u8d1f\u8d23\uff1a\n1. \u8ba4\u77e5\u9519\u8bef\u8bc6\u522b\u548c\u8bca\u65ad\n2. \u903b\u8f91\u9a8c\u8bc1\u548c\u504f\u5dee\u68c0\u6d4b\n3. \u9053\u5fb7\u5f15\u5bfc\u548c\u4ef7\u503c\u7ea6\u675f\n4. \u5143\u8ba4\u77e5\u76d1\u7763\u548c\u7b56\u7565\u4f18\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "_safe_json_parse",
        "supervise_cognitive_process",
        "assess_cognitive_health",
        "provide_cognitive_correction",
        "_calculate_cognitive_health_score",
        "_generate_recommendations",
        "_update_supervision_metrics",
        "get_supervision_summary",
        "meta_cognitive_analysis",
        "optimize_cognitive_strategy",
        "start_cognitive_monitoring",
        "stop_cognitive_monitoring",
        "comprehensive_cognitive_supervision",
        "reflect_and_learn",
        "get_learning_summary",
        "get_meta_cognitive_state",
        "_generate_overall_assessment",
        "clear_supervision_history"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "AgentBase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:SuperEgoAgent"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 1312,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u8d85\u6211\u667a\u80fd\u4f53\n\nArgs:\n    llm: \u8bed\u8a00\u6a21\u578b\n    enable_bias_detection: \u662f\u5426\u542f\u7528\u504f\u5dee\u68c0\u6d4b\n    enable_logic_validation: \u662f\u5426\u542f\u7528\u903b\u8f91\u9a8c\u8bc1\n    enable_consistency_check: \u662f\u5426\u542f\u7528\u4e00\u81f4\u6027\u68c0\u67e5\n    enable_moral_guidance: \u662f\u5426\u542f\u7528\u9053\u5fb7\u6307\u5bfc\n    enable_ultra_think: \u662f\u5426\u542f\u7528UltraThink\u5143\u8ba4\u77e5\u5f15\u64ce\n    use_structured_output: \u662f\u5426\u4f7f\u7528\u7ed3\u6784\u5316JSON\u8f93\u51fa\n    system_message: \u81ea\u5b9a\u4e49\u7cfb\u7edf\u6d88\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "llm",
        "enable_bias_detection",
        "enable_logic_validation",
        "enable_consistency_check",
        "enable_moral_guidance",
        "enable_ultra_think",
        "use_structured_output",
        "system_message"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "super().__init__",
        "CognitiveMonitor",
        "StrategyOptimizer",
        "ReflectionEngine",
        "logging.getLogger",
        "CognitiveBiasDetector",
        "LogicErrorIdentifier",
        "ConsistencyChecker",
        "MoralCompass",
        "UltraThinkEngine",
        "super"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:__init__"
    },
    {
      "type": "function",
      "name": "detect_confirmation_bias",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 129,
      "complexity": 1,
      "docstring": "\u68c0\u6d4b\u786e\u8ba4\u504f\u5dee",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "reasoning_text",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "json.loads",
        "self.llm.invoke",
        "response.strip",
        "analysis.get",
        "CognitiveBias",
        "self.logger.error",
        "json.dumps",
        "analysis.get",
        "analysis.get",
        "analysis.get",
        "analysis.get",
        "analysis.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:detect_confirmation_bias"
    },
    {
      "type": "function",
      "name": "detect_anchoring_bias",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 170,
      "complexity": 1,
      "docstring": "\u68c0\u6d4b\u951a\u5b9a\u504f\u5dee",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decision_process",
        "initial_info"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "json.loads",
        "self.llm.invoke",
        "response.strip",
        "analysis.get",
        "CognitiveBias",
        "self.logger.error",
        "analysis.get",
        "analysis.get",
        "analysis.get",
        "analysis.get",
        "analysis.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:detect_anchoring_bias"
    },
    {
      "type": "function",
      "name": "identify_circular_reasoning",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 219,
      "complexity": 1,
      "docstring": "\u8bc6\u522b\u5faa\u73af\u8bba\u8bc1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "argument"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "json.loads",
        "analysis.get",
        "self.llm.invoke",
        "response.strip",
        "LogicError",
        "self.logger.error",
        "analysis.get",
        "analysis.get",
        "analysis.get",
        "analysis.get",
        "analysis.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:identify_circular_reasoning"
    },
    {
      "type": "function",
      "name": "identify_false_dichotomy",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 261,
      "complexity": 1,
      "docstring": "\u8bc6\u522b\u865a\u5047\u4e8c\u5206\u6cd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "argument"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "json.loads",
        "analysis.get",
        "self.llm.invoke",
        "response.strip",
        "LogicError",
        "self.logger.error",
        "analysis.get",
        "analysis.get",
        "analysis.get",
        "analysis.get",
        "analysis.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:identify_false_dichotomy"
    },
    {
      "type": "function",
      "name": "check_goal_action_consistency",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 311,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u76ee\u6807-\u884c\u52a8\u4e00\u81f4\u6027",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "goals",
        "actions"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "json.loads",
        "analysis.get",
        "self.llm.invoke",
        "response.strip",
        "ConsistencyIssue",
        "self.logger.error",
        "json.dumps",
        "json.dumps",
        "analysis.get",
        "analysis.get",
        "analysis.get",
        "analysis.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:check_goal_action_consistency"
    },
    {
      "type": "function",
      "name": "check_value_consistency",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 352,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u4ef7\u503c\u4e00\u81f4\u6027",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decisions",
        "stated_values"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "json.loads",
        "analysis.get",
        "self.llm.invoke",
        "response.strip",
        "ConsistencyIssue",
        "self.logger.error",
        "json.dumps",
        "json.dumps",
        "analysis.get",
        "analysis.get",
        "analysis.get",
        "analysis.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:check_value_consistency"
    },
    {
      "type": "function",
      "name": "evaluate_ethical_implications",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 412,
      "complexity": 1,
      "docstring": "\u8bc4\u4f30\u4f26\u7406\u5f71\u54cd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decision_context",
        "potential_actions"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "json.loads",
        "self.llm.invoke",
        "response.strip",
        "self.logger.error",
        "json.dumps",
        "json.dumps"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:evaluate_ethical_implications"
    },
    {
      "type": "function",
      "name": "provide_moral_guidance",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 452,
      "complexity": 1,
      "docstring": "\u63d0\u4f9b\u9053\u5fb7\u6307\u5bfc",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "dilemma"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "response.strip",
        "self.llm.invoke",
        "self.logger.error",
        "json.dumps"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:provide_moral_guidance"
    },
    {
      "type": "function",
      "name": "start_monitoring",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 493,
      "complexity": 1,
      "docstring": "\u542f\u52a8\u76d1\u63a7",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:start_monitoring"
    },
    {
      "type": "function",
      "name": "stop_monitoring",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 498,
      "complexity": 1,
      "docstring": "\u505c\u6b62\u76d1\u63a7",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:stop_monitoring"
    },
    {
      "type": "function",
      "name": "monitor_real_time",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 503,
      "complexity": 1,
      "docstring": "\u5b9e\u65f6\u76d1\u63a7\u8ba4\u77e5\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "cognitive_data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "datetime.now",
        "self._assess_cognitive_status",
        "cognitive_data.get",
        "self.alerts.append",
        "monitoring_result['alerts'].append",
        "monitoring_result['recommendations'].append",
        "cognitive_data.get",
        "self.alerts.append",
        "monitoring_result['alerts'].append",
        "monitoring_result['recommendations'].append",
        "cognitive_data.get",
        "cognitive_data.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:monitor_real_time"
    },
    {
      "type": "function",
      "name": "_assess_cognitive_status",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 538,
      "complexity": 1,
      "docstring": "\u8bc4\u4f30\u8ba4\u77e5\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "cognitive_data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "cognitive_data.get",
        "cognitive_data.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:_assess_cognitive_status"
    },
    {
      "type": "function",
      "name": "_safe_json_parse",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 1385,
      "complexity": 1,
      "docstring": "\u5b89\u5168\u89e3\u6790JSON\u54cd\u5e94\uff0c\u5982\u679c\u5931\u8d25\u5219\u8fd4\u56de\u9ed8\u8ba4\u54cd\u5e94\n\nArgs:\n    response: LLM\u7684\u539f\u59cb\u54cd\u5e94\n    default_response: \u89e3\u6790\u5931\u8d25\u65f6\u7684\u9ed8\u8ba4\u54cd\u5e94\n    method_name: \u8c03\u7528\u65b9\u6cd5\u540d\uff08\u7528\u4e8e\u65e5\u5fd7\uff09\n    \nReturns:\n    \u89e3\u6790\u540e\u7684\u5b57\u5178\u6216\u9ed8\u8ba4\u54cd\u5e94",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "response",
        "default_response",
        "method_name"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "json.loads",
        "self.logger.warning",
        "response.strip",
        "self.logger.warning",
        "self.logger.debug",
        "self.logger.error",
        "response.strip",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:_safe_json_parse"
    },
    {
      "type": "function",
      "name": "_safe_json_dumps",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 1026,
      "complexity": 1,
      "docstring": "\u5b89\u5168\u5e8f\u5217\u5316\u4e3aJSON\u5b57\u7b26\u4e32\uff0c\u5904\u7406datetime\u7b49\u7279\u6b8a\u5bf9\u8c61",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "isinstance",
        "TypeError",
        "json.dumps",
        "obj.isoformat",
        "len",
        "self.logger.debug",
        "json.dumps",
        "self.logger.warning",
        "str",
        "type",
        "len",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:_safe_json_dumps"
    },
    {
      "type": "function",
      "name": "_invoke_llm_with_retry",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 1044,
      "complexity": 1,
      "docstring": "\u5e26\u91cd\u8bd5\u673a\u5236\u7684LLM\u8c03\u7528",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "prompt",
        "max_retries"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "range",
        "self.logger.debug",
        "self.llm.invoke",
        "hasattr",
        "str",
        "content.strip",
        "self.logger.debug",
        "self.logger.warning",
        "self.logger.error",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:_invoke_llm_with_retry"
    },
    {
      "type": "function",
      "name": "optimize_strategy",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 637,
      "complexity": 1,
      "docstring": "\u4f18\u5316\u8ba4\u77e5\u7b56\u7565",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_performance",
        "context",
        "goals"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.optimization_history.append",
        "optimization_result.get",
        "self._fallback_optimize_strategy",
        "datetime.now",
        "self.strategy_bank[strategy]['contexts'].append",
        "self.logger.error",
        "self.structured_optimizer.optimize_strategy_structured",
        "self.logger.debug",
        "str",
        "self.logger.warning",
        "self._fallback_optimize_strategy"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:optimize_strategy"
    },
    {
      "type": "function",
      "name": "get_best_strategy",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 686,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6700\u4f73\u7b56\u7565",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.strategy_bank.items"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:get_best_strategy"
    },
    {
      "type": "function",
      "name": "_fallback_optimize_strategy",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 700,
      "complexity": 1,
      "docstring": "\u4f20\u7edf\u6a21\u5f0f\u7684\u7b56\u7565\u4f18\u5316\uff08\u4f5c\u4e3a\u7ed3\u6784\u5316\u8f93\u51fa\u7684\u5907\u9009\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_performance",
        "context",
        "goals"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._invoke_llm_with_retry",
        "self._safe_json_parse",
        "str(current_performance).replace('{', '').replace",
        "str(context).replace('{', '').replace",
        "str",
        "self.logger.error",
        "str(current_performance).replace",
        "str(context).replace",
        "str",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:_fallback_optimize_strategy"
    },
    {
      "type": "function",
      "name": "reflect_on_experience",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 837,
      "complexity": 1,
      "docstring": "\u5bf9\u7ecf\u9a8c\u8fdb\u884c\u53cd\u601d",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "experience_data",
        "outcome"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.reflection_history.append",
        "reflection_result.get",
        "self._fallback_reflect_on_experience",
        "datetime.now",
        "self.logger.error",
        "self.structured_optimizer.reflect_structured",
        "self.logger.debug",
        "self.learning_insights.append",
        "str",
        "self.logger.warning",
        "self._fallback_reflect_on_experience"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:reflect_on_experience"
    },
    {
      "type": "function",
      "name": "_fallback_reflect_on_experience",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 877,
      "complexity": 1,
      "docstring": "\u4f20\u7edf\u6a21\u5f0f\u7684\u7ecf\u9a8c\u53cd\u601d\uff08\u4f5c\u4e3a\u7ed3\u6784\u5316\u8f93\u51fa\u7684\u5907\u9009\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "experience_data",
        "outcome"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._invoke_llm_with_retry",
        "self._safe_json_parse",
        "self.logger.error",
        "self._safe_json_dumps",
        "self._safe_json_dumps"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:_fallback_reflect_on_experience"
    },
    {
      "type": "function",
      "name": "generate_learning_summary",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 922,
      "complexity": 1,
      "docstring": "\u751f\u6210\u5b66\u4e60\u603b\u7ed3",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._safe_json_parse",
        "self.llm.invoke",
        "self.logger.error",
        "self._safe_json_dumps",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:generate_learning_summary"
    },
    {
      "type": "function",
      "name": "monitor_cognitive_process",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 1072,
      "complexity": 1,
      "docstring": "\u76d1\u63a7\u8ba4\u77e5\u8fc7\u7a0b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "process_data",
        "performance_metrics"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.monitoring_history.append",
        "datetime.now",
        "self._assess_cognitive_efficiency",
        "self._assess_resource_utilization",
        "self._assess_strategy_effectiveness",
        "self._detect_cognitive_anomalies",
        "monitoring_result['recommendations'].append",
        "monitoring_result['recommendations'].append",
        "self.logger.error",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:monitor_cognitive_process"
    },
    {
      "type": "function",
      "name": "regulate_cognitive_strategy",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 1100,
      "complexity": 1,
      "docstring": "\u8c03\u8282\u8ba4\u77e5\u7b56\u7565",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_context",
        "target_goals"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "regulation_result.get",
        "self._fallback_regulate_strategy",
        "regulation_result.get",
        "datetime.now",
        "self.logger.error",
        "self.structured_optimizer.regulate_strategy_structured",
        "self.logger.debug",
        "str",
        "self.logger.warning",
        "self._fallback_regulate_strategy"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:regulate_cognitive_strategy"
    },
    {
      "type": "function",
      "name": "_fallback_regulate_strategy",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 1131,
      "complexity": 1,
      "docstring": "\u4f20\u7edf\u6a21\u5f0f\u7684\u7b56\u7565\u8c03\u8282\uff08\u4f5c\u4e3a\u7ed3\u6784\u5316\u8f93\u51fa\u7684\u5907\u9009\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_context",
        "target_goals"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._invoke_llm_with_retry",
        "self._safe_json_parse",
        "str",
        "str",
        "self.logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:_fallback_regulate_strategy"
    },
    {
      "type": "function",
      "name": "meta_learn_from_experience",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 1180,
      "complexity": 1,
      "docstring": "\u4ece\u7ecf\u9a8c\u4e2d\u8fdb\u884c\u5143\u5b66\u4e60",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "experience_data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._safe_json_parse",
        "learning_result.get",
        "experience.get",
        "self.llm.invoke",
        "self.logger.error",
        "successful_patterns.append",
        "failure_patterns.append",
        "self._safe_json_dumps",
        "self._safe_json_dumps",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:meta_learn_from_experience"
    },
    {
      "type": "function",
      "name": "_assess_cognitive_efficiency",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 1240,
      "complexity": 1,
      "docstring": "\u8bc4\u4f30\u8ba4\u77e5\u6548\u7387",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "process_data",
        "metrics"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "metrics.get",
        "metrics.get",
        "metrics.get",
        "max",
        "min",
        "min"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:_assess_cognitive_efficiency"
    },
    {
      "type": "function",
      "name": "_assess_resource_utilization",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 1260,
      "complexity": 1,
      "docstring": "\u8bc4\u4f30\u8d44\u6e90\u5229\u7528\u7387",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "process_data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "process_data.get",
        "process_data.get",
        "process_data.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:_assess_resource_utilization"
    },
    {
      "type": "function",
      "name": "_assess_strategy_effectiveness",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 1272,
      "complexity": 1,
      "docstring": "\u8bc4\u4f30\u7b56\u7565\u6709\u6548\u6027",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "process_data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "process_data.get",
        "max"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:_assess_strategy_effectiveness"
    },
    {
      "type": "function",
      "name": "_detect_cognitive_anomalies",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 1283,
      "complexity": 1,
      "docstring": "\u68c0\u6d4b\u8ba4\u77e5\u5f02\u5e38",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "process_data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "process_data.get",
        "process_data.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:_detect_cognitive_anomalies"
    },
    {
      "type": "function",
      "name": "supervise_cognitive_process",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 1410,
      "complexity": 1,
      "docstring": "\u76d1\u7763\u8ba4\u77e5\u8fc7\u7a0b\n\nArgs:\n    reasoning_text: \u63a8\u7406\u6587\u672c\n    context: \u4e0a\u4e0b\u6587\u4fe1\u606f\n    goals: \u76ee\u6807\u5217\u8868\n    actions: \u884c\u52a8\u5217\u8868\n    \nReturns:\n    Dict: \u76d1\u7763\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "reasoning_text",
        "context",
        "goals",
        "actions"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "datetime.now",
        "self._calculate_cognitive_health_score",
        "self._generate_recommendations",
        "self._update_supervision_metrics",
        "self.supervision_history.append",
        "self.bias_detector.detect_confirmation_bias",
        "context.get",
        "self.logic_identifier.identify_circular_reasoning",
        "self.logic_identifier.identify_false_dichotomy",
        "self.consistency_checker.check_goal_action_consistency",
        "self.moral_compass.evaluate_ethical_implications",
        "self.logger.error",
        "str",
        "supervision_result['biases_detected'].append",
        "self.detected_biases.append",
        "self.bias_detector.detect_anchoring_bias",
        "supervision_result['logic_errors'].append",
        "self.detected_logic_errors.append",
        "supervision_result['logic_errors'].append",
        "self.detected_logic_errors.append",
        "supervision_result['consistency_issues'].append",
        "self.consistency_issues.append",
        "supervision_result['biases_detected'].append",
        "self.detected_biases.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:supervise_cognitive_process"
    },
    {
      "type": "function",
      "name": "assess_cognitive_health",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 1503,
      "complexity": 1,
      "docstring": "\u8bc4\u4f30\u6574\u4f53\u8ba4\u77e5\u5065\u5eb7\u72b6\u51b5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "CognitiveHealthAssessment",
        "len",
        "len",
        "strengths.append",
        "weaknesses.append",
        "recommendations.append",
        "len",
        "strengths.append",
        "weaknesses.append",
        "recommendations.append",
        "len",
        "strengths.append",
        "weaknesses.append",
        "recommendations.append",
        "len",
        "len",
        "len",
        "len",
        "len",
        "len",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:assess_cognitive_health"
    },
    {
      "type": "function",
      "name": "provide_cognitive_correction",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 1561,
      "complexity": 1,
      "docstring": "\u63d0\u4f9b\u8ba4\u77e5\u7ea0\u6b63\u5efa\u8bae",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "issue_type",
        "specific_issue"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:provide_cognitive_correction"
    },
    {
      "type": "function",
      "name": "_calculate_cognitive_health_score",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 1576,
      "complexity": 1,
      "docstring": "\u8ba1\u7b97\u8ba4\u77e5\u5065\u5eb7\u5206\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "supervision_result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "max",
        "len",
        "len",
        "len",
        "supervision_result['ethical_assessment'].get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:_calculate_cognitive_health_score"
    },
    {
      "type": "function",
      "name": "_generate_recommendations",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 1599,
      "complexity": 1,
      "docstring": "\u751f\u6210\u6539\u8fdb\u5efa\u8bae",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "supervision_result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "recommendations.append",
        "recommendations.append",
        "recommendations.append",
        "supervision_result['ethical_assessment'].get",
        "recommendations.append",
        "recommendations.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:_generate_recommendations"
    },
    {
      "type": "function",
      "name": "_update_supervision_metrics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 1623,
      "complexity": 1,
      "docstring": "\u66f4\u65b0\u76d1\u7763\u6307\u6807",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "supervision_result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "len",
        "len",
        "supervision_result['ethical_assessment'].get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:_update_supervision_metrics"
    },
    {
      "type": "function",
      "name": "get_supervision_summary",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 1634,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u76d1\u7763\u6458\u8981",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "self.assess_cognitive_health",
        "len",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:get_supervision_summary"
    },
    {
      "type": "function",
      "name": "meta_cognitive_analysis",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 1647,
      "complexity": 1,
      "docstring": "\u6267\u884c\u5143\u8ba4\u77e5\u5206\u6790",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "process_data",
        "performance_metrics",
        "context",
        "goals"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "datetime.now",
        "self.ultra_think.monitor_cognitive_process",
        "self.ultra_think.regulate_cognitive_strategy",
        "len",
        "self.ultra_think.meta_learn_from_experience",
        "self.logger.error",
        "str",
        "result.get",
        "result.get",
        "result.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:meta_cognitive_analysis"
    },
    {
      "type": "function",
      "name": "optimize_cognitive_strategy",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 1697,
      "complexity": 1,
      "docstring": "\u4f18\u5316\u8ba4\u77e5\u7b56\u7565",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_performance",
        "target_improvements"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.ultra_think.regulate_cognitive_strategy",
        "self.supervision_metrics.get",
        "self.logger.error",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:optimize_cognitive_strategy"
    },
    {
      "type": "function",
      "name": "start_cognitive_monitoring",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 1726,
      "complexity": 1,
      "docstring": "\u542f\u52a8\u8ba4\u77e5\u76d1\u63a7",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.cognitive_monitor.start_monitoring",
        "self.logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:start_cognitive_monitoring"
    },
    {
      "type": "function",
      "name": "stop_cognitive_monitoring",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 1731,
      "complexity": 1,
      "docstring": "\u505c\u6b62\u8ba4\u77e5\u76d1\u63a7",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.cognitive_monitor.stop_monitoring",
        "self.logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:stop_cognitive_monitoring"
    },
    {
      "type": "function",
      "name": "comprehensive_cognitive_supervision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 1736,
      "complexity": 1,
      "docstring": "\u7efc\u5408\u8ba4\u77e5\u76d1\u7763 - \u6574\u5408\u6240\u6709\u76d1\u7763\u80fd\u529b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "cognitive_data",
        "context",
        "goals"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "datetime.now",
        "self.cognitive_monitor.monitor_real_time",
        "self._generate_overall_assessment",
        "self.supervision_history.append",
        "self.supervise_cognitive_process",
        "self.strategy_optimizer.optimize_strategy",
        "self.meta_cognitive_analysis",
        "self.logger.error",
        "str",
        "cognitive_data.get",
        "cognitive_data.get",
        "cognitive_data.get",
        "cognitive_data.get",
        "cognitive_data.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:comprehensive_cognitive_supervision"
    },
    {
      "type": "function",
      "name": "reflect_and_learn",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 1801,
      "complexity": 1,
      "docstring": "\u53cd\u601d\u548c\u5b66\u4e60",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "experience_data",
        "outcome"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.reflection_engine.reflect_on_experience",
        "self.supervision_metrics.get",
        "self.logger.error",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:reflect_and_learn"
    },
    {
      "type": "function",
      "name": "get_learning_summary",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 1816,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u5b66\u4e60\u603b\u7ed3",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.reflection_engine.generate_learning_summary"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:get_learning_summary"
    },
    {
      "type": "function",
      "name": "get_meta_cognitive_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 1820,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u5143\u8ba4\u77e5\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "len",
        "len",
        "len",
        "len",
        "len",
        "list",
        "self.strategy_optimizer.strategy_bank.keys"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:get_meta_cognitive_state"
    },
    {
      "type": "function",
      "name": "_generate_overall_assessment",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 1849,
      "complexity": 1,
      "docstring": "\u751f\u6210\u6574\u4f53\u8bc4\u4f30",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "supervision_result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "supervision_result.get",
        "supervision_result.get",
        "supervision_result.get",
        "supervision_result['basic_supervision'].get",
        "supervision_result['real_time_monitoring'].get",
        "any",
        "supervision_result['strategy_optimization'].get",
        "len",
        "assessment['critical_issues'].append",
        "assessment['critical_issues'].append",
        "assessment['priority_recommendations'].append",
        "len",
        "alert.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:_generate_overall_assessment"
    },
    {
      "type": "function",
      "name": "clear_supervision_history",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 1883,
      "complexity": 1,
      "docstring": "\u6e05\u9664\u76d1\u7763\u5386\u53f2",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.supervision_history.clear",
        "self.detected_biases.clear",
        "self.detected_logic_errors.clear",
        "self.consistency_issues.clear",
        "self.ultra_think.monitoring_history.clear",
        "self.ultra_think.strategy_performance.clear"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:clear_supervision_history"
    },
    {
      "type": "function",
      "name": "json_serializer",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py",
      "line_number": 1028,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "obj"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "isinstance",
        "TypeError",
        "obj.isoformat",
        "type"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:json_serializer"
    },
    {
      "type": "function",
      "name": "test_deepseek_response",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/debug_deepseek_response.py",
      "line_number": 17,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5DeepSeek API\u54cd\u5e94",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "os.getenv",
        "os.getenv",
        "print",
        "print",
        "print",
        "print",
        "print",
        "ChatDeepSeek",
        "print",
        "llm.invoke",
        "print",
        "print",
        "print",
        "llm.invoke",
        "print",
        "print",
        "llm.invoke",
        "print",
        "traceback.print_exc",
        "print",
        "print",
        "ChatOpenAI",
        "print",
        "ChatOpenAI",
        "print",
        "response.content.strip",
        "print",
        "print",
        "response.content.strip",
        "print",
        "print",
        "print",
        "json.dumps",
        "response.content.strip",
        "print",
        "print",
        "print",
        "print",
        "json.loads",
        "print",
        "json.loads",
        "print",
        "print",
        "print",
        "type",
        "response.content.strip",
        "print",
        "print",
        "response.content.strip",
        "json.dumps",
        "print",
        "print",
        "len",
        "len",
        "len",
        "repr"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/debug_deepseek_response.py:test_deepseek_response"
    },
    {
      "type": "function",
      "name": "analyze_prompt_issues",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/debug_deepseek_response.py",
      "line_number": 174,
      "complexity": 1,
      "docstring": "\u5206\u6790\u53ef\u80fd\u5bfc\u81f4\u7a7a\u54cd\u5e94\u7684\u63d0\u793a\u95ee\u9898",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "enumerate",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/debug_deepseek_response.py:analyze_prompt_issues"
    },
    {
      "type": "function",
      "name": "suggest_prompt_optimization",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/debug_deepseek_response.py",
      "line_number": 200,
      "complexity": 1,
      "docstring": "\u5efa\u8bae\u63d0\u793a\u4f18\u5316\u7b56\u7565",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/debug_deepseek_response.py:suggest_prompt_optimization"
    },
    {
      "type": "function",
      "name": "get_simplified_strategy_optimization_prompt",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/simplified_superego_prompts.py",
      "line_number": 6,
      "complexity": 1,
      "docstring": "\u7b80\u5316\u7684\u7b56\u7565\u4f18\u5316\u63d0\u793a",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "performance_data",
        "context_data",
        "goals_data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/simplified_superego_prompts.py:get_simplified_strategy_optimization_prompt"
    },
    {
      "type": "function",
      "name": "get_simplified_strategy_regulation_prompt",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/simplified_superego_prompts.py",
      "line_number": 20,
      "complexity": 1,
      "docstring": "\u7b80\u5316\u7684\u7b56\u7565\u8c03\u8282\u63d0\u793a",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "context_data",
        "goals_data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/simplified_superego_prompts.py:get_simplified_strategy_regulation_prompt"
    },
    {
      "type": "function",
      "name": "get_simplified_reflection_prompt",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/simplified_superego_prompts.py",
      "line_number": 34,
      "complexity": 1,
      "docstring": "\u7b80\u5316\u7684\u53cd\u601d\u63d0\u793a",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "experience_data",
        "outcome_data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/simplified_superego_prompts.py:get_simplified_reflection_prompt"
    },
    {
      "type": "function",
      "name": "get_simplified_meta_learning_prompt",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/simplified_superego_prompts.py",
      "line_number": 48,
      "complexity": 1,
      "docstring": "\u7b80\u5316\u7684\u5143\u5b66\u4e60\u63d0\u793a",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "success_cases",
        "failure_cases"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/simplified_superego_prompts.py:get_simplified_meta_learning_prompt"
    },
    {
      "type": "function",
      "name": "optimize_prompt_for_llm",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/simplified_superego_prompts.py",
      "line_number": 71,
      "complexity": 1,
      "docstring": "\u4f18\u5316\u63d0\u793a\u8bcd\u4ee5\u63d0\u9ad8LLM\u54cd\u5e94\u7387",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "original_prompt"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/simplified_superego_prompts.py:optimize_prompt_for_llm"
    },
    {
      "type": "function",
      "name": "get_fallback_responses",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/simplified_superego_prompts.py",
      "line_number": 82,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u5907\u7528\u54cd\u5e94\u6a21\u677f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/simplified_superego_prompts.py:get_fallback_responses"
    },
    {
      "type": "class",
      "name": "CognitiveDebugVisualizer",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py",
      "line_number": 29,
      "complexity": 1,
      "docstring": "\u8ba4\u77e5\u8c03\u8bd5\u53ef\u89c6\u5316\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "create_gui",
        "_create_menu",
        "_create_toolbar",
        "_create_main_panels",
        "_create_steps_panel",
        "_create_breakpoints_panel",
        "_create_bugs_panel",
        "_create_performance_panel",
        "_create_console_panel",
        "_start_debugging",
        "_stop_debugging",
        "_pause_debugging",
        "_add_breakpoint",
        "_add_breakpoint_dialog",
        "_remove_selected_breakpoint",
        "_clear_all_breakpoints",
        "_clear_debug_history",
        "_refresh_all",
        "_refresh_steps",
        "_refresh_breakpoints",
        "_refresh_bugs",
        "_refresh_performance",
        "_start_auto_refresh",
        "_auto_refresh_loop",
        "_execute_console_command",
        "_console_print",
        "_update_status",
        "_on_step_double_click",
        "_on_bug_double_click",
        "_show_step_details",
        "_show_bug_details",
        "_export_debug_log",
        "_import_breakpoints",
        "run"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py:CognitiveDebugVisualizer"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py",
      "line_number": 32,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u53ef\u89c6\u5316\u5668\n\nArgs:\n    debug_agent: \u8ba4\u77e5\u8c03\u8bd5\u667a\u80fd\u4f53\u5b9e\u4f8b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "debug_agent"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py:__init__"
    },
    {
      "type": "function",
      "name": "create_gui",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py",
      "line_number": 62,
      "complexity": 1,
      "docstring": "\u521b\u5efaGUI\u754c\u9762",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "tk.Tk",
        "self.root.title",
        "self.root.geometry",
        "self._create_menu",
        "self._create_toolbar",
        "self._create_main_panels",
        "self._start_auto_refresh"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py:create_gui"
    },
    {
      "type": "function",
      "name": "_create_menu",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py",
      "line_number": 80,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u83dc\u5355\u680f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "tk.Menu",
        "self.root.config",
        "tk.Menu",
        "menubar.add_cascade",
        "file_menu.add_command",
        "file_menu.add_command",
        "file_menu.add_separator",
        "file_menu.add_command",
        "tk.Menu",
        "menubar.add_cascade",
        "debug_menu.add_command",
        "debug_menu.add_command",
        "debug_menu.add_separator",
        "debug_menu.add_command",
        "debug_menu.add_command",
        "tk.Menu",
        "menubar.add_cascade",
        "view_menu.add_command",
        "view_menu.add_checkbutton",
        "tk.BooleanVar"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py:_create_menu"
    },
    {
      "type": "function",
      "name": "_create_toolbar",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py",
      "line_number": 108,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u5de5\u5177\u680f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "tk.Frame",
        "toolbar_frame.pack",
        "tk.Button(toolbar_frame, text='\u25b6 \u5f00\u59cb', command=self._start_debugging).pack",
        "tk.Button(toolbar_frame, text='\u23f8 \u6682\u505c', command=self._pause_debugging).pack",
        "tk.Button(toolbar_frame, text='\u23f9 \u505c\u6b62', command=self._stop_debugging).pack",
        "tk.Button(toolbar_frame, text='\u21bb \u5237\u65b0', command=self._refresh_all).pack",
        "ttk.Separator(toolbar_frame, orient=tk.VERTICAL).pack",
        "tk.Button(toolbar_frame, text='+ \u6dfb\u52a0\u65ad\u70b9', command=self._add_breakpoint_dialog).pack",
        "tk.Button(toolbar_frame, text='- \u5220\u9664\u65ad\u70b9', command=self._remove_selected_breakpoint).pack",
        "tk.Label",
        "self.status_label.pack",
        "tk.Button",
        "tk.Button",
        "tk.Button",
        "tk.Button",
        "ttk.Separator",
        "tk.Button",
        "tk.Button"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py:_create_toolbar"
    },
    {
      "type": "function",
      "name": "_create_main_panels",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py",
      "line_number": 130,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u4e3b\u9762\u677f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "ttk.Notebook",
        "self.notebook.pack",
        "self._create_steps_panel",
        "self._create_breakpoints_panel",
        "self._create_bugs_panel",
        "self._create_performance_panel",
        "self._create_console_panel"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py:_create_main_panels"
    },
    {
      "type": "function",
      "name": "_create_steps_panel",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py",
      "line_number": 151,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u8ba4\u77e5\u6b65\u9aa4\u9762\u677f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "ttk.Frame",
        "self.notebook.add",
        "ttk.Treeview",
        "ttk.Scrollbar",
        "self.step_tree.configure",
        "self.step_tree.pack",
        "step_scrollbar.pack",
        "self.step_tree.bind",
        "self.step_tree.heading",
        "self.step_tree.column"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py:_create_steps_panel"
    },
    {
      "type": "function",
      "name": "_create_breakpoints_panel",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py",
      "line_number": 175,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u65ad\u70b9\u7ba1\u7406\u9762\u677f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "ttk.Frame",
        "self.notebook.add",
        "tk.Frame",
        "control_frame.pack",
        "tk.Label(control_frame, text='\u5c42\u7ea7:').pack",
        "tk.StringVar",
        "ttk.Combobox",
        "layer_combo.pack",
        "tk.Label(control_frame, text='\u6761\u4ef6:').pack",
        "tk.StringVar",
        "tk.Entry",
        "condition_entry.pack",
        "tk.Button(control_frame, text='\u6dfb\u52a0\u65ad\u70b9', command=self._add_breakpoint).pack",
        "ttk.Treeview",
        "ttk.Scrollbar",
        "self.breakpoint_tree.configure",
        "self.breakpoint_tree.pack",
        "bp_scrollbar.pack",
        "self.breakpoint_tree.heading",
        "self.breakpoint_tree.column",
        "tk.Label",
        "tk.Label",
        "tk.Button"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py:_create_breakpoints_panel"
    },
    {
      "type": "function",
      "name": "_create_bugs_panel",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py",
      "line_number": 213,
      "complexity": 1,
      "docstring": "\u521b\u5efaBug\u62a5\u544a\u9762\u677f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "ttk.Frame",
        "self.notebook.add",
        "ttk.Treeview",
        "ttk.Scrollbar",
        "self.bug_tree.configure",
        "self.bug_tree.pack",
        "bug_scrollbar.pack",
        "self.bug_tree.bind",
        "self.bug_tree.heading",
        "self.bug_tree.column"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py:_create_bugs_panel"
    },
    {
      "type": "function",
      "name": "_create_performance_panel",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py",
      "line_number": 237,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u6027\u80fd\u76d1\u63a7\u9762\u677f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "ttk.Frame",
        "self.notebook.add",
        "Figure",
        "fig.add_subplot",
        "self.time_subplot.set_title",
        "self.time_subplot.set_xlabel",
        "self.time_subplot.set_ylabel",
        "fig.add_subplot",
        "self.success_subplot.set_title",
        "fig.add_subplot",
        "self.layer_subplot.set_title",
        "fig.add_subplot",
        "self.bug_subplot.set_title",
        "FigureCanvasTkAgg",
        "self.performance_canvas.draw",
        "self.performance_canvas.get_tk_widget().pack",
        "self.performance_canvas.get_tk_widget"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py:_create_performance_panel"
    },
    {
      "type": "function",
      "name": "_create_console_panel",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py",
      "line_number": 268,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u63a7\u5236\u53f0\u9762\u677f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "ttk.Frame",
        "self.notebook.add",
        "tk.Frame",
        "input_frame.pack",
        "tk.Label(input_frame, text='\u547d\u4ee4:').pack",
        "tk.Entry",
        "self.console_input.pack",
        "self.console_input.bind",
        "tk.Button(input_frame, text='\u6267\u884c', command=self._execute_console_command).pack",
        "scrolledtext.ScrolledText",
        "self.console_text.pack",
        "self._console_print",
        "self._console_print",
        "tk.Label",
        "tk.Button"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py:_create_console_panel"
    },
    {
      "type": "function",
      "name": "_start_debugging",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py",
      "line_number": 292,
      "complexity": 1,
      "docstring": "\u5f00\u59cb\u8c03\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._console_print",
        "self._update_status"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py:_start_debugging"
    },
    {
      "type": "function",
      "name": "_stop_debugging",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py",
      "line_number": 299,
      "complexity": 1,
      "docstring": "\u505c\u6b62\u8c03\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._console_print",
        "self._update_status"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py:_stop_debugging"
    },
    {
      "type": "function",
      "name": "_pause_debugging",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py",
      "line_number": 306,
      "complexity": 1,
      "docstring": "\u6682\u505c\u8c03\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._console_print",
        "self._update_status"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py:_pause_debugging"
    },
    {
      "type": "function",
      "name": "_add_breakpoint",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py",
      "line_number": 314,
      "complexity": 1,
      "docstring": "\u6dfb\u52a0\u65ad\u70b9",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.bp_layer_var.get",
        "self.bp_condition_var.get().strip",
        "messagebox.showwarning",
        "self.debugger.set_cognitive_breakpoint",
        "self._console_print",
        "self.bp_condition_var.set",
        "self._refresh_breakpoints",
        "self.bp_condition_var.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py:_add_breakpoint"
    },
    {
      "type": "function",
      "name": "_add_breakpoint_dialog",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py",
      "line_number": 329,
      "complexity": 1,
      "docstring": "\u6dfb\u52a0\u65ad\u70b9\u5bf9\u8bdd\u6846",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "tk.Toplevel",
        "dialog.title",
        "dialog.geometry",
        "dialog.grab_set",
        "tk.Label(dialog, text='\u5c42\u7ea7:').pack",
        "tk.StringVar",
        "ttk.Combobox",
        "layer_combo.pack",
        "tk.Label(dialog, text='\u6761\u4ef6:').pack",
        "tk.Text",
        "condition_text.pack",
        "tk.Frame",
        "button_frame.pack",
        "tk.Button(button_frame, text='\u6dfb\u52a0', command=add_bp).pack",
        "tk.Button(button_frame, text='\u53d6\u6d88', command=dialog.destroy).pack",
        "condition_text.get('1.0', tk.END).strip",
        "tk.Label",
        "tk.Label",
        "self.debugger.set_cognitive_breakpoint",
        "self._console_print",
        "dialog.destroy",
        "self._refresh_breakpoints",
        "tk.Button",
        "tk.Button",
        "condition_text.get",
        "layer_var.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py:_add_breakpoint_dialog"
    },
    {
      "type": "function",
      "name": "_remove_selected_breakpoint",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py",
      "line_number": 363,
      "complexity": 1,
      "docstring": "\u5220\u9664\u9009\u4e2d\u7684\u65ad\u70b9",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.breakpoint_tree.selection",
        "messagebox.showwarning",
        "self.debugger.remove_breakpoint",
        "self._console_print",
        "self._refresh_breakpoints",
        "self.breakpoint_tree.item"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py:_remove_selected_breakpoint"
    },
    {
      "type": "function",
      "name": "_clear_all_breakpoints",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py",
      "line_number": 375,
      "complexity": 1,
      "docstring": "\u6e05\u9664\u6240\u6709\u65ad\u70b9",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "messagebox.askyesno",
        "self.debugger.breakpoints.clear",
        "self._console_print",
        "self._refresh_breakpoints"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py:_clear_all_breakpoints"
    },
    {
      "type": "function",
      "name": "_clear_debug_history",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py",
      "line_number": 383,
      "complexity": 1,
      "docstring": "\u6e05\u9664\u8c03\u8bd5\u5386\u53f2",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "messagebox.askyesno",
        "self.debugger.cognitive_steps.clear",
        "self.debugger.bug_reports.clear",
        "self._console_print",
        "self._refresh_all"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py:_clear_debug_history"
    },
    {
      "type": "function",
      "name": "_refresh_all",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py",
      "line_number": 392,
      "complexity": 1,
      "docstring": "\u5237\u65b0\u6240\u6709\u9762\u677f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._refresh_steps",
        "self._refresh_breakpoints",
        "self._refresh_bugs",
        "self._refresh_performance"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py:_refresh_all"
    },
    {
      "type": "function",
      "name": "_refresh_steps",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py",
      "line_number": 399,
      "complexity": 1,
      "docstring": "\u5237\u65b0\u8ba4\u77e5\u6b65\u9aa4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.step_tree.get_children",
        "self.step_tree.delete",
        "self.step_tree.insert",
        "step.timestamp.strftime"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py:_refresh_steps"
    },
    {
      "type": "function",
      "name": "_refresh_breakpoints",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py",
      "line_number": 420,
      "complexity": 1,
      "docstring": "\u5237\u65b0\u65ad\u70b9\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.breakpoint_tree.get_children",
        "self.debugger.breakpoints.items",
        "self.breakpoint_tree.delete",
        "self.breakpoint_tree.insert",
        "bp.created_at.strftime"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py:_refresh_breakpoints"
    },
    {
      "type": "function",
      "name": "_refresh_bugs",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py",
      "line_number": 441,
      "complexity": 1,
      "docstring": "\u5237\u65b0Bug\u62a5\u544a",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.bug_tree.get_children",
        "self.bug_tree.delete",
        "self.bug_tree.insert",
        "bug.timestamp.strftime"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py:_refresh_bugs"
    },
    {
      "type": "function",
      "name": "_refresh_performance",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py",
      "line_number": 462,
      "complexity": 1,
      "docstring": "\u5237\u65b0\u6027\u80fd\u76d1\u63a7\u56fe\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.time_subplot.clear",
        "self.success_subplot.clear",
        "self.layer_subplot.clear",
        "self.bug_subplot.clear",
        "self.performance_canvas.figure.tight_layout",
        "self.performance_canvas.draw",
        "self.time_subplot.plot",
        "self.time_subplot.set_title",
        "self.time_subplot.set_xlabel",
        "self.time_subplot.set_ylabel",
        "sum",
        "self.success_subplot.pie",
        "self.success_subplot.set_title",
        "print",
        "len",
        "self.layer_subplot.bar",
        "self.layer_subplot.set_title",
        "self.layer_subplot.set_xlabel",
        "self.layer_subplot.set_ylabel",
        "self.bug_subplot.bar",
        "self.bug_subplot.set_title",
        "self.bug_subplot.set_xlabel",
        "self.bug_subplot.set_ylabel",
        "layer_counts.get",
        "layer_counts.keys",
        "layer_counts.values",
        "severity_counts.get",
        "colors.get",
        "severity_counts.keys",
        "severity_counts.values",
        "severity_counts.keys"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py:_refresh_performance"
    },
    {
      "type": "function",
      "name": "_start_auto_refresh",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py",
      "line_number": 528,
      "complexity": 1,
      "docstring": "\u542f\u52a8\u81ea\u52a8\u5237\u65b0",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "threading.Thread",
        "self.refresh_thread.start"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py:_start_auto_refresh"
    },
    {
      "type": "function",
      "name": "_auto_refresh_loop",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py",
      "line_number": 535,
      "complexity": 1,
      "docstring": "\u81ea\u52a8\u5237\u65b0\u5faa\u73af",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.root.winfo_exists",
        "self.root.after",
        "time.sleep",
        "print",
        "time.sleep"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py:_auto_refresh_loop"
    },
    {
      "type": "function",
      "name": "_execute_console_command",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py",
      "line_number": 548,
      "complexity": 1,
      "docstring": "\u6267\u884c\u63a7\u5236\u53f0\u547d\u4ee4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "event"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.console_input.get().strip",
        "self.console_input.delete",
        "self._console_print",
        "self.console_input.get",
        "self._console_print",
        "self._console_print",
        "self._console_print",
        "self._console_print",
        "self._console_print",
        "self._console_print",
        "self._console_print",
        "self.debugger.get_debug_summary",
        "self._console_print",
        "self._console_print",
        "self._console_print",
        "self.debugger.breakpoints.items",
        "json.dumps",
        "self._console_print",
        "self._console_print",
        "self.console_text.delete",
        "self._console_print",
        "len",
        "self._console_print",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py:_execute_console_command"
    },
    {
      "type": "function",
      "name": "_console_print",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py",
      "line_number": 596,
      "complexity": 1,
      "docstring": "\u5728\u63a7\u5236\u53f0\u6253\u5370\u6d88\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "message"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "datetime.now().strftime",
        "self.console_text.insert",
        "self.console_text.see",
        "datetime.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py:_console_print"
    },
    {
      "type": "function",
      "name": "_update_status",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py",
      "line_number": 603,
      "complexity": 1,
      "docstring": "\u66f4\u65b0\u72b6\u6001\u680f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "status"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "hasattr",
        "self.status_label.config"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py:_update_status"
    },
    {
      "type": "function",
      "name": "_on_step_double_click",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py",
      "line_number": 608,
      "complexity": 1,
      "docstring": "\u8ba4\u77e5\u6b65\u9aa4\u53cc\u51fb\u4e8b\u4ef6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "event"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.step_tree.selection",
        "self._show_step_details",
        "self.step_tree.item"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py:_on_step_double_click"
    },
    {
      "type": "function",
      "name": "_on_bug_double_click",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py",
      "line_number": 615,
      "complexity": 1,
      "docstring": "Bug\u62a5\u544a\u53cc\u51fb\u4e8b\u4ef6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "event"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.bug_tree.selection",
        "self._show_bug_details",
        "self.bug_tree.item"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py:_on_bug_double_click"
    },
    {
      "type": "function",
      "name": "_show_step_details",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py",
      "line_number": 622,
      "complexity": 1,
      "docstring": "\u663e\u793a\u6b65\u9aa4\u8be6\u60c5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "tk.Toplevel",
        "details_window.title",
        "details_window.geometry",
        "scrolledtext.ScrolledText",
        "details_text.pack",
        "details_text.insert",
        "details_text.config",
        "s.step_id.startswith",
        "json.dumps",
        "json.dumps",
        "json.dumps",
        "json.dumps",
        "json.dumps"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py:_show_step_details"
    },
    {
      "type": "function",
      "name": "_show_bug_details",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py",
      "line_number": 675,
      "complexity": 1,
      "docstring": "\u663e\u793aBug\u8be6\u60c5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "bug_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "tk.Toplevel",
        "details_window.title",
        "details_window.geometry",
        "scrolledtext.ScrolledText",
        "details_text.pack",
        "details_text.insert",
        "details_text.config",
        "b.bug_id.startswith",
        "json.dumps"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py:_show_bug_details"
    },
    {
      "type": "function",
      "name": "_export_debug_log",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py",
      "line_number": 716,
      "complexity": 1,
      "docstring": "\u5bfc\u51fa\u8c03\u8bd5\u65e5\u5fd7",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "filedialog.asksaveasfilename",
        "self._console_print",
        "datetime.now().isoformat",
        "open",
        "json.dump",
        "messagebox.showerror",
        "asdict",
        "asdict",
        "asdict",
        "datetime.now",
        "self.debugger.breakpoints.items"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py:_export_debug_log"
    },
    {
      "type": "function",
      "name": "_import_breakpoints",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py",
      "line_number": 745,
      "complexity": 1,
      "docstring": "\u5bfc\u5165\u65ad\u70b9\u914d\u7f6e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "filedialog.askopenfilename",
        "data.get",
        "breakpoints.values",
        "self._console_print",
        "self._refresh_breakpoints",
        "open",
        "json.load",
        "messagebox.showerror",
        "self.debugger.set_cognitive_breakpoint"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py:_import_breakpoints"
    },
    {
      "type": "function",
      "name": "run",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py",
      "line_number": 775,
      "complexity": 1,
      "docstring": "\u8fd0\u884c\u53ef\u89c6\u5316\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.create_gui",
        "self.root.mainloop",
        "self.refresh_thread.join"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py:run"
    },
    {
      "type": "function",
      "name": "add_bp",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py",
      "line_number": 352,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "condition_text.get('1.0', tk.END).strip",
        "self.debugger.set_cognitive_breakpoint",
        "self._console_print",
        "dialog.destroy",
        "self._refresh_breakpoints",
        "condition_text.get",
        "layer_var.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_visualizer.py:add_bp"
    },
    {
      "type": "class",
      "name": "CognitiveState",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py",
      "line_number": 34,
      "complexity": 1,
      "docstring": "\u8ba4\u77e5\u72b6\u6001\u679a\u4e3e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py:CognitiveState"
    },
    {
      "type": "class",
      "name": "DebugLevel",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py",
      "line_number": 45,
      "complexity": 1,
      "docstring": "\u8c03\u8bd5\u7ea7\u522b\u679a\u4e3e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py:DebugLevel"
    },
    {
      "type": "class",
      "name": "CognitiveStep",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py",
      "line_number": 54,
      "complexity": 1,
      "docstring": "\u8ba4\u77e5\u6b65\u9aa4\u6570\u636e\u7ed3\u6784",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py:CognitiveStep"
    },
    {
      "type": "class",
      "name": "CognitiveBreakpoint",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py",
      "line_number": 71,
      "complexity": 1,
      "docstring": "\u8ba4\u77e5\u65ad\u70b9\u6570\u636e\u7ed3\u6784",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py:CognitiveBreakpoint"
    },
    {
      "type": "class",
      "name": "BugReport",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py",
      "line_number": 83,
      "complexity": 1,
      "docstring": "Bug\u62a5\u544a\u6570\u636e\u7ed3\u6784",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py:BugReport"
    },
    {
      "type": "class",
      "name": "CognitiveDebugger",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py",
      "line_number": 95,
      "complexity": 1,
      "docstring": "\u8ba4\u77e5\u5de5\u4f5c\u6d41\u8c03\u8bd5\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "set_cognitive_breakpoint",
        "remove_breakpoint",
        "evaluate_breakpoint_condition",
        "record_cognitive_step",
        "_check_breakpoints",
        "_pause_execution",
        "resume_execution",
        "start_async_monitoring",
        "stop_async_monitoring",
        "_async_bug_monitoring",
        "_analyze_potential_bug",
        "get_debug_summary"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py:CognitiveDebugger"
    },
    {
      "type": "class",
      "name": "CognitiveDebugAgent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py",
      "line_number": 310,
      "complexity": 1,
      "docstring": "\u8ba4\u77e5\u8c03\u8bd5\u667a\u80fd\u4f53 - \u8ba4\u77e5\u5de5\u4f5c\u6d41\u8c03\u8bd5\u4e0e\u76d1\u63a7\u5c42",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "execute_with_debugging",
        "_debug_preprocessing",
        "_debug_postprocessing",
        "_analyze_task_complexity",
        "_analyze_performance",
        "_update_performance_metrics",
        "get_debug_summary",
        "set_debug_breakpoint",
        "get_bug_reports",
        "get_cognitive_trace",
        "__del__"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "AgentBase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py:CognitiveDebugAgent"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py",
      "line_number": 313,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u8ba4\u77e5\u8c03\u8bd5\u667a\u80fd\u4f53\n\nArgs:\n    cognitive_agent: \u88ab\u8c03\u8bd5\u7684\u8ba4\u77e5\u667a\u80fd\u4f53\n    llm: \u8bed\u8a00\u6a21\u578b\n    gemini_flash_client: Gemini Flash\u5ba2\u6237\u7aef\n    enable_debugging: \u662f\u5426\u542f\u7528\u8c03\u8bd5\u529f\u80fd\n    enable_step_tracking: \u662f\u5426\u542f\u7528\u6b65\u9aa4\u8ddf\u8e2a",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "cognitive_agent",
        "llm",
        "gemini_flash_client",
        "enable_debugging",
        "enable_step_tracking"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "super().__init__",
        "logging.getLogger",
        "CognitiveDebugger",
        "self.debugger.start_async_monitoring",
        "super"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py:__init__"
    },
    {
      "type": "function",
      "name": "set_cognitive_breakpoint",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py",
      "line_number": 120,
      "complexity": 1,
      "docstring": "\u8bbe\u7f6e\u8ba4\u77e5\u65ad\u70b9",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "layer",
        "condition",
        "metadata"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "CognitiveBreakpoint",
        "self.logger.info",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py:set_cognitive_breakpoint"
    },
    {
      "type": "function",
      "name": "remove_breakpoint",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py",
      "line_number": 134,
      "complexity": 1,
      "docstring": "\u79fb\u9664\u65ad\u70b9",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "breakpoint_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py:remove_breakpoint"
    },
    {
      "type": "function",
      "name": "evaluate_breakpoint_condition",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py",
      "line_number": 142,
      "complexity": 1,
      "docstring": "\u8bc4\u4f30\u65ad\u70b9\u6761\u4ef6\uff08\u4f7f\u7528Gemini Flash\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "breakpoint",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "any",
        "self.gemini_flash_client.generate_content",
        "response.text.strip().lower",
        "self.logger.error",
        "json.dumps",
        "str",
        "breakpoint.condition.split",
        "response.text.strip",
        "context.values"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py:evaluate_breakpoint_condition"
    },
    {
      "type": "function",
      "name": "record_cognitive_step",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py",
      "line_number": 168,
      "complexity": 1,
      "docstring": "\u8bb0\u5f55\u8ba4\u77e5\u6b65\u9aa4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.cognitive_steps.append",
        "self._check_breakpoints"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py:record_cognitive_step"
    },
    {
      "type": "function",
      "name": "_check_breakpoints",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py",
      "line_number": 180,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u65ad\u70b9\u6761\u4ef6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.breakpoints.items",
        "self.evaluate_breakpoint_condition",
        "self.logger.info",
        "self._pause_execution"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py:_check_breakpoints"
    },
    {
      "type": "function",
      "name": "_pause_execution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py",
      "line_number": 203,
      "complexity": 1,
      "docstring": "\u6682\u505c\u6267\u884c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py:_pause_execution"
    },
    {
      "type": "function",
      "name": "resume_execution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py",
      "line_number": 208,
      "complexity": 1,
      "docstring": "\u6062\u590d\u6267\u884c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py:resume_execution"
    },
    {
      "type": "function",
      "name": "start_async_monitoring",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py",
      "line_number": 213,
      "complexity": 1,
      "docstring": "\u542f\u52a8\u5f02\u6b65bug\u76d1\u63a7",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "threading.Thread",
        "self.monitoring_thread.start",
        "self.logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py:start_async_monitoring"
    },
    {
      "type": "function",
      "name": "stop_async_monitoring",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py",
      "line_number": 226,
      "complexity": 1,
      "docstring": "\u505c\u6b62\u5f02\u6b65bug\u76d1\u63a7",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.logger.info",
        "self.monitoring_thread.join"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py:stop_async_monitoring"
    },
    {
      "type": "function",
      "name": "_async_bug_monitoring",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py",
      "line_number": 233,
      "complexity": 1,
      "docstring": "\u5f02\u6b65bug\u76d1\u63a7\u4e3b\u5faa\u73af",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "time.sleep",
        "self.logger.error",
        "time.sleep",
        "self._analyze_potential_bug"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py:_async_bug_monitoring"
    },
    {
      "type": "function",
      "name": "_analyze_potential_bug",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py",
      "line_number": 250,
      "complexity": 1,
      "docstring": "\u5206\u6790\u6f5c\u5728\u7684bug\uff08\u4f7f\u7528Gemini Flash\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.gemini_flash_client.generate_content",
        "json.loads",
        "analysis.get",
        "response.text.strip",
        "BugReport",
        "self.bug_reports.append",
        "self.logger.warning",
        "self.logger.error",
        "json.dumps",
        "json.dumps",
        "datetime.now",
        "analysis.get",
        "analysis.get",
        "analysis.get",
        "int",
        "time.time"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py:_analyze_potential_bug"
    },
    {
      "type": "function",
      "name": "get_debug_summary",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py",
      "line_number": 509,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u8c03\u8bd5\u6458\u8981",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "self.debugger.get_debug_summary"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py:get_debug_summary"
    },
    {
      "type": "function",
      "name": "execute_with_debugging",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py",
      "line_number": 360,
      "complexity": 1,
      "docstring": "\u5728\u8c03\u8bd5\u76d1\u63a7\u4e0b\u6267\u884c\u6307\u4ee4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction",
        "debug_level"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "time.time",
        "self._debug_preprocessing",
        "self.cognitive_agent.execute_sync",
        "self._debug_postprocessing",
        "self._update_performance_metrics",
        "time.time",
        "self.logger.error",
        "self._update_performance_metrics",
        "Result",
        "time.time",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py:execute_with_debugging"
    },
    {
      "type": "function",
      "name": "_debug_preprocessing",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py",
      "line_number": 399,
      "complexity": 1,
      "docstring": "\u8c03\u8bd5\u9884\u5904\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._analyze_task_complexity",
        "self.debug_memory.append",
        "CognitiveStep",
        "self.debugger.record_cognitive_step",
        "datetime.now",
        "datetime.now",
        "int",
        "time.time"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py:_debug_preprocessing"
    },
    {
      "type": "function",
      "name": "_debug_postprocessing",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py",
      "line_number": 427,
      "complexity": 1,
      "docstring": "\u8c03\u8bd5\u540e\u5904\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._analyze_performance",
        "CognitiveStep",
        "self.debugger.record_cognitive_step",
        "datetime.now",
        "int",
        "time.time"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py:_debug_postprocessing"
    },
    {
      "type": "function",
      "name": "_analyze_task_complexity",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py",
      "line_number": 450,
      "complexity": 1,
      "docstring": "\u5206\u6790\u4efb\u52a1\u590d\u6742\u5ea6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.llm.invoke",
        "self.logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py:_analyze_task_complexity"
    },
    {
      "type": "function",
      "name": "_analyze_performance",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py",
      "line_number": 480,
      "complexity": 1,
      "docstring": "\u5206\u6790\u6267\u884c\u6027\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.debug_memory.append",
        "datetime.now",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py:_analyze_performance"
    },
    {
      "type": "function",
      "name": "_update_performance_metrics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py",
      "line_number": 495,
      "complexity": 1,
      "docstring": "\u66f4\u65b0\u6027\u80fd\u6307\u6807",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "success",
        "execution_time"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py:_update_performance_metrics"
    },
    {
      "type": "function",
      "name": "set_debug_breakpoint",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py",
      "line_number": 519,
      "complexity": 1,
      "docstring": "\u8bbe\u7f6e\u8c03\u8bd5\u65ad\u70b9",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "layer",
        "condition"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.debugger.set_cognitive_breakpoint",
        "ValueError"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py:set_debug_breakpoint"
    },
    {
      "type": "function",
      "name": "get_bug_reports",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py",
      "line_number": 525,
      "complexity": 1,
      "docstring": "\u83b7\u53d6bug\u62a5\u544a",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py:get_bug_reports"
    },
    {
      "type": "function",
      "name": "get_cognitive_trace",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py",
      "line_number": 529,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u8ba4\u77e5\u8f68\u8ff9",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py:get_cognitive_trace"
    },
    {
      "type": "function",
      "name": "__del__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py",
      "line_number": 533,
      "complexity": 1,
      "docstring": "\u6790\u6784\u51fd\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.debugger.stop_async_monitoring"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py:__del__"
    },
    {
      "type": "class",
      "name": "EgoAgent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/ego_agent.py",
      "line_number": 17,
      "complexity": 1,
      "docstring": "\u81ea\u6211\u667a\u80fd\u4f53 - \u7406\u6027\u601d\u8003\u7cfb\u7edf\n\n\u804c\u8d23\uff1a\n1. \u5206\u6790\u5f53\u524d\u72b6\u6001\u548c\u60c5\u51b5\n2. \u51b3\u5b9a\u4e0b\u4e00\u6b65\u884c\u52a8\u65b9\u5411\n3. \u751f\u6210\u89c2\u5bdf\u548c\u6267\u884c\u6307\u4ee4\n4. \u4e0e\u672c\u6211\u8fdb\u884c\u8bc4\u4f30\u534f\u8c03",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "analyze_current_state",
        "decide_next_action",
        "request_id_evaluation",
        "generate_observation_instruction",
        "generate_execution_instruction",
        "handle_execution_error"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "AgentBase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/ego_agent.py:EgoAgent"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/ego_agent.py",
      "line_number": 28,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "llm",
        "system_message"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "super().__init__",
        "super"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/ego_agent.py:__init__"
    },
    {
      "type": "function",
      "name": "analyze_current_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/ego_agent.py",
      "line_number": 52,
      "complexity": 1,
      "docstring": "\u5206\u6790\u5f53\u524d\u72b6\u6001\u548c\u60c5\u51b5\n\nArgs:\n    context: \u5f53\u524d\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\uff0c\u5305\u62ec\u4efb\u52a1\u63cf\u8ff0\u3001\u6267\u884c\u5386\u53f2\u7b49\n    \nReturns:\n    str: \u72b6\u6001\u5206\u6790\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.chat_sync"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/ego_agent.py:analyze_current_state"
    },
    {
      "type": "function",
      "name": "decide_next_action",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/ego_agent.py",
      "line_number": 78,
      "complexity": 1,
      "docstring": "\u57fa\u4e8e\u72b6\u6001\u5206\u6790\u51b3\u5b9a\u4e0b\u4e00\u6b65\u884c\u52a8\u65b9\u5411\n\nArgs:\n    state_analysis: \u5f53\u524d\u72b6\u6001\u7684\u5206\u6790\u7ed3\u679c\n    \nReturns:\n    str: \u51b3\u7b56\u7ed3\u679c - \"\u7ee7\u7eed\u5faa\u73af\"\u3001\"\u8bf7\u6c42\u8bc4\u4f30\"\u6216\"\u5224\u65ad\u5931\u8d25\"",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "state_analysis"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.chat_sync",
        "json.loads",
        "response_data.get('\u51b3\u7b56', '').strip",
        "result.return_value.strip",
        "response_data.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/ego_agent.py:decide_next_action"
    },
    {
      "type": "function",
      "name": "request_id_evaluation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/ego_agent.py",
      "line_number": 123,
      "complexity": 1,
      "docstring": "\u8bf7\u6c42\u672c\u6211\u8fdb\u884c\u8bc4\u4f30\n\nArgs:\n    current_state: \u5f53\u524d\u72b6\u6001\u63cf\u8ff0\n    \nReturns:\n    str: \u53d1\u7ed9\u672c\u6211\u7684\u8bc4\u4f30\u8bf7\u6c42",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.chat_sync"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/ego_agent.py:request_id_evaluation"
    },
    {
      "type": "function",
      "name": "generate_observation_instruction",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/ego_agent.py",
      "line_number": 148,
      "complexity": 1,
      "docstring": "\u751f\u6210\u89c2\u5bdf\u6307\u4ee4\n\nArgs:\n    thinking_result: \u601d\u8003\u548c\u5206\u6790\u7684\u7ed3\u679c\n    \nReturns:\n    str: \u89c2\u5bdf\u6307\u4ee4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "thinking_result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.chat_sync"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/ego_agent.py:generate_observation_instruction"
    },
    {
      "type": "function",
      "name": "generate_execution_instruction",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/ego_agent.py",
      "line_number": 173,
      "complexity": 1,
      "docstring": "\u751f\u6210\u6267\u884c\u6307\u4ee4\n\nArgs:\n    perception_result: \u89c2\u5bdf\u548c\u611f\u77e5\u7684\u7ed3\u679c\n    \nReturns:\n    str: \u6267\u884c\u6307\u4ee4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "perception_result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.chat_sync"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/ego_agent.py:generate_execution_instruction"
    },
    {
      "type": "function",
      "name": "handle_execution_error",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/ego_agent.py",
      "line_number": 198,
      "complexity": 1,
      "docstring": "\u5904\u7406\u8eab\u4f53\u6267\u884c\u9519\u8bef\n\nArgs:\n    error_info: \u6267\u884c\u5931\u8d25\u7684\u9519\u8bef\u4fe1\u606f\n    original_instruction: \u539f\u59cb\u7684\u6267\u884c\u6307\u4ee4\n    \nReturns:\n    str: \u9519\u8bef\u5904\u7406\u65b9\u6848",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "error_info",
        "original_instruction"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.chat_sync"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/ego_agent.py:handle_execution_error"
    },
    {
      "type": "class",
      "name": "IdAgent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/id_agent.py",
      "line_number": 17,
      "complexity": 1,
      "docstring": "\u672c\u6211\u667a\u80fd\u4f53 - \u4ef7\u503c\u9a71\u52a8\u7cfb\u7edf\n\n\u804c\u8d23\uff1a\n1. \u57fa\u4e8e\u7528\u6237\u6307\u4ee4\u5efa\u7acb\u4ef7\u503c\u6807\u51c6\u548c\u76ee\u6807\n2. \u54cd\u5e94\u81ea\u6211\u7684\u8bc4\u4f30\u8bf7\u6c42\uff0c\u751f\u6210\u89c2\u5bdf\u6307\u4ee4\n3. \u8bc4\u4f30\u76ee\u6807\u8fbe\u6210\u60c5\u51b5\uff0c\u51b3\u5b9a\u5de5\u4f5c\u6d41\u7ee7\u7eed\u6216\u7ec8\u6b62",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "initialize_value_system",
        "generate_evaluation_instruction",
        "evaluate_goal_achievement",
        "get_current_goal",
        "get_value_standard",
        "reset_goal",
        "adjust_value_standard",
        "get_task_specification"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "AgentBase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/id_agent.py:IdAgent"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/id_agent.py",
      "line_number": 27,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "llm",
        "system_message"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "super().__init__",
        "super"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/id_agent.py:__init__"
    },
    {
      "type": "function",
      "name": "initialize_value_system",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/id_agent.py",
      "line_number": 55,
      "complexity": 1,
      "docstring": "\u57fa\u4e8e\u7528\u6237\u6307\u4ee4\u521d\u59cb\u5316\u4ef7\u503c\u7cfb\u7edf\uff0c\u8bbe\u5b9a\u76ee\u6807\u548c\u6807\u51c6\n\nArgs:\n    instruction: \u7528\u6237\u7684\u539f\u59cb\u6307\u4ee4\n    \nReturns:\n    str: \u4ef7\u503c\u7cfb\u7edf\u521d\u59cb\u5316\u7ed3\u679c\uff0c\u5305\u62ec\u76ee\u6807\u548c\u6807\u51c6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.chat_sync",
        "json.loads",
        "response_data.get",
        "response_data.get",
        "response_data.get",
        "response.split('\u76ee\u6807\u63cf\u8ff0\uff1a')[1].split('\u4ef7\u503c\u6807\u51c6\uff1a')[0].strip",
        "response.split('\u4ef7\u503c\u6807\u51c6\uff1a')[1].split('\u9a8c\u8bc1\u65b9\u6cd5\uff1a')[0].strip",
        "response.split('\u76ee\u6807\u63cf\u8ff0\uff1a')[1].split",
        "response.split('\u4ef7\u503c\u6807\u51c6\uff1a')[1].split",
        "response.split",
        "response.split"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/id_agent.py:initialize_value_system"
    },
    {
      "type": "function",
      "name": "generate_evaluation_instruction",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/id_agent.py",
      "line_number": 113,
      "complexity": 1,
      "docstring": "\u54cd\u5e94\u81ea\u6211\u7684\u8bc4\u4f30\u8bf7\u6c42\uff0c\u751f\u6210\u5177\u4f53\u7684\u89c2\u5bdf\u6307\u4ee4\n\nArgs:\n    evaluation_request: \u81ea\u6211\u53d1\u6765\u7684\u8bc4\u4f30\u8bf7\u6c42\n    \nReturns:\n    str: \u53d1\u7ed9\u8eab\u4f53\u7684\u89c2\u5bdf\u6307\u4ee4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "evaluation_request"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.chat_sync"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/id_agent.py:generate_evaluation_instruction"
    },
    {
      "type": "function",
      "name": "evaluate_goal_achievement",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/id_agent.py",
      "line_number": 147,
      "complexity": 1,
      "docstring": "\u57fa\u4e8e\u89c2\u5bdf\u7ed3\u679c\u8bc4\u4f30\u76ee\u6807\u662f\u5426\u8fbe\u6210\n\nArgs:\n    observation_result: \u8eab\u4f53\u89c2\u5bdf\u548c\u68c0\u67e5\u7684\u7ed3\u679c\n    \nReturns:\n    str: JSON\u683c\u5f0f\u7684\u8bc4\u4f30\u7ed3\u679c\uff0c\u5305\u542b\u76ee\u6807\u662f\u5426\u8fbe\u6210\u548c\u539f\u56e0",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "observation_result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.chat_sync",
        "result.return_value.strip",
        "json.loads"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/id_agent.py:evaluate_goal_achievement"
    },
    {
      "type": "function",
      "name": "get_current_goal",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/id_agent.py",
      "line_number": 196,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u5f53\u524d\u8bbe\u5b9a\u7684\u76ee\u6807\u63cf\u8ff0\n\nReturns:\n    str: \u76ee\u6807\u63cf\u8ff0",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/id_agent.py:get_current_goal"
    },
    {
      "type": "function",
      "name": "get_value_standard",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/id_agent.py",
      "line_number": 205,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u5f53\u524d\u8bbe\u5b9a\u7684\u4ef7\u503c\u6807\u51c6\n\nReturns:\n    str: \u4ef7\u503c\u6807\u51c6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/id_agent.py:get_value_standard"
    },
    {
      "type": "function",
      "name": "reset_goal",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/id_agent.py",
      "line_number": 214,
      "complexity": 1,
      "docstring": "\u57fa\u4e8e\u65b0\u6307\u4ee4\u91cd\u65b0\u8bbe\u5b9a\u76ee\u6807\u548c\u4ef7\u503c\u6807\u51c6\n\nArgs:\n    new_instruction: \u65b0\u7684\u7528\u6237\u6307\u4ee4\u6216\u4fee\u6b63\u6307\u4ee4\n    \nReturns:\n    str: \u91cd\u65b0\u8bbe\u5b9a\u540e\u7684\u76ee\u6807\u548c\u6807\u51c6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "new_instruction"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.initialize_value_system"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/id_agent.py:reset_goal"
    },
    {
      "type": "function",
      "name": "adjust_value_standard",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/id_agent.py",
      "line_number": 226,
      "complexity": 1,
      "docstring": "\u57fa\u4e8e\u6267\u884c\u8fc7\u7a0b\u4e2d\u7684\u53d1\u73b0\u8c03\u6574\u4ef7\u503c\u6807\u51c6\n\nArgs:\n    adjustment_description: \u9700\u8981\u8c03\u6574\u7684\u539f\u56e0\u548c\u65b9\u5411\n    \nReturns:\n    str: \u8c03\u6574\u540e\u7684\u4ef7\u503c\u6807\u51c6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "adjustment_description"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.chat_sync"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/id_agent.py:adjust_value_standard"
    },
    {
      "type": "function",
      "name": "get_task_specification",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/id_agent.py",
      "line_number": 258,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u5b8c\u6574\u7684\u4efb\u52a1\u89c4\u683c\n\nReturns:\n    str: \u4efb\u52a1\u89c4\u683c\uff0c\u5305\u542b\u76ee\u6807\u3001\u6807\u51c6\u3001\u9a8c\u8bc1\u65b9\u6cd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/id_agent.py:get_task_specification"
    },
    {
      "type": "function",
      "name": "test_llm_response",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/debug_llm_response.py",
      "line_number": 24,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5LLM\u54cd\u5e94",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "ChatOpenAI",
        "print",
        "print",
        "llm.invoke",
        "print",
        "print",
        "print",
        "print",
        "response.content.strip",
        "print",
        "json.loads",
        "print",
        "print",
        "print",
        "traceback.print_exc",
        "response.content.strip",
        "json.dumps",
        "print",
        "print",
        "print",
        "len",
        "type",
        "len",
        "repr"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/debug_llm_response.py:test_llm_response"
    },
    {
      "type": "function",
      "name": "test_simple_prompt",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/debug_llm_response.py",
      "line_number": 96,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u7b80\u5355\u63d0\u793a",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "ChatOpenAI",
        "print",
        "llm.invoke",
        "print",
        "print",
        "print",
        "response.content.strip",
        "print",
        "print",
        "print",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/debug_llm_response.py:test_simple_prompt"
    },
    {
      "type": "function",
      "name": "\u8fd0\u884cCalculator\u6f14\u793a",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/calculator_demo.py",
      "line_number": 17,
      "complexity": 1,
      "docstring": "\u8fd0\u884cCalculator\u7c7b\u751f\u6210\u6f14\u793a",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "EmbodiedCognitiveWorkflow",
        "print",
        "\u5de5\u4f5c\u6d41.execute_cognitive_cycle",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "\u5de5\u4f5c\u6d41.get_workflow_status",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "traceback.print_exc"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/calculator_demo.py:\u8fd0\u884cCalculator\u6f14\u793a"
    },
    {
      "type": "function",
      "name": "\u6d4b\u8bd5\u5177\u8eab\u8ba4\u77e5\u7ec4\u4ef6",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/calculator_demo.py",
      "line_number": 98,
      "complexity": 1,
      "docstring": "\u5355\u72ec\u6d4b\u8bd5\u5177\u8eab\u8ba4\u77e5\u5de5\u4f5c\u6d41\u7684\u5404\u4e2a\u7ec4\u4ef6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "ChatOpenAI",
        "print",
        "EgoAgent",
        "\u81ea\u6211.analyze_current_state",
        "print",
        "\u81ea\u6211.decide_next_action",
        "print",
        "print",
        "IdAgent",
        "\u672c\u6211.initialize_value_system",
        "print",
        "print",
        "print",
        "os.getenv"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/calculator_demo.py:\u6d4b\u8bd5\u5177\u8eab\u8ba4\u77e5\u7ec4\u4ef6"
    },
    {
      "type": "function",
      "name": "main",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/calculator_demo.py",
      "line_number": 139,
      "complexity": 1,
      "docstring": "\u4e3b\u51fd\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "\u8fd0\u884cCalculator\u6f14\u793a",
        "os.getenv",
        "print",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/calculator_demo.py:main"
    },
    {
      "type": "function",
      "name": "test_all_superego_methods",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_all_superego_methods.py",
      "line_number": 18,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5SuperEgoAgent\u7684\u6240\u6709\u4e3b\u8981\u65b9\u6cd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "os.getenv",
        "print",
        "SuperEgoAgent",
        "print",
        "print",
        "print",
        "print",
        "print",
        "range",
        "print",
        "print",
        "ChatOpenAI",
        "print",
        "os.getenv",
        "super_ego.strategy_optimizer.optimize_strategy",
        "super_ego.ultra_think.regulate_cognitive_strategy",
        "super_ego.reflection_engine.reflect_on_experience",
        "super_ego.supervise_cognitive_process",
        "print",
        "print",
        "traceback.print_exc",
        "ChatOpenAI",
        "print",
        "print",
        "_validate_strategy_schema",
        "print",
        "print",
        "print",
        "_validate_regulation_schema",
        "print",
        "print",
        "print",
        "_validate_reflection_schema",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "super_ego.strategy_optimizer.optimize_strategy",
        "os.getenv",
        "_validate_strategy_schema"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_all_superego_methods.py:test_all_superego_methods"
    },
    {
      "type": "function",
      "name": "_validate_strategy_schema",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_all_superego_methods.py",
      "line_number": 183,
      "complexity": 1,
      "docstring": "\u9a8c\u8bc1\u7b56\u7565\u4f18\u5316\u7ed3\u679c\u662f\u5426\u7b26\u5408schema",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "isinstance",
        "isinstance",
        "len",
        "isinstance"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_all_superego_methods.py:_validate_strategy_schema"
    },
    {
      "type": "function",
      "name": "_validate_regulation_schema",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_all_superego_methods.py",
      "line_number": 203,
      "complexity": 1,
      "docstring": "\u9a8c\u8bc1\u7b56\u7565\u8c03\u8282\u7ed3\u679c\u662f\u5426\u7b26\u5408schema",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "isinstance",
        "isinstance",
        "isinstance",
        "isinstance"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_all_superego_methods.py:_validate_regulation_schema"
    },
    {
      "type": "function",
      "name": "_validate_reflection_schema",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_all_superego_methods.py",
      "line_number": 223,
      "complexity": 1,
      "docstring": "\u9a8c\u8bc1\u53cd\u601d\u7ed3\u679c\u662f\u5426\u7b26\u5408schema",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "isinstance",
        "len",
        "isinstance",
        "len",
        "isinstance"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_all_superego_methods.py:_validate_reflection_schema"
    },
    {
      "type": "function",
      "name": "test_json_response_stability",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_all_superego_methods.py",
      "line_number": 241,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5JSON\u54cd\u5e94\u7a33\u5b9a\u6027",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "os.getenv",
        "StructuredResponseOptimizer",
        "enumerate",
        "print",
        "ChatOpenAI",
        "os.getenv",
        "len",
        "print",
        "range",
        "print",
        "ChatOpenAI",
        "print",
        "os.getenv",
        "optimizer.optimize_strategy_structured",
        "_validate_strategy_schema",
        "len",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_all_superego_methods.py:test_json_response_stability"
    },
    {
      "type": "function",
      "name": "analyze_task_classification",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_refactored.py",
      "line_number": 24,
      "complexity": 1,
      "docstring": "\u5206\u6790\u4efb\u52a1\u5206\u7c7b\u903b\u8f91",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "len",
        "print",
        "instruction.lower().strip",
        "re.search",
        "any",
        "can_handle_directly",
        "print",
        "print",
        "print",
        "print",
        "print",
        "re.search",
        "instruction.lower",
        "any"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_refactored.py:analyze_task_classification"
    },
    {
      "type": "function",
      "name": "compare_architectures",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_refactored.py",
      "line_number": 101,
      "complexity": 1,
      "docstring": "\u5bf9\u6bd4\u91cd\u6784\u524d\u540e\u7684\u67b6\u6784\u5dee\u5f02",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "architectures.items",
        "print",
        "enumerate",
        "print",
        "details.items",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_refactored.py:compare_architectures"
    },
    {
      "type": "function",
      "name": "estimate_performance_improvement",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_refactored.py",
      "line_number": 145,
      "complexity": 1,
      "docstring": "\u4f30\u7b97\u6027\u80fd\u6539\u8fdb",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "performance_data.items",
        "print",
        "print",
        "data.items",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_refactored.py:estimate_performance_improvement"
    },
    {
      "type": "function",
      "name": "main",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_refactored.py",
      "line_number": 183,
      "complexity": 1,
      "docstring": "\u4e3b\u51fd\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "analyze_task_classification",
        "compare_architectures",
        "estimate_performance_improvement",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_refactored.py:main"
    },
    {
      "type": "function",
      "name": "can_handle_directly",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_refactored.py",
      "line_number": 27,
      "complexity": 1,
      "docstring": "\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u76f4\u63a5\u5904\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "instruction"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "instruction.lower().strip",
        "re.search",
        "any",
        "re.search",
        "instruction.lower",
        "any"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_refactored.py:can_handle_directly"
    },
    {
      "type": "class",
      "name": "Calculator",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/calculator.py",
      "line_number": 2,
      "complexity": 1,
      "docstring": "\u4e00\u4e2a\u7b80\u5355\u7684\u56db\u5219\u8fd0\u7b97\u8ba1\u7b97\u5668\u7c7b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "add",
        "subtract",
        "multiply",
        "divide"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/calculator.py:Calculator"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/calculator.py",
      "line_number": 5,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u65b9\u6cd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/calculator.py:__init__"
    },
    {
      "type": "function",
      "name": "add",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/calculator.py",
      "line_number": 9,
      "complexity": 1,
      "docstring": "\u52a0\u6cd5\u8fd0\u7b97",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "a",
        "b"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/calculator.py:add"
    },
    {
      "type": "function",
      "name": "subtract",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/calculator.py",
      "line_number": 13,
      "complexity": 1,
      "docstring": "\u51cf\u6cd5\u8fd0\u7b97",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "a",
        "b"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/calculator.py:subtract"
    },
    {
      "type": "function",
      "name": "multiply",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/calculator.py",
      "line_number": 17,
      "complexity": 1,
      "docstring": "\u4e58\u6cd5\u8fd0\u7b97",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "a",
        "b"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/calculator.py:multiply"
    },
    {
      "type": "function",
      "name": "divide",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/calculator.py",
      "line_number": 21,
      "complexity": 1,
      "docstring": "\u9664\u6cd5\u8fd0\u7b97",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "a",
        "b"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/calculator.py:divide"
    },
    {
      "type": "function",
      "name": "setup_logging",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_cognitive_debug.py",
      "line_number": 45,
      "complexity": 1,
      "docstring": "\u914d\u7f6e\u65e5\u5fd7",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logging.basicConfig"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_cognitive_debug.py:setup_logging"
    },
    {
      "type": "function",
      "name": "demo_basic_cognitive_debug",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_cognitive_debug.py",
      "line_number": 53,
      "complexity": 1,
      "docstring": "\u6f14\u793a\u57fa\u7840\u8ba4\u77e5\u8c03\u8bd5\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "Agent",
        "print",
        "create_cognitive_agent",
        "print",
        "CognitiveDebugAgent",
        "print",
        "debug_agent.execute_with_debugging",
        "print",
        "print",
        "debug_agent.get_debug_summary",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_cognitive_debug.py:demo_basic_cognitive_debug"
    },
    {
      "type": "function",
      "name": "demo_debugging_features",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_cognitive_debug.py",
      "line_number": 96,
      "complexity": 1,
      "docstring": "\u6f14\u793a\u8c03\u8bd5\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "debug_agent"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "debugger.set_cognitive_breakpoint",
        "debugger.set_cognitive_breakpoint",
        "debugger.set_cognitive_breakpoint",
        "print",
        "print",
        "print",
        "print",
        "debugger.get_debug_summary",
        "print",
        "print",
        "debug_agent.get_cognitive_trace",
        "print",
        "print",
        "print",
        "debug_agent.execute_with_debugging",
        "print",
        "time.sleep",
        "print",
        "print",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_cognitive_debug.py:demo_debugging_features"
    },
    {
      "type": "function",
      "name": "demo_gemini_integration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_cognitive_debug.py",
      "line_number": 149,
      "complexity": 1,
      "docstring": "\u6f14\u793aGemini Flash\u96c6\u6210",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "gemini_client.analyze_bug_potential",
        "print",
        "print",
        "print",
        "print",
        "print",
        "create_gemini_client",
        "print",
        "print",
        "gemini_client.health_check",
        "gemini_client.evaluate_breakpoint_condition",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "bug_analysis.get",
        "bug_analysis.get",
        "bug_analysis.get",
        "bug_analysis.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_cognitive_debug.py:demo_gemini_integration"
    },
    {
      "type": "function",
      "name": "demo_cognitive_debug_without_gemini",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_cognitive_debug.py",
      "line_number": 243,
      "complexity": 1,
      "docstring": "\u6f14\u793a\u4e0d\u4f9d\u8d56Gemini\u7684\u8ba4\u77e5\u8c03\u8bd5\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "Agent",
        "create_cognitive_agent",
        "CognitiveDebugAgent",
        "print",
        "print",
        "debug_agent.set_debug_breakpoint",
        "debug_agent.set_debug_breakpoint",
        "debug_agent.set_debug_breakpoint",
        "print",
        "enumerate",
        "print",
        "debug_agent.get_debug_summary",
        "print",
        "print",
        "print",
        "print",
        "print",
        "debug_agent.get_cognitive_trace",
        "print",
        "print",
        "print",
        "print",
        "print",
        "time.time",
        "debug_agent.execute_with_debugging",
        "print",
        "print",
        "time.sleep",
        "print",
        "debug_agent.debugger.get_all_breakpoints",
        "print",
        "time.time",
        "print",
        "print",
        "print",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_cognitive_debug.py:demo_cognitive_debug_without_gemini"
    },
    {
      "type": "function",
      "name": "demo_cognitive_debug_with_gemini",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_cognitive_debug.py",
      "line_number": 334,
      "complexity": 1,
      "docstring": "\u6f14\u793a\u5e26Gemini\u96c6\u6210\u7684\u8ba4\u77e5\u8c03\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "create_gemini_client",
        "Agent",
        "create_cognitive_agent",
        "CognitiveDebugAgent",
        "print",
        "print",
        "debug_agent.set_debug_breakpoint",
        "debug_agent.set_debug_breakpoint",
        "print",
        "print",
        "debug_agent.get_debug_summary",
        "print",
        "print",
        "print",
        "print",
        "debug_agent.get_bug_reports",
        "print",
        "debug_agent.get_cognitive_trace",
        "print",
        "print",
        "print",
        "demo_cognitive_debug_without_gemini",
        "print",
        "time.time",
        "debug_agent.execute_with_debugging",
        "print",
        "print",
        "debug_agent.get_bug_reports",
        "time.time",
        "print",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_cognitive_debug.py:demo_cognitive_debug_with_gemini"
    },
    {
      "type": "function",
      "name": "demo_visualizer",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_cognitive_debug.py",
      "line_number": 415,
      "complexity": 1,
      "docstring": "\u6f14\u793a\u53ef\u89c6\u5316\u754c\u9762",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "debug_agent"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "CognitiveDebugVisualizer",
        "visualizer.run",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_cognitive_debug.py:demo_visualizer"
    },
    {
      "type": "function",
      "name": "main",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_cognitive_debug.py",
      "line_number": 434,
      "complexity": 1,
      "docstring": "\u4e3b\u6f14\u793a\u51fd\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "setup_logging",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "demo_basic_cognitive_debug",
        "print",
        "print",
        "print",
        "demo_debugging_features",
        "print",
        "print",
        "print",
        "demo_gemini_integration",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "input",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "demo_cognitive_debug_with_gemini",
        "print",
        "demo_cognitive_debug_without_gemini",
        "user_input.lower",
        "demo_visualizer",
        "print",
        "print",
        "print",
        "print",
        "traceback.print_exc"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_cognitive_debug.py:main"
    },
    {
      "type": "class",
      "name": "WorkflowStatus",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py",
      "line_number": 21,
      "complexity": 1,
      "docstring": "\u5de5\u4f5c\u6d41\u72b6\u6001\u679a\u4e3e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py:WorkflowStatus"
    },
    {
      "type": "class",
      "name": "DecisionType",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py",
      "line_number": 31,
      "complexity": 1,
      "docstring": "\u51b3\u7b56\u7c7b\u578b\u679a\u4e3e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py:DecisionType"
    },
    {
      "type": "class",
      "name": "WorkflowContext",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py",
      "line_number": 38,
      "complexity": 1,
      "docstring": "\u5de5\u4f5c\u6d41\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "add_cycle_result",
        "update_current_state",
        "update_id_evaluation",
        "update_goal_status",
        "get_current_context"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py:WorkflowContext"
    },
    {
      "type": "class",
      "name": "EmbodiedCognitiveWorkflowOptimized",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py",
      "line_number": 81,
      "complexity": 1,
      "docstring": "\u5177\u8eab\u8ba4\u77e5\u5de5\u4f5c\u6d41\u534f\u8c03\u5668 - \u4f18\u5316\u7248\u672c\n\n\u4f18\u5316\u5185\u5bb9\uff1a\n1. \u62c6\u5206\u5927\u65b9\u6cd5\u4e3a\u5c0f\u65b9\u6cd5\n2. \u4f7f\u7528\u679a\u4e3e\u4ee3\u66ff\u9b54\u6cd5\u5b57\u7b26\u4e32\n3. \u7edf\u4e00\u72b6\u6001\u7ba1\u7406\n4. \u6539\u5584\u9519\u8bef\u5904\u7406\n5. \u63d0\u9ad8\u53ef\u6d4b\u8bd5\u6027",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "execute_cognitive_cycle",
        "_initialize_workflow",
        "_execute_main_loop",
        "_execute_single_cycle",
        "_analyze_current_state",
        "_make_decision",
        "_execute_decision",
        "_handle_evaluation_request",
        "_handle_judgment_failed",
        "_handle_continue_cycle",
        "_handle_timeout",
        "_handle_workflow_exception",
        "_set_status",
        "_log",
        "_execute_cognitive_step",
        "get_workflow_status"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py:EmbodiedCognitiveWorkflowOptimized"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py",
      "line_number": 93,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u5177\u8eab\u8ba4\u77e5\u5de5\u4f5c\u6d41\u7cfb\u7edf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "llm",
        "body_config",
        "ego_config",
        "id_config",
        "max_cycles",
        "verbose"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Agent",
        "EgoAgent",
        "IdAgent",
        "logging.basicConfig"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py:__init__"
    },
    {
      "type": "function",
      "name": "add_cycle_result",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py",
      "line_number": 49,
      "complexity": 1,
      "docstring": "\u6dfb\u52a0\u5faa\u73af\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "cycle_num",
        "result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.history.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py:add_cycle_result"
    },
    {
      "type": "function",
      "name": "update_current_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py",
      "line_number": 53,
      "complexity": 1,
      "docstring": "\u66f4\u65b0\u5f53\u524d\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "state_analysis"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py:update_current_state"
    },
    {
      "type": "function",
      "name": "update_id_evaluation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py",
      "line_number": 57,
      "complexity": 1,
      "docstring": "\u66f4\u65b0\u672c\u6211\u7684\u8bc4\u4f30\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "evaluation_result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py:update_id_evaluation"
    },
    {
      "type": "function",
      "name": "update_goal_status",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py",
      "line_number": 61,
      "complexity": 1,
      "docstring": "\u66f4\u65b0\u76ee\u6807\u8fbe\u6210\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "achieved"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py:update_goal_status"
    },
    {
      "type": "function",
      "name": "get_current_context",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py",
      "line_number": 65,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u5f53\u524d\u4e0a\u4e0b\u6587",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "'\\n\\n'.join"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py:get_current_context"
    },
    {
      "type": "function",
      "name": "execute_cognitive_cycle",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py",
      "line_number": 128,
      "complexity": 1,
      "docstring": "\u6267\u884c\u5b8c\u6574\u7684\u5177\u8eab\u8ba4\u77e5\u5de5\u4f5c\u6d41 - \u4f18\u5316\u7248\u672c\n\n\u4f18\u5316\u70b9\uff1a\n1. \u65b9\u6cd5\u804c\u8d23\u5355\u4e00\uff0c\u53ea\u8d1f\u8d23\u534f\u8c03\n2. \u9519\u8bef\u5904\u7406\u96c6\u4e2d\u5316\n3. \u72b6\u6001\u7ba1\u7406\u7edf\u4e00",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._log",
        "self._initialize_workflow",
        "self._execute_main_loop",
        "self._handle_workflow_exception"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py:execute_cognitive_cycle"
    },
    {
      "type": "function",
      "name": "_initialize_workflow",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py",
      "line_number": 153,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u5de5\u4f5c\u6d41\n\n\u804c\u8d23\uff1a\n1. \u8bbe\u7f6e\u4efb\u52a1\u89c4\u683c\n2. \u521d\u59cb\u5316\u72b6\u6001\n3. \u521b\u5efa\u4e0a\u4e0b\u6587",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._log",
        "self._log",
        "self.id_agent.initialize_value_system",
        "self._log",
        "self._set_status",
        "WorkflowContext",
        "self.id_agent.get_task_specification"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py:_initialize_workflow"
    },
    {
      "type": "function",
      "name": "_execute_main_loop",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py",
      "line_number": 179,
      "complexity": 1,
      "docstring": "\u6267\u884c\u4e3b\u5faa\u73af\n\n\u804c\u8d23\uff1a\n1. \u63a7\u5236\u5faa\u73af\u6b21\u6570\n2. \u534f\u8c03\u5355\u8f6e\u6267\u884c\n3. \u5904\u7406\u5faa\u73af\u7ed3\u675f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._handle_timeout",
        "self._log",
        "self._execute_single_cycle"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py:_execute_main_loop"
    },
    {
      "type": "function",
      "name": "_execute_single_cycle",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py",
      "line_number": 202,
      "complexity": 1,
      "docstring": "\u6267\u884c\u5355\u8f6e\u8ba4\u77e5\u5faa\u73af\n\n\u804c\u8d23\uff1a\n1. \u72b6\u6001\u5206\u6790\n2. \u51b3\u7b56\u5236\u5b9a\n3. \u51b3\u7b56\u6267\u884c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._analyze_current_state",
        "self._make_decision",
        "self._execute_decision"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py:_execute_single_cycle"
    },
    {
      "type": "function",
      "name": "_analyze_current_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py",
      "line_number": 222,
      "complexity": 1,
      "docstring": "\u5206\u6790\u5f53\u524d\u72b6\u6001\u5e76\u66f4\u65b0\u5230\u4e0a\u4e0b\u6587\n\n\u804c\u8d23\uff1a\u83b7\u53d6\u5e76\u5206\u6790\u5f53\u524d\u72b6\u6001\uff0c\u66f4\u65b0\u5230\u4e0a\u4e0b\u6587\u4e2d",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "context.get_current_context",
        "self.ego.analyze_current_state",
        "self._log",
        "context.update_current_state"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py:_analyze_current_state"
    },
    {
      "type": "function",
      "name": "_make_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py",
      "line_number": 235,
      "complexity": 1,
      "docstring": "\u505a\u51fa\u51b3\u7b56\n\n\u804c\u8d23\uff1a\n1. \u8c03\u7528\u81ea\u6211\u51b3\u7b56\n2. \u8f6c\u6362\u4e3a\u679a\u4e3e\u7c7b\u578b\n3. \u5904\u7406\u672a\u77e5\u51b3\u7b56",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "state_analysis"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.ego.decide_next_action",
        "self._log",
        "decision_mapping.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py:_make_decision"
    },
    {
      "type": "function",
      "name": "_execute_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py",
      "line_number": 256,
      "complexity": 1,
      "docstring": "\u6267\u884c\u51b3\u7b56\n\n\u804c\u8d23\uff1a\u6839\u636e\u51b3\u7b56\u7c7b\u578b\u8c03\u7528\u76f8\u5e94\u7684\u5904\u7406\u65b9\u6cd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decision",
        "state_analysis",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._handle_evaluation_request",
        "self._handle_judgment_failed",
        "self._handle_continue_cycle",
        "self._log",
        "self._handle_evaluation_request"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py:_execute_decision"
    },
    {
      "type": "function",
      "name": "_handle_evaluation_request",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py",
      "line_number": 275,
      "complexity": 1,
      "docstring": "\u5904\u7406\u81ea\u6211\u7684\u8bc4\u4f30\u8bf7\u6c42\n\n\u804c\u8d23\uff1a\n1. \u534f\u8c03\u8bc4\u4f30\u6d41\u7a0b\n2. \u5224\u65ad\u662f\u5426\u7ed3\u675f\u5de5\u4f5c\u6d41\n3. \u66f4\u65b0\u4e0a\u4e0b\u6587\u4e2d\u7684\u8bc4\u4f30\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "state_analysis",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.ego.request_id_evaluation",
        "self._log",
        "self.id_agent.generate_evaluation_instruction",
        "self._log",
        "self.body.execute_sync",
        "self._log",
        "self.id_agent.evaluate_goal_achievement",
        "self._log",
        "json.loads",
        "evaluation_data.get",
        "evaluation_data.get",
        "context.update_id_evaluation",
        "context.update_goal_status",
        "self._log",
        "self._set_status",
        "self.body.chat_sync",
        "Result",
        "self._log",
        "self._log",
        "context.update_id_evaluation",
        "context.update_goal_status",
        "self._set_status",
        "Result"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py:_handle_evaluation_request"
    },
    {
      "type": "function",
      "name": "_handle_judgment_failed",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py",
      "line_number": 339,
      "complexity": 1,
      "docstring": "\u5904\u7406\u5224\u65ad\u5931\u8d25\n\n\u804c\u8d23\uff1a\u8bbe\u7f6e\u5931\u8d25\u72b6\u6001\u5e76\u8fd4\u56de\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "state_analysis"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._log",
        "self._set_status",
        "Result"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py:_handle_judgment_failed"
    },
    {
      "type": "function",
      "name": "_handle_continue_cycle",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py",
      "line_number": 350,
      "complexity": 1,
      "docstring": "\u5904\u7406\u7ee7\u7eed\u5faa\u73af\n\n\u804c\u8d23\uff1a\n1. \u6267\u884c\u8ba4\u77e5\u6b65\u9aa4\n2. \u66f4\u65b0\u4e0a\u4e0b\u6587",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "state_analysis",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._execute_cognitive_step",
        "context.add_cycle_result"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py:_handle_continue_cycle"
    },
    {
      "type": "function",
      "name": "_handle_timeout",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py",
      "line_number": 366,
      "complexity": 1,
      "docstring": "\u5904\u7406\u8d85\u65f6\n\n\u804c\u8d23\uff1a\u8bbe\u7f6e\u8d85\u65f6\u72b6\u6001\u5e76\u8fd4\u56de\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._log",
        "self._set_status",
        "Result"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py:_handle_timeout"
    },
    {
      "type": "function",
      "name": "_handle_workflow_exception",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py",
      "line_number": 377,
      "complexity": 1,
      "docstring": "\u5904\u7406\u5de5\u4f5c\u6d41\u5f02\u5e38\n\n\u804c\u8d23\uff1a\n1. \u8bb0\u5f55\u5f02\u5e38\n2. \u8bbe\u7f6e\u5f02\u5e38\u72b6\u6001\n3. \u8fd4\u56de\u5f02\u5e38\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "e"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._log",
        "self._set_status",
        "Result",
        "str",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py:_handle_workflow_exception"
    },
    {
      "type": "function",
      "name": "_set_status",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py",
      "line_number": 392,
      "complexity": 1,
      "docstring": "\u8bbe\u7f6e\u5de5\u4f5c\u6d41\u72b6\u6001\n\n\u804c\u8d23\uff1a\u7edf\u4e00\u72b6\u6001\u7ba1\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "status"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py:_set_status"
    },
    {
      "type": "function",
      "name": "_log",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py",
      "line_number": 401,
      "complexity": 1,
      "docstring": "\u8bb0\u5f55\u65e5\u5fd7",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "message"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "logging.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py:_log"
    },
    {
      "type": "function",
      "name": "_execute_cognitive_step",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py",
      "line_number": 409,
      "complexity": 1,
      "docstring": "\u6267\u884c\u4e00\u4e2a\u8ba4\u77e5\u6b65\u9aa4\uff08\u89c2\u5bdf\u6216\u6267\u884c\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "state_analysis"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py:_execute_cognitive_step"
    },
    {
      "type": "function",
      "name": "get_workflow_status",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py",
      "line_number": 414,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u5f53\u524d\u5de5\u4f5c\u6d41\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "hasattr",
        "self.id_agent.get_current_goal",
        "hasattr",
        "self.id_agent.get_value_standard"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow_optimized.py:get_workflow_status"
    },
    {
      "type": "class",
      "name": "TestEndToEndWorkflow",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py",
      "line_number": 34,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u7aef\u5230\u7aef\u5de5\u4f5c\u6d41\u6267\u884c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_simple_task_completion",
        "test_multi_cycle_task"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py:TestEndToEndWorkflow"
    },
    {
      "type": "class",
      "name": "TestComplexScenarios",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py",
      "line_number": 175,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u590d\u6742\u573a\u666f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_error_recovery_workflow",
        "test_dynamic_goal_adjustment"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py:TestComplexScenarios"
    },
    {
      "type": "class",
      "name": "TestFailureScenarios",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py",
      "line_number": 343,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5931\u8d25\u573a\u666f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_judgment_failed_scenario",
        "test_timeout_scenario",
        "test_exception_handling"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py:TestFailureScenarios"
    },
    {
      "type": "class",
      "name": "TestRealWorldScenarios",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py",
      "line_number": 457,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u771f\u5b9e\u4e16\u754c\u573a\u666f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_data_analysis_workflow",
        "test_api_development_workflow"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py:TestRealWorldScenarios"
    },
    {
      "type": "class",
      "name": "TestWorkflowFeatures",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py",
      "line_number": 663,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5de5\u4f5c\u6d41\u7279\u6027",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_knowledge_loading_integration",
        "test_python_module_loading",
        "test_workflow_reset",
        "test_verbose_logging",
        "test_workflow_status_properties"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py:TestWorkflowFeatures"
    },
    {
      "type": "class",
      "name": "TestConvenienceFunctions",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py",
      "line_number": 746,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u4fbf\u5229\u51fd\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_create_workflow_function",
        "test_execute_task_function"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py:TestConvenienceFunctions"
    },
    {
      "type": "function",
      "name": "setUp",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py",
      "line_number": 749,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u524d\u51c6\u5907",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Mock"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py:setUp"
    },
    {
      "type": "function",
      "name": "test_simple_task_completion",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py",
      "line_number": 44,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u7b80\u5355\u4efb\u52a1\u5b8c\u6210\u6d41\u7a0b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "mock_id_class",
        "mock_ego_class",
        "mock_agent_class"
      ],
      "decorators": [
        "patch('embodied_cognitive_workflow.embodied_cognitive_workflow.Agent')",
        "patch('embodied_cognitive_workflow.embodied_cognitive_workflow.EgoAgent')",
        "patch('embodied_cognitive_workflow.embodied_cognitive_workflow.IdAgent')"
      ],
      "inheritance": [],
      "calls": [
        "patch",
        "patch",
        "patch",
        "Mock",
        "Mock",
        "Mock",
        "Result",
        "Result",
        "EmbodiedCognitiveWorkflow",
        "workflow.execute_cognitive_cycle",
        "self.assertTrue",
        "self.assertIn",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "mock_id.evaluate_goal_achievement.assert_called_once",
        "Result",
        "Result"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py:test_simple_task_completion"
    },
    {
      "type": "function",
      "name": "test_multi_cycle_task",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py",
      "line_number": 104,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u591a\u8f6e\u5faa\u73af\u4efb\u52a1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "mock_id_class",
        "mock_ego_class",
        "mock_agent_class"
      ],
      "decorators": [
        "patch('embodied_cognitive_workflow.embodied_cognitive_workflow.Agent')",
        "patch('embodied_cognitive_workflow.embodied_cognitive_workflow.EgoAgent')",
        "patch('embodied_cognitive_workflow.embodied_cognitive_workflow.IdAgent')"
      ],
      "inheritance": [],
      "calls": [
        "patch",
        "patch",
        "patch",
        "Mock",
        "Mock",
        "Mock",
        "Result",
        "EmbodiedCognitiveWorkflow",
        "workflow.execute_cognitive_cycle",
        "self.assertTrue",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "Result",
        "Result",
        "Result",
        "Result",
        "Result",
        "Result",
        "Result"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py:test_multi_cycle_task"
    },
    {
      "type": "function",
      "name": "test_error_recovery_workflow",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py",
      "line_number": 185,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u9519\u8bef\u6062\u590d\u5de5\u4f5c\u6d41",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "mock_id_class",
        "mock_ego_class",
        "mock_agent_class"
      ],
      "decorators": [
        "patch('embodied_cognitive_workflow.embodied_cognitive_workflow.Agent')",
        "patch('embodied_cognitive_workflow.embodied_cognitive_workflow.EgoAgent')",
        "patch('embodied_cognitive_workflow.embodied_cognitive_workflow.IdAgent')"
      ],
      "inheritance": [],
      "calls": [
        "patch",
        "patch",
        "patch",
        "Mock",
        "Mock",
        "Mock",
        "Result",
        "EmbodiedCognitiveWorkflow",
        "workflow.execute_cognitive_cycle",
        "self.assertTrue",
        "self.assertEqual",
        "mock_ego.handle_execution_error.assert_called_once",
        "Result",
        "Result",
        "Result",
        "Result",
        "Result",
        "Result",
        "Result"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py:test_error_recovery_workflow"
    },
    {
      "type": "function",
      "name": "test_dynamic_goal_adjustment",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py",
      "line_number": 261,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u52a8\u6001\u76ee\u6807\u8c03\u6574",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "mock_id_class",
        "mock_ego_class",
        "mock_agent_class"
      ],
      "decorators": [
        "patch('embodied_cognitive_workflow.embodied_cognitive_workflow.Agent')",
        "patch('embodied_cognitive_workflow.embodied_cognitive_workflow.EgoAgent')",
        "patch('embodied_cognitive_workflow.embodied_cognitive_workflow.IdAgent')"
      ],
      "inheritance": [],
      "calls": [
        "patch",
        "patch",
        "patch",
        "Mock",
        "Mock",
        "Mock",
        "Result",
        "EmbodiedCognitiveWorkflow",
        "workflow.execute_cognitive_cycle",
        "self.assertTrue",
        "self.assertEqual",
        "mock_ego.generate_observation_instruction.assert_called_once",
        "self.assertEqual",
        "Result",
        "Result",
        "Result",
        "Result",
        "Result",
        "Result",
        "Result"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py:test_dynamic_goal_adjustment"
    },
    {
      "type": "function",
      "name": "test_judgment_failed_scenario",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py",
      "line_number": 353,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5224\u65ad\u5931\u8d25\u573a\u666f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "mock_id_class",
        "mock_ego_class",
        "mock_agent_class"
      ],
      "decorators": [
        "patch('embodied_cognitive_workflow.embodied_cognitive_workflow.Agent')",
        "patch('embodied_cognitive_workflow.embodied_cognitive_workflow.EgoAgent')",
        "patch('embodied_cognitive_workflow.embodied_cognitive_workflow.IdAgent')"
      ],
      "inheritance": [],
      "calls": [
        "patch",
        "patch",
        "patch",
        "Mock",
        "Mock",
        "Mock",
        "EmbodiedCognitiveWorkflow",
        "workflow.execute_cognitive_cycle",
        "self.assertFalse",
        "self.assertEqual",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py:test_judgment_failed_scenario"
    },
    {
      "type": "function",
      "name": "test_timeout_scenario",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py",
      "line_number": 384,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u8d85\u65f6\u573a\u666f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "mock_id_class",
        "mock_ego_class",
        "mock_agent_class"
      ],
      "decorators": [
        "patch('embodied_cognitive_workflow.embodied_cognitive_workflow.Agent')",
        "patch('embodied_cognitive_workflow.embodied_cognitive_workflow.EgoAgent')",
        "patch('embodied_cognitive_workflow.embodied_cognitive_workflow.IdAgent')"
      ],
      "inheritance": [],
      "calls": [
        "patch",
        "patch",
        "patch",
        "Mock",
        "Mock",
        "Mock",
        "EmbodiedCognitiveWorkflow",
        "Result",
        "Result",
        "workflow.execute_cognitive_cycle",
        "self.assertFalse",
        "self.assertEqual",
        "self.assertIn",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py:test_timeout_scenario"
    },
    {
      "type": "function",
      "name": "test_exception_handling",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py",
      "line_number": 429,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5f02\u5e38\u5904\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "mock_id_class",
        "mock_ego_class",
        "mock_agent_class"
      ],
      "decorators": [
        "patch('embodied_cognitive_workflow.embodied_cognitive_workflow.Agent')",
        "patch('embodied_cognitive_workflow.embodied_cognitive_workflow.EgoAgent')",
        "patch('embodied_cognitive_workflow.embodied_cognitive_workflow.IdAgent')"
      ],
      "inheritance": [],
      "calls": [
        "patch",
        "patch",
        "patch",
        "Mock",
        "Mock",
        "Mock",
        "Exception",
        "EmbodiedCognitiveWorkflow",
        "workflow.execute_cognitive_cycle",
        "self.assertFalse",
        "self.assertEqual",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py:test_exception_handling"
    },
    {
      "type": "function",
      "name": "test_data_analysis_workflow",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py",
      "line_number": 467,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6570\u636e\u5206\u6790\u5de5\u4f5c\u6d41",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "mock_id_class",
        "mock_ego_class",
        "mock_agent_class"
      ],
      "decorators": [
        "patch('embodied_cognitive_workflow.embodied_cognitive_workflow.Agent')",
        "patch('embodied_cognitive_workflow.embodied_cognitive_workflow.EgoAgent')",
        "patch('embodied_cognitive_workflow.embodied_cognitive_workflow.IdAgent')"
      ],
      "inheritance": [],
      "calls": [
        "patch",
        "patch",
        "patch",
        "Mock",
        "Mock",
        "Mock",
        "Result",
        "EmbodiedCognitiveWorkflow",
        "workflow.execute_cognitive_cycle",
        "self.assertTrue",
        "self.assertEqual",
        "mock_ego.generate_observation_instruction.assert_called",
        "mock_ego.generate_execution_instruction.assert_called",
        "len",
        "len",
        "execution_responses.append",
        "execution_responses.append",
        "Result",
        "Result",
        "Result",
        "Result"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py:test_data_analysis_workflow"
    },
    {
      "type": "function",
      "name": "test_api_development_workflow",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py",
      "line_number": 567,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5API\u5f00\u53d1\u5de5\u4f5c\u6d41",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "mock_id_class",
        "mock_ego_class",
        "mock_agent_class"
      ],
      "decorators": [
        "patch('embodied_cognitive_workflow.embodied_cognitive_workflow.Agent')",
        "patch('embodied_cognitive_workflow.embodied_cognitive_workflow.EgoAgent')",
        "patch('embodied_cognitive_workflow.embodied_cognitive_workflow.IdAgent')"
      ],
      "inheritance": [],
      "calls": [
        "patch",
        "patch",
        "patch",
        "Mock",
        "Mock",
        "Mock",
        "Result",
        "EmbodiedCognitiveWorkflow",
        "workflow.execute_cognitive_cycle",
        "self.assertTrue",
        "self.assertEqual",
        "self.assertEqual",
        "workflow.get_workflow_status",
        "self.assertEqual",
        "self.assertEqual",
        "Result",
        "Result",
        "Result",
        "Result",
        "Result",
        "Result",
        "Result",
        "Result",
        "Result",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py:test_api_development_workflow"
    },
    {
      "type": "function",
      "name": "test_knowledge_loading_integration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py",
      "line_number": 670,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u77e5\u8bc6\u52a0\u8f7d\u96c6\u6210",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "EmbodiedCognitiveWorkflow",
        "Mock",
        "Mock",
        "Mock",
        "workflow.load_knowledge",
        "workflow.ego.loadKnowledge.assert_called_with",
        "workflow.id_agent.loadKnowledge.assert_called_with",
        "workflow.body.loadKnowledge.assert_called_with"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py:test_knowledge_loading_integration"
    },
    {
      "type": "function",
      "name": "test_python_module_loading",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py",
      "line_number": 688,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5Python\u6a21\u5757\u52a0\u8f7d",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "EmbodiedCognitiveWorkflow",
        "Mock",
        "workflow.load_python_modules",
        "workflow.body.loadPythonModules.assert_called_with"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py:test_python_module_loading"
    },
    {
      "type": "function",
      "name": "test_workflow_reset",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py",
      "line_number": 699,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5de5\u4f5c\u6d41\u91cd\u7f6e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "EmbodiedCognitiveWorkflow",
        "workflow._set_status",
        "workflow.execution_history.extend",
        "workflow.reset_workflow",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py:test_workflow_reset"
    },
    {
      "type": "function",
      "name": "test_verbose_logging",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py",
      "line_number": 716,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u8be6\u7ec6\u65e5\u5fd7\u8bb0\u5f55",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "EmbodiedCognitiveWorkflow",
        "patch",
        "workflow._log",
        "mock_print.assert_called",
        "self.assertIn",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py:test_verbose_logging"
    },
    {
      "type": "function",
      "name": "test_workflow_status_properties",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py",
      "line_number": 731,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5de5\u4f5c\u6d41\u72b6\u6001\u5c5e\u6027",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "EmbodiedCognitiveWorkflow",
        "self.assertEqual",
        "workflow._set_status",
        "self.assertEqual",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py:test_workflow_status_properties"
    },
    {
      "type": "function",
      "name": "test_create_workflow_function",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py",
      "line_number": 753,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u521b\u5efa\u5de5\u4f5c\u6d41\u4fbf\u5229\u51fd\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "create_embodied_cognitive_workflow",
        "self.assertIsInstance",
        "self.assertEqual",
        "self.assertFalse"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py:test_create_workflow_function"
    },
    {
      "type": "function",
      "name": "test_execute_task_function",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py",
      "line_number": 769,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6267\u884c\u4efb\u52a1\u4fbf\u5229\u51fd\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "mock_workflow_class"
      ],
      "decorators": [
        "patch('embodied_cognitive_workflow.embodied_cognitive_workflow.EmbodiedCognitiveWorkflow')"
      ],
      "inheritance": [],
      "calls": [
        "patch",
        "Mock",
        "Result",
        "execute_embodied_cognitive_task",
        "self.assertTrue",
        "self.assertEqual",
        "mock_workflow_class.assert_called_with",
        "mock_workflow.execute_cognitive_cycle.assert_called_with"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py:test_execute_task_function"
    },
    {
      "type": "function",
      "name": "analyze_state_side_effect",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py",
      "line_number": 281,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py:analyze_state_side_effect"
    },
    {
      "type": "function",
      "name": "analyze_state_effect",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py",
      "line_number": 497,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py:analyze_state_effect"
    },
    {
      "type": "function",
      "name": "decide_action_effect",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py",
      "line_number": 504,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py:decide_action_effect"
    },
    {
      "type": "function",
      "name": "cycle_state_analysis",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py",
      "line_number": 589,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py:cycle_state_analysis"
    },
    {
      "type": "class",
      "name": "TestWorkflowInitialization",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py",
      "line_number": 34,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5de5\u4f5c\u6d41\u521d\u59cb\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_basic_initialization",
        "test_initialization_with_config",
        "test_knowledge_loading",
        "test_python_module_loading"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py:TestWorkflowInitialization"
    },
    {
      "type": "class",
      "name": "TestWorkflowContext",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py",
      "line_number": 101,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5de5\u4f5c\u6d41\u4e0a\u4e0b\u6587\u7ba1\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "test_context_initialization",
        "test_context_updates",
        "test_get_current_context"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py:TestWorkflowContext"
    },
    {
      "type": "class",
      "name": "TestCognitiveCycle",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py",
      "line_number": 154,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u8ba4\u77e5\u5faa\u73af\u6267\u884c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_initialize_workflow",
        "test_execute_single_cycle_request_evaluation",
        "test_execute_single_cycle_judgment_failed",
        "test_execute_single_cycle_continue",
        "test_execute_main_loop_success",
        "test_execute_main_loop_timeout"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py:TestCognitiveCycle"
    },
    {
      "type": "class",
      "name": "TestDecisionHandling",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py",
      "line_number": 277,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u51b3\u7b56\u5904\u7406\u903b\u8f91",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_make_decision_mapping",
        "test_handle_evaluation_request_goal_achieved",
        "test_handle_evaluation_request_goal_not_achieved",
        "test_handle_evaluation_request_json_parse_error",
        "test_execute_cognitive_step_observation",
        "test_execute_cognitive_step_execution",
        "test_execute_cognitive_step_error_handling"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py:TestDecisionHandling"
    },
    {
      "type": "class",
      "name": "TestWorkflowManagement",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py",
      "line_number": 417,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5de5\u4f5c\u6d41\u7ba1\u7406\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_workflow_status_tracking",
        "test_get_workflow_status",
        "test_reset_workflow",
        "test_exception_handling"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py:TestWorkflowManagement"
    },
    {
      "type": "class",
      "name": "TestUtilityFunctions",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py",
      "line_number": 480,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u4fbf\u5229\u51fd\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_create_embodied_cognitive_workflow",
        "test_execute_embodied_cognitive_task"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py:TestUtilityFunctions"
    },
    {
      "type": "class",
      "name": "TestIntegrationScenarios",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py",
      "line_number": 520,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u96c6\u6210\u573a\u666f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_complete_workflow_execution"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py:TestIntegrationScenarios"
    },
    {
      "type": "function",
      "name": "setUp",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py",
      "line_number": 523,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u524d\u51c6\u5907",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Mock"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py:setUp"
    },
    {
      "type": "function",
      "name": "test_basic_initialization",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py",
      "line_number": 41,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u57fa\u7840\u521d\u59cb\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "EmbodiedCognitiveWorkflow",
        "self.assertIsNotNone",
        "self.assertIsNotNone",
        "self.assertIsNotNone",
        "self.assertEqual",
        "self.assertTrue",
        "self.assertEqual",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py:test_basic_initialization"
    },
    {
      "type": "function",
      "name": "test_initialization_with_config",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py",
      "line_number": 53,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5e26\u914d\u7f6e\u7684\u521d\u59cb\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "EmbodiedCognitiveWorkflow",
        "self.assertEqual",
        "self.assertFalse",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py:test_initialization_with_config"
    },
    {
      "type": "function",
      "name": "test_knowledge_loading",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py",
      "line_number": 72,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u77e5\u8bc6\u52a0\u8f7d",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "EmbodiedCognitiveWorkflow",
        "Mock",
        "Mock",
        "Mock",
        "workflow.load_knowledge",
        "workflow.ego.loadKnowledge.assert_called_once_with",
        "workflow.id_agent.loadKnowledge.assert_called_once_with",
        "workflow.body.loadKnowledge.assert_called_once_with"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py:test_knowledge_loading"
    },
    {
      "type": "function",
      "name": "test_python_module_loading",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py",
      "line_number": 89,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5Python\u6a21\u5757\u52a0\u8f7d",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "EmbodiedCognitiveWorkflow",
        "Mock",
        "workflow.load_python_modules",
        "workflow.body.loadPythonModules.assert_called_once_with"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py:test_python_module_loading"
    },
    {
      "type": "function",
      "name": "test_context_initialization",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py",
      "line_number": 104,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u4e0a\u4e0b\u6587\u521d\u59cb\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "WorkflowContext",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertFalse"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py:test_context_initialization"
    },
    {
      "type": "function",
      "name": "test_context_updates",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py",
      "line_number": 116,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u4e0a\u4e0b\u6587\u66f4\u65b0",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "WorkflowContext",
        "context.add_cycle_result",
        "self.assertEqual",
        "self.assertIn",
        "context.update_current_state",
        "self.assertEqual",
        "context.update_id_evaluation",
        "self.assertEqual",
        "context.update_goal_status",
        "self.assertTrue",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py:test_context_updates"
    },
    {
      "type": "function",
      "name": "test_get_current_context",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py",
      "line_number": 137,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u83b7\u53d6\u5f53\u524d\u4e0a\u4e0b\u6587",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "WorkflowContext",
        "context.update_current_state",
        "context.update_id_evaluation",
        "context.update_goal_status",
        "context.add_cycle_result",
        "context.get_current_context",
        "self.assertIn",
        "self.assertIn",
        "self.assertIn",
        "self.assertIn",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py:test_get_current_context"
    },
    {
      "type": "function",
      "name": "test_initialize_workflow",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py",
      "line_number": 167,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5de5\u4f5c\u6d41\u521d\u59cb\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Mock",
        "Mock",
        "self.workflow._initialize_workflow",
        "self.assertIsInstance",
        "self.assertEqual",
        "self.assertEqual",
        "self.workflow.id_agent.initialize_value_system.assert_called_once_with"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py:test_initialize_workflow"
    },
    {
      "type": "function",
      "name": "test_execute_single_cycle_request_evaluation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py",
      "line_number": 182,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5355\u8f6e\u5faa\u73af - \u8bf7\u6c42\u8bc4\u4f30",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "WorkflowContext",
        "Mock",
        "Mock",
        "Mock",
        "Mock",
        "Mock",
        "Mock",
        "Mock",
        "self.workflow._execute_single_cycle",
        "self.assertFalse",
        "self.assertIsNotNone",
        "self.assertTrue",
        "self.assertEqual",
        "Result",
        "Result"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py:test_execute_single_cycle_request_evaluation"
    },
    {
      "type": "function",
      "name": "test_execute_single_cycle_judgment_failed",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py",
      "line_number": 206,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5355\u8f6e\u5faa\u73af - \u5224\u65ad\u5931\u8d25",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "WorkflowContext",
        "Mock",
        "Mock",
        "self.workflow._execute_single_cycle",
        "self.assertFalse",
        "self.assertIsNotNone",
        "self.assertFalse",
        "self.assertEqual",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py:test_execute_single_cycle_judgment_failed"
    },
    {
      "type": "function",
      "name": "test_execute_single_cycle_continue",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py",
      "line_number": 222,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5355\u8f6e\u5faa\u73af - \u7ee7\u7eed\u6267\u884c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "WorkflowContext",
        "Mock",
        "Mock",
        "self.assertTrue",
        "self.assertEqual",
        "self.assertEqual",
        "patch.object",
        "self.workflow._execute_single_cycle"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py:test_execute_single_cycle_continue"
    },
    {
      "type": "function",
      "name": "test_execute_main_loop_success",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py",
      "line_number": 238,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u4e3b\u5faa\u73af - \u6210\u529f\u5b8c\u6210",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "WorkflowContext",
        "CycleOutcome",
        "self.assertTrue",
        "self.assertEqual",
        "patch.object",
        "self.workflow._execute_main_loop",
        "Result"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py:test_execute_main_loop_success"
    },
    {
      "type": "function",
      "name": "test_execute_main_loop_timeout",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py",
      "line_number": 256,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u4e3b\u5faa\u73af - \u8d85\u65f6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "WorkflowContext",
        "CycleOutcome",
        "self.assertFalse",
        "self.assertIn",
        "self.assertEqual",
        "patch.object",
        "self.workflow._execute_main_loop"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py:test_execute_main_loop_timeout"
    },
    {
      "type": "function",
      "name": "test_make_decision_mapping",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py",
      "line_number": 290,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u51b3\u7b56\u6620\u5c04",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.workflow._make_decision",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py:test_make_decision_mapping"
    },
    {
      "type": "function",
      "name": "test_handle_evaluation_request_goal_achieved",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py",
      "line_number": 303,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5904\u7406\u8bc4\u4f30\u8bf7\u6c42 - \u76ee\u6807\u8fbe\u6210",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "WorkflowContext",
        "context.update_current_state",
        "Mock",
        "Mock",
        "Mock",
        "Mock",
        "Mock",
        "self.workflow._handle_evaluation_request",
        "self.assertFalse",
        "self.assertTrue",
        "self.assertEqual",
        "self.assertTrue",
        "self.assertEqual",
        "Result",
        "Result"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py:test_handle_evaluation_request_goal_achieved"
    },
    {
      "type": "function",
      "name": "test_handle_evaluation_request_goal_not_achieved",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py",
      "line_number": 325,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5904\u7406\u8bc4\u4f30\u8bf7\u6c42 - \u76ee\u6807\u672a\u8fbe\u6210",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "WorkflowContext",
        "Mock",
        "Mock",
        "Mock",
        "Mock",
        "self.workflow._handle_evaluation_request",
        "self.assertTrue",
        "self.assertEqual",
        "self.assertFalse",
        "Result"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py:test_handle_evaluation_request_goal_not_achieved"
    },
    {
      "type": "function",
      "name": "test_handle_evaluation_request_json_parse_error",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py",
      "line_number": 343,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5904\u7406\u8bc4\u4f30\u8bf7\u6c42 - JSON\u89e3\u6790\u9519\u8bef",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "WorkflowContext",
        "Mock",
        "Mock",
        "Mock",
        "Mock",
        "self.workflow._handle_evaluation_request",
        "self.assertTrue",
        "self.assertEqual",
        "self.assertFalse",
        "Result"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py:test_handle_evaluation_request_json_parse_error"
    },
    {
      "type": "function",
      "name": "test_execute_cognitive_step_observation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py",
      "line_number": 359,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6267\u884c\u8ba4\u77e5\u6b65\u9aa4 - \u89c2\u5bdf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "WorkflowContext",
        "context.update_current_state",
        "Result",
        "Mock",
        "Mock",
        "Mock",
        "self.workflow._execute_cognitive_step",
        "self.assertIsNotNone",
        "self.assertIn",
        "self.assertIn",
        "Result"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py:test_execute_cognitive_step_observation"
    },
    {
      "type": "function",
      "name": "test_execute_cognitive_step_execution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py",
      "line_number": 378,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6267\u884c\u8ba4\u77e5\u6b65\u9aa4 - \u6267\u884c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "WorkflowContext",
        "context.update_current_state",
        "Result",
        "Mock",
        "Mock",
        "Mock",
        "self.workflow._execute_cognitive_step",
        "self.assertIsNotNone",
        "self.assertIn",
        "self.assertIn",
        "Result"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py:test_execute_cognitive_step_execution"
    },
    {
      "type": "function",
      "name": "test_execute_cognitive_step_error_handling",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py",
      "line_number": 397,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6267\u884c\u8ba4\u77e5\u6b65\u9aa4 - \u9519\u8bef\u5904\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "WorkflowContext",
        "Result",
        "Mock",
        "Mock",
        "Mock",
        "Mock",
        "self.workflow._execute_cognitive_step",
        "self.assertIsNotNone",
        "self.assertIn",
        "self.assertIn",
        "Result"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py:test_execute_cognitive_step_error_handling"
    },
    {
      "type": "function",
      "name": "test_workflow_status_tracking",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py",
      "line_number": 425,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5de5\u4f5c\u6d41\u72b6\u6001\u8ddf\u8e2a",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.assertEqual",
        "self.assertEqual",
        "self.workflow._set_status",
        "self.assertEqual",
        "self.assertEqual",
        "self.workflow._set_status",
        "self.assertEqual",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py:test_workflow_status_tracking"
    },
    {
      "type": "function",
      "name": "test_get_workflow_status",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py",
      "line_number": 442,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u83b7\u53d6\u5de5\u4f5c\u6d41\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Mock",
        "Mock",
        "self.workflow.get_workflow_status",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py:test_get_workflow_status"
    },
    {
      "type": "function",
      "name": "test_reset_workflow",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py",
      "line_number": 456,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u91cd\u7f6e\u5de5\u4f5c\u6d41",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.workflow._set_status",
        "self.workflow.execution_history.append",
        "self.workflow.reset_workflow",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py:test_reset_workflow"
    },
    {
      "type": "function",
      "name": "test_exception_handling",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py",
      "line_number": 470,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5f02\u5e38\u5904\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Exception",
        "self.workflow._handle_workflow_exception",
        "self.assertFalse",
        "self.assertIn",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py:test_exception_handling"
    },
    {
      "type": "function",
      "name": "test_create_embodied_cognitive_workflow",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py",
      "line_number": 487,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5de5\u4f5c\u6d41\u521b\u5efa\u4fbf\u5229\u51fd\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "create_embodied_cognitive_workflow",
        "self.assertIsInstance",
        "self.assertEqual",
        "self.assertFalse"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py:test_create_embodied_cognitive_workflow"
    },
    {
      "type": "function",
      "name": "test_execute_embodied_cognitive_task",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py",
      "line_number": 500,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u4efb\u52a1\u6267\u884c\u4fbf\u5229\u51fd\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "mock_workflow_class"
      ],
      "decorators": [
        "patch('embodied_cognitive_workflow.embodied_cognitive_workflow.EmbodiedCognitiveWorkflow')"
      ],
      "inheritance": [],
      "calls": [
        "patch",
        "Mock",
        "Result",
        "execute_embodied_cognitive_task",
        "self.assertTrue",
        "self.assertEqual",
        "mock_workflow.execute_cognitive_cycle.assert_called_once_with"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py:test_execute_embodied_cognitive_task"
    },
    {
      "type": "function",
      "name": "test_complete_workflow_execution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py",
      "line_number": 530,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5b8c\u6574\u7684\u5de5\u4f5c\u6d41\u6267\u884c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "mock_id_class",
        "mock_ego_class",
        "mock_agent_class"
      ],
      "decorators": [
        "patch('embodied_cognitive_workflow.embodied_cognitive_workflow.Agent')",
        "patch('embodied_cognitive_workflow.embodied_cognitive_workflow.EgoAgent')",
        "patch('embodied_cognitive_workflow.embodied_cognitive_workflow.IdAgent')"
      ],
      "inheritance": [],
      "calls": [
        "patch",
        "patch",
        "patch",
        "Mock",
        "Mock",
        "Mock",
        "Result",
        "Result",
        "EmbodiedCognitiveWorkflow",
        "workflow.execute_cognitive_cycle",
        "self.assertTrue",
        "self.assertEqual",
        "self.assertEqual",
        "Result",
        "Result"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py:test_complete_workflow_execution"
    },
    {
      "type": "class",
      "name": "TestIdAgentInitialization",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py",
      "line_number": 27,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u672c\u6211\u667a\u80fd\u4f53\u521d\u59cb\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_default_initialization",
        "test_custom_system_message"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py:TestIdAgentInitialization"
    },
    {
      "type": "class",
      "name": "TestValueSystemInitialization",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py",
      "line_number": 56,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u4ef7\u503c\u7cfb\u7edf\u521d\u59cb\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_initialize_value_system_basic",
        "test_initialize_value_system_complex",
        "test_initialize_value_system_parsing"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py:TestValueSystemInitialization"
    },
    {
      "type": "class",
      "name": "TestEvaluationInstructionGeneration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py",
      "line_number": 147,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u8bc4\u4f30\u6307\u4ee4\u751f\u6210",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_generate_evaluation_instruction_simple",
        "test_generate_evaluation_instruction_focused",
        "test_generate_evaluation_instruction_practical"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py:TestEvaluationInstructionGeneration"
    },
    {
      "type": "class",
      "name": "TestGoalAchievementEvaluation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py",
      "line_number": 217,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u76ee\u6807\u8fbe\u6210\u8bc4\u4f30",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_evaluate_goal_achieved",
        "test_evaluate_goal_not_achieved",
        "test_evaluate_with_lenient_criteria",
        "test_evaluate_json_error_handling"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py:TestGoalAchievementEvaluation"
    },
    {
      "type": "class",
      "name": "TestValueStandardManagement",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py",
      "line_number": 306,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u4ef7\u503c\u6807\u51c6\u7ba1\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_get_current_goal",
        "test_get_value_standard",
        "test_get_task_specification",
        "test_reset_goal",
        "test_adjust_value_standard"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py:TestValueStandardManagement"
    },
    {
      "type": "class",
      "name": "TestIdAgentIntegration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py",
      "line_number": 374,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u672c\u6211\u667a\u80fd\u4f53\u96c6\u6210\u573a\u666f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_complete_evaluation_cycle",
        "test_iterative_standard_adjustment",
        "test_practical_evaluation_approach"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py:TestIdAgentIntegration"
    },
    {
      "type": "class",
      "name": "TestIdAgentEdgeCases",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py",
      "line_number": 465,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u672c\u6211\u667a\u80fd\u4f53\u8fb9\u7f18\u60c5\u51b5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_empty_instruction_handling",
        "test_malformed_response_parsing",
        "test_extremely_long_instruction",
        "test_json_response_variations",
        "test_concurrent_goal_management",
        "test_special_characters_in_values"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py:TestIdAgentEdgeCases"
    },
    {
      "type": "function",
      "name": "setUp",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py",
      "line_number": 468,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u524d\u51c6\u5907",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Mock",
        "IdAgent",
        "Mock"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py:setUp"
    },
    {
      "type": "function",
      "name": "test_default_initialization",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py",
      "line_number": 34,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u9ed8\u8ba4\u521d\u59cb\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "IdAgent",
        "self.assertEqual",
        "self.assertIsNotNone",
        "self.assertIn",
        "self.assertIn",
        "self.assertIn",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py:test_default_initialization"
    },
    {
      "type": "function",
      "name": "test_custom_system_message",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py",
      "line_number": 47,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u81ea\u5b9a\u4e49\u7cfb\u7edf\u6d88\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "IdAgent",
        "self.assertEqual",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py:test_custom_system_message"
    },
    {
      "type": "function",
      "name": "test_initialize_value_system_basic",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py",
      "line_number": 65,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u57fa\u7840\u4ef7\u503c\u7cfb\u7edf\u521d\u59cb\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.id_agent.initialize_value_system",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertIn",
        "self.assertIn",
        "self.assertIn",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py:test_initialize_value_system_basic"
    },
    {
      "type": "function",
      "name": "test_initialize_value_system_complex",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py",
      "line_number": 91,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u590d\u6742\u4ef7\u503c\u7cfb\u7edf\u521d\u59cb\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.id_agent.initialize_value_system",
        "self.assertEqual",
        "self.assertIn",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py:test_initialize_value_system_complex"
    },
    {
      "type": "function",
      "name": "test_initialize_value_system_parsing",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py",
      "line_number": 115,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u4ef7\u503c\u7cfb\u7edf\u89e3\u6790",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.id_agent.initialize_value_system",
        "self.assertIsNotNone",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py:test_initialize_value_system_parsing"
    },
    {
      "type": "function",
      "name": "test_generate_evaluation_instruction_simple",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py",
      "line_number": 160,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u751f\u6210\u7b80\u5355\u8bc4\u4f30\u6307\u4ee4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.id_agent.generate_evaluation_instruction",
        "self.assertEqual",
        "self.assertIn",
        "self.assertIn",
        "self.assertIn",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py:test_generate_evaluation_instruction_simple"
    },
    {
      "type": "function",
      "name": "test_generate_evaluation_instruction_focused",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py",
      "line_number": 178,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u751f\u6210\u805a\u7126\u7684\u8bc4\u4f30\u6307\u4ee4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.id_agent.generate_evaluation_instruction",
        "self.assertEqual",
        "self.assertLess",
        "len",
        "result.split"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py:test_generate_evaluation_instruction_focused"
    },
    {
      "type": "function",
      "name": "test_generate_evaluation_instruction_practical",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py",
      "line_number": 194,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u751f\u6210\u5b9e\u7528\u7684\u8bc4\u4f30\u6307\u4ee4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.id_agent.generate_evaluation_instruction",
        "self.assertIn",
        "self.assertIn",
        "self.assertIn",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py:test_generate_evaluation_instruction_practical"
    },
    {
      "type": "function",
      "name": "test_evaluate_goal_achieved",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py",
      "line_number": 230,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u8bc4\u4f30\u76ee\u6807\u8fbe\u6210",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.id_agent.evaluate_goal_achievement",
        "json.loads",
        "self.assertTrue",
        "self.assertEqual",
        "self.assertEqual",
        "call_kwargs.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py:test_evaluate_goal_achieved"
    },
    {
      "type": "function",
      "name": "test_evaluate_goal_not_achieved",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py",
      "line_number": 253,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u8bc4\u4f30\u76ee\u6807\u672a\u8fbe\u6210",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.id_agent.evaluate_goal_achievement",
        "json.loads",
        "self.assertFalse",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py:test_evaluate_goal_not_achieved"
    },
    {
      "type": "function",
      "name": "test_evaluate_with_lenient_criteria",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py",
      "line_number": 270,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5bbd\u677e\u7684\u8bc4\u4f30\u6807\u51c6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.id_agent.evaluate_goal_achievement",
        "json.loads",
        "self.assertTrue",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py:test_evaluate_with_lenient_criteria"
    },
    {
      "type": "function",
      "name": "test_evaluate_json_error_handling",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py",
      "line_number": 291,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5JSON\u9519\u8bef\u5904\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.id_agent.evaluate_goal_achievement",
        "json.loads",
        "self.assertFalse",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py:test_evaluate_json_error_handling"
    },
    {
      "type": "function",
      "name": "test_get_current_goal",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py",
      "line_number": 320,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u83b7\u53d6\u5f53\u524d\u76ee\u6807",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.id_agent.get_current_goal",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py:test_get_current_goal"
    },
    {
      "type": "function",
      "name": "test_get_value_standard",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py",
      "line_number": 325,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u83b7\u53d6\u4ef7\u503c\u6807\u51c6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.id_agent.get_value_standard",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py:test_get_value_standard"
    },
    {
      "type": "function",
      "name": "test_get_task_specification",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py",
      "line_number": 330,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u83b7\u53d6\u4efb\u52a1\u89c4\u683c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.id_agent.get_task_specification",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py:test_get_task_specification"
    },
    {
      "type": "function",
      "name": "test_reset_goal",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py",
      "line_number": 335,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u91cd\u7f6e\u76ee\u6807",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.id_agent.reset_goal",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py:test_reset_goal"
    },
    {
      "type": "function",
      "name": "test_adjust_value_standard",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py",
      "line_number": 351,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u8c03\u6574\u4ef7\u503c\u6807\u51c6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.id_agent.adjust_value_standard",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertIn",
        "self.assertIn",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py:test_adjust_value_standard"
    },
    {
      "type": "function",
      "name": "test_complete_evaluation_cycle",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py",
      "line_number": 383,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5b8c\u6574\u7684\u8bc4\u4f30\u5faa\u73af",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.id_agent.initialize_value_system",
        "Result",
        "self.id_agent.generate_evaluation_instruction",
        "Result",
        "self.id_agent.evaluate_goal_achievement",
        "json.loads",
        "self.assertTrue"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py:test_complete_evaluation_cycle"
    },
    {
      "type": "function",
      "name": "test_iterative_standard_adjustment",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py",
      "line_number": 411,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u8fed\u4ee3\u7684\u6807\u51c6\u8c03\u6574",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.id_agent.adjust_value_standard",
        "Result",
        "self.id_agent.adjust_value_standard",
        "self.assertIn",
        "self.assertNotIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py:test_iterative_standard_adjustment"
    },
    {
      "type": "function",
      "name": "test_practical_evaluation_approach",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py",
      "line_number": 434,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5b9e\u7528\u7684\u8bc4\u4f30\u65b9\u6cd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.id_agent.generate_evaluation_instruction",
        "self.assertLess",
        "self.assertNotIn",
        "self.assertNotIn",
        "Result",
        "self.id_agent.evaluate_goal_achievement",
        "json.loads",
        "self.assertTrue",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py:test_practical_evaluation_approach"
    },
    {
      "type": "function",
      "name": "test_empty_instruction_handling",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py",
      "line_number": 474,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u7a7a\u6307\u4ee4\u5904\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.id_agent.initialize_value_system",
        "self.assertIsNotNone",
        "self.id_agent.initialize_value_system",
        "self.assertIsNotNone"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py:test_empty_instruction_handling"
    },
    {
      "type": "function",
      "name": "test_malformed_response_parsing",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py",
      "line_number": 487,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u683c\u5f0f\u9519\u8bef\u7684\u54cd\u5e94\u89e3\u6790",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.id_agent.initialize_value_system",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py:test_malformed_response_parsing"
    },
    {
      "type": "function",
      "name": "test_extremely_long_instruction",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py",
      "line_number": 501,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6781\u957f\u6307\u4ee4\u5904\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.id_agent.initialize_value_system",
        "self.assertIsNotNone",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py:test_extremely_long_instruction"
    },
    {
      "type": "function",
      "name": "test_json_response_variations",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py",
      "line_number": 513,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5JSON\u54cd\u5e94\u7684\u5404\u79cd\u53d8\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.id_agent.evaluate_goal_achievement",
        "json.loads",
        "self.assertTrue",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py:test_json_response_variations"
    },
    {
      "type": "function",
      "name": "test_concurrent_goal_management",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py",
      "line_number": 534,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5e76\u53d1\u76ee\u6807\u7ba1\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.id_agent.initialize_value_system",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py:test_concurrent_goal_management"
    },
    {
      "type": "function",
      "name": "test_special_characters_in_values",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py",
      "line_number": 550,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u503c\u4e2d\u7684\u7279\u6b8a\u5b57\u7b26",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.id_agent.initialize_value_system",
        "self.assertIsNotNone",
        "self.assertIn",
        "inst.replace",
        "self.id_agent.goal_description.replace"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_id_agent.py:test_special_characters_in_values"
    },
    {
      "type": "class",
      "name": "TestEgoAgentInitialization",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py",
      "line_number": 27,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u81ea\u6211\u667a\u80fd\u4f53\u521d\u59cb\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_default_initialization",
        "test_custom_system_message"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py:TestEgoAgentInitialization"
    },
    {
      "type": "class",
      "name": "TestStateAnalysis",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py",
      "line_number": 53,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u72b6\u6001\u5206\u6790\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_analyze_current_state_basic",
        "test_analyze_current_state_complex"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py:TestStateAnalysis"
    },
    {
      "type": "class",
      "name": "TestDecisionMaking",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py",
      "line_number": 104,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u51b3\u7b56\u5236\u5b9a\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_decide_continue_cycle",
        "test_decide_request_evaluation",
        "test_decide_judgment_failed",
        "test_decide_with_invalid_json",
        "test_decide_with_invalid_option"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py:TestDecisionMaking"
    },
    {
      "type": "class",
      "name": "TestEvaluationRequest",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py",
      "line_number": 176,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u8bc4\u4f30\u8bf7\u6c42\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_request_id_evaluation_basic",
        "test_request_id_evaluation_detailed"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py:TestEvaluationRequest"
    },
    {
      "type": "class",
      "name": "TestInstructionGeneration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py",
      "line_number": 223,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6307\u4ee4\u751f\u6210\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_generate_observation_instruction",
        "test_generate_execution_instruction",
        "test_instruction_generation_with_context"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py:TestInstructionGeneration"
    },
    {
      "type": "class",
      "name": "TestErrorHandling",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py",
      "line_number": 297,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u9519\u8bef\u5904\u7406\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_handle_execution_error_basic",
        "test_handle_execution_error_complex",
        "test_handle_execution_error_recovery_strategy"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py:TestErrorHandling"
    },
    {
      "type": "class",
      "name": "TestEgoAgentIntegration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py",
      "line_number": 391,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u81ea\u6211\u667a\u80fd\u4f53\u96c6\u6210\u573a\u666f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_complete_decision_cycle",
        "test_error_recovery_cycle",
        "test_evaluation_request_cycle"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py:TestEgoAgentIntegration"
    },
    {
      "type": "class",
      "name": "TestEgoAgentEdgeCases",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py",
      "line_number": 473,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u81ea\u6211\u667a\u80fd\u4f53\u8fb9\u7f18\u60c5\u51b5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_empty_context_handling",
        "test_malformed_json_responses",
        "test_long_context_handling",
        "test_special_characters_handling",
        "test_concurrent_state_analysis"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py:TestEgoAgentEdgeCases"
    },
    {
      "type": "function",
      "name": "setUp",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py",
      "line_number": 476,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u524d\u51c6\u5907",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Mock",
        "EgoAgent",
        "Mock"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py:setUp"
    },
    {
      "type": "function",
      "name": "test_default_initialization",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py",
      "line_number": 34,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u9ed8\u8ba4\u521d\u59cb\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "EgoAgent",
        "self.assertEqual",
        "self.assertIsNotNone",
        "self.assertIn",
        "self.assertIn",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py:test_default_initialization"
    },
    {
      "type": "function",
      "name": "test_custom_system_message",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py",
      "line_number": 44,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u81ea\u5b9a\u4e49\u7cfb\u7edf\u6d88\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "EgoAgent",
        "self.assertEqual",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py:test_custom_system_message"
    },
    {
      "type": "function",
      "name": "test_analyze_current_state_basic",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py",
      "line_number": 64,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u57fa\u7840\u72b6\u6001\u5206\u6790",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.ego.analyze_current_state",
        "self.assertEqual",
        "self.assertIn",
        "self.assertIn",
        "self.assertIn",
        "self.assertIn",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py:test_analyze_current_state_basic"
    },
    {
      "type": "function",
      "name": "test_analyze_current_state_complex",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py",
      "line_number": 83,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u590d\u6742\u72b6\u6001\u5206\u6790",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.ego.analyze_current_state",
        "self.assertEqual",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py:test_analyze_current_state_complex"
    },
    {
      "type": "function",
      "name": "test_decide_continue_cycle",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py",
      "line_number": 113,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u51b3\u5b9a\u7ee7\u7eed\u5faa\u73af",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.ego.decide_next_action",
        "self.assertEqual",
        "self.assertEqual",
        "call_kwargs.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py:test_decide_continue_cycle"
    },
    {
      "type": "function",
      "name": "test_decide_request_evaluation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py",
      "line_number": 128,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u51b3\u5b9a\u8bf7\u6c42\u8bc4\u4f30",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.ego.decide_next_action",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py:test_decide_request_evaluation"
    },
    {
      "type": "function",
      "name": "test_decide_judgment_failed",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py",
      "line_number": 139,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u51b3\u5b9a\u5224\u65ad\u5931\u8d25",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.ego.decide_next_action",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py:test_decide_judgment_failed"
    },
    {
      "type": "function",
      "name": "test_decide_with_invalid_json",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py",
      "line_number": 150,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u65e0\u6548JSON\u54cd\u5e94\u5904\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.ego.decide_next_action",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py:test_decide_with_invalid_json"
    },
    {
      "type": "function",
      "name": "test_decide_with_invalid_option",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py",
      "line_number": 162,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u65e0\u6548\u9009\u9879\u5904\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.ego.decide_next_action",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py:test_decide_with_invalid_option"
    },
    {
      "type": "function",
      "name": "test_request_id_evaluation_basic",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py",
      "line_number": 185,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u57fa\u7840\u8bc4\u4f30\u8bf7\u6c42",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.ego.request_id_evaluation",
        "self.assertEqual",
        "self.assertIn",
        "self.assertIn",
        "self.assertIn",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py:test_request_id_evaluation_basic"
    },
    {
      "type": "function",
      "name": "test_request_id_evaluation_detailed",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py",
      "line_number": 203,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u8be6\u7ec6\u8bc4\u4f30\u8bf7\u6c42",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.ego.request_id_evaluation",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py:test_request_id_evaluation_detailed"
    },
    {
      "type": "function",
      "name": "test_generate_observation_instruction",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py",
      "line_number": 232,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u751f\u6210\u89c2\u5bdf\u6307\u4ee4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.ego.generate_observation_instruction",
        "self.assertEqual",
        "self.assertIn",
        "self.assertIn",
        "self.assertIn",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py:test_generate_observation_instruction"
    },
    {
      "type": "function",
      "name": "test_generate_execution_instruction",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py",
      "line_number": 250,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u751f\u6210\u6267\u884c\u6307\u4ee4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.ego.generate_execution_instruction",
        "self.assertEqual",
        "self.assertIn",
        "self.assertIn",
        "self.assertIn",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py:test_generate_execution_instruction"
    },
    {
      "type": "function",
      "name": "test_instruction_generation_with_context",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py",
      "line_number": 268,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5e26\u4e0a\u4e0b\u6587\u7684\u6307\u4ee4\u751f\u6210",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.ego.generate_observation_instruction",
        "self.assertIsNotNone",
        "Result",
        "self.ego.generate_execution_instruction",
        "self.assertIsNotNone"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py:test_instruction_generation_with_context"
    },
    {
      "type": "function",
      "name": "test_handle_execution_error_basic",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py",
      "line_number": 306,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u57fa\u7840\u9519\u8bef\u5904\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.ego.handle_execution_error",
        "self.assertEqual",
        "self.assertIn",
        "self.assertIn",
        "self.assertIn",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py:test_handle_execution_error_basic"
    },
    {
      "type": "function",
      "name": "test_handle_execution_error_complex",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py",
      "line_number": 329,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u590d\u6742\u9519\u8bef\u5904\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.ego.handle_execution_error",
        "self.assertEqual",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py:test_handle_execution_error_complex"
    },
    {
      "type": "function",
      "name": "test_handle_execution_error_recovery_strategy",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py",
      "line_number": 361,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u9519\u8bef\u6062\u590d\u7b56\u7565",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.ego.handle_execution_error",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py:test_handle_execution_error_recovery_strategy"
    },
    {
      "type": "function",
      "name": "test_complete_decision_cycle",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py",
      "line_number": 399,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5b8c\u6574\u7684\u51b3\u7b56\u5faa\u73af",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Mock",
        "Result",
        "self.ego.analyze_current_state",
        "self.assertEqual",
        "Result",
        "self.ego.decide_next_action",
        "self.assertEqual",
        "Result",
        "self.ego.generate_execution_instruction",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py:test_complete_decision_cycle"
    },
    {
      "type": "function",
      "name": "test_error_recovery_cycle",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py",
      "line_number": 426,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u9519\u8bef\u6062\u590d\u5faa\u73af",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Mock",
        "Result",
        "self.ego.handle_execution_error",
        "self.assertIn",
        "Result",
        "self.ego.generate_execution_instruction",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py:test_error_recovery_cycle"
    },
    {
      "type": "function",
      "name": "test_evaluation_request_cycle",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py",
      "line_number": 448,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u8bc4\u4f30\u8bf7\u6c42\u5faa\u73af",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Mock",
        "Result",
        "self.ego.analyze_current_state",
        "Result",
        "self.ego.decide_next_action",
        "self.assertEqual",
        "Result",
        "self.ego.request_id_evaluation",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py:test_evaluation_request_cycle"
    },
    {
      "type": "function",
      "name": "test_empty_context_handling",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py",
      "line_number": 482,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u7a7a\u4e0a\u4e0b\u6587\u5904\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.ego.analyze_current_state",
        "self.assertIsNotNone",
        "Result",
        "self.ego.analyze_current_state",
        "self.assertIsNotNone"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py:test_empty_context_handling"
    },
    {
      "type": "function",
      "name": "test_malformed_json_responses",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py",
      "line_number": 494,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u683c\u5f0f\u9519\u8bef\u7684JSON\u54cd\u5e94",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.ego.decide_next_action",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py:test_malformed_json_responses"
    },
    {
      "type": "function",
      "name": "test_long_context_handling",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py",
      "line_number": 510,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u957f\u4e0a\u4e0b\u6587\u5904\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.ego.analyze_current_state",
        "self.assertIsNotNone",
        "self.assertIn",
        "'\\n'.join",
        "range"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py:test_long_context_handling"
    },
    {
      "type": "function",
      "name": "test_special_characters_handling",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py",
      "line_number": 524,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u7279\u6b8a\u5b57\u7b26\u5904\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.ego.analyze_current_state",
        "self.assertIn",
        "context.replace('\\n', '').replace",
        "result.replace('\\n', '').replace",
        "context.replace",
        "result.replace"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py:test_special_characters_handling"
    },
    {
      "type": "function",
      "name": "test_concurrent_state_analysis",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py",
      "line_number": 542,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5e76\u53d1\u72b6\u6001\u5206\u6790",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.ego.analyze_current_state",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_ego_agent.py:test_concurrent_state_analysis"
    },
    {
      "type": "class",
      "name": "Calculator",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/calculator_project/calculator.py",
      "line_number": 1,
      "complexity": 1,
      "docstring": "A simple calculator class that performs basic arithmetic operations.",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "add",
        "subtract",
        "multiply",
        "divide"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/calculator_project/calculator.py:Calculator"
    },
    {
      "type": "function",
      "name": "add",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/calculator_project/calculator.py",
      "line_number": 4,
      "complexity": 1,
      "docstring": "Return the sum of two numbers.",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "a",
        "b"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/calculator_project/calculator.py:add"
    },
    {
      "type": "function",
      "name": "subtract",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/calculator_project/calculator.py",
      "line_number": 8,
      "complexity": 1,
      "docstring": "Return the difference between two numbers.",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "a",
        "b"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/calculator_project/calculator.py:subtract"
    },
    {
      "type": "function",
      "name": "multiply",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/calculator_project/calculator.py",
      "line_number": 12,
      "complexity": 1,
      "docstring": "Return the product of two numbers.",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "a",
        "b"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/calculator_project/calculator.py:multiply"
    },
    {
      "type": "function",
      "name": "divide",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/calculator_project/calculator.py",
      "line_number": 16,
      "complexity": 1,
      "docstring": "Return the quotient of two numbers.",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "a",
        "b"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "ValueError"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/calculator_project/calculator.py:divide"
    },
    {
      "type": "class",
      "name": "TestCalculator",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/calculator_project/test_calculator.py",
      "line_number": 4,
      "complexity": 1,
      "docstring": "Test cases for Calculator class.",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_add",
        "test_subtract",
        "test_multiply",
        "test_divide"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/calculator_project/test_calculator.py:TestCalculator"
    },
    {
      "type": "function",
      "name": "setUp",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/calculator_project/test_calculator.py",
      "line_number": 7,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Calculator"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/calculator_project/test_calculator.py:setUp"
    },
    {
      "type": "function",
      "name": "test_add",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/calculator_project/test_calculator.py",
      "line_number": 10,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.assertEqual",
        "self.assertEqual",
        "self.calc.add",
        "self.calc.add"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/calculator_project/test_calculator.py:test_add"
    },
    {
      "type": "function",
      "name": "test_subtract",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/calculator_project/test_calculator.py",
      "line_number": 14,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.assertEqual",
        "self.assertEqual",
        "self.calc.subtract",
        "self.calc.subtract"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/calculator_project/test_calculator.py:test_subtract"
    },
    {
      "type": "function",
      "name": "test_multiply",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/calculator_project/test_calculator.py",
      "line_number": 18,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.assertEqual",
        "self.assertEqual",
        "self.calc.multiply",
        "self.calc.multiply"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/calculator_project/test_calculator.py:test_multiply"
    },
    {
      "type": "function",
      "name": "test_divide",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/calculator_project/test_calculator.py",
      "line_number": 22,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.assertEqual",
        "self.assertAlmostEqual",
        "self.calc.divide",
        "self.calc.divide",
        "self.assertRaises",
        "self.calc.divide"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/calculator_project/test_calculator.py:test_divide"
    },
    {
      "type": "class",
      "name": "RegisteredAgent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py",
      "line_number": 42,
      "complexity": 1,
      "docstring": "\u5b58\u50a8\u5df2\u6ce8\u518c\u7684\u667a\u80fd\u4f53\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py:RegisteredAgent"
    },
    {
      "type": "class",
      "name": "MultiStepAgent_v3",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py",
      "line_number": 50,
      "complexity": 1,
      "docstring": "\u9759\u6001\u5de5\u4f5c\u6d41\u591a\u6b65\u9aa4\u667a\u80fd\u4f53\n\n\u91c7\u7528\u58f0\u660e\u5f0f\u63a7\u5236\u6d41\u67b6\u6784\uff0c\u901a\u8fc7\u9884\u5b9a\u4e49\u7684\u5de5\u4f5c\u6d41\u914d\u7f6e\u6587\u4ef6\n\u5b9e\u73b0\u786e\u5b9a\u6027\u7684\u9ad8\u6027\u80fd\u6267\u884c\u3002",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "register_agent",
        "execute_workflow_from_file",
        "execute_workflow",
        "create_workflow_from_dict",
        "save_workflow_to_file",
        "list_available_workflows",
        "get_workflow_info",
        "_validate_agents_availability",
        "_execute_single_step",
        "evaluate_condition_with_ai",
        "_on_step_start",
        "_on_step_complete",
        "_on_step_failed",
        "_on_workflow_complete",
        "execute_multi_step",
        "_match_workflow_for_instruction",
        "_extract_variables_from_instruction",
        "_get_default_planning_template",
        "_generate_workflow_plan",
        "_parse_llm_workflow_response",
        "_validate_and_convert_workflow",
        "_create_fallback_workflow",
        "_generate_dynamic_execution_summary",
        "_fix_workflow_references",
        "_build_enhanced_instruction",
        "_get_execution_history",
        "_validate_workflow_legality",
        "_check_loop_logic_conflicts",
        "_check_circular_references",
        "_fix_workflow_issues",
        "_fix_agent_references",
        "_add_missing_fields",
        "_fix_loop_configuration",
        "_find_or_create_terminal_step"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Agent"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py:MultiStepAgent_v3"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py",
      "line_number": 57,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u9759\u6001\u5de5\u4f5c\u6d41\u667a\u80fd\u4f53\n\nArgs:\n    llm: \u8bed\u8a00\u6a21\u578b\u5b9e\u4f8b\n    registered_agents: \u5df2\u6ce8\u518c\u7684\u667a\u80fd\u4f53\u5217\u8868\n    max_retries: \u6700\u5927\u91cd\u8bd5\u6b21\u6570\n    thinker_system_message: \u601d\u8003\u8005\u7cfb\u7edf\u6d88\u606f\n    thinker_chat_system_message: \u601d\u8003\u8005\u804a\u5929\u7cfb\u7edf\u6d88\u606f\n    max_parallel_workers: \u6700\u5927\u5e76\u884c\u5de5\u4f5c\u8fdb\u7a0b\u6570\n    workflow_base_path: \u5de5\u4f5c\u6d41\u914d\u7f6e\u6587\u4ef6\u57fa\u7840\u8def\u5f84\n    planning_prompt_template: \u81ea\u5b9a\u4e49\u89c4\u5212\u63d0\u793a\u6a21\u677f\n    use_mock_evaluator: \u662f\u5426\u5f3a\u5236\u4f7f\u7528\u6a21\u62df\u8bc4\u4f30\u5668\u3002\n                       False: \u5c1d\u8bd5\u4f7f\u7528AI\u8bc4\u4f30\u5668(\u901a\u8fc7DEEPSEEK_API_KEY\u73af\u5883\u53d8\u91cf)\uff0c\n                             \u5982\u65e0API key\u5219\u81ea\u52a8\u964d\u7ea7\u4e3a\u6a21\u62df\u8bc4\u4f30\u5668\n                       True: \u5f3a\u5236\u4f7f\u7528\u6a21\u62df\u8bc4\u4f30\u5668(\u5f00\u53d1/\u6d4b\u8bd5/\u79bb\u7ebf\u73af\u5883)",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "llm",
        "registered_agents",
        "max_retries",
        "thinker_system_message",
        "thinker_chat_system_message",
        "max_parallel_workers",
        "workflow_base_path",
        "planning_prompt_template",
        "use_mock_evaluator"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "super().__init__",
        "StaticWorkflowEngine",
        "WorkflowLoader",
        "self.workflow_engine.set_step_executor",
        "logger.debug",
        "MockTestResultEvaluator",
        "logger.info",
        "Path",
        "self.device.set_variable",
        "self._get_default_planning_template",
        "super",
        "TestResultEvaluator",
        "logger.info",
        "logger.warning",
        "MockTestResultEvaluator",
        "Path",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py:__init__"
    },
    {
      "type": "function",
      "name": "register_agent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py",
      "line_number": 163,
      "complexity": 1,
      "docstring": "\u6ce8\u518c\u667a\u80fd\u4f53\n\nArgs:\n    name: \u667a\u80fd\u4f53\u540d\u79f0\n    instance: \u667a\u80fd\u4f53\u5b9e\u4f8b\n    description: \u667a\u80fd\u4f53\u63cf\u8ff0",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "name",
        "instance",
        "description"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "RegisteredAgent",
        "self.registered_agents.append",
        "self.device.set_variable",
        "logger.debug",
        "getattr"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py:register_agent"
    },
    {
      "type": "function",
      "name": "execute_workflow_from_file",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py",
      "line_number": 181,
      "complexity": 1,
      "docstring": "\u4ece\u6587\u4ef6\u52a0\u8f7d\u5e76\u6267\u884c\u5de5\u4f5c\u6d41\n\nArgs:\n    workflow_file: \u5de5\u4f5c\u6d41\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\n    initial_variables: \u521d\u59cb\u53d8\u91cf\n    \nReturns:\n    \u5de5\u4f5c\u6d41\u6267\u884c\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "workflow_file",
        "initial_variables"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Path(workflow_file).is_absolute",
        "self.workflow_loader.load_from_file",
        "self.execute_workflow",
        "str",
        "logger.error",
        "Path"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py:execute_workflow_from_file"
    },
    {
      "type": "function",
      "name": "execute_workflow",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py",
      "line_number": 210,
      "complexity": 1,
      "docstring": "\u6267\u884c\u5de5\u4f5c\u6d41\u5b9a\u4e49\n\nArgs:\n    workflow_definition: \u5de5\u4f5c\u6d41\u5b9a\u4e49\n    initial_variables: \u521d\u59cb\u53d8\u91cf\n    \nReturns:\n    \u5de5\u4f5c\u6d41\u6267\u884c\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "workflow_definition",
        "initial_variables"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "self._validate_agents_availability",
        "self.workflow_engine.execute_workflow",
        "logger.info",
        "logger.info",
        "logger.info",
        "logger.error",
        "logger.error",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py:execute_workflow"
    },
    {
      "type": "function",
      "name": "create_workflow_from_dict",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py",
      "line_number": 251,
      "complexity": 1,
      "docstring": "\u4ece\u5b57\u5178\u521b\u5efa\u5de5\u4f5c\u6d41\u5b9a\u4e49\n\nArgs:\n    workflow_dict: \u5de5\u4f5c\u6d41\u914d\u7f6e\u5b57\u5178\n    \nReturns:\n    \u5de5\u4f5c\u6d41\u5b9a\u4e49\u5bf9\u8c61",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "workflow_dict"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.workflow_loader.load_from_dict"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py:create_workflow_from_dict"
    },
    {
      "type": "function",
      "name": "save_workflow_to_file",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py",
      "line_number": 263,
      "complexity": 1,
      "docstring": "\u4fdd\u5b58\u5de5\u4f5c\u6d41\u5b9a\u4e49\u5230\u6587\u4ef6\n\nArgs:\n    workflow_definition: \u5de5\u4f5c\u6d41\u5b9a\u4e49\n    file_path: \u4fdd\u5b58\u8def\u5f84",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "workflow_definition",
        "file_path"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.workflow_loader.save_to_file",
        "Path(file_path).is_absolute",
        "str",
        "Path"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py:save_workflow_to_file"
    },
    {
      "type": "function",
      "name": "list_available_workflows",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py",
      "line_number": 280,
      "complexity": 1,
      "docstring": "\u5217\u51fa\u53ef\u7528\u7684\u5de5\u4f5c\u6d41\u914d\u7f6e\u6587\u4ef6\n\nReturns:\n    \u5de5\u4f5c\u6d41\u6587\u4ef6\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.workflow_base_path.glob",
        "self.workflow_base_path.glob",
        "self.workflow_base_path.glob",
        "sorted",
        "self.workflow_base_path.exists",
        "workflow_files.append",
        "workflow_files.append",
        "workflow_files.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py:list_available_workflows"
    },
    {
      "type": "function",
      "name": "get_workflow_info",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py",
      "line_number": 301,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u5de5\u4f5c\u6d41\u57fa\u672c\u4fe1\u606f\n\nArgs:\n    workflow_file: \u5de5\u4f5c\u6d41\u6587\u4ef6\u8def\u5f84\n    \nReturns:\n    \u5de5\u4f5c\u6d41\u4fe1\u606f\u5b57\u5178",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "workflow_file"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Path(workflow_file).is_absolute",
        "self.workflow_loader.load_from_file",
        "str",
        "len",
        "list",
        "list",
        "len",
        "logger.error",
        "Path",
        "set",
        "workflow_definition.global_variables.keys"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py:get_workflow_info"
    },
    {
      "type": "function",
      "name": "_validate_agents_availability",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py",
      "line_number": 335,
      "complexity": 1,
      "docstring": "\u9a8c\u8bc1\u6240\u9700\u667a\u80fd\u4f53\u662f\u5426\u5df2\u6ce8\u518c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "workflow_definition"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "ValueError",
        "', '.join"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py:_validate_agents_availability"
    },
    {
      "type": "function",
      "name": "_execute_single_step",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py",
      "line_number": 345,
      "complexity": 1,
      "docstring": "\u6267\u884c\u5355\u4e2a\u5de5\u4f5c\u6d41\u6b65\u9aa4\n\nArgs:\n    step: \u5de5\u4f5c\u6d41\u6b65\u9aa4\u5b9a\u4e49\n    \nReturns:\n    \u6267\u884c\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._build_enhanced_instruction",
        "ValueError",
        "target_agent.chat_sync",
        "target_agent.execute_sync",
        "logger.error",
        "Result"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py:_execute_single_step"
    },
    {
      "type": "function",
      "name": "evaluate_condition_with_ai",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py",
      "line_number": 389,
      "complexity": 1,
      "docstring": "\u4f7f\u7528AI\u667a\u80fd\u8bc4\u4f30\u6761\u4ef6\u8868\u8fbe\u5f0f\n\nArgs:\n    condition: \u6761\u4ef6\u8868\u8fbe\u5f0f\n    last_result: \u4e0a\u4e00\u6b65\u7684\u6267\u884c\u7ed3\u679c\n    \nReturns:\n    bool: \u6761\u4ef6\u662f\u5426\u6ee1\u8db3",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "condition",
        "last_result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "self.result_evaluator.evaluate_test_result",
        "logger.info",
        "logger.debug",
        "logger.error",
        "logger.warning",
        "getattr",
        "getattr",
        "getattr",
        "getattr",
        "getattr",
        "getattr",
        "getattr"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py:evaluate_condition_with_ai"
    },
    {
      "type": "function",
      "name": "_on_step_start",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py",
      "line_number": 439,
      "complexity": 1,
      "docstring": "\u6b65\u9aa4\u5f00\u59cb\u56de\u8c03",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py:_on_step_start"
    },
    {
      "type": "function",
      "name": "_on_step_complete",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py",
      "line_number": 445,
      "complexity": 1,
      "docstring": "\u6b65\u9aa4\u5b8c\u6210\u56de\u8c03",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step",
        "result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "hasattr",
        "print",
        "getattr",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py:_on_step_complete"
    },
    {
      "type": "function",
      "name": "_on_step_failed",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py",
      "line_number": 455,
      "complexity": 1,
      "docstring": "\u6b65\u9aa4\u5931\u8d25\u56de\u8c03",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step",
        "error"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py:_on_step_failed"
    },
    {
      "type": "function",
      "name": "_on_workflow_complete",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py",
      "line_number": 464,
      "complexity": 1,
      "docstring": "\u5de5\u4f5c\u6d41\u5b8c\u6210\u56de\u8c03",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py:_on_workflow_complete"
    },
    {
      "type": "function",
      "name": "execute_multi_step",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py",
      "line_number": 479,
      "complexity": 1,
      "docstring": "\u591a\u6b65\u9aa4\u4efb\u52a1\u6267\u884c\u4e3b\u5165\u53e3\u65b9\u6cd5\uff08\u6807\u51c6\u63a5\u53e3\u517c\u5bb9\uff09\n\n\u57fa\u4e8e\u4e3b\u6307\u4ee4\u8c03\u7528LLM\u751f\u6210\u9759\u6001\u5de5\u4f5c\u6d41\u914d\u7f6e\uff0c\u7136\u540e\u6267\u884c\u3002\n\nArgs:\n    main_instruction: \u4e3b\u4efb\u52a1\u6307\u4ee4\n    interactive: \u662f\u5426\u4ea4\u4e92\u6a21\u5f0f\uff08\u9759\u6001\u5de5\u4f5c\u6d41\u4e2d\u6682\u4e0d\u652f\u6301\uff09\n    \nReturns:\n    \u6267\u884c\u6458\u8981\u5b57\u7b26\u4e32",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "main_instruction",
        "interactive"
      ],
      "decorators": [
        "reduce_memory_decorator_compress"
      ],
      "inheritance": [],
      "calls": [
        "logger.info",
        "logger.info",
        "self._generate_workflow_plan",
        "self._extract_variables_from_instruction",
        "logger.info",
        "self.execute_workflow",
        "self._generate_dynamic_execution_summary",
        "logger.error",
        "len",
        "str",
        "', '.join",
        "', '.join",
        "self.list_available_workflows"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py:execute_multi_step"
    },
    {
      "type": "function",
      "name": "_match_workflow_for_instruction",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py",
      "line_number": 532,
      "complexity": 1,
      "docstring": "\u6839\u636e\u6307\u4ee4\u667a\u80fd\u5339\u914d\u6700\u5408\u9002\u7684\u5de5\u4f5c\u6d41\u6587\u4ef6\n\nArgs:\n    instruction: \u7528\u6237\u6307\u4ee4\n    \nReturns:\n    \u5de5\u4f5c\u6d41\u6587\u4ef6\u540d",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "instruction.lower",
        "any",
        "any",
        "any",
        "self.list_available_workflows",
        "ValueError"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py:_match_workflow_for_instruction"
    },
    {
      "type": "function",
      "name": "_extract_variables_from_instruction",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py",
      "line_number": 560,
      "complexity": 1,
      "docstring": "\u4ece\u6307\u4ee4\u4e2d\u63d0\u53d6\u53ef\u80fd\u7684\u521d\u59cb\u53d8\u91cf\n\nArgs:\n    instruction: \u7528\u6237\u6307\u4ee4\n    \nReturns:\n    \u63d0\u53d6\u7684\u53d8\u91cf\u5b57\u5178",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "dt.now().isoformat",
        "dt.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py:_extract_variables_from_instruction"
    },
    {
      "type": "function",
      "name": "_get_default_planning_template",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py",
      "line_number": 581,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u9ed8\u8ba4\u7684\u89c4\u5212\u63d0\u793a\u6a21\u677f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py:_get_default_planning_template"
    },
    {
      "type": "function",
      "name": "_generate_workflow_plan",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py",
      "line_number": 734,
      "complexity": 1,
      "docstring": "\u8c03\u7528LLM\u751f\u6210\u5de5\u4f5c\u6d41\u89c4\u5212\n\nArgs:\n    main_instruction: \u4e3b\u4efb\u52a1\u6307\u4ee4\n    \nReturns:\n    \u5de5\u4f5c\u6d41\u5b9a\u4e49\u5bf9\u8c61",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "main_instruction"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "'\\\\n'.join",
        "self.planning_prompt_template.format",
        "logger.debug",
        "self.chat_sync",
        "self._parse_llm_workflow_response",
        "self._validate_workflow_legality",
        "self._validate_and_convert_workflow",
        "logger.info",
        "', '.join",
        "logger.warning",
        "self.chat_sync",
        "logger.warning",
        "self._fix_workflow_issues",
        "logger.error",
        "self._create_fallback_workflow",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py:_generate_workflow_plan"
    },
    {
      "type": "function",
      "name": "_parse_llm_workflow_response",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py",
      "line_number": 801,
      "complexity": 1,
      "docstring": "\u89e3\u6790LLM\u8fd4\u56de\u7684\u5de5\u4f5c\u6d41JSON\u54cd\u5e94\n\nArgs:\n    response: LLM\u54cd\u5e94\u6587\u672c\n    \nReturns:\n    \u89e3\u6790\u540e\u7684\u5de5\u4f5c\u6d41\u6570\u636e\u5b57\u5178",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "response"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "json.loads",
        "extract_code",
        "response.find",
        "logger.error",
        "ValueError",
        "json.loads",
        "logger.debug",
        "response.find",
        "response[start:end].strip",
        "json.loads"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py:_parse_llm_workflow_response"
    },
    {
      "type": "function",
      "name": "_validate_and_convert_workflow",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py",
      "line_number": 838,
      "complexity": 1,
      "docstring": "\u9a8c\u8bc1\u5e76\u8f6c\u6362\u5de5\u4f5c\u6d41\u6570\u636e\u4e3aWorkflowDefinition\u5bf9\u8c61\n\nArgs:\n    workflow_data: \u5de5\u4f5c\u6d41\u6570\u636e\u5b57\u5178\n    main_instruction: \u539f\u59cb\u4e3b\u6307\u4ee4\n    \nReturns:\n    \u9a8c\u8bc1\u540e\u7684\u5de5\u4f5c\u6d41\u5b9a\u4e49\u5bf9\u8c61",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "workflow_data",
        "main_instruction"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._fix_workflow_references",
        "self.workflow_loader.load_from_dict",
        "ValueError",
        "step.get",
        "logger.warning",
        "next",
        "iter",
        "step.get",
        "step.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py:_validate_and_convert_workflow"
    },
    {
      "type": "function",
      "name": "_create_fallback_workflow",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py",
      "line_number": 885,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u56de\u9000\u5de5\u4f5c\u6d41\uff08\u5f53LLM\u751f\u6210\u5931\u8d25\u65f6\u4f7f\u7528\uff09\n\nArgs:\n    main_instruction: \u4e3b\u4efb\u52a1\u6307\u4ee4\n    \nReturns:\n    \u7b80\u5355\u7684\u56de\u9000\u5de5\u4f5c\u6d41\u5b9a\u4e49",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "main_instruction"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "self.workflow_loader.load_from_dict"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py:_create_fallback_workflow"
    },
    {
      "type": "function",
      "name": "_generate_dynamic_execution_summary",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py",
      "line_number": 933,
      "complexity": 1,
      "docstring": "\u751f\u6210\u52a8\u6001\u5de5\u4f5c\u6d41\u6267\u884c\u6458\u8981\n\nArgs:\n    main_instruction: \u539f\u59cb\u4e3b\u6307\u4ee4\n    workflow_definition: \u5de5\u4f5c\u6d41\u5b9a\u4e49\n    result: \u6267\u884c\u7ed3\u679c\n    \nReturns:\n    \u6267\u884c\u6458\u8981\u5b57\u7b26\u4e32",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "main_instruction",
        "workflow_definition",
        "result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "enumerate",
        "result.step_results.items",
        "{'completed': '\u2705', 'failed': '\u274c', 'skipped': '\u23ed\ufe0f', 'pending': '\u23f8\ufe0f', 'running': '\ud83d\udd04'}.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py:_generate_dynamic_execution_summary"
    },
    {
      "type": "function",
      "name": "_fix_workflow_references",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py",
      "line_number": 995,
      "complexity": 1,
      "docstring": "\u81ea\u52a8\u4fee\u590d\u5de5\u4f5c\u6d41\u4e2d\u7684\u6b65\u9aa4\u5f15\u7528\u95ee\u9898\n\nArgs:\n    workflow_data: \u5de5\u4f5c\u6d41\u6570\u636e\u5b57\u5178\uff08\u4f1a\u88ab\u5c31\u5730\u4fee\u6539\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "workflow_data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "workflow_data.get",
        "enumerate",
        "workflow_data.get",
        "logger.debug",
        "step.get",
        "logger.warning",
        "step.get",
        "step.get",
        "steps[i + 1].get",
        "logger.debug",
        "control_flow.get",
        "logger.debug",
        "valid_rules.append",
        "step.get",
        "logger.debug",
        "logger.warning",
        "logger.warning",
        "logger.warning",
        "logger.warning",
        "self._find_or_create_terminal_step",
        "logger.info",
        "isinstance",
        "logger.warning",
        "valid_rules.append",
        "len",
        "steps[i + 1].get",
        "logger.warning",
        "control_flow.pop",
        "len",
        "len",
        "len",
        "valid_parallel_steps.append",
        "logger.warning",
        "steps[i + 1].get",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py:_fix_workflow_references"
    },
    {
      "type": "function",
      "name": "_build_enhanced_instruction",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py",
      "line_number": 1110,
      "complexity": 1,
      "docstring": "\u6784\u5efa\u5305\u542b\u5168\u5c40\u72b6\u6001\u7684\u589e\u5f3a\u6307\u4ee4\n\nArgs:\n    current_step: \u5f53\u524d\u8981\u6267\u884c\u7684\u6b65\u9aa4\n    \nReturns:\n    \u5305\u542b\u5168\u5c40\u72b6\u6001\u4e0a\u4e0b\u6587\u7684\u589e\u5f3a\u6307\u4ee4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_step"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.workflow_engine.get_current_global_state"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py:_build_enhanced_instruction"
    },
    {
      "type": "function",
      "name": "_get_execution_history",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py",
      "line_number": 1166,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u5f53\u524d\u6b65\u9aa4\u4e4b\u524d\u7684\u6267\u884c\u5386\u53f2\n\n\u26a0\ufe0f \u5df2\u5e9f\u5f03\uff1a\u6b64\u65b9\u6cd5\u5df2\u88ab\u5168\u5c40\u72b6\u6001\u7ba1\u7406\u66ff\u4ee3\uff0c\u5efa\u8bae\u4f7f\u7528 workflow_engine.get_current_global_state()\n\nArgs:\n    current_step: \u5f53\u524d\u6b65\u9aa4\n    \nReturns:\n    \u683c\u5f0f\u5316\u7684\u6267\u884c\u5386\u53f2\u5b57\u7b26\u4e32",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_step"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "enumerate",
        "range",
        "'\\n'.join",
        "hasattr",
        "history_parts.append",
        "hasattr",
        "hasattr",
        "hasattr",
        "hasattr",
        "hasattr",
        "hasattr",
        "len",
        "str",
        "len",
        "len",
        "len",
        "len",
        "str",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py:_get_execution_history"
    },
    {
      "type": "function",
      "name": "_validate_workflow_legality",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py",
      "line_number": 1241,
      "complexity": 1,
      "docstring": "\u6821\u9a8c\u5de5\u4f5c\u6d41\u7684\u5408\u6cd5\u6027\n\nArgs:\n    workflow_data: \u5de5\u4f5c\u6d41\u6570\u636e\u5b57\u5178\n    \nReturns:\n    \u6821\u9a8c\u7ed3\u679c\u5b57\u5178 {\"is_valid\": bool, \"errors\": List[str]}",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "workflow_data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "set",
        "workflow_data.get",
        "self._check_loop_logic_conflicts",
        "self._check_circular_references",
        "errors.append",
        "errors.append",
        "step_ids.add",
        "errors.append",
        "step.get",
        "step.get",
        "step.get",
        "control_flow.get",
        "control_flow.get",
        "control_flow.get",
        "control_flow.get",
        "control_flow.get",
        "rule.get",
        "len",
        "errors.append",
        "errors.append",
        "errors.append",
        "errors.append",
        "errors.append",
        "errors.append",
        "errors.append",
        "errors.append",
        "step.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py:_validate_workflow_legality"
    },
    {
      "type": "function",
      "name": "_check_loop_logic_conflicts",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py",
      "line_number": 1331,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u5faa\u73af\u903b\u8f91\u51b2\u7a81",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "steps",
        "errors"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "step.get",
        "step.get",
        "control_flow.get",
        "step.get",
        "control_flow.get",
        "control_flow.get",
        "errors.append",
        "errors.append",
        "errors.append",
        "control_flow.get",
        "errors.append",
        "errors.append",
        "any"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py:_check_loop_logic_conflicts"
    },
    {
      "type": "function",
      "name": "_check_circular_references",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py",
      "line_number": 1370,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u5faa\u73af\u5f15\u7528\uff08\u7b80\u5355\u7248\u672c\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "steps",
        "errors"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "dependencies.items",
        "step.get",
        "set",
        "step.get",
        "control_flow.get",
        "control_flow.get",
        "deps.add",
        "deps.add",
        "errors.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py:_check_circular_references"
    },
    {
      "type": "function",
      "name": "_fix_workflow_issues",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py",
      "line_number": 1400,
      "complexity": 1,
      "docstring": "\u4fee\u590d\u5de5\u4f5c\u6d41\u95ee\u9898\n\nArgs:\n    workflow_data: \u6709\u95ee\u9898\u7684\u5de5\u4f5c\u6d41\u6570\u636e\n    errors: \u6821\u9a8c\u9519\u8bef\u5217\u8868\n    \nReturns:\n    \u4fee\u590d\u540e\u7684\u5de5\u4f5c\u6d41\u6570\u636e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "workflow_data",
        "errors"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "self._fix_workflow_references",
        "logger.info",
        "self._fix_agent_references",
        "len",
        "self._add_missing_fields",
        "self._fix_loop_configuration"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py:_fix_workflow_issues"
    },
    {
      "type": "function",
      "name": "_fix_agent_references",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py",
      "line_number": 1429,
      "complexity": 1,
      "docstring": "\u4fee\u590d\u667a\u80fd\u4f53\u5f15\u7528\u95ee\u9898",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "workflow_data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "workflow_data.get",
        "step.get",
        "logger.debug",
        "step.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py:_fix_agent_references"
    },
    {
      "type": "function",
      "name": "_add_missing_fields",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py",
      "line_number": 1443,
      "complexity": 1,
      "docstring": "\u6dfb\u52a0\u7f3a\u5931\u7684\u5fc5\u8981\u5b57\u6bb5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "workflow_data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "enumerate"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py:_add_missing_fields"
    },
    {
      "type": "function",
      "name": "_fix_loop_configuration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py",
      "line_number": 1474,
      "complexity": 1,
      "docstring": "\u4fee\u590d\u5faa\u73af\u914d\u7f6e\u95ee\u9898",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "workflow_data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "workflow_data.get",
        "step.get",
        "step.get",
        "control_flow.get",
        "step.get",
        "control_flow.get",
        "logger.info",
        "control_flow.get",
        "logger.warning",
        "control_flow.get",
        "logger.debug",
        "control_flow.get",
        "control_flow.get",
        "logger.debug",
        "logger.warning",
        "step.get",
        "logger.debug",
        "s.get",
        "step_ids.index",
        "logger.debug"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py:_fix_loop_configuration"
    },
    {
      "type": "function",
      "name": "_find_or_create_terminal_step",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py",
      "line_number": 1531,
      "complexity": 1,
      "docstring": "\u67e5\u627e\u6216\u521b\u5efa\u7ec8\u6b62\u6b65\u9aa4\n\nArgs:\n    steps: \u6b65\u9aa4\u5217\u8868\n    valid_step_ids: \u6709\u6548\u7684\u6b65\u9aa4ID\u96c6\u5408\n    \nReturns:\n    \u7ec8\u6b62\u6b65\u9aa4\u7684ID",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "steps",
        "valid_step_ids"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "steps.append",
        "valid_step_ids.add",
        "logger.info",
        "step.get",
        "last_step.get",
        "control_flow.get",
        "step.get",
        "logger.info",
        "logger.debug"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py:_find_or_create_terminal_step"
    },
    {
      "type": "class",
      "name": "SafeEvaluator",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py",
      "line_number": 18,
      "complexity": 1,
      "docstring": "\u5b89\u5168\u7684\u8868\u8fbe\u5f0f\u8bc4\u4f30\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "set_variables",
        "evaluate",
        "_preprocess_expression",
        "_validate_ast",
        "_is_safe_attribute",
        "_eval_node"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py:SafeEvaluator"
    },
    {
      "type": "class",
      "name": "VariableInterpolator",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py",
      "line_number": 210,
      "complexity": 1,
      "docstring": "\u53d8\u91cf\u63d2\u503c\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "interpolate"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py:VariableInterpolator"
    },
    {
      "type": "class",
      "name": "ControlFlowEvaluator",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py",
      "line_number": 235,
      "complexity": 1,
      "docstring": "\u63a7\u5236\u6d41\u6761\u4ef6\u8bc4\u4f30\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "set_context",
        "evaluate_control_flow_condition",
        "evaluate_condition",
        "_evaluate_with_ai_field",
        "_evaluate_with_ai_string",
        "interpolate_value",
        "evaluate_expression",
        "check_timeout",
        "get_variable",
        "set_variable",
        "evaluate_natural_language_condition",
        "_evaluate_with_llm",
        "_build_condition_evaluation_prompt",
        "can_evaluate_natural_language"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py:ControlFlowEvaluator"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py",
      "line_number": 238,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "ai_evaluator",
        "llm"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "SafeEvaluator"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py:__init__"
    },
    {
      "type": "function",
      "name": "set_variables",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py",
      "line_number": 63,
      "complexity": 1,
      "docstring": "\u8bbe\u7f6e\u53ef\u7528\u53d8\u91cf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "variables"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "variables.copy"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py:set_variables"
    },
    {
      "type": "function",
      "name": "evaluate",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py",
      "line_number": 67,
      "complexity": 1,
      "docstring": "\u5b89\u5168\u8bc4\u4f30\u8868\u8fbe\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "expression"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._preprocess_expression",
        "ast.parse",
        "self._validate_ast",
        "self._eval_node",
        "logger.error",
        "ValueError"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py:evaluate"
    },
    {
      "type": "function",
      "name": "_preprocess_expression",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py",
      "line_number": 86,
      "complexity": 1,
      "docstring": "\u9884\u5904\u7406\u8868\u8fbe\u5f0f\uff0c\u8f6c\u6362\u903b\u8f91\u64cd\u4f5c\u7b26",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "expression"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "expression.replace(' AND ', ' and ').replace",
        "processed.replace('AND ', 'and ').replace",
        "processed.replace('OR ', 'or ').replace",
        "expression.replace",
        "processed.replace",
        "processed.replace"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py:_preprocess_expression"
    },
    {
      "type": "function",
      "name": "_validate_ast",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py",
      "line_number": 95,
      "complexity": 1,
      "docstring": "\u9a8c\u8bc1AST\u6811\u7684\u5b89\u5168\u6027",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "tree"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "ast.walk",
        "isinstance",
        "isinstance",
        "ValueError",
        "isinstance",
        "isinstance",
        "ValueError",
        "isinstance",
        "ValueError",
        "self._is_safe_attribute",
        "ValueError"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py:_validate_ast"
    },
    {
      "type": "function",
      "name": "_is_safe_attribute",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py",
      "line_number": 114,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u5c5e\u6027\u8bbf\u95ee\u662f\u5426\u5b89\u5168",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "node"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py:_is_safe_attribute"
    },
    {
      "type": "function",
      "name": "_eval_node",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py",
      "line_number": 123,
      "complexity": 1,
      "docstring": "\u9012\u5f52\u8bc4\u4f30AST\u8282\u70b9",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "node"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "isinstance",
        "isinstance",
        "isinstance",
        "self._eval_node",
        "self._eval_node",
        "self.ALLOWED_OPERATORS.get",
        "op",
        "isinstance",
        "type",
        "ValueError",
        "self._eval_node",
        "self.ALLOWED_OPERATORS.get",
        "op",
        "isinstance",
        "type",
        "ValueError",
        "self._eval_node",
        "zip",
        "isinstance",
        "self._eval_node",
        "self.ALLOWED_OPERATORS.get",
        "isinstance",
        "isinstance",
        "ValueError",
        "type",
        "type",
        "ValueError",
        "op_func",
        "isinstance",
        "self._eval_node",
        "func",
        "isinstance",
        "type",
        "ValueError",
        "self._eval_node",
        "self._eval_node",
        "self._eval_node",
        "getattr",
        "isinstance",
        "self._eval_node",
        "self._eval_node",
        "isinstance",
        "type",
        "self._eval_node",
        "tuple",
        "isinstance",
        "type",
        "dict",
        "ValueError",
        "self._eval_node",
        "self._eval_node",
        "self._eval_node",
        "zip",
        "type"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py:_eval_node"
    },
    {
      "type": "function",
      "name": "interpolate",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py",
      "line_number": 216,
      "complexity": 1,
      "docstring": "\u63d2\u503c\u53d8\u91cf\u5230\u6587\u672c\u4e2d",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "text"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "re.sub",
        "isinstance",
        "match.group(1).strip",
        "str",
        "logger.warning",
        "match.group",
        "match.group"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py:interpolate"
    },
    {
      "type": "function",
      "name": "set_context",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py",
      "line_number": 248,
      "complexity": 1,
      "docstring": "\u8bbe\u7f6e\u8bc4\u4f30\u4e0a\u4e0b\u6587",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "global_variables",
        "runtime_variables",
        "step_result",
        "execution_stats",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "datetime.now",
        "all_variables.update",
        "self.evaluator.set_variables",
        "VariableInterpolator",
        "all_variables.update",
        "all_variables.update",
        "hasattr",
        "hasattr",
        "hasattr",
        "hasattr",
        "all_variables.update",
        "now.timestamp",
        "now.date"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py:set_context"
    },
    {
      "type": "function",
      "name": "evaluate_control_flow_condition",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py",
      "line_number": 303,
      "complexity": 1,
      "docstring": "\u8bc4\u4f30ControlFlow\u7684\u6761\u4ef6\uff08\u6df7\u5408\u65b9\u6848\uff09\n\nArgs:\n    control_flow: ControlFlow\u5bf9\u8c61\n    default_success_state: \u5f53\u6ca1\u6709\u6761\u4ef6\u65f6\u7684\u9ed8\u8ba4\u72b6\u6001\n    \nReturns:\n    bool: \u6761\u4ef6\u8bc4\u4f30\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "control_flow",
        "default_success_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "getattr",
        "logger.info",
        "self._evaluate_with_ai_field",
        "hasattr",
        "self.evaluate_condition"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py:evaluate_control_flow_condition"
    },
    {
      "type": "function",
      "name": "evaluate_condition",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py",
      "line_number": 329,
      "complexity": 1,
      "docstring": "\u8bc4\u4f30\u6761\u4ef6\u8868\u8fbe\u5f0f\uff08\u4fdd\u6301\u5411\u540e\u517c\u5bb9\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "condition"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.interpolator.interpolate",
        "logger.debug",
        "self.evaluator.evaluate",
        "bool",
        "logger.info",
        "self._evaluate_with_ai_string",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py:evaluate_condition"
    },
    {
      "type": "function",
      "name": "_evaluate_with_ai_field",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py",
      "line_number": 355,
      "complexity": 1,
      "docstring": "\u4f7f\u7528AI\u8bc4\u4f30\u5668\u5224\u65ad\u6d4b\u8bd5\u7ed3\u679c\uff08\u5e03\u5c14\u5b57\u6bb5\u65b9\u5f0f\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "control_flow"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "getattr",
        "logger.warning",
        "self.ai_evaluator.evaluate_test_result",
        "getattr",
        "logger.info",
        "logger.debug",
        "logger.warning",
        "self.evaluate_condition",
        "logger.warning",
        "getattr",
        "logger.warning",
        "getattr",
        "logger.error",
        "getattr",
        "getattr",
        "getattr",
        "getattr",
        "getattr",
        "getattr",
        "logger.info",
        "self.evaluate_condition",
        "logger.info",
        "self.evaluate_condition"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py:_evaluate_with_ai_field"
    },
    {
      "type": "function",
      "name": "_evaluate_with_ai_string",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py",
      "line_number": 407,
      "complexity": 1,
      "docstring": "\u4f7f\u7528AI\u8bc4\u4f30\u5668\u5224\u65ad\u6d4b\u8bd5\u7ed3\u679c\uff08\u5b57\u7b26\u4e32\u6761\u4ef6\u65b9\u5f0f\uff0c\u4fdd\u6301\u5411\u540e\u517c\u5bb9\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "condition"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.warning",
        "getattr",
        "logger.warning",
        "self.ai_evaluator.evaluate_test_result",
        "logger.info",
        "logger.debug",
        "logger.error",
        "getattr",
        "getattr",
        "getattr",
        "getattr",
        "getattr"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py:_evaluate_with_ai_string"
    },
    {
      "type": "function",
      "name": "interpolate_value",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py",
      "line_number": 438,
      "complexity": 1,
      "docstring": "\u63d2\u503c\u53d8\u91cf\u503c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "value"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "isinstance",
        "self.interpolator.interpolate"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py:interpolate_value"
    },
    {
      "type": "function",
      "name": "evaluate_expression",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py",
      "line_number": 444,
      "complexity": 1,
      "docstring": "\u8bc4\u4f30\u8868\u8fbe\u5f0f\u5e76\u8fd4\u56de\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "expression"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.interpolator.interpolate",
        "logger.debug",
        "self.evaluator.evaluate",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py:evaluate_expression"
    },
    {
      "type": "function",
      "name": "check_timeout",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py",
      "line_number": 458,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u662f\u5426\u8d85\u65f6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "start_time",
        "timeout_seconds"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "(datetime.now() - start_time).total_seconds",
        "datetime.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py:check_timeout"
    },
    {
      "type": "function",
      "name": "get_variable",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py",
      "line_number": 466,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u53d8\u91cf\u503c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "name",
        "default"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.context_variables.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py:get_variable"
    },
    {
      "type": "function",
      "name": "set_variable",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py",
      "line_number": 470,
      "complexity": 1,
      "docstring": "\u8bbe\u7f6e\u8fd0\u884c\u65f6\u53d8\u91cf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "name",
        "value"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.evaluator.set_variables"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py:set_variable"
    },
    {
      "type": "function",
      "name": "evaluate_natural_language_condition",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py",
      "line_number": 476,
      "complexity": 1,
      "docstring": "\u8bc4\u4f30\u81ea\u7136\u8bed\u8a00\u6761\u4ef6\n\nArgs:\n    condition: \u81ea\u7136\u8bed\u8a00\u63cf\u8ff0\u7684\u6761\u4ef6\n    \nReturns:\n    bool: \u6761\u4ef6\u8bc4\u4f30\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "condition"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.warning",
        "logger.warning",
        "self._evaluate_with_llm",
        "condition.strip",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py:evaluate_natural_language_condition"
    },
    {
      "type": "function",
      "name": "_evaluate_with_llm",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py",
      "line_number": 501,
      "complexity": 1,
      "docstring": "\u4f7f\u7528LLM\u8bc4\u4f30\u81ea\u7136\u8bed\u8a00\u6761\u4ef6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "condition"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._build_condition_evaluation_prompt",
        "hasattr",
        "content.strip().lower",
        "self.llm.invoke",
        "hasattr",
        "hasattr",
        "str",
        "self.llm.chat",
        "self.llm",
        "content.strip",
        "logger.warning"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py:_evaluate_with_llm"
    },
    {
      "type": "function",
      "name": "_build_condition_evaluation_prompt",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py",
      "line_number": 549,
      "complexity": 1,
      "docstring": "\u6784\u5efa\u6761\u4ef6\u8bc4\u4f30\u7684\u63d0\u793a\u8bcd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "condition"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "hasattr",
        "hasattr",
        "self.context_variables.items",
        "getattr",
        "str",
        "str",
        "k.startswith",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py:_build_condition_evaluation_prompt"
    },
    {
      "type": "function",
      "name": "can_evaluate_natural_language",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py",
      "line_number": 603,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u662f\u5426\u652f\u6301\u81ea\u7136\u8bed\u8a00\u6761\u4ef6\u8bc4\u4f30",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py:can_evaluate_natural_language"
    },
    {
      "type": "function",
      "name": "replace_var",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py",
      "line_number": 224,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "match"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "match.group(1).strip",
        "str",
        "logger.warning",
        "match.group",
        "match.group"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/control_flow_evaluator.py:replace_var"
    },
    {
      "type": "class",
      "name": "GlobalStateUpdater",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/global_state_updater.py",
      "line_number": 27,
      "complexity": 1,
      "docstring": "\u5168\u5c40\u72b6\u6001\u66f4\u65b0\u5668\n\n\u4f7f\u7528LLM\u667a\u80fd\u5730\u57fa\u4e8e\u6b65\u9aa4\u6267\u884c\u7ed3\u679c\u66f4\u65b0\u5de5\u4f5c\u6d41\u7684\u5168\u5c40\u72b6\u6001\u3002",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "should_update_state",
        "update_state",
        "_simple_state_update",
        "_llm_state_update",
        "_build_update_prompt",
        "extract_structured_data",
        "_simple_data_extraction",
        "_llm_data_extraction"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/global_state_updater.py:GlobalStateUpdater"
    },
    {
      "type": "function",
      "name": "create_state_updater",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/global_state_updater.py",
      "line_number": 337,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u5168\u5c40\u72b6\u6001\u66f4\u65b0\u5668\u7684\u4fbf\u6377\u51fd\u6570\n\nArgs:\n    llm: \u8bed\u8a00\u6a21\u578b\u5b9e\u4f8b\n    enable_updates: \u662f\u5426\u542f\u7528\u66f4\u65b0\n    \nReturns:\n    GlobalStateUpdater\u5b9e\u4f8b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "llm",
        "enable_updates"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "GlobalStateUpdater"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/global_state_updater.py:create_state_updater"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/global_state_updater.py",
      "line_number": 33,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u72b6\u6001\u66f4\u65b0\u5668\n\nArgs:\n    llm: \u8bed\u8a00\u6a21\u578b\u5b9e\u4f8b\uff0c\u7528\u4e8e\u72b6\u6001\u66f4\u65b0\n    enable_updates: \u662f\u5426\u542f\u7528\u72b6\u6001\u66f4\u65b0\uff08\u53ef\u7528\u4e8e\u8c03\u8bd5/\u6027\u80fd\u4f18\u5316\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "llm",
        "enable_updates"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/global_state_updater.py:__init__"
    },
    {
      "type": "function",
      "name": "should_update_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/global_state_updater.py",
      "line_number": 44,
      "complexity": 1,
      "docstring": "\u5224\u65ad\u662f\u5426\u9700\u8981\u66f4\u65b0\u5168\u5c40\u72b6\u6001\n\nArgs:\n    step: \u6267\u884c\u7684\u6b65\u9aa4\u5b9a\u4e49\n    execution: \u6b65\u9aa4\u6267\u884c\u5b9e\u4f8b\n    \nReturns:\n    \u662f\u5426\u9700\u8981\u66f4\u65b0\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step",
        "execution"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/global_state_updater.py:should_update_state"
    },
    {
      "type": "function",
      "name": "update_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/global_state_updater.py",
      "line_number": 67,
      "complexity": 1,
      "docstring": "\u57fa\u4e8e\u6b65\u9aa4\u6267\u884c\u7ed3\u679c\u66f4\u65b0\u5168\u5c40\u72b6\u6001\n\nArgs:\n    current_state: \u5f53\u524d\u5168\u5c40\u72b6\u6001\n    step: \u6267\u884c\u7684\u6b65\u9aa4\u5b9a\u4e49\n    execution: \u6b65\u9aa4\u6267\u884c\u5b9e\u4f8b\n    workflow_context: \u989d\u5916\u7684\u5de5\u4f5c\u6d41\u4e0a\u4e0b\u6587\u4fe1\u606f\n    \nReturns:\n    \u66f4\u65b0\u540e\u7684\u5168\u5c40\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_state",
        "step",
        "execution",
        "workflow_context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.should_update_state",
        "logger.debug",
        "self._simple_state_update",
        "self._llm_state_update",
        "logger.warning",
        "self._simple_state_update"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/global_state_updater.py:update_state"
    },
    {
      "type": "function",
      "name": "_simple_state_update",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/global_state_updater.py",
      "line_number": 100,
      "complexity": 1,
      "docstring": "\u7b80\u5355\u7684\u72b6\u6001\u66f4\u65b0\u903b\u8f91\uff08\u4e0d\u4f9d\u8d56LLM\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_state",
        "step",
        "execution"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "datetime.now().strftime",
        "new_state.strip",
        "datetime.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/global_state_updater.py:_simple_state_update"
    },
    {
      "type": "function",
      "name": "_llm_state_update",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/global_state_updater.py",
      "line_number": 124,
      "complexity": 1,
      "docstring": "\u4f7f\u7528LLM\u8fdb\u884c\u667a\u80fd\u72b6\u6001\u66f4\u65b0",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_state",
        "step",
        "execution",
        "workflow_context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._build_update_prompt",
        "hasattr",
        "self.llm.invoke",
        "hasattr",
        "hasattr",
        "response.content.strip",
        "str(response).strip",
        "self.llm.chat",
        "response.strip",
        "self.llm",
        "response.strip",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/global_state_updater.py:_llm_state_update"
    },
    {
      "type": "function",
      "name": "_build_update_prompt",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/global_state_updater.py",
      "line_number": 175,
      "complexity": 1,
      "docstring": "\u6784\u5efa\u72b6\u6001\u66f4\u65b0\u7684\u63d0\u793a\u8bcd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_state",
        "step",
        "execution",
        "workflow_context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/global_state_updater.py:_build_update_prompt"
    },
    {
      "type": "function",
      "name": "extract_structured_data",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/global_state_updater.py",
      "line_number": 225,
      "complexity": 1,
      "docstring": "\u4ece\u81ea\u7136\u8bed\u8a00\u5168\u5c40\u72b6\u6001\u4e2d\u63d0\u53d6\u7ed3\u6784\u5316\u6570\u636e\n\n\u8fd9\u4e2a\u65b9\u6cd5\u7528\u4e8e\u5411\u540e\u517c\u5bb9\uff0c\u4ece\u81ea\u7136\u8bed\u8a00\u72b6\u6001\u4e2d\u63d0\u53d6\u4f20\u7edf\u7684\u53d8\u91cf\u503c\u3002\n\nArgs:\n    global_state: \u81ea\u7136\u8bed\u8a00\u63cf\u8ff0\u7684\u5168\u5c40\u72b6\u6001\n    \nReturns:\n    \u63d0\u53d6\u51fa\u7684\u7ed3\u6784\u5316\u6570\u636e\u5b57\u5178",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._simple_data_extraction",
        "self._llm_data_extraction",
        "logger.warning",
        "self._simple_data_extraction"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/global_state_updater.py:extract_structured_data"
    },
    {
      "type": "function",
      "name": "_simple_data_extraction",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/global_state_updater.py",
      "line_number": 248,
      "complexity": 1,
      "docstring": "\u7b80\u5355\u7684\u89c4\u5219\u5316\u6570\u636e\u63d0\u53d6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "re.findall",
        "re.search",
        "int",
        "step_match.group"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/global_state_updater.py:_simple_data_extraction"
    },
    {
      "type": "function",
      "name": "_llm_data_extraction",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/global_state_updater.py",
      "line_number": 277,
      "complexity": 1,
      "docstring": "\u4f7f\u7528LLM\u8fdb\u884c\u7ed3\u6784\u5316\u6570\u636e\u63d0\u53d6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "hasattr",
        "self.llm.invoke",
        "self.llm",
        "json.loads",
        "hasattr",
        "str",
        "content.strip",
        "logger.warning",
        "self._simple_data_extraction"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/global_state_updater.py:_llm_data_extraction"
    },
    {
      "type": "class",
      "name": "TestResultEvaluator",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/result_evaluator.py",
      "line_number": 16,
      "complexity": 1,
      "docstring": "\u667a\u80fd\u6d4b\u8bd5\u7ed3\u679c\u8bc4\u4f30\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "evaluate_test_result",
        "_build_analysis_prompt",
        "_validate_and_normalize_response",
        "quick_evaluate"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/result_evaluator.py:TestResultEvaluator"
    },
    {
      "type": "class",
      "name": "MockTestResultEvaluator",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/result_evaluator.py",
      "line_number": 265,
      "complexity": 1,
      "docstring": "\u6a21\u62df\u6d4b\u8bd5\u7ed3\u679c\u8bc4\u4f30\u5668\uff0c\u7528\u4e8e\u6d4b\u8bd5\u548c\u5f00\u53d1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "evaluate_test_result"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "TestResultEvaluator"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/result_evaluator.py:MockTestResultEvaluator"
    },
    {
      "type": "function",
      "name": "evaluate_with_deepseek",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/result_evaluator.py",
      "line_number": 355,
      "complexity": 1,
      "docstring": "\u4fbf\u6377\u51fd\u6570\uff1a\u4f7f\u7528deepseek\u8bc4\u4f30\u6d4b\u8bd5\u7ed3\u679c\n\nArgs:\n    result_return_value: \u6d4b\u8bd5\u7ed3\u679c\u8fd4\u56de\u503c\n    api_key: DeepSeek API\u5bc6\u94a5\n    use_mock: \u662f\u5426\u4f7f\u7528\u6a21\u62df\u8bc4\u4f30\u5668\n    \nReturns:\n    \u8bc4\u4f30\u7ed3\u679c\u5b57\u5178",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "result_return_value",
        "api_key",
        "use_mock"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "evaluator.evaluate_test_result",
        "MockTestResultEvaluator",
        "TestResultEvaluator"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/result_evaluator.py:evaluate_with_deepseek"
    },
    {
      "type": "function",
      "name": "is_test_passed",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/result_evaluator.py",
      "line_number": 377,
      "complexity": 1,
      "docstring": "\u4fbf\u6377\u51fd\u6570\uff1a\u5feb\u901f\u5224\u65ad\u6d4b\u8bd5\u662f\u5426\u901a\u8fc7\n\nArgs:\n    result_return_value: \u6d4b\u8bd5\u7ed3\u679c\u8fd4\u56de\u503c\n    api_key: DeepSeek API\u5bc6\u94a5 \n    use_mock: \u662f\u5426\u4f7f\u7528\u6a21\u62df\u8bc4\u4f30\u5668\n    \nReturns:\n    bool: \u6d4b\u8bd5\u662f\u5426\u901a\u8fc7",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "result_return_value",
        "api_key",
        "use_mock"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "evaluate_with_deepseek"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/result_evaluator.py:is_test_passed"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/result_evaluator.py",
      "line_number": 268,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/result_evaluator.py:__init__"
    },
    {
      "type": "function",
      "name": "evaluate_test_result",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/result_evaluator.py",
      "line_number": 272,
      "complexity": 1,
      "docstring": "\u6a21\u62df\u8bc4\u4f30\u903b\u8f91",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "kwargs.get",
        "kwargs.get",
        "kwargs.get",
        "f'{stdout} {stderr} {return_value}'.lower",
        "any",
        "any",
        "any",
        "stderr.lower",
        "stderr.lower",
        "stderr.lower"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/result_evaluator.py:evaluate_test_result"
    },
    {
      "type": "function",
      "name": "_build_analysis_prompt",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/result_evaluator.py",
      "line_number": 109,
      "complexity": 1,
      "docstring": "\u6784\u5efa\u5206\u6790\u63d0\u793a\u8bcd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "code",
        "stdout",
        "stderr",
        "return_value",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "str",
        "len",
        "len",
        "len",
        "len",
        "len",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/result_evaluator.py:_build_analysis_prompt"
    },
    {
      "type": "function",
      "name": "_validate_and_normalize_response",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/result_evaluator.py",
      "line_number": 227,
      "complexity": 1,
      "docstring": "\u9a8c\u8bc1\u5e76\u89c4\u8303\u5316\u54cd\u5e94\u683c\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "response"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "isinstance",
        "response.get",
        "min",
        "response.get",
        "response.get",
        "response.get",
        "float",
        "max",
        "normalized['passed'].lower",
        "response.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/result_evaluator.py:_validate_and_normalize_response"
    },
    {
      "type": "function",
      "name": "quick_evaluate",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/result_evaluator.py",
      "line_number": 251,
      "complexity": 1,
      "docstring": "\u5feb\u901f\u8bc4\u4f30\u51fd\u6570\uff0c\u8fd4\u56de\u7b80\u5355\u7684\u5e03\u5c14\u7ed3\u679c\n\nArgs:\n    result_return_value: \u6d4b\u8bd5\u7ed3\u679c\u7684\u8fd4\u56de\u503c\n    \nReturns:\n    bool: \u6d4b\u8bd5\u662f\u5426\u901a\u8fc7",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "result_return_value"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.evaluate_test_result"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/result_evaluator.py:quick_evaluate"
    },
    {
      "type": "function",
      "name": "get_env_config",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/config.py",
      "line_number": 68,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u73af\u5883\u53d8\u91cf\u914d\u7f6e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "OPTIONAL_ENV_VARS.items",
        "os.getenv",
        "os.getenv",
        "os.getenv",
        "missing_vars.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/config.py:get_env_config"
    },
    {
      "type": "function",
      "name": "validate_environment",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/config.py",
      "line_number": 89,
      "complexity": 1,
      "docstring": "\u9a8c\u8bc1\u73af\u5883\u914d\u7f6e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "get_env_config",
        "', '.join"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/config.py:validate_environment"
    },
    {
      "type": "class",
      "name": "WorkflowExecutionResult",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py",
      "line_number": 40,
      "complexity": 1,
      "docstring": "\u5de5\u4f5c\u6d41\u6267\u884c\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py:WorkflowExecutionResult"
    },
    {
      "type": "class",
      "name": "ParallelExecutor",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py",
      "line_number": 59,
      "complexity": 1,
      "docstring": "\u5e76\u884c\u6b65\u9aa4\u6267\u884c\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "execute_parallel_steps"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py:ParallelExecutor"
    },
    {
      "type": "class",
      "name": "StaticWorkflowEngine",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py",
      "line_number": 110,
      "complexity": 1,
      "docstring": "\u9759\u6001\u5de5\u4f5c\u6d41\u6267\u884c\u5f15\u64ce",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "set_step_executor",
        "execute_workflow",
        "_execute_workflow_iteration",
        "_execute_single_step",
        "_handle_step_failure",
        "_handle_parallel_execution",
        "_execute_single_step_for_parallel",
        "_get_next_step_id",
        "_handle_loop_control",
        "_get_sequential_next_step",
        "_check_global_control_rules",
        "_execute_cleanup_steps",
        "_check_step_timeout",
        "_update_evaluator_context",
        "_calculate_execution_stats",
        "_update_runtime_variables_from_result",
        "_generate_execution_result",
        "_update_global_state",
        "_build_workflow_context",
        "get_current_global_state",
        "get_state_summary"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py:StaticWorkflowEngine"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py",
      "line_number": 113,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "max_parallel_workers",
        "ai_evaluator",
        "llm",
        "enable_state_updates"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "ControlFlowEvaluator",
        "ParallelExecutor",
        "GlobalStateUpdater"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py:__init__"
    },
    {
      "type": "function",
      "name": "execute_parallel_steps",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py",
      "line_number": 65,
      "complexity": 1,
      "docstring": "\u6267\u884c\u5e76\u884c\u6b65\u9aa4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "steps",
        "step_executor",
        "join_condition"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "ThreadPoolExecutor",
        "executor.submit",
        "as_completed",
        "as_completed",
        "future.result",
        "future.result",
        "logger.error",
        "logger.error",
        "f.cancel"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py:execute_parallel_steps"
    },
    {
      "type": "function",
      "name": "set_step_executor",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py",
      "line_number": 132,
      "complexity": 1,
      "docstring": "\u8bbe\u7f6e\u6b65\u9aa4\u6267\u884c\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "executor"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py:set_step_executor"
    },
    {
      "type": "function",
      "name": "execute_workflow",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py",
      "line_number": 136,
      "complexity": 1,
      "docstring": "\u6267\u884c\u5b8c\u6574\u5de5\u4f5c\u6d41",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "workflow_definition",
        "initial_variables"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "WorkflowExecutionContext",
        "datetime.now",
        "logger.info",
        "self._update_evaluator_context",
        "self._generate_execution_result",
        "datetime.now().strftime",
        "self.execution_context.runtime_variables.update",
        "ValueError",
        "self._execute_workflow_iteration",
        "logger.error",
        "self._generate_execution_result",
        "str",
        "str",
        "datetime.now",
        "uuid.uuid4"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py:execute_workflow"
    },
    {
      "type": "function",
      "name": "_execute_workflow_iteration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py",
      "line_number": 174,
      "complexity": 1,
      "docstring": "\u6267\u884c\u4e00\u4e2a\u5de5\u4f5c\u6d41\u8fed\u4ee3\uff08\u7b80\u5316\u7248\uff0c\u57fa\u4e8e\u6267\u884c\u4e0a\u4e0b\u6587\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.workflow_definition.get_step_by_id",
        "self._check_global_control_rules",
        "logger.error",
        "self._handle_parallel_execution",
        "self._execute_single_step"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py:_execute_workflow_iteration"
    },
    {
      "type": "function",
      "name": "_execute_single_step",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py",
      "line_number": 192,
      "complexity": 1,
      "docstring": "\u6267\u884c\u5355\u4e2a\u6b65\u9aa4\uff08\u57fa\u4e8e\u6267\u884c\u5b9e\u4f8b\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.execution_context.create_execution",
        "logger.info",
        "datetime.now",
        "self.on_step_start",
        "self.step_executor",
        "datetime.now",
        "self._update_runtime_variables_from_result",
        "self._update_global_state",
        "logger.info",
        "self._get_next_step_id",
        "self._check_step_timeout",
        "TimeoutError",
        "ValueError",
        "self.on_step_complete",
        "self._handle_step_failure"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py:_execute_single_step"
    },
    {
      "type": "function",
      "name": "_handle_step_failure",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py",
      "line_number": 243,
      "complexity": 1,
      "docstring": "\u5904\u7406\u6b65\u9aa4\u5931\u8d25\uff08\u57fa\u4e8e\u6267\u884c\u5b9e\u4f8b\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step",
        "execution",
        "error"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.error",
        "datetime.now",
        "str",
        "self._get_next_step_id",
        "self.execution_context.create_execution",
        "logger.info",
        "self.on_step_failed"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py:_handle_step_failure"
    },
    {
      "type": "function",
      "name": "_handle_parallel_execution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py",
      "line_number": 270,
      "complexity": 1,
      "docstring": "\u5904\u7406\u5e76\u884c\u6267\u884c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "self.parallel_executor.execute_parallel_steps",
        "results.items",
        "self.execution_context.create_execution",
        "datetime.now",
        "datetime.now",
        "self._get_next_step_id",
        "logger.warning",
        "self.execution_context.create_execution",
        "self._get_next_step_id",
        "self.workflow_definition.get_step_by_id",
        "self.execution_context.create_execution",
        "self._get_next_step_id",
        "self.execution_context.create_execution",
        "datetime.now",
        "datetime.now",
        "parallel_steps.append",
        "logger.warning",
        "getattr",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py:_handle_parallel_execution"
    },
    {
      "type": "function",
      "name": "_execute_single_step_for_parallel",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py",
      "line_number": 327,
      "complexity": 1,
      "docstring": "\u5e76\u884c\u6267\u884c\u65f6\u7684\u5355\u6b65\u9aa4\u6267\u884c\uff08\u4f7f\u7528\u6267\u884c\u5b9e\u4f8b\u6a21\u578b\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.step_executor",
        "ValueError",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py:_execute_single_step_for_parallel"
    },
    {
      "type": "function",
      "name": "_get_next_step_id",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py",
      "line_number": 342,
      "complexity": 1,
      "docstring": "\u6839\u636e\u63a7\u5236\u6d41\u786e\u5b9a\u4e0b\u4e00\u6b65\u9aa4ID\uff08\u7b80\u5316\u7248\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_step",
        "execution",
        "success"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._update_evaluator_context",
        "self._get_sequential_next_step",
        "self._get_sequential_next_step",
        "self.evaluator.evaluate_control_flow_condition",
        "self._get_sequential_next_step",
        "self._handle_loop_control",
        "logger.warning",
        "self._get_sequential_next_step",
        "self._get_sequential_next_step"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py:_get_next_step_id"
    },
    {
      "type": "function",
      "name": "_handle_loop_control",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py",
      "line_number": 378,
      "complexity": 1,
      "docstring": "\u5904\u7406\u5faa\u73af\u63a7\u5236\uff08\u7b80\u5316\u7248\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_step",
        "execution",
        "success"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.execution_context.loop_counters.get",
        "self.evaluator.interpolate_value",
        "isinstance",
        "self.evaluator.evaluate_condition",
        "logger.info",
        "self._get_sequential_next_step",
        "int",
        "logger.info",
        "self._get_sequential_next_step"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py:_handle_loop_control"
    },
    {
      "type": "function",
      "name": "_get_sequential_next_step",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py",
      "line_number": 414,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u987a\u5e8f\u6267\u884c\u7684\u4e0b\u4e00\u6b65\u9aa4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_step_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.workflow_definition.get_step_index",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py:_get_sequential_next_step"
    },
    {
      "type": "function",
      "name": "_check_global_control_rules",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py",
      "line_number": 421,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u5168\u5c40\u63a7\u5236\u89c4\u5219",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.evaluator.evaluate_condition",
        "logger.info",
        "self._execute_cleanup_steps",
        "logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py:_check_global_control_rules"
    },
    {
      "type": "function",
      "name": "_execute_cleanup_steps",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py",
      "line_number": 440,
      "complexity": 1,
      "docstring": "\u6267\u884c\u6e05\u7406\u6b65\u9aa4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "cleanup_step_ids"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.workflow_definition.get_step_by_id",
        "logger.info",
        "self._execute_single_step",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py:_execute_cleanup_steps"
    },
    {
      "type": "function",
      "name": "_check_step_timeout",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py",
      "line_number": 451,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u6b65\u9aa4\u662f\u5426\u8d85\u65f6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "execution"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.workflow_definition.get_step_by_id",
        "self.evaluator.check_timeout"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py:_check_step_timeout"
    },
    {
      "type": "function",
      "name": "_update_evaluator_context",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py",
      "line_number": 462,
      "complexity": 1,
      "docstring": "\u66f4\u65b0\u8bc4\u4f30\u5668\u4e0a\u4e0b\u6587",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step_result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._calculate_execution_stats",
        "self.evaluator.set_context"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py:_update_evaluator_context"
    },
    {
      "type": "function",
      "name": "_calculate_execution_stats",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py",
      "line_number": 476,
      "complexity": 1,
      "docstring": "\u8ba1\u7b97\u6267\u884c\u7edf\u8ba1\u4fe1\u606f\uff08\u57fa\u4e8e\u6267\u884c\u4e0a\u4e0b\u6587\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.execution_context.get_workflow_statistics",
        "datetime.now",
        "(current_time - self.execution_start_time).total_seconds",
        "workflow_stats.get",
        "workflow_stats.get",
        "len",
        "workflow_stats.get",
        "workflow_stats.get",
        "workflow_stats.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py:_calculate_execution_stats"
    },
    {
      "type": "function",
      "name": "_update_runtime_variables_from_result",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py",
      "line_number": 496,
      "complexity": 1,
      "docstring": "\u4ece\u6b65\u9aa4\u7ed3\u679c\u66f4\u65b0\u8fd0\u884c\u65f6\u53d8\u91cf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step_id",
        "result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "hasattr",
        "hasattr",
        "step_id.lower"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py:_update_runtime_variables_from_result"
    },
    {
      "type": "function",
      "name": "_generate_execution_result",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py",
      "line_number": 519,
      "complexity": 1,
      "docstring": "\u751f\u6210\u5de5\u4f5c\u6d41\u6267\u884c\u7ed3\u679c\uff08\u57fa\u4e8e\u6267\u884c\u4e0a\u4e0b\u6587\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "success",
        "error_message"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "datetime.now",
        "(end_time - self.execution_start_time).total_seconds",
        "self.execution_context.get_workflow_statistics",
        "workflow_stats.get",
        "workflow_stats.get",
        "set",
        "set",
        "len",
        "WorkflowExecutionResult",
        "self.execution_context.step_executions.keys",
        "self.execution_context.get_current_execution",
        "self.execution_context.get_step_statistics",
        "len",
        "latest_execution.start_time.isoformat",
        "latest_execution.end_time.isoformat"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py:_generate_execution_result"
    },
    {
      "type": "function",
      "name": "_update_global_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py",
      "line_number": 580,
      "complexity": 1,
      "docstring": "\u66f4\u65b0\u5168\u5c40\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step",
        "execution"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._build_workflow_context",
        "self.state_updater.update_state",
        "self.execution_context.update_global_state",
        "logger.info",
        "logger.debug",
        "logger.warning"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py:_update_global_state"
    },
    {
      "type": "function",
      "name": "_build_workflow_context",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py",
      "line_number": 610,
      "complexity": 1,
      "docstring": "\u6784\u5efa\u5de5\u4f5c\u6d41\u4e0a\u4e0b\u6587\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "context_parts.append",
        "self.execution_context.get_workflow_statistics",
        "stats.get",
        "stats.get",
        "' | '.join",
        "context_parts.append",
        "context_parts.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py:_build_workflow_context"
    },
    {
      "type": "function",
      "name": "get_current_global_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py",
      "line_number": 632,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u5f53\u524d\u5168\u5c40\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py:get_current_global_state"
    },
    {
      "type": "function",
      "name": "get_state_summary",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py",
      "line_number": 638,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u72b6\u6001\u6458\u8981",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.execution_context.get_state_summary"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py:get_state_summary"
    },
    {
      "type": "class",
      "name": "ControlFlowType",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py",
      "line_number": 19,
      "complexity": 1,
      "docstring": "\u63a7\u5236\u6d41\u7c7b\u578b\u679a\u4e3e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py:ControlFlowType"
    },
    {
      "type": "class",
      "name": "StepExecutionStatus",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py",
      "line_number": 28,
      "complexity": 1,
      "docstring": "\u6b65\u9aa4\u6267\u884c\u72b6\u6001\u679a\u4e3e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py:StepExecutionStatus"
    },
    {
      "type": "class",
      "name": "StepExecution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py",
      "line_number": 39,
      "complexity": 1,
      "docstring": "\u6b65\u9aa4\u6267\u884c\u5b9e\u4f8b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "duration",
        "is_finished"
      ],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py:StepExecution"
    },
    {
      "type": "class",
      "name": "ControlFlow",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py",
      "line_number": 65,
      "complexity": 1,
      "docstring": "\u63a7\u5236\u6d41\u914d\u7f6e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__post_init__"
      ],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py:ControlFlow"
    },
    {
      "type": "class",
      "name": "WorkflowStep",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py",
      "line_number": 91,
      "complexity": 1,
      "docstring": "\u5de5\u4f5c\u6d41\u6b65\u9aa4\u5b9a\u4e49\uff08\u65e0\u72b6\u6001\uff0c\u7eaf\u6570\u636e\u7ed3\u6784\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__post_init__"
      ],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py:WorkflowStep"
    },
    {
      "type": "class",
      "name": "ControlRule",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py",
      "line_number": 110,
      "complexity": 1,
      "docstring": "\u5168\u5c40\u63a7\u5236\u89c4\u5219",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py:ControlRule"
    },
    {
      "type": "class",
      "name": "ErrorHandling",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py",
      "line_number": 120,
      "complexity": 1,
      "docstring": "\u9519\u8bef\u5904\u7406\u914d\u7f6e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__post_init__"
      ],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py:ErrorHandling"
    },
    {
      "type": "class",
      "name": "WorkflowMetadata",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py",
      "line_number": 131,
      "complexity": 1,
      "docstring": "\u5de5\u4f5c\u6d41\u5143\u6570\u636e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__post_init__"
      ],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py:WorkflowMetadata"
    },
    {
      "type": "class",
      "name": "WorkflowDefinition",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py",
      "line_number": 145,
      "complexity": 1,
      "docstring": "\u5b8c\u6574\u7684\u5de5\u4f5c\u6d41\u5b9a\u4e49",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__post_init__",
        "get_step_by_id",
        "get_step_index",
        "validate"
      ],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py:WorkflowDefinition"
    },
    {
      "type": "class",
      "name": "WorkflowLoader",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py",
      "line_number": 246,
      "complexity": 1,
      "docstring": "\u5de5\u4f5c\u6d41\u914d\u7f6e\u52a0\u8f7d\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "load_from_file",
        "load_from_dict",
        "save_to_file"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py:WorkflowLoader"
    },
    {
      "type": "class",
      "name": "WorkflowExecutionContext",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py",
      "line_number": 385,
      "complexity": 1,
      "docstring": "\u5de5\u4f5c\u6d41\u6267\u884c\u4e0a\u4e0b\u6587",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "get_current_execution",
        "get_execution_history",
        "should_execute_step",
        "create_execution",
        "get_step_statistics",
        "get_workflow_statistics",
        "update_global_state",
        "get_state_summary",
        "get_state_history"
      ],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py:WorkflowExecutionContext"
    },
    {
      "type": "function",
      "name": "duration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py",
      "line_number": 52,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6267\u884c\u65f6\u957f\uff08\u79d2\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [
        "property"
      ],
      "inheritance": [],
      "calls": [
        "(self.end_time - self.start_time).total_seconds"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py:duration"
    },
    {
      "type": "function",
      "name": "is_finished",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py",
      "line_number": 59,
      "complexity": 1,
      "docstring": "\u5224\u65ad\u662f\u5426\u5df2\u7ed3\u675f\uff08\u65e0\u8bba\u6210\u529f\u6216\u5931\u8d25\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [
        "property"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py:is_finished"
    },
    {
      "type": "function",
      "name": "__post_init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py",
      "line_number": 154,
      "complexity": 1,
      "docstring": "\u540e\u5904\u7406\uff1a\u7c7b\u578b\u8f6c\u6362\u548c\u9a8c\u8bc1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "isinstance",
        "enumerate",
        "enumerate",
        "isinstance",
        "WorkflowMetadata",
        "isinstance",
        "isinstance",
        "ErrorHandling",
        "WorkflowStep",
        "ControlRule"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py:__post_init__"
    },
    {
      "type": "function",
      "name": "get_step_by_id",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py",
      "line_number": 174,
      "complexity": 1,
      "docstring": "\u6839\u636eID\u83b7\u53d6\u6b65\u9aa4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py:get_step_by_id"
    },
    {
      "type": "function",
      "name": "get_step_index",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py",
      "line_number": 181,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6b65\u9aa4\u5728\u5217\u8868\u4e2d\u7684\u7d22\u5f15",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "enumerate"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py:get_step_index"
    },
    {
      "type": "function",
      "name": "validate",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py",
      "line_number": 188,
      "complexity": 1,
      "docstring": "\u9a8c\u8bc1\u5de5\u4f5c\u6d41\u5b9a\u4e49\u7684\u5b8c\u6574\u6027",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "len",
        "errors.append",
        "set",
        "errors.append",
        "errors.append",
        "errors.append",
        "errors.append",
        "hasattr",
        "hasattr",
        "errors.append",
        "hasattr",
        "hasattr",
        "any",
        "errors.append",
        "errors.append",
        "errors.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py:validate"
    },
    {
      "type": "function",
      "name": "load_from_file",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py",
      "line_number": 250,
      "complexity": 1,
      "docstring": "\u4ece\u6587\u4ef6\u52a0\u8f7d\u5de5\u4f5c\u6d41\u5b9a\u4e49",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "file_path"
      ],
      "decorators": [
        "staticmethod"
      ],
      "inheritance": [],
      "calls": [
        "WorkflowDefinition",
        "workflow.validate",
        "logger.info",
        "open",
        "file_path.endswith",
        "ValueError",
        "logger.error",
        "json.load",
        "file_path.endswith",
        "yaml.safe_load",
        "ValueError",
        "'\\n'.join"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py:load_from_file"
    },
    {
      "type": "function",
      "name": "load_from_dict",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py",
      "line_number": 276,
      "complexity": 1,
      "docstring": "\u4ece\u5b57\u5178\u52a0\u8f7d\u5de5\u4f5c\u6d41\u5b9a\u4e49",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "data"
      ],
      "decorators": [
        "staticmethod"
      ],
      "inheritance": [],
      "calls": [
        "WorkflowDefinition",
        "workflow.validate",
        "ValueError",
        "logger.error",
        "'\\n'.join"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py:load_from_dict"
    },
    {
      "type": "function",
      "name": "save_to_file",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py",
      "line_number": 293,
      "complexity": 1,
      "docstring": "\u4fdd\u5b58\u5de5\u4f5c\u6d41\u5b9a\u4e49\u5230\u6587\u4ef6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "workflow",
        "file_path"
      ],
      "decorators": [
        "staticmethod"
      ],
      "inheritance": [],
      "calls": [
        "logger.info",
        "data['steps'].append",
        "data['control_rules'].append",
        "open",
        "file_path.endswith",
        "logger.error",
        "json.dump",
        "file_path.endswith",
        "workflow.workflow_metadata.created_at.isoformat",
        "rule_dict.items",
        "yaml.dump",
        "ValueError",
        "step_dict['control_flow'].items"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py:save_to_file"
    },
    {
      "type": "function",
      "name": "get_current_execution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py",
      "line_number": 395,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6b65\u9aa4\u7684\u5f53\u524d\u6267\u884c\u5b9e\u4f8b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.step_executions.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py:get_current_execution"
    },
    {
      "type": "function",
      "name": "get_execution_history",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py",
      "line_number": 402,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6b65\u9aa4\u7684\u6267\u884c\u5386\u53f2",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.step_executions.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py:get_execution_history"
    },
    {
      "type": "function",
      "name": "should_execute_step",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py",
      "line_number": 406,
      "complexity": 1,
      "docstring": "\u5224\u65ad\u6b65\u9aa4\u662f\u5426\u5e94\u8be5\u6267\u884c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_current_execution"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py:should_execute_step"
    },
    {
      "type": "function",
      "name": "create_execution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py",
      "line_number": 422,
      "complexity": 1,
      "docstring": "\u4e3a\u6b65\u9aa4\u521b\u5efa\u65b0\u7684\u6267\u884c\u5b9e\u4f8b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "StepExecution",
        "self.step_executions[step_id].append",
        "self.current_iteration.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py:create_execution"
    },
    {
      "type": "function",
      "name": "get_step_statistics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py",
      "line_number": 444,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6b65\u9aa4\u7684\u6267\u884c\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "step_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_execution_history",
        "len",
        "sum",
        "sum",
        "sum"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py:get_step_statistics"
    },
    {
      "type": "function",
      "name": "get_workflow_statistics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py",
      "line_number": 464,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6574\u4e2a\u5de5\u4f5c\u6d41\u7684\u6267\u884c\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.step_executions.values",
        "len",
        "sum",
        "sum",
        "all_executions.extend",
        "len",
        "dict",
        "dict"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py:get_workflow_statistics"
    },
    {
      "type": "function",
      "name": "update_global_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py",
      "line_number": 486,
      "complexity": 1,
      "docstring": "\u66f4\u65b0\u5168\u5c40\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "new_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.state_update_history.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py:update_global_state"
    },
    {
      "type": "function",
      "name": "get_state_summary",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py",
      "line_number": 493,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u72b6\u6001\u6458\u8981\uff0c\u5305\u542b\u6700\u65b0\u72b6\u6001\u548c\u66f4\u65b0\u6b21\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py:get_state_summary"
    },
    {
      "type": "function",
      "name": "get_state_history",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py",
      "line_number": 505,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6700\u8fd1\u7684\u72b6\u6001\u5386\u53f2",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "limit"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "recent_history.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py:get_state_history"
    },
    {
      "type": "class",
      "name": "TestWorkflowExamples",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_workflow_examples.py",
      "line_number": 32,
      "complexity": 1,
      "docstring": "\u5de5\u4f5c\u6d41\u793a\u4f8b\u6d4b\u8bd5\u7c7b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setup_method",
        "_setup_agent_team",
        "test_calculator_workflow_full",
        "_verify_calculator_outputs",
        "test_simple_sequential_workflow",
        "test_conditional_branch_workflow",
        "test_loop_workflow",
        "test_workflow_info_and_listing",
        "teardown_method"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_workflow_examples.py:TestWorkflowExamples"
    },
    {
      "type": "function",
      "name": "setup_method",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_workflow_examples.py",
      "line_number": 35,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u524d\u51c6\u5907",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "MultiStepAgent_v3",
        "self._setup_agent_team",
        "tempfile.mkdtemp",
        "os.chdir",
        "print",
        "os.getenv",
        "pytest.skip"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_workflow_examples.py:setup_method"
    },
    {
      "type": "function",
      "name": "_setup_agent_team",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_workflow_examples.py",
      "line_number": 54,
      "complexity": 1,
      "docstring": "\u8bbe\u7f6e\u667a\u80fd\u4f53\u56e2\u961f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Agent",
        "Agent",
        "Agent",
        "Agent",
        "Agent",
        "Agent",
        "Agent",
        "self.agent_v3.register_agent",
        "self.agent_v3.register_agent",
        "self.agent_v3.register_agent",
        "self.agent_v3.register_agent",
        "self.agent_v3.register_agent",
        "self.agent_v3.register_agent",
        "self.agent_v3.register_agent",
        "print",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_workflow_examples.py:_setup_agent_team"
    },
    {
      "type": "function",
      "name": "test_calculator_workflow_full",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_workflow_examples.py",
      "line_number": 163,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5b8c\u6574\u7684\u8ba1\u7b97\u5668\u5de5\u4f5c\u6d41",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "self.agent_v3.execute_workflow_from_file",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "self._verify_calculator_outputs",
        "print",
        "pytest.fail",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_workflow_examples.py:test_calculator_workflow_full"
    },
    {
      "type": "function",
      "name": "_verify_calculator_outputs",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_workflow_examples.py",
      "line_number": 209,
      "complexity": 1,
      "docstring": "\u9a8c\u8bc1\u8ba1\u7b97\u5668\u5de5\u4f5c\u6d41\u7684\u8f93\u51fa\u5185\u5bb9",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "result.step_results.items",
        "' '.join(all_outputs).lower",
        "print",
        "step_info.get",
        "len",
        "' '.join",
        "hasattr",
        "all_outputs.append",
        "hasattr",
        "all_outputs.append",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_workflow_examples.py:_verify_calculator_outputs"
    },
    {
      "type": "function",
      "name": "test_simple_sequential_workflow",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_workflow_examples.py",
      "line_number": 234,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u7b80\u5355\u987a\u5e8f\u5de5\u4f5c\u6d41",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "self.agent_v3.create_workflow_from_dict",
        "self.agent_v3.execute_workflow",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_workflow_examples.py:test_simple_sequential_workflow"
    },
    {
      "type": "function",
      "name": "test_conditional_branch_workflow",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_workflow_examples.py",
      "line_number": 298,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6761\u4ef6\u5206\u652f\u5de5\u4f5c\u6d41",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "self.agent_v3.create_workflow_from_dict",
        "self.agent_v3.execute_workflow",
        "print",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_workflow_examples.py:test_conditional_branch_workflow"
    },
    {
      "type": "function",
      "name": "test_loop_workflow",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_workflow_examples.py",
      "line_number": 383,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5faa\u73af\u5de5\u4f5c\u6d41",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "self.agent_v3.create_workflow_from_dict",
        "self.agent_v3.execute_workflow",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_workflow_examples.py:test_loop_workflow"
    },
    {
      "type": "function",
      "name": "test_workflow_info_and_listing",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_workflow_examples.py",
      "line_number": 461,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5de5\u4f5c\u6d41\u4fe1\u606f\u83b7\u53d6\u548c\u5217\u8868\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "self.agent_v3.list_available_workflows",
        "print",
        "isinstance",
        "workflow_file.endswith",
        "self.agent_v3.get_workflow_info",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_workflow_examples.py:test_workflow_info_and_listing"
    },
    {
      "type": "function",
      "name": "teardown_method",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_workflow_examples.py",
      "line_number": 493,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u540e\u6e05\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "hasattr",
        "os.path.exists",
        "shutil.rmtree",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_workflow_examples.py:teardown_method"
    },
    {
      "type": "class",
      "name": "TestStaticWorkflow",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_static_workflow.py",
      "line_number": 36,
      "complexity": 1,
      "docstring": "\u9759\u6001\u5de5\u4f5c\u6d41\u7cfb\u7edf\u6d4b\u8bd5\u7c7b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setup_method",
        "test_workflow_definition_loading",
        "test_simple_workflow_execution",
        "test_conditional_workflow",
        "test_calculator_workflow_execution",
        "test_workflow_engine_components",
        "test_agent_registration",
        "test_workflow_error_handling",
        "teardown_method"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_static_workflow.py:TestStaticWorkflow"
    },
    {
      "type": "class",
      "name": "TestWorkflowComponents",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_static_workflow.py",
      "line_number": 339,
      "complexity": 1,
      "docstring": "\u5de5\u4f5c\u6d41\u7ec4\u4ef6\u5355\u5143\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "test_workflow_loader",
        "test_control_flow_evaluator",
        "test_static_workflow_engine"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_static_workflow.py:TestWorkflowComponents"
    },
    {
      "type": "function",
      "name": "setup_method",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_static_workflow.py",
      "line_number": 39,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u524d\u51c6\u5907 - \u4f7f\u7528\u771f\u5b9eDeepSeek\u6a21\u578b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "MultiStepAgent_v3",
        "Agent",
        "Agent",
        "Agent",
        "self.agent_v3.register_agent",
        "self.agent_v3.register_agent",
        "self.agent_v3.register_agent",
        "tempfile.mkdtemp",
        "os.chdir",
        "os.getenv",
        "pytest.skip"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_static_workflow.py:setup_method"
    },
    {
      "type": "function",
      "name": "test_workflow_definition_loading",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_static_workflow.py",
      "line_number": 77,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5de5\u4f5c\u6d41\u5b9a\u4e49\u52a0\u8f7d",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.agent_v3.list_available_workflows",
        "len",
        "self.agent_v3.get_workflow_info",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_static_workflow.py:test_workflow_definition_loading"
    },
    {
      "type": "function",
      "name": "test_simple_workflow_execution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_static_workflow.py",
      "line_number": 93,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u7b80\u5355\u5de5\u4f5c\u6d41\u6267\u884c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.agent_v3.create_workflow_from_dict",
        "self.agent_v3.execute_workflow"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_static_workflow.py:test_simple_workflow_execution"
    },
    {
      "type": "function",
      "name": "test_conditional_workflow",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_static_workflow.py",
      "line_number": 138,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6761\u4ef6\u5206\u652f\u5de5\u4f5c\u6d41",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.agent_v3.create_workflow_from_dict",
        "self.agent_v3.execute_workflow"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_static_workflow.py:test_conditional_workflow"
    },
    {
      "type": "function",
      "name": "test_calculator_workflow_execution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_static_workflow.py",
      "line_number": 207,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u8ba1\u7b97\u5668\u5de5\u4f5c\u6d41\u6267\u884c\uff08\u771f\u5b9eDeepSeek LLM\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.agent_v3.execute_workflow_from_file",
        "print",
        "print",
        "result.step_results.items",
        "' '.join(step_outputs).lower",
        "any",
        "pytest.fail",
        "step_info.get",
        "hasattr",
        "step_outputs.append",
        "' '.join"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_static_workflow.py:test_calculator_workflow_execution"
    },
    {
      "type": "function",
      "name": "test_workflow_engine_components",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_static_workflow.py",
      "line_number": 239,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5de5\u4f5c\u6d41\u5f15\u64ce\u7ec4\u4ef6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "ControlFlowEvaluator",
        "evaluator.set_context",
        "evaluator.evaluate_condition",
        "evaluator.evaluate_condition",
        "evaluator.evaluate_condition",
        "evaluator.interpolate_value",
        "evaluator.interpolate_value"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_static_workflow.py:test_workflow_engine_components"
    },
    {
      "type": "function",
      "name": "test_agent_registration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_static_workflow.py",
      "line_number": 258,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u667a\u80fd\u4f53\u6ce8\u518c\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Agent",
        "len",
        "self.agent_v3.register_agent",
        "self.agent_v3.device.get_variable",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_static_workflow.py:test_agent_registration"
    },
    {
      "type": "function",
      "name": "test_workflow_error_handling",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_static_workflow.py",
      "line_number": 275,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5de5\u4f5c\u6d41\u9519\u8bef\u5904\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.agent_v3.create_workflow_from_dict",
        "self.agent_v3.execute_workflow"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_static_workflow.py:test_workflow_error_handling"
    },
    {
      "type": "function",
      "name": "teardown_method",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_static_workflow.py",
      "line_number": 327,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u540e\u6e05\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "hasattr",
        "os.path.exists",
        "shutil.rmtree"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_static_workflow.py:teardown_method"
    },
    {
      "type": "function",
      "name": "test_workflow_loader",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_static_workflow.py",
      "line_number": 342,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5de5\u4f5c\u6d41\u52a0\u8f7d\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "WorkflowLoader",
        "loader.load_from_dict",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_static_workflow.py:test_workflow_loader"
    },
    {
      "type": "function",
      "name": "test_control_flow_evaluator",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_static_workflow.py",
      "line_number": 371,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u63a7\u5236\u6d41\u8bc4\u4f30\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "ControlFlowEvaluator",
        "evaluator.set_context",
        "evaluator.evaluate_condition",
        "evaluator.evaluate_condition",
        "evaluator.evaluate_condition",
        "evaluator.evaluate_condition",
        "evaluator.interpolate_value",
        "evaluator.interpolate_value"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_static_workflow.py:test_control_flow_evaluator"
    },
    {
      "type": "function",
      "name": "test_static_workflow_engine",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_static_workflow.py",
      "line_number": 396,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u9759\u6001\u5de5\u4f5c\u6d41\u5f15\u64ce\u57fa\u7840\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "StaticWorkflowEngine",
        "engine.set_step_executor"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_static_workflow.py:test_static_workflow_engine"
    },
    {
      "type": "function",
      "name": "dummy_executor",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_static_workflow.py",
      "line_number": 406,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "step"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/static_workflow/tests/test_static_workflow.py:dummy_executor"
    },
    {
      "type": "class",
      "name": "TaskMasterClientError",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py",
      "line_number": 19,
      "complexity": 1,
      "docstring": "Task Master Client \u76f8\u5173\u9519\u8bef",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Exception"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py:TaskMasterClientError"
    },
    {
      "type": "class",
      "name": "TaskMasterClient",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py",
      "line_number": 24,
      "complexity": 1,
      "docstring": "Task Master AI MCP \u5de5\u5177\u7684 Python \u5c01\u88c5\u5ba2\u6237\u7aef\n\n\u63d0\u4f9b\u4e0e Task Master AI \u7684\u5b8c\u6574\u96c6\u6210\u529f\u80fd\uff0c\u5305\u62ec\u9879\u76ee\u521d\u59cb\u5316\u3001\n\u4efb\u52a1\u7ba1\u7406\u3001\u4f9d\u8d56\u5904\u7406\u3001\u590d\u6742\u5ea6\u5206\u6790\u7b49\u529f\u80fd\u3002",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "is_initialized",
        "_run_mcp_tool",
        "initialize_project",
        "parse_prd",
        "add_task",
        "get_tasks",
        "next_task",
        "set_task_status",
        "expand_task",
        "analyze_complexity",
        "add_dependency",
        "research",
        "_mock_initialize_project",
        "_mock_parse_prd",
        "_mock_add_task",
        "_generate_task_details",
        "_detect_multi_agent_requirement",
        "_decompose_multi_agent_task",
        "_assign_best_agent",
        "clear_all_tasks",
        "_mock_get_tasks",
        "_mock_next_task",
        "_mock_set_task_status",
        "_mock_expand_task",
        "_mock_analyze_complexity",
        "_mock_add_dependency",
        "_mock_research"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py:TaskMasterClient"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py",
      "line_number": 32,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316 Task Master \u5ba2\u6237\u7aef\n\nArgs:\n    project_root: \u9879\u76ee\u6839\u76ee\u5f55\u8def\u5f84\n    auto_create: \u5982\u679c\u9879\u76ee\u4e0d\u5b58\u5728\u662f\u5426\u81ea\u52a8\u521b\u5efa",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "project_root",
        "auto_create"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Path(project_root).resolve",
        "self.initialize_project",
        "Path",
        "self.is_initialized"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py:__init__"
    },
    {
      "type": "function",
      "name": "is_initialized",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py",
      "line_number": 47,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u9879\u76ee\u662f\u5426\u5df2\u521d\u59cb\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.taskmaster_dir.exists",
        "self.tasks_file.exists"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py:is_initialized"
    },
    {
      "type": "function",
      "name": "_run_mcp_tool",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py",
      "line_number": 51,
      "complexity": 1,
      "docstring": "\u8fd0\u884c MCP \u5de5\u5177\u5e76\u8fd4\u56de\u7ed3\u679c\n\nArgs:\n    tool_name: MCP \u5de5\u5177\u540d\u79f0\n    **kwargs: \u5de5\u5177\u53c2\u6570\n    \nReturns:\n    \u5de5\u5177\u6267\u884c\u7ed3\u679c\n    \nRaises:\n    TaskMasterClientError: \u5de5\u5177\u6267\u884c\u5931\u8d25\u65f6\u629b\u51fa",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "tool_name"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "hasattr",
        "str",
        "self._mock_initialize_project",
        "logger.error",
        "TaskMasterClientError",
        "self._mock_parse_prd",
        "self._mock_add_task",
        "self._mock_get_tasks",
        "self._mock_next_task",
        "self._mock_set_task_status",
        "self._mock_expand_task",
        "self._mock_analyze_complexity",
        "self._mock_add_dependency",
        "self._mock_research",
        "TaskMasterClientError"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py:_run_mcp_tool"
    },
    {
      "type": "function",
      "name": "initialize_project",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py",
      "line_number": 101,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316 Task Master AI \u9879\u76ee\n\nArgs:\n    skip_install: \u8df3\u8fc7\u4f9d\u8d56\u5b89\u88c5\n    yes: \u8df3\u8fc7\u786e\u8ba4\u63d0\u793a\n    \nReturns:\n    \u521d\u59cb\u5316\u662f\u5426\u6210\u529f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "skip_install",
        "yes"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._run_mcp_tool",
        "result.get",
        "logger.error",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py:initialize_project"
    },
    {
      "type": "function",
      "name": "parse_prd",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py",
      "line_number": 124,
      "complexity": 1,
      "docstring": "\u89e3\u6790 PRD \u751f\u6210\u4efb\u52a1\n\nArgs:\n    prd_content: PRD \u5185\u5bb9\n    num_tasks: \u751f\u6210\u4efb\u52a1\u6570\u91cf\n    research: \u662f\u5426\u542f\u7528\u7814\u7a76\u529f\u80fd\n    \nReturns:\n    \u751f\u6210\u7684\u4efb\u52a1\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "prd_content",
        "num_tasks",
        "research"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "prd_file.parent.mkdir",
        "prd_file.write_text",
        "self._run_mcp_tool",
        "result.get",
        "logger.error",
        "str",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py:parse_prd"
    },
    {
      "type": "function",
      "name": "add_task",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py",
      "line_number": 155,
      "complexity": 1,
      "docstring": "\u6dfb\u52a0\u65b0\u4efb\u52a1\n\nArgs:\n    prompt: \u4efb\u52a1\u63cf\u8ff0\n    dependencies: \u4f9d\u8d56\u4efb\u52a1ID\u5217\u8868\n    priority: \u4efb\u52a1\u4f18\u5148\u7ea7 (high/medium/low)\n    research: \u662f\u5426\u542f\u7528\u7814\u7a76\u529f\u80fd\n    \nReturns:\n    \u521b\u5efa\u7684\u4efb\u52a1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "prompt",
        "dependencies",
        "priority",
        "research"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._run_mcp_tool",
        "result.get",
        "','.join",
        "logger.error",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py:add_task"
    },
    {
      "type": "function",
      "name": "get_tasks",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py",
      "line_number": 184,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u4efb\u52a1\u5217\u8868\n\nArgs:\n    status: \u8fc7\u6ee4\u72b6\u6001 (pending/in_progress/done/failed)\n    with_subtasks: \u662f\u5426\u5305\u542b\u5b50\u4efb\u52a1\n    \nReturns:\n    \u4efb\u52a1\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "status",
        "with_subtasks"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._run_mcp_tool",
        "result.get",
        "logger.error",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py:get_tasks"
    },
    {
      "type": "function",
      "name": "next_task",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py",
      "line_number": 208,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u4e0b\u4e00\u4e2a\u53ef\u6267\u884c\u4efb\u52a1\n\nReturns:\n    \u4e0b\u4e00\u4e2a\u4efb\u52a1\u4fe1\u606f\uff0c\u5982\u679c\u6ca1\u6709\u8fd4\u56de None",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._run_mcp_tool",
        "result.get",
        "logger.error",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py:next_task"
    },
    {
      "type": "function",
      "name": "set_task_status",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py",
      "line_number": 225,
      "complexity": 1,
      "docstring": "\u8bbe\u7f6e\u4efb\u52a1\u72b6\u6001\n\nArgs:\n    task_id: \u4efb\u52a1ID (\u652f\u6301\u5b50\u4efb\u52a1\u683c\u5f0f\u5982 \"1.2\")\n    status: \u65b0\u72b6\u6001 (pending/in_progress/done/failed)\n    \nReturns:\n    \u64cd\u4f5c\u662f\u5426\u6210\u529f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "task_id",
        "status"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._run_mcp_tool",
        "result.get",
        "logger.error",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py:set_task_status"
    },
    {
      "type": "function",
      "name": "expand_task",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py",
      "line_number": 248,
      "complexity": 1,
      "docstring": "\u5c55\u5f00\u4efb\u52a1\u4e3a\u5b50\u4efb\u52a1\n\nArgs:\n    task_id: \u8981\u5c55\u5f00\u7684\u4efb\u52a1ID\n    num_subtasks: \u5b50\u4efb\u52a1\u6570\u91cf\n    prompt: \u989d\u5916\u4e0a\u4e0b\u6587\u63d0\u793a\n    research: \u662f\u5426\u542f\u7528\u7814\u7a76\u529f\u80fd\n    force: \u662f\u5426\u5f3a\u5236\u91cd\u65b0\u751f\u6210\n    \nReturns:\n    \u751f\u6210\u7684\u5b50\u4efb\u52a1\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "task_id",
        "num_subtasks",
        "prompt",
        "research",
        "force"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._run_mcp_tool",
        "result.get",
        "str",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py:expand_task"
    },
    {
      "type": "function",
      "name": "analyze_complexity",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py",
      "line_number": 285,
      "complexity": 1,
      "docstring": "\u5206\u6790\u9879\u76ee\u590d\u6742\u5ea6\n\nArgs:\n    threshold: \u590d\u6742\u5ea6\u9608\u503c (1-10)\n    research: \u662f\u5426\u542f\u7528\u7814\u7a76\u5206\u6790\n    \nReturns:\n    \u590d\u6742\u5ea6\u5206\u6790\u62a5\u544a",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "threshold",
        "research"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._run_mcp_tool",
        "result.get",
        "logger.error",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py:analyze_complexity"
    },
    {
      "type": "function",
      "name": "add_dependency",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py",
      "line_number": 308,
      "complexity": 1,
      "docstring": "\u6dfb\u52a0\u4efb\u52a1\u4f9d\u8d56\u5173\u7cfb\n\nArgs:\n    task_id: \u4f9d\u8d56\u4efb\u52a1\u7684ID\n    depends_on: \u88ab\u4f9d\u8d56\u4efb\u52a1\u7684ID\n    \nReturns:\n    \u64cd\u4f5c\u662f\u5426\u6210\u529f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "task_id",
        "depends_on"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._run_mcp_tool",
        "result.get",
        "logger.error",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py:add_dependency"
    },
    {
      "type": "function",
      "name": "research",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py",
      "line_number": 331,
      "complexity": 1,
      "docstring": "AI \u7814\u7a76\u529f\u80fd\n\nArgs:\n    query: \u7814\u7a76\u67e5\u8be2\n    task_ids: \u76f8\u5173\u4efb\u52a1ID\u5217\u8868\n    save_to: \u4fdd\u5b58\u5230\u6307\u5b9a\u4efb\u52a1ID\n    detail_level: \u8be6\u7ec6\u7a0b\u5ea6 (low/medium/high)\n    \nReturns:\n    \u7814\u7a76\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "query",
        "task_ids",
        "save_to",
        "detail_level"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._run_mcp_tool",
        "result.get",
        "str",
        "','.join",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py:research"
    },
    {
      "type": "function",
      "name": "_mock_initialize_project",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py",
      "line_number": 366,
      "complexity": 1,
      "docstring": "\u6a21\u62df\u9879\u76ee\u521d\u59cb\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.taskmaster_dir.mkdir",
        "(self.taskmaster_dir / 'tasks').mkdir",
        "(self.taskmaster_dir / 'docs').mkdir",
        "(self.taskmaster_dir / 'reports').mkdir",
        "self.tasks_file.exists",
        "self.tasks_file.write_text",
        "json.dumps"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py:_mock_initialize_project"
    },
    {
      "type": "function",
      "name": "_mock_parse_prd",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py",
      "line_number": 380,
      "complexity": 1,
      "docstring": "\u6a21\u62df PRD \u89e3\u6790",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py:_mock_parse_prd"
    },
    {
      "type": "function",
      "name": "_mock_add_task",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py",
      "line_number": 405,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u771f\u5b9e\u7684\u4efb\u52a1\u5e76\u4fdd\u5b58\u5230 tasks.json",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "kwargs.get",
        "tasks_file.exists",
        "self._detect_multi_agent_requirement",
        "tasks_data['master']['tasks'].append",
        "dt.now().isoformat",
        "tasks_file.parent.mkdir",
        "logger.info",
        "isinstance",
        "kwargs.get",
        "dt.now().isoformat",
        "dt.now().isoformat",
        "self._generate_task_details",
        "logger.info",
        "enumerate",
        "open",
        "json.dump",
        "logger.error",
        "open",
        "json.load",
        "task.get",
        "max",
        "kwargs.get",
        "kwargs.get('dependencies', '').split",
        "self._assign_best_agent",
        "task['subtasks'].append",
        "dt.now",
        "str",
        "task.get",
        "len",
        "dt.now",
        "dt.now",
        "kwargs.get",
        "dt.now().isoformat",
        "dt.now().isoformat",
        "len",
        "kwargs.get",
        "len",
        "len",
        "dt.now",
        "dt.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py:_mock_add_task"
    },
    {
      "type": "function",
      "name": "_generate_task_details",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py",
      "line_number": 496,
      "complexity": 1,
      "docstring": "\u4e3a\u4efb\u52a1\u751f\u6210\u8be6\u7ec6\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "prompt"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "prompt.lower"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py:_generate_task_details"
    },
    {
      "type": "function",
      "name": "_detect_multi_agent_requirement",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py",
      "line_number": 517,
      "complexity": 1,
      "docstring": "\u68c0\u6d4b\u4efb\u52a1\u662f\u5426\u9700\u8981\u591a\u4e2a\u667a\u80fd\u4f53\uff0c\u5e76\u5206\u89e3\u4e3a\u5b50\u4efb\u52a1\n\nArgs:\n    prompt: \u4efb\u52a1\u63cf\u8ff0\n    \nReturns:\n    \u5b50\u4efb\u52a1\u5217\u8868\uff0c\u6bcf\u4e2a\u5305\u542b agent_name \u548c description",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "prompt"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "prompt.lower",
        "any",
        "agent_mentions.append",
        "agent_mentions.append",
        "agent_mentions.append",
        "self._decompose_multi_agent_task",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py:_detect_multi_agent_requirement"
    },
    {
      "type": "function",
      "name": "_decompose_multi_agent_task",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py",
      "line_number": 550,
      "complexity": 1,
      "docstring": "\u5c06\u590d\u6742\u4efb\u52a1\u5206\u89e3\u4e3a\u591a\u4e2a\u667a\u80fd\u4f53\u7684\u5b50\u4efb\u52a1\n\nArgs:\n    prompt: \u539f\u59cb\u4efb\u52a1\u63cf\u8ff0\n    agent_names: \u6d89\u53ca\u7684\u667a\u80fd\u4f53\u540d\u79f0\u5217\u8868\n    \nReturns:\n    \u5b50\u4efb\u52a1\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "prompt",
        "agent_names"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "subtasks.append",
        "prompt.lower",
        "subtasks.append",
        "subtasks.append",
        "subtasks.append",
        "subtasks.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py:_decompose_multi_agent_task"
    },
    {
      "type": "function",
      "name": "_assign_best_agent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py",
      "line_number": 594,
      "complexity": 1,
      "docstring": "\u6839\u636e\u4efb\u52a1\u63d0\u793a\u667a\u80fd\u5206\u914d\u6700\u5408\u9002\u7684\u667a\u80fd\u4f53\n\nArgs:\n    prompt: \u4efb\u52a1\u63cf\u8ff0\n    \nReturns:\n    \u667a\u80fd\u4f53\u540d\u79f0",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "prompt"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "prompt.lower",
        "any",
        "any",
        "any"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py:_assign_best_agent"
    },
    {
      "type": "function",
      "name": "clear_all_tasks",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py",
      "line_number": 630,
      "complexity": 1,
      "docstring": "\u6e05\u7a7a\u6240\u6709\u4efb\u52a1\n\nReturns:\n    \u64cd\u4f5c\u662f\u5426\u6210\u529f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "tasks_file.parent.mkdir",
        "logger.info",
        "open",
        "json.dump",
        "logger.error",
        "dt.now().isoformat",
        "dt.now().isoformat",
        "dt.now",
        "dt.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py:clear_all_tasks"
    },
    {
      "type": "function",
      "name": "_mock_get_tasks",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py",
      "line_number": 669,
      "complexity": 1,
      "docstring": "\u8bfb\u53d6\u5b9e\u9645\u4efb\u52a1\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "tasks_file.exists",
        "data.get('master', {}).get",
        "kwargs.get",
        "kwargs.get",
        "logger.warning",
        "logger.error",
        "open",
        "json.load",
        "str",
        "data.get",
        "all_tasks.append",
        "task.get",
        "all_tasks.append",
        "t.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py:_mock_get_tasks"
    },
    {
      "type": "function",
      "name": "_mock_next_task",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py",
      "line_number": 704,
      "complexity": 1,
      "docstring": "\u6a21\u62df\u83b7\u53d6\u4e0b\u4e00\u4e2a\u4efb\u52a1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._mock_get_tasks(**kwargs).get",
        "self._mock_get_tasks",
        "t.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py:_mock_next_task"
    },
    {
      "type": "function",
      "name": "_mock_set_task_status",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py",
      "line_number": 713,
      "complexity": 1,
      "docstring": "\u5b9e\u9645\u66f4\u65b0\u4efb\u52a1\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "kwargs.get",
        "kwargs.get",
        "data.get('master', {}).get",
        "tasks_file.exists",
        "open",
        "json.load",
        "task.get",
        "dt.now().isoformat",
        "logger.error",
        "data.get",
        "str",
        "str",
        "dt.now().isoformat",
        "logger.info",
        "open",
        "json.dump",
        "str",
        "task.get",
        "str",
        "str",
        "dt.now().isoformat",
        "logger.info",
        "dt.now",
        "dt.now",
        "subtask.get",
        "dt.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py:_mock_set_task_status"
    },
    {
      "type": "function",
      "name": "_mock_expand_task",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py",
      "line_number": 768,
      "complexity": 1,
      "docstring": "\u6a21\u62df\u4efb\u52a1\u5c55\u5f00",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "kwargs.get",
        "kwargs.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py:_mock_expand_task"
    },
    {
      "type": "function",
      "name": "_mock_analyze_complexity",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py",
      "line_number": 788,
      "complexity": 1,
      "docstring": "\u6a21\u62df\u590d\u6742\u5ea6\u5206\u6790",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py:_mock_analyze_complexity"
    },
    {
      "type": "function",
      "name": "_mock_add_dependency",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py",
      "line_number": 798,
      "complexity": 1,
      "docstring": "\u6a21\u62df\u6dfb\u52a0\u4f9d\u8d56",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py:_mock_add_dependency"
    },
    {
      "type": "function",
      "name": "_mock_research",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py",
      "line_number": 802,
      "complexity": 1,
      "docstring": "\u6a21\u62df\u7814\u7a76\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "kwargs.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/client.py:_mock_research"
    },
    {
      "type": "class",
      "name": "TaskMasterConfig",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py",
      "line_number": 17,
      "complexity": 1,
      "docstring": "Task Master AI \u96c6\u6210\u914d\u7f6e\u7ba1\u7406\u5668\n\n\u7ba1\u7406\u6240\u6709\u4e0e Task Master AI \u96c6\u6210\u76f8\u5173\u7684\u914d\u7f6e\u9009\u9879\uff0c\n\u5305\u62ec\u9879\u76ee\u8bbe\u7f6e\u3001AI \u6a21\u578b\u914d\u7f6e\u3001\u96c6\u6210\u884c\u4e3a\u7b49\u3002",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "load_config",
        "save_config",
        "get",
        "set",
        "update",
        "reset_to_default",
        "get_all",
        "validate_config",
        "get_ai_model_config",
        "get_task_management_config",
        "get_execution_config",
        "is_auto_init_enabled",
        "is_auto_sync_enabled",
        "is_research_enabled",
        "should_auto_expand_complex",
        "get_complexity_threshold",
        "_merge_config",
        "create_example_config"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py:TaskMasterConfig"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py",
      "line_number": 66,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u914d\u7f6e\u7ba1\u7406\u5668\n\nArgs:\n    project_root: \u9879\u76ee\u6839\u76ee\u5f55\n    config_file: \u81ea\u5b9a\u4e49\u914d\u7f6e\u6587\u4ef6\u8def\u5f84",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "project_root",
        "config_file"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.DEFAULT_CONFIG.copy",
        "self.load_config",
        "Path",
        "Path.cwd",
        "Path"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py:__init__"
    },
    {
      "type": "function",
      "name": "load_config",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py",
      "line_number": 83,
      "complexity": 1,
      "docstring": "\u4ece\u6587\u4ef6\u52a0\u8f7d\u914d\u7f6e\n\nReturns:\n    \u52a0\u8f7d\u662f\u5426\u6210\u529f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.config_file.exists",
        "self._merge_config",
        "logger.info",
        "logger.info",
        "logger.error",
        "open",
        "json.load"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py:load_config"
    },
    {
      "type": "function",
      "name": "save_config",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py",
      "line_number": 107,
      "complexity": 1,
      "docstring": "\u4fdd\u5b58\u914d\u7f6e\u5230\u6587\u4ef6\n\nReturns:\n    \u4fdd\u5b58\u662f\u5426\u6210\u529f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.config_file.parent.mkdir",
        "logger.info",
        "open",
        "json.dump",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py:save_config"
    },
    {
      "type": "function",
      "name": "get",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py",
      "line_number": 128,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u914d\u7f6e\u503c\uff08\u652f\u6301\u70b9\u5206\u9694\u7684\u5d4c\u5957\u952e\uff09\n\nArgs:\n    key: \u914d\u7f6e\u952e\uff0c\u652f\u6301\u5d4c\u5957\u5982 'project.auto_init'\n    default: \u9ed8\u8ba4\u503c\n    \nReturns:\n    \u914d\u7f6e\u503c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "key",
        "default"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "key.split",
        "logger.error",
        "isinstance"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py:get"
    },
    {
      "type": "function",
      "name": "set",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py",
      "line_number": 155,
      "complexity": 1,
      "docstring": "\u8bbe\u7f6e\u914d\u7f6e\u503c\uff08\u652f\u6301\u70b9\u5206\u9694\u7684\u5d4c\u5957\u952e\uff09\n\nArgs:\n    key: \u914d\u7f6e\u952e\uff0c\u652f\u6301\u5d4c\u5957\u5982 'project.auto_init'\n    value: \u914d\u7f6e\u503c\n    \nReturns:\n    \u8bbe\u7f6e\u662f\u5426\u6210\u529f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "key",
        "value"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "key.split",
        "logger.debug",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py:set"
    },
    {
      "type": "function",
      "name": "update",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py",
      "line_number": 186,
      "complexity": 1,
      "docstring": "\u6279\u91cf\u66f4\u65b0\u914d\u7f6e\n\nArgs:\n    config_dict: \u914d\u7f6e\u5b57\u5178\n    \nReturns:\n    \u66f4\u65b0\u662f\u5426\u6210\u529f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "config_dict"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._merge_config",
        "logger.info",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py:update"
    },
    {
      "type": "function",
      "name": "reset_to_default",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py",
      "line_number": 205,
      "complexity": 1,
      "docstring": "\u91cd\u7f6e\u4e3a\u9ed8\u8ba4\u914d\u7f6e\n\nReturns:\n    \u91cd\u7f6e\u662f\u5426\u6210\u529f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.DEFAULT_CONFIG.copy",
        "logger.info",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py:reset_to_default"
    },
    {
      "type": "function",
      "name": "get_all",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py",
      "line_number": 221,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6240\u6709\u914d\u7f6e\n\nReturns:\n    \u5b8c\u6574\u914d\u7f6e\u5b57\u5178",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._config.copy"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py:get_all"
    },
    {
      "type": "function",
      "name": "validate_config",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py",
      "line_number": 230,
      "complexity": 1,
      "docstring": "\u9a8c\u8bc1\u914d\u7f6e\u5b8c\u6574\u6027\n\nReturns:\n    \u914d\u7f6e\u662f\u5426\u6709\u6548",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get",
        "self.get",
        "logger.info",
        "self.get",
        "logger.error",
        "logger.error",
        "logger.error",
        "logger.error",
        "logger.error",
        "isinstance",
        "isinstance"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py:validate_config"
    },
    {
      "type": "function",
      "name": "get_ai_model_config",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py",
      "line_number": 270,
      "complexity": 1,
      "docstring": "\u83b7\u53d6 AI \u6a21\u578b\u914d\u7f6e\n\nReturns:\n    AI \u6a21\u578b\u914d\u7f6e\u5b57\u5178",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get",
        "self.get",
        "self.get",
        "self.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py:get_ai_model_config"
    },
    {
      "type": "function",
      "name": "get_task_management_config",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py",
      "line_number": 284,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u4efb\u52a1\u7ba1\u7406\u914d\u7f6e\n\nReturns:\n    \u4efb\u52a1\u7ba1\u7406\u914d\u7f6e\u5b57\u5178",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get",
        "self.get",
        "self.get",
        "self.get",
        "self.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py:get_task_management_config"
    },
    {
      "type": "function",
      "name": "get_execution_config",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py",
      "line_number": 299,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6267\u884c\u914d\u7f6e\n\nReturns:\n    \u6267\u884c\u914d\u7f6e\u5b57\u5178",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get",
        "self.get",
        "self.get",
        "self.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py:get_execution_config"
    },
    {
      "type": "function",
      "name": "is_auto_init_enabled",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py",
      "line_number": 313,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u662f\u5426\u542f\u7528\u81ea\u52a8\u521d\u59cb\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py:is_auto_init_enabled"
    },
    {
      "type": "function",
      "name": "is_auto_sync_enabled",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py",
      "line_number": 317,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u662f\u5426\u542f\u7528\u81ea\u52a8\u540c\u6b65",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py:is_auto_sync_enabled"
    },
    {
      "type": "function",
      "name": "is_research_enabled",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py",
      "line_number": 321,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u662f\u5426\u542f\u7528\u7814\u7a76\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py:is_research_enabled"
    },
    {
      "type": "function",
      "name": "should_auto_expand_complex",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py",
      "line_number": 325,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u662f\u5426\u81ea\u52a8\u5c55\u5f00\u590d\u6742\u4efb\u52a1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py:should_auto_expand_complex"
    },
    {
      "type": "function",
      "name": "get_complexity_threshold",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py",
      "line_number": 329,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u590d\u6742\u5ea6\u9608\u503c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py:get_complexity_threshold"
    },
    {
      "type": "function",
      "name": "_merge_config",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py",
      "line_number": 333,
      "complexity": 1,
      "docstring": "\u6df1\u5ea6\u5408\u5e76\u914d\u7f6e\u5b57\u5178\n\nArgs:\n    base: \u57fa\u7840\u914d\u7f6e\u5b57\u5178\uff08\u4f1a\u88ab\u4fee\u6539\uff09\n    update: \u66f4\u65b0\u914d\u7f6e\u5b57\u5178",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "base",
        "update"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "update.items",
        "isinstance",
        "isinstance",
        "self._merge_config"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py:_merge_config"
    },
    {
      "type": "function",
      "name": "create_example_config",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py",
      "line_number": 347,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u793a\u4f8b\u914d\u7f6e\u6587\u4ef6\u5185\u5bb9\n\nReturns:\n    \u793a\u4f8b\u914d\u7f6e\u7684 JSON \u5b57\u7b26\u4e32",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "json.dumps"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py:create_example_config"
    },
    {
      "type": "class",
      "name": "TaskMasterDataMapper",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/data_mapper.py",
      "line_number": 14,
      "complexity": 1,
      "docstring": "MultiStepAgent \u548c Task Master AI \u4e4b\u95f4\u7684\u6570\u636e\u8f6c\u6362\u5668\n\n\u5904\u7406\u4ee5\u4e0b\u8f6c\u6362\uff1a\n- AgentSpecification -> Task Master AI \u667a\u80fd\u4f53\u683c\u5f0f\n- MultiStepAgent \u6b65\u9aa4\u683c\u5f0f <-> Task Master AI \u4efb\u52a1\u683c\u5f0f\n- \u72b6\u6001\u6620\u5c04\u548c\u5b57\u6bb5\u8f6c\u6362",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "agent_specs_to_tm_format",
        "agent_specs_to_name_list",
        "tm_task_to_step_format",
        "step_to_tm_task_format",
        "tm_tasks_to_plan_format",
        "plan_to_tm_tasks_format",
        "_map_status_to_multistep",
        "_map_status_to_tm",
        "_map_instruction_type_to_multistep",
        "_map_instruction_type_to_tm",
        "_map_phase_to_multistep",
        "_map_phase_to_tm",
        "create_tm_compatible_instruction",
        "validate_step_format",
        "validate_tm_task_format"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/data_mapper.py:TaskMasterDataMapper"
    },
    {
      "type": "function",
      "name": "agent_specs_to_tm_format",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/data_mapper.py",
      "line_number": 54,
      "complexity": 1,
      "docstring": "\u5c06 AgentSpecification \u5217\u8868\u8f6c\u6362\u4e3a Task Master AI \u683c\u5f0f\n\nArgs:\n    agent_specs: AgentSpecification \u5bf9\u8c61\u5217\u8868\n    \nReturns:\n    \u683c\u5f0f\u5316\u7684\u667a\u80fd\u4f53\u63cf\u8ff0\u5b57\u7b26\u4e32",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "agent_specs"
      ],
      "decorators": [
        "staticmethod"
      ],
      "inheritance": [],
      "calls": [
        "'\\n'.join",
        "getattr",
        "getattr",
        "agent_descriptions.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/data_mapper.py:agent_specs_to_tm_format"
    },
    {
      "type": "function",
      "name": "agent_specs_to_name_list",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/data_mapper.py",
      "line_number": 76,
      "complexity": 1,
      "docstring": "\u63d0\u53d6\u667a\u80fd\u4f53\u540d\u79f0\u5217\u8868\n\nArgs:\n    agent_specs: AgentSpecification \u5bf9\u8c61\u5217\u8868\n    \nReturns:\n    \u667a\u80fd\u4f53\u540d\u79f0\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "agent_specs"
      ],
      "decorators": [
        "staticmethod"
      ],
      "inheritance": [],
      "calls": [
        "getattr",
        "enumerate"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/data_mapper.py:agent_specs_to_name_list"
    },
    {
      "type": "function",
      "name": "tm_task_to_step_format",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/data_mapper.py",
      "line_number": 92,
      "complexity": 1,
      "docstring": "\u5c06 Task Master AI \u4efb\u52a1\u8f6c\u6362\u4e3a MultiStepAgent \u6b65\u9aa4\u683c\u5f0f\n\nArgs:\n    tm_task: Task Master AI \u4efb\u52a1\u5bf9\u8c61\n    \nReturns:\n    MultiStepAgent \u6b65\u9aa4\u683c\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "tm_task"
      ],
      "decorators": [
        "staticmethod"
      ],
      "inheritance": [],
      "calls": [
        "tm_task.get",
        "str",
        "tm_task.get",
        "tm_task.get",
        "tm_task.get",
        "TaskMasterDataMapper._map_instruction_type_to_multistep",
        "TaskMasterDataMapper._map_phase_to_multistep",
        "tm_task.get",
        "tm_task.get",
        "TaskMasterDataMapper._map_status_to_multistep",
        "isinstance",
        "logger.error",
        "tm_task.get",
        "tm_task.get",
        "tm_task.get",
        "tm_task.get",
        "tm_task.get",
        "TaskMasterDataMapper.tm_task_to_step_format",
        "str",
        "tm_task.get",
        "str",
        "str",
        "tm_task.get",
        "tm_task.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/data_mapper.py:tm_task_to_step_format"
    },
    {
      "type": "function",
      "name": "step_to_tm_task_format",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/data_mapper.py",
      "line_number": 174,
      "complexity": 1,
      "docstring": "\u5c06 MultiStepAgent \u6b65\u9aa4\u8f6c\u6362\u4e3a Task Master AI \u4efb\u52a1\u683c\u5f0f\n\nArgs:\n    step: MultiStepAgent \u6b65\u9aa4\u5bf9\u8c61\n    task_id: \u53ef\u9009\u7684\u4efb\u52a1ID\uff0c\u5982\u679c\u4e0d\u63d0\u4f9b\u5219\u4f7f\u7528\u6b65\u9aa4\u4e2d\u7684ID\n    \nReturns:\n    Task Master AI \u4efb\u52a1\u683c\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "step",
        "task_id"
      ],
      "decorators": [
        "staticmethod"
      ],
      "inheritance": [],
      "calls": [
        "step.get",
        "step.get",
        "step.get",
        "TaskMasterDataMapper._map_status_to_tm",
        "step.get",
        "step.get",
        "TaskMasterDataMapper._map_instruction_type_to_tm",
        "TaskMasterDataMapper._map_phase_to_tm",
        "step.get",
        "step.get",
        "logger.error",
        "step.get",
        "step.get",
        "step.get",
        "step.get",
        "str",
        "TaskMasterDataMapper.step_to_tm_task_format",
        "step.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/data_mapper.py:step_to_tm_task_format"
    },
    {
      "type": "function",
      "name": "tm_tasks_to_plan_format",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/data_mapper.py",
      "line_number": 246,
      "complexity": 1,
      "docstring": "\u5c06 Task Master AI \u4efb\u52a1\u5217\u8868\u8f6c\u6362\u4e3a MultiStepAgent \u8ba1\u5212\u683c\u5f0f\n\nArgs:\n    tm_tasks: Task Master AI \u4efb\u52a1\u5217\u8868\n    \nReturns:\n    MultiStepAgent \u8ba1\u5212\u683c\u5f0f\u7684\u6b65\u9aa4\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "tm_tasks"
      ],
      "decorators": [
        "staticmethod"
      ],
      "inheritance": [],
      "calls": [
        "TaskMasterDataMapper.tm_task_to_step_format",
        "plan.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/data_mapper.py:tm_tasks_to_plan_format"
    },
    {
      "type": "function",
      "name": "plan_to_tm_tasks_format",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/data_mapper.py",
      "line_number": 267,
      "complexity": 1,
      "docstring": "\u5c06 MultiStepAgent \u8ba1\u5212\u8f6c\u6362\u4e3a Task Master AI \u4efb\u52a1\u683c\u5f0f\n\nArgs:\n    plan: MultiStepAgent \u8ba1\u5212\uff08\u6b65\u9aa4\u5217\u8868\uff09\n    \nReturns:\n    Task Master AI \u4efb\u52a1\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "plan"
      ],
      "decorators": [
        "staticmethod"
      ],
      "inheritance": [],
      "calls": [
        "enumerate",
        "TaskMasterDataMapper.step_to_tm_task_format",
        "tm_tasks.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/data_mapper.py:plan_to_tm_tasks_format"
    },
    {
      "type": "function",
      "name": "_map_status_to_multistep",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/data_mapper.py",
      "line_number": 288,
      "complexity": 1,
      "docstring": "\u5c06 Task Master AI \u72b6\u6001\u6620\u5c04\u5230 MultiStepAgent \u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "tm_status"
      ],
      "decorators": [
        "staticmethod"
      ],
      "inheritance": [],
      "calls": [
        "TaskMasterDataMapper.STATUS_MAPPING.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/data_mapper.py:_map_status_to_multistep"
    },
    {
      "type": "function",
      "name": "_map_status_to_tm",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/data_mapper.py",
      "line_number": 293,
      "complexity": 1,
      "docstring": "\u5c06 MultiStepAgent \u72b6\u6001\u6620\u5c04\u5230 Task Master AI \u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "step_status"
      ],
      "decorators": [
        "staticmethod"
      ],
      "inheritance": [],
      "calls": [
        "mapping.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/data_mapper.py:_map_status_to_tm"
    },
    {
      "type": "function",
      "name": "_map_instruction_type_to_multistep",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/data_mapper.py",
      "line_number": 306,
      "complexity": 1,
      "docstring": "\u5c06 Task Master AI \u6307\u4ee4\u7c7b\u578b\u6620\u5c04\u5230 MultiStepAgent",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "tm_type"
      ],
      "decorators": [
        "staticmethod"
      ],
      "inheritance": [],
      "calls": [
        "TaskMasterDataMapper.INSTRUCTION_TYPE_MAPPING.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/data_mapper.py:_map_instruction_type_to_multistep"
    },
    {
      "type": "function",
      "name": "_map_instruction_type_to_tm",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/data_mapper.py",
      "line_number": 311,
      "complexity": 1,
      "docstring": "\u5c06 MultiStepAgent \u6307\u4ee4\u7c7b\u578b\u6620\u5c04\u5230 Task Master AI",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "step_type"
      ],
      "decorators": [
        "staticmethod"
      ],
      "inheritance": [],
      "calls": [
        "TaskMasterDataMapper.INSTRUCTION_TYPE_MAPPING.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/data_mapper.py:_map_instruction_type_to_tm"
    },
    {
      "type": "function",
      "name": "_map_phase_to_multistep",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/data_mapper.py",
      "line_number": 316,
      "complexity": 1,
      "docstring": "\u5c06 Task Master AI \u9636\u6bb5\u6620\u5c04\u5230 MultiStepAgent",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "tm_phase"
      ],
      "decorators": [
        "staticmethod"
      ],
      "inheritance": [],
      "calls": [
        "TaskMasterDataMapper.PHASE_MAPPING.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/data_mapper.py:_map_phase_to_multistep"
    },
    {
      "type": "function",
      "name": "_map_phase_to_tm",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/data_mapper.py",
      "line_number": 321,
      "complexity": 1,
      "docstring": "\u5c06 MultiStepAgent \u9636\u6bb5\u6620\u5c04\u5230 Task Master AI",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "step_phase"
      ],
      "decorators": [
        "staticmethod"
      ],
      "inheritance": [],
      "calls": [
        "TaskMasterDataMapper.PHASE_MAPPING.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/data_mapper.py:_map_phase_to_tm"
    },
    {
      "type": "function",
      "name": "create_tm_compatible_instruction",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/data_mapper.py",
      "line_number": 326,
      "complexity": 1,
      "docstring": "\u4e3a Task Master AI \u521b\u5efa\u517c\u5bb9\u7684\u6307\u4ee4\u63cf\u8ff0\n\nArgs:\n    step: MultiStepAgent \u6b65\u9aa4\n    agent_specs: \u667a\u80fd\u4f53\u89c4\u683c\u5217\u8868\n    \nReturns:\n    \u683c\u5f0f\u5316\u7684\u6307\u4ee4\u63cf\u8ff0",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "step",
        "agent_specs"
      ],
      "decorators": [
        "staticmethod"
      ],
      "inheritance": [],
      "calls": [
        "step.get",
        "step.get",
        "f\"\\n# \u4efb\u52a1\u6267\u884c\u6307\u4ee4\\n\\n## \u6267\u884c\u8005\\n{agent_name} - {agent_desc}\\n\\n## \u5177\u4f53\u4efb\u52a1\\n{instruction}\\n\\n## \u6267\u884c\u7c7b\u578b\\n{step.get('instruction_type', 'execution')}\\n\\n## \u9884\u671f\u8f93\u51fa\\n{step.get('expected_output', '\u4efb\u52a1\u5b8c\u6210\u7ed3\u679c')}\\n\\n## \u5148\u51b3\u6761\u4ef6\\n{step.get('prerequisites', '\u65e0')}\\n\".strip",
        "getattr",
        "getattr",
        "step.get",
        "step.get",
        "step.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/data_mapper.py:create_tm_compatible_instruction"
    },
    {
      "type": "function",
      "name": "validate_step_format",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/data_mapper.py",
      "line_number": 370,
      "complexity": 1,
      "docstring": "\u9a8c\u8bc1\u6b65\u9aa4\u683c\u5f0f\u662f\u5426\u5b8c\u6574\n\nArgs:\n    step: \u6b65\u9aa4\u5bf9\u8c61\n    \nReturns:\n    \u662f\u5426\u4e3a\u6709\u6548\u683c\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "step"
      ],
      "decorators": [
        "staticmethod"
      ],
      "inheritance": [],
      "calls": [
        "logger.warning"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/data_mapper.py:validate_step_format"
    },
    {
      "type": "function",
      "name": "validate_tm_task_format",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/task_master/data_mapper.py",
      "line_number": 390,
      "complexity": 1,
      "docstring": "\u9a8c\u8bc1 Task Master AI \u4efb\u52a1\u683c\u5f0f\u662f\u5426\u5b8c\u6574\n\nArgs:\n    tm_task: Task Master AI \u4efb\u52a1\u5bf9\u8c61\n    \nReturns:\n    \u662f\u5426\u4e3a\u6709\u6548\u683c\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "tm_task"
      ],
      "decorators": [
        "staticmethod"
      ],
      "inheritance": [],
      "calls": [
        "logger.warning"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/task_master/data_mapper.py:validate_tm_task_format"
    },
    {
      "type": "function",
      "name": "create_demo_workflow",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/examples/dynamic_task_logging_demo.py",
      "line_number": 35,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u6f14\u793a\u7528\u7684\u5de5\u4f5c\u6d41\u5f15\u64ce",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Mock",
        "Mock",
        "Mock",
        "Result",
        "CognitiveWorkflowEngine"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/examples/dynamic_task_logging_demo.py:create_demo_workflow"
    },
    {
      "type": "function",
      "name": "demo_dynamic_task_addition",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/examples/dynamic_task_logging_demo.py",
      "line_number": 91,
      "complexity": 1,
      "docstring": "\u6f14\u793a\u52a8\u6001\u4efb\u52a1\u6dfb\u52a0\u7684\u5b8c\u6574\u65e5\u5fd7\u6d41\u7a0b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "create_demo_workflow",
        "CognitiveTask",
        "GlobalState",
        "engine.global_state.set_llm",
        "engine.global_state.set_original_goal",
        "print",
        "print",
        "print",
        "Result",
        "print",
        "print",
        "print",
        "engine.decider.plan_modification_decision",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "engine._apply_plan_modification",
        "print",
        "print",
        "print",
        "print",
        "enumerate",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/examples/dynamic_task_logging_demo.py:demo_dynamic_task_addition"
    },
    {
      "type": "function",
      "name": "demo_error_scenarios",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/examples/dynamic_task_logging_demo.py",
      "line_number": 177,
      "complexity": 1,
      "docstring": "\u6f14\u793a\u9519\u8bef\u573a\u666f\u4e0b\u7684\u65e5\u5fd7\u8bb0\u5f55",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "create_demo_workflow",
        "print",
        "GlobalState",
        "engine._add_dynamic_tasks",
        "print",
        "print",
        "print",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/examples/dynamic_task_logging_demo.py:demo_error_scenarios"
    },
    {
      "type": "class",
      "name": "MockLLM",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/examples/comparison_demo.py",
      "line_number": 27,
      "complexity": 1,
      "docstring": "\u6a21\u62df LLM \u7528\u4e8e\u6f14\u793a",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "invoke"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/examples/comparison_demo.py:MockLLM"
    },
    {
      "type": "class",
      "name": "MockResponse",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/examples/comparison_demo.py",
      "line_number": 33,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/examples/comparison_demo.py:MockResponse"
    },
    {
      "type": "function",
      "name": "create_demo_agents",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/examples/comparison_demo.py",
      "line_number": 38,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u6f14\u793a\u7528\u7684\u667a\u80fd\u4f53",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "llm"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Agent",
        "Agent",
        "Agent",
        "Agent",
        "AgentSpecification",
        "AgentSpecification",
        "AgentSpecification",
        "AgentSpecification"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/examples/comparison_demo.py:create_demo_agents"
    },
    {
      "type": "function",
      "name": "demo_multistep_v2",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/examples/comparison_demo.py",
      "line_number": 61,
      "complexity": 1,
      "docstring": "\u6f14\u793a MultiStepAgent_v2 \u7684\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "MockLLM",
        "create_demo_agents",
        "print",
        "MultiStepAgent_v2",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/examples/comparison_demo.py:demo_multistep_v2"
    },
    {
      "type": "function",
      "name": "demo_task_master_agent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/examples/comparison_demo.py",
      "line_number": 112,
      "complexity": 1,
      "docstring": "\u6f14\u793a TaskMasterAgent \u7684\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "tempfile.mkdtemp",
        "MockLLM",
        "create_demo_agents",
        "print",
        "TaskMasterAgent",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "agent.get_project_status",
        "print",
        "print",
        "print",
        "print",
        "shutil.rmtree",
        "print",
        "len",
        "status.get",
        "config.get_complexity_threshold"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/examples/comparison_demo.py:demo_task_master_agent"
    },
    {
      "type": "function",
      "name": "feature_comparison",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/examples/comparison_demo.py",
      "line_number": 199,
      "complexity": 1,
      "docstring": "\u529f\u80fd\u5bf9\u6bd4\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/examples/comparison_demo.py:feature_comparison"
    },
    {
      "type": "function",
      "name": "usage_recommendations",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/examples/comparison_demo.py",
      "line_number": 234,
      "complexity": 1,
      "docstring": "\u4f7f\u7528\u5efa\u8bae",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/examples/comparison_demo.py:usage_recommendations"
    },
    {
      "type": "function",
      "name": "main",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/examples/comparison_demo.py",
      "line_number": 267,
      "complexity": 1,
      "docstring": "\u4e3b\u6f14\u793a\u51fd\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "print",
        "demo_multistep_v2",
        "demo_task_master_agent",
        "feature_comparison",
        "usage_recommendations",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/examples/comparison_demo.py:main"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/examples/comparison_demo.py",
      "line_number": 29,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "model_name"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/examples/comparison_demo.py:__init__"
    },
    {
      "type": "function",
      "name": "invoke",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/examples/comparison_demo.py",
      "line_number": 32,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "messages"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "MockResponse"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/examples/comparison_demo.py:invoke"
    },
    {
      "type": "function",
      "name": "create_sample_agents",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/examples/basic_task_master.py",
      "line_number": 26,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u793a\u4f8b\u667a\u80fd\u4f53",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Agent",
        "Agent",
        "Agent",
        "AgentSpecification",
        "AgentSpecification",
        "AgentSpecification"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/examples/basic_task_master.py:create_sample_agents"
    },
    {
      "type": "function",
      "name": "basic_usage_example",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/examples/basic_task_master.py",
      "line_number": 50,
      "complexity": 1,
      "docstring": "\u57fa\u672c\u4f7f\u7528\u793a\u4f8b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "Path",
        "project_dir.mkdir",
        "print",
        "print",
        "create_sample_agents",
        "print",
        "print",
        "TaskMasterAgent",
        "print",
        "print",
        "tm_agent.get_project_status",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "tm_agent.execute_multi_step",
        "print",
        "tm_agent.research",
        "print",
        "tm_agent.get_complexity_analysis",
        "print",
        "logger.error",
        "str",
        "print",
        "print",
        "print",
        "print",
        "project_dir.resolve",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/examples/basic_task_master.py:basic_usage_example"
    },
    {
      "type": "function",
      "name": "mixed_mode_example",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/examples/basic_task_master.py",
      "line_number": 134,
      "complexity": 1,
      "docstring": "\u6df7\u5408\u6a21\u5f0f\u4f7f\u7528\u793a\u4f8b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "Path",
        "project_dir.mkdir",
        "create_sample_agents",
        "TaskMasterAgent",
        "print",
        "print",
        "tm_agent.execute_multi_step",
        "print",
        "logger.error",
        "str",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/examples/basic_task_master.py:mixed_mode_example"
    },
    {
      "type": "function",
      "name": "prd_driven_example",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/examples/basic_task_master.py",
      "line_number": 173,
      "complexity": 1,
      "docstring": "PRD \u9a71\u52a8\u5f00\u53d1\u793a\u4f8b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "Path",
        "project_dir.mkdir",
        "create_sample_agents",
        "TaskMasterAgent",
        "print",
        "print",
        "tm_agent.execute_multi_step",
        "print",
        "logger.error",
        "str",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/examples/basic_task_master.py:prd_driven_example"
    },
    {
      "type": "function",
      "name": "configuration_example",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/examples/basic_task_master.py",
      "line_number": 243,
      "complexity": 1,
      "docstring": "\u914d\u7f6e\u7ba1\u7406\u793a\u4f8b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "TaskMasterConfig",
        "print",
        "print",
        "print",
        "print",
        "print",
        "config.set",
        "config.set",
        "print",
        "print",
        "print",
        "config.update",
        "config.get_execution_config",
        "print",
        "print",
        "config.validate_config",
        "print",
        "logger.error",
        "config.get_complexity_threshold",
        "config.is_research_enabled",
        "config.should_auto_expand_complex",
        "config.get_complexity_threshold",
        "config.is_research_enabled"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/examples/basic_task_master.py:configuration_example"
    },
    {
      "type": "function",
      "name": "create_demo_workflow",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/examples/observability_demo.py",
      "line_number": 35,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u6f14\u793a\u7528\u7684\u5de5\u4f5c\u6d41\u5f15\u64ce",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Mock",
        "Mock",
        "Mock",
        "Result",
        "CognitiveWorkflowEngine"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/examples/observability_demo.py:create_demo_workflow"
    },
    {
      "type": "function",
      "name": "demo_dynamic_task_addition",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/examples/observability_demo.py",
      "line_number": 91,
      "complexity": 1,
      "docstring": "\u6f14\u793a\u52a8\u6001\u4efb\u52a1\u6dfb\u52a0\u7684\u5b8c\u6574\u65e5\u5fd7\u6d41\u7a0b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "create_demo_workflow",
        "CognitiveTask",
        "GlobalState",
        "engine.global_state.set_llm",
        "engine.global_state.set_original_goal",
        "print",
        "print",
        "print",
        "Result",
        "print",
        "print",
        "print",
        "engine.decider.plan_modification_decision",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "engine._apply_plan_modification",
        "print",
        "print",
        "print",
        "print",
        "enumerate",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/examples/observability_demo.py:demo_dynamic_task_addition"
    },
    {
      "type": "function",
      "name": "demo_error_scenarios",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/examples/observability_demo.py",
      "line_number": 177,
      "complexity": 1,
      "docstring": "\u6f14\u793a\u9519\u8bef\u573a\u666f\u4e0b\u7684\u65e5\u5fd7\u8bb0\u5f55",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "create_demo_workflow",
        "print",
        "GlobalState",
        "engine._add_dynamic_tasks",
        "print",
        "print",
        "print",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/examples/observability_demo.py:demo_error_scenarios"
    },
    {
      "type": "function",
      "name": "test_uuid_removal",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_uuid_removal.py",
      "line_number": 14,
      "complexity": 1,
      "docstring": "Test that entities can be created without automatic UUID/timestamp generation",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "ProductionRule",
        "print",
        "RuleExecution",
        "print",
        "GlobalState",
        "print",
        "WorkflowResult",
        "print",
        "rule.to_dict",
        "state.to_dict",
        "result.to_dict",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_uuid_removal.py:test_uuid_removal"
    },
    {
      "type": "class",
      "name": "TestCognitiveWorkflowComponents",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_workflow.py",
      "line_number": 38,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u8ba4\u77e5\u5de5\u4f5c\u6d41\u6838\u5fc3\u7ec4\u4ef6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_cognitive_task_creation",
        "test_global_state_management",
        "test_state_condition_checker",
        "test_cognitive_planner",
        "test_cognitive_executor",
        "test_cognitive_decider"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_workflow.py:TestCognitiveWorkflowComponents"
    },
    {
      "type": "class",
      "name": "TestCognitiveWorkflowEngine",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_workflow.py",
      "line_number": 200,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u8ba4\u77e5\u5de5\u4f5c\u6d41\u5f15\u64ce",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_workflow_engine_initialization",
        "test_workflow_initialization"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_workflow.py:TestCognitiveWorkflowEngine"
    },
    {
      "type": "class",
      "name": "TestCognitiveWorkflowAdapter",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_workflow.py",
      "line_number": 248,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u8ba4\u77e5\u5de5\u4f5c\u6d41\u9002\u914d\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_adapter_initialization",
        "test_mode_switching",
        "test_mode_info"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_workflow.py:TestCognitiveWorkflowAdapter"
    },
    {
      "type": "function",
      "name": "run_comprehensive_test",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_workflow.py",
      "line_number": 300,
      "complexity": 1,
      "docstring": "\u8fd0\u884c\u7efc\u5408\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "unittest.TestSuite",
        "test_suite.addTest",
        "test_suite.addTest",
        "test_suite.addTest",
        "unittest.TextTestRunner",
        "runner.run",
        "print",
        "result.wasSuccessful",
        "result.wasSuccessful",
        "unittest.makeSuite",
        "unittest.makeSuite",
        "unittest.makeSuite",
        "print",
        "print",
        "print",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_workflow.py:run_comprehensive_test"
    },
    {
      "type": "function",
      "name": "test_key_concepts",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_workflow.py",
      "line_number": 326,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6838\u5fc3\u6982\u5ff5\u9a8c\u8bc1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "CognitiveTask",
        "print",
        "print",
        "GlobalState",
        "state.update_state",
        "state.update_state",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_workflow.py:test_key_concepts"
    },
    {
      "type": "function",
      "name": "setUp",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_workflow.py",
      "line_number": 251,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u524d\u51c6\u5907",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Mock",
        "Mock",
        "RegisteredAgent"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_workflow.py:setUp"
    },
    {
      "type": "function",
      "name": "test_cognitive_task_creation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_workflow.py",
      "line_number": 49,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u8ba4\u77e5\u4efb\u52a1\u521b\u5efa",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "CognitiveTask",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "task.to_dict",
        "self.assertIn",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_workflow.py:test_cognitive_task_creation"
    },
    {
      "type": "function",
      "name": "test_global_state_management",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_workflow.py",
      "line_number": 71,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5168\u5c40\u72b6\u6001\u7ba1\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "GlobalState",
        "state.update_state",
        "self.assertEqual",
        "self.assertEqual",
        "state.get_recent_history",
        "self.assertEqual",
        "state.get_state_summary",
        "self.assertIn",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_workflow.py:test_global_state_management"
    },
    {
      "type": "function",
      "name": "test_state_condition_checker",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_workflow.py",
      "line_number": 88,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u72b6\u6001\u6ee1\u8db3\u6027\u68c0\u67e5\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "StateConditionChecker",
        "GlobalState",
        "Mock",
        "checker.check_precondition_satisfied",
        "self.assertTrue",
        "self.assertEqual",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_workflow.py:test_state_condition_checker"
    },
    {
      "type": "function",
      "name": "test_cognitive_planner",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_workflow.py",
      "line_number": 107,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u8ba4\u77e5\u89c4\u5212\u8005",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "CognitivePlanner",
        "Mock",
        "planner.generate_task_list",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "Mock",
        "Mock",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_workflow.py:test_cognitive_planner"
    },
    {
      "type": "function",
      "name": "test_cognitive_executor",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_workflow.py",
      "line_number": 140,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u8ba4\u77e5\u6267\u884c\u8005",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "CognitiveExecutor",
        "CognitiveTask",
        "Result",
        "GlobalState",
        "executor.execute_task",
        "self.assertTrue",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_workflow.py:test_cognitive_executor"
    },
    {
      "type": "function",
      "name": "test_cognitive_decider",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_workflow.py",
      "line_number": 167,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u8ba4\u77e5\u51b3\u7b56\u8005",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "StateConditionChecker",
        "CognitivePlanner",
        "CognitiveDecider",
        "CognitiveTask",
        "CognitiveTask",
        "GlobalState",
        "Mock",
        "decider.find_executable_tasks",
        "self.assertEqual",
        "self.assertEqual",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_workflow.py:test_cognitive_decider"
    },
    {
      "type": "function",
      "name": "test_workflow_engine_initialization",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_workflow.py",
      "line_number": 211,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5de5\u4f5c\u6d41\u5f15\u64ce\u521d\u59cb\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "CognitiveWorkflowEngine",
        "self.assertIsNotNone",
        "self.assertIsNotNone",
        "self.assertIsNotNone",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_workflow.py:test_workflow_engine_initialization"
    },
    {
      "type": "function",
      "name": "test_workflow_initialization",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_workflow.py",
      "line_number": 224,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5de5\u4f5c\u6d41\u521d\u59cb\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "CognitiveWorkflowEngine",
        "Mock",
        "engine._initialize_workflow",
        "self.assertEqual",
        "self.assertIn",
        "CognitiveTask",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_workflow.py:test_workflow_initialization"
    },
    {
      "type": "function",
      "name": "test_adapter_initialization",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_workflow.py",
      "line_number": 259,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u9002\u914d\u5668\u521d\u59cb\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "CognitiveMultiStepAgent",
        "self.assertIsNotNone",
        "self.assertTrue"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_workflow.py:test_adapter_initialization"
    },
    {
      "type": "function",
      "name": "test_mode_switching",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_workflow.py",
      "line_number": 270,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6a21\u5f0f\u5207\u6362",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "CognitiveMultiStepAgent",
        "adapter.switch_to_cognitive_mode",
        "self.assertTrue",
        "self.assertTrue",
        "adapter.switch_to_traditional_mode",
        "self.assertFalse"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_workflow.py:test_mode_switching"
    },
    {
      "type": "function",
      "name": "test_mode_info",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_workflow.py",
      "line_number": 287,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6a21\u5f0f\u4fe1\u606f\u83b7\u53d6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "CognitiveMultiStepAgent",
        "adapter.get_mode_info",
        "self.assertIn",
        "self.assertIn",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_workflow.py:test_mode_info"
    },
    {
      "type": "function",
      "name": "test_direct_rule_generation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_system_capability_quick.py",
      "line_number": 16,
      "complexity": 1,
      "docstring": "\u76f4\u63a5\u6d4b\u8bd5\u89c4\u5219\u751f\u6210\u670d\u52a1\u4ee5\u89e6\u53d1\u9519\u8bef",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "LanguageModelService",
        "RuleGenerationService",
        "AgentRegistry",
        "AgentCapability",
        "agent_registry.register_capability",
        "print",
        "agent_registry.list_all_capabilities",
        "print",
        "print",
        "print",
        "rule_gen_service.generate_recovery_rules",
        "print",
        "print",
        "print",
        "print",
        "print",
        "len",
        "agent_registry.get_capability",
        "print",
        "len",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_system_capability_quick.py:test_direct_rule_generation"
    },
    {
      "type": "function",
      "name": "main",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_system_capability_quick.py",
      "line_number": 81,
      "complexity": 1,
      "docstring": "\u4e3b\u51fd\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "test_direct_rule_generation",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "traceback.print_exc"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_system_capability_quick.py:main"
    },
    {
      "type": "function",
      "name": "test_rule_generation_failure",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_rule_generation_failure.py",
      "line_number": 17,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u89c4\u5219\u751f\u6210\u5931\u8d25\u65f6\u662f\u5426\u6b63\u786e\u629b\u51fa\u5f02\u5e38",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "Mock",
        "Mock",
        "LanguageModelService",
        "RuleGenerationService",
        "AgentRegistry",
        "AgentCapability",
        "agent_registry.register_capability",
        "print",
        "print",
        "print",
        "print",
        "print",
        "rule_generation_service.generate_rule_set",
        "print",
        "rule_generation_service._generate_initial_rules",
        "print",
        "rule_generation_service._create_fallback_rule_set",
        "print",
        "print",
        "print",
        "print",
        "str",
        "str",
        "str",
        "type",
        "type",
        "type"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_rule_generation_failure.py:test_rule_generation_failure"
    },
    {
      "type": "function",
      "name": "test_method_not_exists",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_rule_generation_failure.py",
      "line_number": 74,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5 _create_basic_rules \u65b9\u6cd5\u662f\u5426\u5df2\u88ab\u5220\u9664",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "Mock",
        "LanguageModelService",
        "RuleGenerationService",
        "hasattr",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_rule_generation_failure.py:test_method_not_exists"
    },
    {
      "type": "function",
      "name": "create_mock_agents",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/demo_cognitive_workflow.py",
      "line_number": 32,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u6a21\u62df\u667a\u80fd\u4f53\u7528\u4e8e\u6f14\u793a",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Agent",
        "Agent",
        "Agent"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/demo_cognitive_workflow.py:create_mock_agents"
    },
    {
      "type": "function",
      "name": "demo",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/demo_cognitive_workflow.py",
      "line_number": 65,
      "complexity": 1,
      "docstring": "\u6f14\u793a\u8ba4\u77e5\u5de5\u4f5c\u6d41\u7cfb\u7edf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "create_mock_agents",
        "CognitiveWorkflowEngine",
        "print",
        "print",
        "print",
        "print",
        "workflow_engine.execute_cognitive_workflow",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "workflow_engine.get_task_status_report",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/demo_cognitive_workflow.py:demo"
    },
    {
      "type": "function",
      "name": "demo_comparison_with_traditional",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/demo_cognitive_workflow.py",
      "line_number": 126,
      "complexity": 1,
      "docstring": "\u5bf9\u6bd4\u6f14\u793a\uff1a\u8ba4\u77e5\u5de5\u4f5c\u6d41 vs \u4f20\u7edf\u5de5\u4f5c\u6d41",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/demo_cognitive_workflow.py:demo_comparison_with_traditional"
    },
    {
      "type": "function",
      "name": "demo_key_concepts",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/demo_cognitive_workflow.py",
      "line_number": 153,
      "complexity": 1,
      "docstring": "\u6f14\u793a\u8ba4\u77e5\u5de5\u4f5c\u6d41\u7684\u6838\u5fc3\u6982\u5ff5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/demo_cognitive_workflow.py:demo_key_concepts"
    },
    {
      "type": "function",
      "name": "demo_state_satisfiability",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/demo_cognitive_workflow.py",
      "line_number": 199,
      "complexity": 1,
      "docstring": "\u6f14\u793a\u72b6\u6001\u6ee1\u8db3\u6027\u68c0\u67e5\u673a\u5236",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "GlobalState",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/demo_cognitive_workflow.py:demo_state_satisfiability"
    },
    {
      "type": "function",
      "name": "main",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/demo_cognitive_workflow.py",
      "line_number": 243,
      "complexity": 1,
      "docstring": "\u4e3b\u6f14\u793a\u51fd\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "demo",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/demo_cognitive_workflow.py:main"
    },
    {
      "type": "class",
      "name": "TestPhase3Integration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_phase3_integration.py",
      "line_number": 46,
      "complexity": 1,
      "docstring": "Phase 3 \u96c6\u6210\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "_generate_test_effectiveness_history",
        "test_01_effectiveness_tracking_integration",
        "test_02_pattern_recognition_integration",
        "test_03_parameter_optimization_integration",
        "test_04_reinforcement_learning_integration",
        "test_05_predictive_optimization_integration",
        "test_06_hyperparameter_optimization_integration",
        "test_07_performance_benchmark_integration",
        "test_08_full_system_integration",
        "test_09_performance_validation",
        "test_10_system_robustness"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_phase3_integration.py:TestPhase3Integration"
    },
    {
      "type": "function",
      "name": "run_integration_tests",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_phase3_integration.py",
      "line_number": 813,
      "complexity": 1,
      "docstring": "\u8fd0\u884c\u96c6\u6210\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "unittest.TestLoader().loadTestsFromTestCase",
        "unittest.TextTestRunner",
        "runner.run",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "result.wasSuccessful",
        "print",
        "print",
        "print",
        "print",
        "print",
        "unittest.TestLoader",
        "print",
        "print",
        "len",
        "len",
        "len",
        "len",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_phase3_integration.py:run_integration_tests"
    },
    {
      "type": "function",
      "name": "setUp",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_phase3_integration.py",
      "line_number": 49,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u8bbe\u7f6e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "StrategyEffectivenessTracker",
        "DynamicParameterOptimizer",
        "AdvancedPatternRecognitionEngine",
        "PredictiveOptimizationFramework",
        "ReinforcementLearningOptimizer",
        "AdaptiveHyperparameterOptimizer",
        "IntelligentPerformanceBenchmark",
        "self._generate_test_effectiveness_history",
        "print",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_phase3_integration.py:setUp"
    },
    {
      "type": "function",
      "name": "_generate_test_effectiveness_history",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_phase3_integration.py",
      "line_number": 79,
      "complexity": 1,
      "docstring": "\u751f\u6210\u6d4b\u8bd5\u7528\u7684\u7b56\u7565\u6548\u679c\u5386\u53f2",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "list",
        "range",
        "datetime.now",
        "timedelta",
        "SituationScore",
        "max",
        "int",
        "ExecutionMetrics",
        "int",
        "ExecutionMetrics",
        "StrategyEffectiveness",
        "history.append",
        "min",
        "max",
        "len",
        "max",
        "min",
        "max",
        "timedelta"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_phase3_integration.py:_generate_test_effectiveness_history"
    },
    {
      "type": "function",
      "name": "test_01_effectiveness_tracking_integration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_phase3_integration.py",
      "line_number": 152,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u7b56\u7565\u6548\u679c\u8ddf\u8e2a\u96c6\u6210",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "self.effectiveness_tracker.export_performance_data",
        "print",
        "print",
        "self.assertEqual",
        "self.assertGreater",
        "export_data.get",
        "print",
        "self.assertIsInstance",
        "self.assertGreater",
        "print",
        "self.effectiveness_tracker.record_strategy_application",
        "len",
        "len",
        "len",
        "len",
        "export_data['strategy_performance'].values",
        "export_data['strategy_performance'].values"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_phase3_integration.py:test_01_effectiveness_tracking_integration"
    },
    {
      "type": "function",
      "name": "test_02_pattern_recognition_integration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_phase3_integration.py",
      "line_number": 183,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6a21\u5f0f\u8bc6\u522b\u96c6\u6210",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "self.pattern_engine.analyze_patterns",
        "print",
        "print",
        "print",
        "self.assertGreater",
        "patterns.items",
        "print",
        "print",
        "print",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_phase3_integration.py:test_02_pattern_recognition_integration"
    },
    {
      "type": "function",
      "name": "test_03_parameter_optimization_integration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_phase3_integration.py",
      "line_number": 212,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u52a8\u6001\u53c2\u6570\u4f18\u5316\u96c6\u6210",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "self.parameter_optimizer.optimize_parameters",
        "print",
        "print",
        "self.assertIsInstance",
        "self.assertEqual",
        "self.parameter_optimizer.get_optimization_summary",
        "print",
        "print",
        "len",
        "len",
        "optimization_summary.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_phase3_integration.py:test_03_parameter_optimization_integration"
    },
    {
      "type": "function",
      "name": "test_04_reinforcement_learning_integration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_phase3_integration.py",
      "line_number": 248,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5f3a\u5316\u5b66\u4e60\u96c6\u6210",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "ReinforcementLearningOptimizer",
        "enumerate",
        "rl_optimizer.get_learning_statistics",
        "print",
        "print",
        "print",
        "self.assertGreater",
        "print",
        "rl_optimizer.encode_state",
        "rl_optimizer.choose_action",
        "rl_optimizer.calculate_reward",
        "rl_optimizer.learn_from_experience",
        "rl_optimizer.encode_state",
        "rl_optimizer.get_policy_recommendations",
        "print",
        "self.test_history[-(21 - i)].applied_context.get_overall_health",
        "rl_optimizer.encode_state",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_phase3_integration.py:test_04_reinforcement_learning_integration"
    },
    {
      "type": "function",
      "name": "test_05_predictive_optimization_integration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_phase3_integration.py",
      "line_number": 319,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u9884\u6d4b\u6027\u4f18\u5316\u6846\u67b6\u96c6\u6210",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "self.predictive_framework.initialize_predictive_models",
        "self.predictive_framework.generate_system_predictions",
        "print",
        "self.predictive_framework.get_framework_status",
        "print",
        "print",
        "self.assertGreater",
        "print",
        "print",
        "print",
        "self.predictive_framework.create_optimization_plans",
        "print",
        "len",
        "print",
        "print",
        "len",
        "len",
        "framework_status.get('framework_health', {}).get",
        "pred.predicted_situation.get_overall_health",
        "len",
        "framework_status.get",
        "len",
        "framework_status.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_phase3_integration.py:test_05_predictive_optimization_integration"
    },
    {
      "type": "function",
      "name": "test_06_hyperparameter_optimization_integration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_phase3_integration.py",
      "line_number": 368,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u81ea\u9002\u5e94\u8d85\u53c2\u6570\u4f18\u5316\u96c6\u6210",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "self.hyperparameter_optimizer.create_performance_objective",
        "self.hyperparameter_optimizer.suggest_parameters",
        "print",
        "self.hyperparameter_optimizer.evaluate_parameters",
        "print",
        "self.hyperparameter_optimizer.optimize",
        "print",
        "print",
        "print",
        "self.hyperparameter_optimizer.get_parameter_importance",
        "self.assertGreater",
        "self.assertIsInstance",
        "print",
        "print",
        "max",
        "param_importance.items"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_phase3_integration.py:test_06_hyperparameter_optimization_integration"
    },
    {
      "type": "function",
      "name": "test_07_performance_benchmark_integration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_phase3_integration.py",
      "line_number": 406,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u667a\u80fd\u6027\u80fd\u57fa\u51c6\u6d4b\u8bd5\u96c6\u6210",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "self.benchmark_system.run_benchmark",
        "print",
        "print",
        "print",
        "print",
        "metrics.items",
        "self.benchmark_system.get_benchmark_status",
        "print",
        "print",
        "self.assertGreater",
        "self.assertGreater",
        "print",
        "time.sleep",
        "context.get_overall_health",
        "ExecutionMetrics",
        "ExecutionMetrics",
        "StrategyEffectiveness",
        "len",
        "print",
        "parameters.get",
        "max",
        "min",
        "datetime.now",
        "len",
        "len",
        "max",
        "max",
        "sum",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_phase3_integration.py:test_07_performance_benchmark_integration"
    },
    {
      "type": "function",
      "name": "test_08_full_system_integration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_phase3_integration.py",
      "line_number": 486,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5b8c\u6574\u7cfb\u7edf\u96c6\u6210",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "self.predictive_framework.initialize_predictive_models",
        "print",
        "self.pattern_engine.analyze_patterns",
        "self.effectiveness_tracker.export_performance_data",
        "export_data.get",
        "print",
        "print",
        "print",
        "self.parameter_optimizer.optimize_parameters",
        "self.predictive_framework.generate_system_predictions",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "self.assertEqual",
        "self.assertGreater",
        "self.assertGreaterEqual",
        "print",
        "print",
        "self.effectiveness_tracker.record_strategy_application",
        "self.predictive_framework.create_optimization_plans",
        "self.rl_optimizer.encode_state",
        "self.rl_optimizer.choose_action",
        "self.rl_optimizer.get_policy_recommendations",
        "print",
        "datetime.now().isoformat",
        "open",
        "json.dump",
        "len",
        "len",
        "self.parameter_optimizer.get_optimization_summary().get",
        "len",
        "len",
        "len",
        "self.predictive_framework.get_framework_status().get('framework_health', {}).get",
        "datetime.now().strftime",
        "len",
        "len",
        "datetime.now",
        "sum",
        "len",
        "self.rl_optimizer.get_learning_statistics",
        "self.rl_optimizer.get_learning_statistics",
        "len",
        "self.parameter_optimizer.get_optimization_summary",
        "self.predictive_framework.get_framework_status().get",
        "datetime.now",
        "optimized_params.items",
        "current_params.get",
        "self.predictive_framework.get_framework_status"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_phase3_integration.py:test_08_full_system_integration"
    },
    {
      "type": "function",
      "name": "test_09_performance_validation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_phase3_integration.py",
      "line_number": 614,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6027\u80fd\u9a8c\u8bc1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "time.time",
        "range",
        "print",
        "time.time",
        "print",
        "time.time",
        "self.pattern_engine.analyze_patterns",
        "print",
        "time.time",
        "self.parameter_optimizer.optimize_parameters",
        "print",
        "sum",
        "print",
        "print",
        "self.assertLess",
        "self.assertLess",
        "self.assertLess",
        "print",
        "datetime.now",
        "timedelta",
        "SituationScore",
        "int",
        "ExecutionMetrics",
        "min",
        "int",
        "ExecutionMetrics",
        "StrategyEffectiveness",
        "large_history.append",
        "time.time",
        "self.effectiveness_tracker.record_strategy_application",
        "time.time",
        "time.time",
        "time.time",
        "performance_results.values",
        "max",
        "max",
        "min",
        "max",
        "list",
        "timedelta",
        "len",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_phase3_integration.py:test_09_performance_validation"
    },
    {
      "type": "function",
      "name": "test_10_system_robustness",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_phase3_integration.py",
      "line_number": 725,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u7cfb\u7edf\u5065\u58ee\u6027",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "psutil.Process",
        "range",
        "print",
        "print",
        "print",
        "self.assertLess",
        "print",
        "self.pattern_engine.analyze_patterns",
        "self.assertIsInstance",
        "print",
        "SituationScore",
        "extreme_context.get_overall_health",
        "self.assertIsInstance",
        "print",
        "self.parameter_optimizer.optimize_parameters",
        "self.assertIsInstance",
        "print",
        "self.effectiveness_tracker.record_strategy_application",
        "self.fail",
        "self.fail",
        "print",
        "gc.collect",
        "process.memory_info",
        "len",
        "process.memory_info",
        "type"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_phase3_integration.py:test_10_system_robustness"
    },
    {
      "type": "function",
      "name": "mock_target_function",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_phase3_integration.py",
      "line_number": 411,
      "complexity": 1,
      "docstring": "\u6a21\u62df\u76ee\u6807\u51fd\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "context",
        "strategy",
        "parameters"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "time.sleep",
        "context.get_overall_health",
        "ExecutionMetrics",
        "ExecutionMetrics",
        "StrategyEffectiveness",
        "parameters.get",
        "max",
        "min",
        "datetime.now",
        "max"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_phase3_integration.py:mock_target_function"
    },
    {
      "type": "function",
      "name": "test_system_capability_error",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_system_capability_error.py",
      "line_number": 17,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u91cd\u73b0system\u80fd\u529b\u9519\u8bef",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "Agent",
        "print",
        "print",
        "create_production_rule_system",
        "print",
        "print",
        "print",
        "workflow_engine.execute_goal",
        "print",
        "print",
        "print",
        "len",
        "str",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_system_capability_error.py:test_system_capability_error"
    },
    {
      "type": "function",
      "name": "test_direct_rule_generation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_system_capability_error.py",
      "line_number": 71,
      "complexity": 1,
      "docstring": "\u76f4\u63a5\u6d4b\u8bd5\u89c4\u5219\u751f\u6210\u670d\u52a1\u4ee5\u89e6\u53d1\u9519\u8bef",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "LanguageModelService",
        "RuleGenerationService",
        "AgentRegistry",
        "AgentCapability",
        "agent_registry.register_capability",
        "print",
        "agent_registry.list_all_capabilities",
        "print",
        "print",
        "print",
        "rule_gen_service.generate_recovery_rules",
        "print",
        "print",
        "print",
        "print",
        "print",
        "len",
        "agent_registry.get_capability",
        "print",
        "len",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_system_capability_error.py:test_direct_rule_generation"
    },
    {
      "type": "function",
      "name": "main",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_system_capability_error.py",
      "line_number": 136,
      "complexity": 1,
      "docstring": "\u4e3b\u51fd\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "test_system_capability_error",
        "test_direct_rule_generation",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "traceback.print_exc"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_system_capability_error.py:main"
    },
    {
      "type": "class",
      "name": "TestCognitiveManager",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_manager.py",
      "line_number": 35,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5 CognitiveManager \u6838\u5fc3\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_manager_initialization",
        "test_generate_initial_tasks",
        "test_generate_recovery_tasks",
        "test_find_executable_tasks",
        "test_select_next_task",
        "test_evaluate_workflow_status",
        "test_analyze_modification_needs",
        "test_generate_dynamic_tasks",
        "test_build_agent_info_string",
        "test_validate_new_task_data",
        "test_record_decision"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_manager.py:TestCognitiveManager"
    },
    {
      "type": "function",
      "name": "setUp",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_manager.py",
      "line_number": 38,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u524d\u51c6\u5907",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Mock",
        "Mock",
        "CognitiveManager",
        "GlobalState",
        "Mock",
        "Mock",
        "Mock"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_manager.py:setUp"
    },
    {
      "type": "function",
      "name": "test_manager_initialization",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_manager.py",
      "line_number": 59,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u7ba1\u7406\u8005\u521d\u59cb\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.assertIsNotNone",
        "self.assertIsNotNone",
        "self.assertIsNotNone",
        "self.assertEqual",
        "self.assertEqual",
        "self.manager.get_management_statistics",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_manager.py:test_manager_initialization"
    },
    {
      "type": "function",
      "name": "test_generate_initial_tasks",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_manager.py",
      "line_number": 74,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u521d\u59cb\u4efb\u52a1\u751f\u6210",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Mock",
        "self.manager.generate_initial_tasks",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.manager.get_management_statistics",
        "self.assertEqual",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_manager.py:test_generate_initial_tasks"
    },
    {
      "type": "function",
      "name": "test_generate_recovery_tasks",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_manager.py",
      "line_number": 109,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u4fee\u590d\u4efb\u52a1\u751f\u6210",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "CognitiveTask",
        "self.manager.generate_recovery_tasks",
        "self.assertEqual",
        "self.assertTrue",
        "self.assertIn",
        "self.manager.get_management_statistics",
        "self.assertEqual",
        "len",
        "recovery_tasks[0].id.startswith"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_manager.py:test_generate_recovery_tasks"
    },
    {
      "type": "function",
      "name": "test_find_executable_tasks",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_manager.py",
      "line_number": 137,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u53ef\u6267\u884c\u4efb\u52a1\u67e5\u627e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.manager.find_executable_tasks",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "CognitiveTask",
        "CognitiveTask",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_manager.py:test_find_executable_tasks"
    },
    {
      "type": "function",
      "name": "test_select_next_task",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_manager.py",
      "line_number": 169,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u4e0b\u4e00\u4efb\u52a1\u9009\u62e9",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "CognitiveTask",
        "self.manager.select_next_task",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_manager.py:test_select_next_task"
    },
    {
      "type": "function",
      "name": "test_evaluate_workflow_status",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_manager.py",
      "line_number": 188,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5de5\u4f5c\u6d41\u72b6\u6001\u8bc4\u4f30",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Mock",
        "self.manager.evaluate_workflow_status",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "CognitiveTask",
        "CognitiveTask"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_manager.py:test_evaluate_workflow_status"
    },
    {
      "type": "function",
      "name": "test_analyze_modification_needs",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_manager.py",
      "line_number": 220,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u4fee\u6b63\u9700\u6c42\u5206\u6790",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Mock",
        "self.manager.analyze_modification_needs",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertIn",
        "self.assertEqual",
        "CognitiveTask",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_manager.py:test_analyze_modification_needs"
    },
    {
      "type": "function",
      "name": "test_generate_dynamic_tasks",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_manager.py",
      "line_number": 256,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u52a8\u6001\u4efb\u52a1\u751f\u6210",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.manager.generate_dynamic_tasks",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.manager.get_management_statistics",
        "self.assertEqual",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_manager.py:test_generate_dynamic_tasks"
    },
    {
      "type": "function",
      "name": "test_build_agent_info_string",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_manager.py",
      "line_number": 289,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u667a\u80fd\u4f53\u4fe1\u606f\u5b57\u7b26\u4e32\u6784\u5efa",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.manager._build_agent_info_string",
        "self.assertIn",
        "self.assertIn",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_manager.py:test_build_agent_info_string"
    },
    {
      "type": "function",
      "name": "test_validate_new_task_data",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_manager.py",
      "line_number": 303,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u65b0\u4efb\u52a1\u6570\u636e\u9a8c\u8bc1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.manager._validate_new_task_data",
        "self.assertTrue",
        "self.assertEqual",
        "self.manager._validate_new_task_data",
        "self.assertFalse",
        "self.assertTrue",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_manager.py:test_validate_new_task_data"
    },
    {
      "type": "function",
      "name": "test_record_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_manager.py",
      "line_number": 328,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u51b3\u7b56\u8bb0\u5f55",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.manager._record_decision",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertIn",
        "self.manager.get_management_statistics",
        "self.assertEqual",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_cognitive_manager.py:test_record_decision"
    },
    {
      "type": "function",
      "name": "demo_unified_update_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/demo_unified_update_state.py",
      "line_number": 16,
      "complexity": 1,
      "docstring": "\u6f14\u793a\u7edf\u4e00\u7684update_state\u65b9\u6cd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "GlobalState",
        "state.set_original_goal",
        "print",
        "print",
        "print",
        "print",
        "state.update_state",
        "print",
        "print",
        "print",
        "print",
        "print",
        "state.update_state",
        "print",
        "print",
        "print",
        "print",
        "print",
        "CognitiveTask",
        "Result",
        "state.update_state",
        "print",
        "print",
        "print",
        "print",
        "print",
        "state.update_state",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "enumerate",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "state.update_state",
        "state.get_recent_history",
        "print",
        "state.get_state_summary",
        "print",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/demo_unified_update_state.py:demo_unified_update_state"
    },
    {
      "type": "function",
      "name": "demo_api_comparison",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/demo_unified_update_state.py",
      "line_number": 138,
      "complexity": 1,
      "docstring": "\u5bf9\u6bd4\u65b0\u65e7API\u7684\u4f7f\u7528\u65b9\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "GlobalState",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/demo_unified_update_state.py:demo_api_comparison"
    },
    {
      "type": "function",
      "name": "test_llm_validation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_llm_validation.py",
      "line_number": 18,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u8bed\u8a00\u6a21\u578b\u9a8c\u8bc1\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "Mock",
        "Mock",
        "LanguageModelService",
        "print",
        "Mock",
        "ExecutionRepositoryImpl",
        "RuleExecutionService",
        "print",
        "WorkflowResult",
        "rule_execution_service._validate_natural_language_result",
        "print",
        "rule_execution_service._fallback_keyword_validation",
        "print",
        "print",
        "print",
        "print",
        "traceback.print_exc"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_llm_validation.py:test_llm_validation"
    },
    {
      "type": "function",
      "name": "test_validation_methods_comparison",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_llm_validation.py",
      "line_number": 82,
      "complexity": 1,
      "docstring": "\u6bd4\u8f83\u65b0\u65e7\u9a8c\u8bc1\u65b9\u6cd5\u7684\u5dee\u5f02",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "enumerate",
        "print",
        "print",
        "print",
        "print",
        "case['expected'].lower().split",
        "case['result'].lower",
        "sum",
        "print",
        "print",
        "print",
        "case['expected'].lower",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_llm_validation.py:test_validation_methods_comparison"
    },
    {
      "type": "function",
      "name": "test_agent_registry_issue",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/debug_agent_issue.py",
      "line_number": 19,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5Agent\u6ce8\u518c\u8868\u95ee\u9898",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "Agent",
        "Agent",
        "IntelligentAgentWrapper",
        "IntelligentAgentWrapper",
        "print",
        "create_production_rule_system",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "external_agent_service.get_or_create_agent",
        "print",
        "coder_agent_service.get_or_create_agent",
        "print",
        "coder_agent_service.get_or_create_agent",
        "print",
        "print",
        "print",
        "print",
        "list",
        "list",
        "list",
        "list",
        "workflow_engine.agent_registry.agents.keys",
        "external_agent_service.agent_registry.agents.keys",
        "coder_agent_service.agent_registry.agents.keys",
        "tester_agent_service.agent_registry.agents.keys",
        "type",
        "type",
        "type"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/debug_agent_issue.py:test_agent_registry_issue"
    },
    {
      "type": "function",
      "name": "create_test_rules",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_adaptive_replacement.py",
      "line_number": 23,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u6d4b\u8bd5\u89c4\u5219",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "ProductionRule",
        "ProductionRule",
        "ProductionRule",
        "ProductionRule",
        "ProductionRule"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_adaptive_replacement.py:create_test_rules"
    },
    {
      "type": "function",
      "name": "create_test_global_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_adaptive_replacement.py",
      "line_number": 83,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u6d4b\u8bd5\u5168\u5c40\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "GlobalState"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_adaptive_replacement.py:create_test_global_state"
    },
    {
      "type": "function",
      "name": "test_situation_assessment",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_adaptive_replacement.py",
      "line_number": 103,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u60c5\u5883\u8bc4\u4f30\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "LanguageModelService",
        "AdaptiveReplacementService",
        "create_test_rules",
        "create_test_global_state",
        "adaptive_service._assess_current_situation",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "situation_score.get_overall_health",
        "situation_score.get_critical_issues"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_adaptive_replacement.py:test_situation_assessment"
    },
    {
      "type": "function",
      "name": "test_strategy_selection",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_adaptive_replacement.py",
      "line_number": 135,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u7b56\u7565\u9009\u62e9\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "situation_score"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "LanguageModelService",
        "AdaptiveReplacementService",
        "adaptive_service._select_optimal_strategy",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "strategy.get_strategy_description",
        "strategy.is_aggressive_strategy"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_adaptive_replacement.py:test_strategy_selection"
    },
    {
      "type": "function",
      "name": "test_adaptive_replacement",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_adaptive_replacement.py",
      "line_number": 162,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5b8c\u6574\u7684\u81ea\u9002\u5e94\u66ff\u6362\u6d41\u7a0b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "LanguageModelService",
        "AdaptiveReplacementService",
        "create_test_rules",
        "create_test_global_state",
        "print",
        "print",
        "print",
        "adaptive_service.execute_adaptive_replacement",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "sum",
        "len",
        "phase_dist.get",
        "len",
        "len",
        "len",
        "len",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_adaptive_replacement.py:test_adaptive_replacement"
    },
    {
      "type": "function",
      "name": "main",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_adaptive_replacement.py",
      "line_number": 215,
      "complexity": 1,
      "docstring": "\u4e3b\u6d4b\u8bd5\u51fd\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "test_situation_assessment",
        "test_strategy_selection",
        "test_adaptive_replacement",
        "print",
        "print",
        "print",
        "traceback.print_exc"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_adaptive_replacement.py:main"
    },
    {
      "type": "function",
      "name": "test_agent_registration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_agent_registration.py",
      "line_number": 17,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5Agent\u6ce8\u518c\u8fc7\u7a0b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "Agent",
        "Agent",
        "IntelligentAgentWrapper",
        "IntelligentAgentWrapper",
        "print",
        "create_production_rule_system",
        "list",
        "print",
        "agent_registry.agents.keys",
        "agent_service.get_or_create_agent",
        "print",
        "agent_service.get_or_create_agent",
        "print",
        "print",
        "list",
        "agents.keys",
        "type",
        "type"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_agent_registration.py:test_agent_registration"
    },
    {
      "type": "function",
      "name": "test_agent_registry_association",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_agent_registry_fix.py",
      "line_number": 18,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5agent_registry\u5173\u8054\u662f\u5426\u6b63\u5e38",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "Agent",
        "print",
        "print",
        "print",
        "workflow_engine.get_default_agent_registry",
        "print",
        "default_registry.list_all_capabilities",
        "print",
        "print",
        "print",
        "create_production_rule_system",
        "print",
        "print",
        "print",
        "print",
        "print",
        "workflow_engine.execute_goal",
        "print",
        "print",
        "print",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_agent_registry_fix.py:test_agent_registry_association"
    },
    {
      "type": "function",
      "name": "test_explicit_agent_registry",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_agent_registry_fix.py",
      "line_number": 86,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u663e\u5f0f\u4f20\u9012agent_registry\u7684\u60c5\u51b5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "Agent",
        "create_production_rule_system",
        "AgentRegistry",
        "AgentCapability",
        "custom_registry.register_capability",
        "print",
        "custom_registry.list_all_capabilities",
        "print",
        "print",
        "workflow_engine.execute_goal",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_agent_registry_fix.py:test_explicit_agent_registry"
    },
    {
      "type": "function",
      "name": "main",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_agent_registry_fix.py",
      "line_number": 136,
      "complexity": 1,
      "docstring": "\u4e3b\u51fd\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "test_agent_registry_association",
        "test_explicit_agent_registry",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "traceback.print_exc"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_agent_registry_fix.py:main"
    },
    {
      "type": "function",
      "name": "get_version_info",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/__init__.py",
      "line_number": 85,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u7248\u672c\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/__init__.py:get_version_info"
    },
    {
      "type": "function",
      "name": "quick_start_guide",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/__init__.py",
      "line_number": 95,
      "complexity": 1,
      "docstring": "\u5feb\u901f\u5f00\u59cb\u6307\u5357",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/__init__.py:quick_start_guide"
    },
    {
      "type": "function",
      "name": "test_concurrent_id_generation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_concurrent_safety.py",
      "line_number": 29,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5e76\u53d1ID\u751f\u6210\u7684\u552f\u4e00\u6027",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "set",
        "threading.Lock",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "ThreadPoolExecutor",
        "range",
        "as_completed",
        "len",
        "id_generator.generate_workflow_id",
        "range",
        "future.result",
        "len",
        "id_generator.release_workflow_id",
        "print",
        "executor.submit",
        "futures.append",
        "len",
        "print",
        "generated_ids.add",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_concurrent_safety.py:test_concurrent_id_generation"
    },
    {
      "type": "function",
      "name": "test_atomic_file_operations",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_concurrent_safety.py",
      "line_number": 98,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u539f\u5b50\u6027\u6587\u4ef6\u64cd\u4f5c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "tempfile.TemporaryDirectory",
        "Path",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "ThreadPoolExecutor",
        "range",
        "time.sleep",
        "range",
        "sum",
        "sum",
        "print",
        "print",
        "len",
        "SafeFileOperations.atomic_write_json",
        "print",
        "range",
        "SafeFileOperations.safe_read_json",
        "print",
        "executor.submit",
        "write_futures.append",
        "executor.submit",
        "read_futures.append",
        "time.time",
        "write_errors.append",
        "write_errors.append",
        "file_path.exists",
        "time.sleep",
        "read_errors.append",
        "read_errors.append",
        "read_errors.append",
        "read_errors.append",
        "len",
        "len",
        "as_completed",
        "future.result",
        "as_completed",
        "future.result",
        "range"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_concurrent_safety.py:test_atomic_file_operations"
    },
    {
      "type": "function",
      "name": "test_concurrent_state_repository",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_concurrent_safety.py",
      "line_number": 206,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5e76\u53d1\u72b6\u6001\u4ed3\u50a8\u64cd\u4f5c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "tempfile.TemporaryDirectory",
        "os.path.join",
        "StateRepositoryImpl",
        "threading.Lock",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "ThreadPoolExecutor",
        "range",
        "sum",
        "ThreadPoolExecutor",
        "sum",
        "print",
        "print",
        "len",
        "id_generator.generate_workflow_id",
        "id_generator.generate_state_id",
        "GlobalState",
        "repo.save_state",
        "print",
        "repo.load_state",
        "print",
        "executor.submit",
        "save_futures.append",
        "executor.submit",
        "load_futures.append",
        "len",
        "id_generator.release_workflow_id",
        "saved_states.append",
        "save_errors.append",
        "print",
        "load_errors.append",
        "load_errors.append",
        "load_errors.append",
        "print",
        "len",
        "len",
        "len",
        "len",
        "as_completed",
        "future.result",
        "as_completed",
        "future.result",
        "list",
        "range"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_concurrent_safety.py:test_concurrent_state_repository"
    },
    {
      "type": "function",
      "name": "test_real_world_scenario",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_concurrent_safety.py",
      "line_number": 319,
      "complexity": 1,
      "docstring": "\u6a21\u62df\u771f\u5b9e\u4e16\u754c\u573a\u666f\uff1a\u591a\u4e2a\u5de5\u4f5c\u6d41\u5f15\u64ce\u540c\u65f6\u542f\u52a8\u76f8\u540c\u76ee\u6807",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "ThreadPoolExecutor",
        "range",
        "sum",
        "print",
        "len",
        "len",
        "len",
        "len",
        "id_generator.generate_workflow_id",
        "id_generator.generate_rule_set_id",
        "range",
        "range",
        "print",
        "results.append",
        "time.sleep",
        "id_generator.release_workflow_id",
        "executor.submit",
        "futures.append",
        "len",
        "len",
        "len",
        "len",
        "id_generator.generate_state_id",
        "state_ids.append",
        "id_generator.generate_execution_id",
        "execution_ids.append",
        "errors.append",
        "print",
        "len",
        "len",
        "len",
        "len",
        "len",
        "as_completed",
        "future.result"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_concurrent_safety.py:test_real_world_scenario"
    },
    {
      "type": "function",
      "name": "main",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_concurrent_safety.py",
      "line_number": 414,
      "complexity": 1,
      "docstring": "\u8fd0\u884c\u6240\u6709\u5e76\u53d1\u5b89\u5168\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "test_concurrent_id_generation",
        "test_atomic_file_operations",
        "test_concurrent_state_repository",
        "test_real_world_scenario",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "traceback.print_exc"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_concurrent_safety.py:main"
    },
    {
      "type": "function",
      "name": "generate_workflow_id",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_concurrent_safety.py",
      "line_number": 39,
      "complexity": 1,
      "docstring": "\u5728\u5355\u4e2a\u7ebf\u7a0b\u4e2d\u751f\u6210\u5de5\u4f5c\u6d41ID",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "thread_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "id_generator.generate_workflow_id",
        "print",
        "print",
        "generated_ids.add",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_concurrent_safety.py:generate_workflow_id"
    },
    {
      "type": "function",
      "name": "simulate_workflow_engine",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_concurrent_safety.py",
      "line_number": 331,
      "complexity": 1,
      "docstring": "\u6a21\u62df\u5355\u4e2a\u5de5\u4f5c\u6d41\u5f15\u64ce\u7684\u542f\u52a8",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "engine_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "id_generator.generate_workflow_id",
        "id_generator.generate_rule_set_id",
        "range",
        "range",
        "print",
        "results.append",
        "time.sleep",
        "id_generator.release_workflow_id",
        "id_generator.generate_state_id",
        "state_ids.append",
        "id_generator.generate_execution_id",
        "execution_ids.append",
        "errors.append",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_concurrent_safety.py:simulate_workflow_engine"
    },
    {
      "type": "function",
      "name": "concurrent_write",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_concurrent_safety.py",
      "line_number": 110,
      "complexity": 1,
      "docstring": "\u5e76\u53d1\u5199\u5165\u540c\u4e00\u4e2a\u6587\u4ef6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "thread_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "SafeFileOperations.atomic_write_json",
        "print",
        "time.time",
        "write_errors.append",
        "write_errors.append",
        "range"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_concurrent_safety.py:concurrent_write"
    },
    {
      "type": "function",
      "name": "concurrent_read",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_concurrent_safety.py",
      "line_number": 133,
      "complexity": 1,
      "docstring": "\u5e76\u53d1\u8bfb\u53d6\u6587\u4ef6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "thread_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "range",
        "SafeFileOperations.safe_read_json",
        "print",
        "file_path.exists",
        "time.sleep",
        "read_errors.append",
        "read_errors.append",
        "read_errors.append",
        "read_errors.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_concurrent_safety.py:concurrent_read"
    },
    {
      "type": "function",
      "name": "concurrent_save_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_concurrent_safety.py",
      "line_number": 222,
      "complexity": 1,
      "docstring": "\u5e76\u53d1\u4fdd\u5b58\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "thread_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "id_generator.generate_workflow_id",
        "id_generator.generate_state_id",
        "GlobalState",
        "repo.save_state",
        "print",
        "saved_states.append",
        "save_errors.append",
        "print",
        "list",
        "range"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_concurrent_safety.py:concurrent_save_state"
    },
    {
      "type": "function",
      "name": "concurrent_load_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_concurrent_safety.py",
      "line_number": 251,
      "complexity": 1,
      "docstring": "\u5e76\u53d1\u52a0\u8f7d\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "state_info"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "repo.load_state",
        "print",
        "load_errors.append",
        "load_errors.append",
        "load_errors.append",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_concurrent_safety.py:concurrent_load_state"
    },
    {
      "type": "class",
      "name": "MockLLMService",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_loop_prevention.py",
      "line_number": 176,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "generate_natural_language_response"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_loop_prevention.py:MockLLMService"
    },
    {
      "type": "class",
      "name": "MockAgent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_loop_prevention.py",
      "line_number": 180,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_loop_prevention.py:MockAgent"
    },
    {
      "type": "class",
      "name": "MockAgentRegistry",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_loop_prevention.py",
      "line_number": 185,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_loop_prevention.py:MockAgentRegistry"
    },
    {
      "type": "function",
      "name": "test_workflow_state_loop_detection",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_loop_prevention.py",
      "line_number": 24,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5WorkflowState\u7684\u5faa\u73af\u68c0\u6d4b\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "WorkflowState",
        "print",
        "print",
        "print",
        "print",
        "range",
        "print",
        "workflow_state.detect_potential_loop",
        "print",
        "workflow_state.check_state_cycle",
        "workflow_state.check_state_cycle",
        "workflow_state.check_state_cycle",
        "print",
        "print",
        "print",
        "print",
        "range",
        "workflow_state.get_available_rules",
        "print",
        "print",
        "print",
        "workflow_state.detect_potential_loop",
        "workflow_state.mark_rule_executed",
        "print",
        "ProductionRule",
        "ProductionRule",
        "ProductionRule",
        "workflow_state.mark_rule_executed",
        "workflow_state.detect_potential_loop",
        "workflow_state.check_state_cycle",
        "workflow_state.detect_potential_loop"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_loop_prevention.py:test_workflow_state_loop_detection"
    },
    {
      "type": "function",
      "name": "test_advanced_loop_detection",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_loop_prevention.py",
      "line_number": 94,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u9ad8\u7ea7\u5faa\u73af\u68c0\u6d4b\u673a\u5236",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "MockLLMService",
        "RuleGenerationService",
        "GlobalState",
        "GlobalState",
        "RuleSet",
        "print",
        "rule_gen_service._advanced_loop_detection",
        "print",
        "print",
        "print",
        "rule_gen_service._advanced_loop_detection",
        "print",
        "print",
        "print",
        "rule_gen_service._implement_loop_prevention_strategy",
        "print",
        "print",
        "print",
        "print",
        "print",
        "MatchingResult"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_loop_prevention.py:test_advanced_loop_detection"
    },
    {
      "type": "function",
      "name": "test_enhanced_error_recovery",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_loop_prevention.py",
      "line_number": 169,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u589e\u5f3a\u7684\u9519\u8bef\u6062\u590d\u673a\u5236",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "MockLLMService",
        "MockAgentRegistry",
        "RuleGenerationService",
        "GlobalState",
        "enumerate",
        "print",
        "print",
        "rule_gen_service._enhanced_error_recovery_strategy",
        "print",
        "enumerate",
        "print",
        "len",
        "MockAgent",
        "MockAgent",
        "MockAgent",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_loop_prevention.py:test_enhanced_error_recovery"
    },
    {
      "type": "function",
      "name": "test_integration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_loop_prevention.py",
      "line_number": 257,
      "complexity": 1,
      "docstring": "\u96c6\u6210\u6d4b\u8bd5\uff1a\u6d4b\u8bd5\u6574\u4e2a\u4f18\u5316\u7cfb\u7edf\u7684\u534f\u540c\u5de5\u4f5c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "WorkflowState",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "workflow_state.detect_potential_loop",
        "workflow_state.check_state_cycle",
        "print",
        "print",
        "workflow_state.get_execution_summary",
        "print",
        "summary.items",
        "print",
        "workflow_state.mark_rule_executed",
        "print",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_loop_prevention.py:test_integration"
    },
    {
      "type": "function",
      "name": "main",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_loop_prevention.py",
      "line_number": 318,
      "complexity": 1,
      "docstring": "\u8fd0\u884c\u6240\u6709\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "test_workflow_state_loop_detection",
        "test_advanced_loop_detection",
        "test_enhanced_error_recovery",
        "test_integration",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "traceback.print_exc"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_loop_prevention.py:main"
    },
    {
      "type": "function",
      "name": "generate_natural_language_response",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_loop_prevention.py",
      "line_number": 177,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "prompt"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_loop_prevention.py:generate_natural_language_response"
    },
    {
      "type": "function",
      "name": "semantic_match",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_loop_prevention.py",
      "line_number": 105,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "condition",
        "state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "MatchingResult"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_loop_prevention.py:semantic_match"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_loop_prevention.py",
      "line_number": 186,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "MockAgent",
        "MockAgent",
        "MockAgent"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_loop_prevention.py:__init__"
    },
    {
      "type": "class",
      "name": "TaskPhase",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 54,
      "complexity": 1,
      "docstring": "\u4efb\u52a1\u9636\u6bb5\u679a\u4e3e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:TaskPhase"
    },
    {
      "type": "class",
      "name": "TaskStatus",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 60,
      "complexity": 1,
      "docstring": "\u4efb\u52a1\u72b6\u6001\u679a\u4e3e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:TaskStatus"
    },
    {
      "type": "class",
      "name": "CognitiveTask",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 71,
      "complexity": 1,
      "docstring": "\u8ba4\u77e5\u4efb\u52a1\u6570\u636e\u7ed3\u6784 - \u57fa\u4e8e\u5148\u51b3\u6761\u4ef6\u800c\u975e\u4f9d\u8d56\u5173\u7cfb",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "to_dict"
      ],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:CognitiveTask"
    },
    {
      "type": "class",
      "name": "GlobalState",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 106,
      "complexity": 1,
      "docstring": "\u5168\u5c40\u72b6\u6001 - \u81ea\u7136\u8bed\u8a00\u63cf\u8ff0\u7684\u5de5\u4f5c\u6d41\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "set_llm",
        "set_original_goal",
        "_update_state_internal",
        "update_state",
        "get_recent_history",
        "get_state_summary"
      ],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:GlobalState"
    },
    {
      "type": "class",
      "name": "StateConditionChecker",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 274,
      "complexity": 1,
      "docstring": "\u72b6\u6001\u6ee1\u8db3\u6027\u68c0\u67e5\u5668 - \u6838\u5fc3\u7684\u8ba4\u77e5\u51b3\u7b56\u673a\u5236",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "check_precondition_satisfied"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:StateConditionChecker"
    },
    {
      "type": "class",
      "name": "CognitiveManager",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 349,
      "complexity": 1,
      "docstring": "\u8ba4\u77e5\u7ba1\u7406\u8005 - \u7edf\u4e00\u7684\u5de5\u4f5c\u6d41\u8ba4\u77e5\u7ba1\u7406\n\n\u6574\u5408\u4e86\u539f CognitivePlanner \u548c CognitiveDecider \u7684\u529f\u80fd\uff1a\n1. \u4efb\u52a1\u89c4\u5212\u7ba1\u7406\uff1a\u521d\u59cb\u4efb\u52a1\u751f\u6210\u3001\u4fee\u590d\u4efb\u52a1\u3001\u52a8\u6001\u4efb\u52a1\n2. \u4efb\u52a1\u51b3\u7b56\u7ba1\u7406\uff1a\u53ef\u6267\u884c\u4efb\u52a1\u67e5\u627e\u3001\u4e0b\u4e00\u4efb\u52a1\u9009\u62e9\n3. \u5de5\u4f5c\u6d41\u72b6\u6001\u7ba1\u7406\uff1a\u72b6\u6001\u8bc4\u4f30\u3001\u4fee\u6b63\u9700\u6c42\u5206\u6790",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "generate_initial_tasks",
        "generate_recovery_tasks",
        "generate_dynamic_tasks",
        "find_executable_tasks",
        "select_next_task",
        "evaluate_workflow_status",
        "analyze_modification_needs",
        "_generate_tasks_from_prompt",
        "_create_task_from_data",
        "_build_agent_info_string",
        "_format_task_status",
        "_format_execution_history",
        "_record_decision",
        "_find_executable_tasks_serial",
        "_find_executable_tasks_parallel",
        "_validate_new_task_data",
        "get_management_statistics"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:CognitiveManager"
    },
    {
      "type": "class",
      "name": "CognitiveExecutor",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 1111,
      "complexity": 1,
      "docstring": "\u8ba4\u77e5\u6267\u884c\u8005 - \u7eaf\u7cb9\u7684\u6267\u884c\u5355\u5143",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "execute_task",
        "get_execution_statistics"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:CognitiveExecutor"
    },
    {
      "type": "class",
      "name": "CognitiveWorkflowEngine",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 1210,
      "complexity": 1,
      "docstring": "\u8ba4\u77e5\u5de5\u4f5c\u6d41\u5f15\u64ce - \u6574\u5408\u4e09\u5927\u89d2\u8272\u7684\u534f\u4f5c\u673a\u5236\n\n\u771f\u6b63\u5b9e\u73b0\u4e86\u8ba4\u77e5\u5de5\u4f5c\u6d41\u7684\u6838\u5fc3\u7406\u5ff5\uff1a\n1. \u52a8\u6001\u5bfc\u822a\u800c\u975e\u9759\u6001\u56fe\n2. \u4e09\u89d2\u8272\u534f\u4f5c\n3. \u72b6\u6001\u6ee1\u8db3\u6027\u68c0\u67e5\n4. \u52a8\u6001\u8ba1\u5212\u4fee\u6b63",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "set_interactive_mode",
        "is_interactive_mode",
        "execute_cognitive_workflow",
        "_initialize_workflow",
        "_update_global_state",
        "_handle_no_executable_tasks",
        "_apply_plan_modification",
        "_handle_task_failure",
        "_generate_workflow_summary",
        "get_task_status_report"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:CognitiveWorkflowEngine"
    },
    {
      "type": "function",
      "name": "safe_get_result_return_value",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 31,
      "complexity": 1,
      "docstring": "\u5b89\u5168\u83b7\u53d6Result\u5bf9\u8c61\u7684\u8fd4\u56de\u503c\u5185\u5bb9\uff0c\u4f18\u5148\u83b7\u53d6return_value\u5b57\u6bb5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "hasattr",
        "str",
        "hasattr",
        "hasattr"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:safe_get_result_return_value"
    },
    {
      "type": "function",
      "name": "safe_get_result_error",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 42,
      "complexity": 1,
      "docstring": "\u5b89\u5168\u83b7\u53d6Result\u5bf9\u8c61\u7684\u9519\u8bef\u5185\u5bb9",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "hasattr",
        "hasattr"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:safe_get_result_error"
    },
    {
      "type": "function",
      "name": "to_dict",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 87,
      "complexity": 1,
      "docstring": "\u8f6c\u6362\u4e3a\u5b57\u5178\u683c\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.created_at.isoformat",
        "self.updated_at.isoformat",
        "self.result.to_dict"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:to_dict"
    },
    {
      "type": "function",
      "name": "set_llm",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 114,
      "complexity": 1,
      "docstring": "\u8bbe\u7f6e\u8bed\u8a00\u6a21\u578b\u7528\u4e8e\u667a\u80fd\u72b6\u6001\u751f\u6210",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "llm"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:set_llm"
    },
    {
      "type": "function",
      "name": "set_original_goal",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 118,
      "complexity": 1,
      "docstring": "\u8bbe\u7f6e\u7528\u6237\u7684\u539f\u59cb\u76ee\u6807\u6307\u4ee4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "goal"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:set_original_goal"
    },
    {
      "type": "function",
      "name": "_update_state_internal",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 122,
      "complexity": 1,
      "docstring": "\u5185\u90e8\u72b6\u6001\u66f4\u65b0\u65b9\u6cd5 - \u4ec5\u4f9bupdate_state\u5185\u90e8\u8c03\u7528",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "new_state",
        "source"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "dt.now",
        "self.state_history.append",
        "logger.info",
        "logger.info",
        "logger.info",
        "logger.info",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:_update_state_internal"
    },
    {
      "type": "function",
      "name": "update_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 138,
      "complexity": 1,
      "docstring": "\u66f4\u65b0\u5168\u5c40\u72b6\u6001 - \u7edf\u4e00\u7684\u72b6\u6001\u66f4\u65b0\u63a5\u53e3\n\nArgs:\n    new_state: \u65b0\u72b6\u6001\u63cf\u8ff0\uff08\u5f53intelligent=False\u65f6\u5fc5\u987b\u63d0\u4f9b\uff0cintelligent=True\u65f6\u4f5c\u4e3afallback\uff09\n    source: \u72b6\u6001\u6765\u6e90\n    task: \u6267\u884c\u7684\u4efb\u52a1\uff08\u667a\u80fd\u6a21\u5f0f\u4f7f\u7528\uff09\n    result: \u6267\u884c\u7ed3\u679c\uff08\u667a\u80fd\u6a21\u5f0f\u4f7f\u7528\uff09\n    intelligent: \u662f\u5426\u4f7f\u7528\u667a\u80fd\u72b6\u6001\u751f\u6210\uff0c\u9ed8\u8ba4True\n    \nReturns:\n    \u751f\u6210\u7684\u65b0\u72b6\u6001\u63cf\u8ff0",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "new_state",
        "source",
        "task",
        "result",
        "intelligent"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._update_state_internal",
        "self._update_state_internal",
        "context_parts.append",
        "'\\n'.join",
        "self._llm.invoke",
        "response.content.strip",
        "ValueError",
        "context_parts.append",
        "context_parts.append",
        "context_parts.append",
        "context_parts.append",
        "context_parts.append",
        "context_parts.append",
        "context_parts.append",
        "context_parts.append",
        "context_parts.append",
        "context_parts.append",
        "context_parts.append",
        "SystemMessage",
        "HumanMessage",
        "self._update_state_internal",
        "self._update_state_internal",
        "logger.warning",
        "self._update_state_internal",
        "context_parts.append",
        "safe_get_result_return_value",
        "safe_get_result_error",
        "len",
        "len",
        "context_parts.append",
        "context_parts.append",
        "list",
        "context_parts.append",
        "len",
        "self.context_variables.items",
        "str",
        "ts.strftime",
        "len",
        "len",
        "len",
        "str",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:update_state"
    },
    {
      "type": "function",
      "name": "get_recent_history",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 258,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6700\u8fd1\u7684\u72b6\u6001\u5386\u53f2",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "limit"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "recent_states.append",
        "timestamp.strftime"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:get_recent_history"
    },
    {
      "type": "function",
      "name": "get_state_summary",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 265,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u72b6\u6001\u6458\u8981",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_recent_history"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:get_state_summary"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 1221,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u8ba4\u77e5\u5de5\u4f5c\u6d41\u5f15\u64ce\n\nArgs:\n    llm: \u8bed\u8a00\u6a21\u578b\n    agents: \u53ef\u7528\u7684\u667a\u80fd\u4f53\u5b57\u5178 {name: agent_instance}\n    max_iterations: \u6700\u5927\u8fed\u4ee3\u6b21\u6570\n    enable_auto_recovery: \u662f\u5426\u542f\u7528\u81ea\u52a8\u6062\u590d\n    interactive_mode: \u662f\u5426\u542f\u7528\u4ea4\u4e92\u6a21\u5f0f\uff0c\u9ed8\u8ba4False\u4e0d\u751f\u6210\u8be2\u95ee\u7528\u6237\u7684\u4efb\u52a1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "llm",
        "agents",
        "max_iterations",
        "enable_auto_recovery",
        "interactive_mode"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "StateConditionChecker",
        "CognitiveManager",
        "CognitiveExecutor",
        "GlobalState",
        "self.global_state.set_llm",
        "logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:__init__"
    },
    {
      "type": "function",
      "name": "check_precondition_satisfied",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 281,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u5148\u51b3\u6761\u4ef6\u662f\u5426\u88ab\u5168\u5c40\u72b6\u6001\u6ee1\u8db3\n\nArgs:\n    precondition: \u81ea\u7136\u8bed\u8a00\u63cf\u8ff0\u7684\u5148\u51b3\u6761\u4ef6\n    global_state: \u5f53\u524d\u5168\u5c40\u72b6\u6001\n    \nReturns:\n    (\u662f\u5426\u6ee1\u8db3, \u7f6e\u4fe1\u5ea6, \u89e3\u91ca)",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "precondition",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.llm.invoke",
        "response.content.strip",
        "precondition.lower",
        "global_state.get_state_summary",
        "json.dumps",
        "SystemMessage",
        "HumanMessage",
        "json.loads",
        "result_json.get",
        "float",
        "result_json.get",
        "logger.error",
        "result_json.get",
        "result_text.lower",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:check_precondition_satisfied"
    },
    {
      "type": "function",
      "name": "generate_initial_tasks",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 383,
      "complexity": 1,
      "docstring": "\u751f\u6210\u521d\u59cb\u4efb\u52a1\u5217\u8868 - \u6574\u5408\u539fCognitivePlanner.generate_task_list()\n\nArgs:\n    goal: \u9ad8\u5c42\u6b21\u76ee\u6807\u63cf\u8ff0\n    context: \u989d\u5916\u4e0a\u4e0b\u6587\u4fe1\u606f\n    \nReturns:\n    \u4efb\u52a1\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "goal",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "logger.info",
        "self._build_agent_info_string",
        "self._generate_tasks_from_prompt",
        "len",
        "logger.info",
        "logger.error",
        "json.dumps",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:generate_initial_tasks"
    },
    {
      "type": "function",
      "name": "generate_recovery_tasks",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 499,
      "complexity": 1,
      "docstring": "\u751f\u6210\u4fee\u590d\u4efb\u52a1 - \u6574\u5408\u539fCognitivePlanner.generate_recovery_tasks()\n\nArgs:\n    failed_task: \u5931\u8d25\u7684\u4efb\u52a1\n    error_context: \u9519\u8bef\u4e0a\u4e0b\u6587\n    global_state: \u5f53\u524d\u5168\u5c40\u72b6\u6001\n    \nReturns:\n    \u4fee\u590d\u4efb\u52a1\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "failed_task",
        "error_context",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "logger.info",
        "self._build_agent_info_string",
        "CognitiveTask",
        "logger.info",
        "global_state.get_state_summary",
        "logger.error",
        "dt.now().strftime",
        "dt.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:generate_recovery_tasks"
    },
    {
      "type": "function",
      "name": "generate_dynamic_tasks",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 577,
      "complexity": 1,
      "docstring": "\u751f\u6210\u52a8\u6001\u4efb\u52a1 - \u65b0\u589e\u65b9\u6cd5\uff0c\u6574\u5408\u52a8\u6001\u4efb\u52a1\u751f\u6210\u903b\u8f91\n\nArgs:\n    modification_context: \u4fee\u6b63\u4e0a\u4e0b\u6587\u4fe1\u606f\n    global_state: \u5f53\u524d\u5168\u5c40\u72b6\u6001\n    \nReturns:\n    \u52a8\u6001\u4efb\u52a1\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "modification_context",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "modification_context.get",
        "details.get",
        "len",
        "logger.info",
        "logger.warning",
        "logger.error",
        "self._validate_new_task_data",
        "self._create_task_from_data",
        "dynamic_tasks.append",
        "logger.error",
        "logger.error",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:generate_dynamic_tasks"
    },
    {
      "type": "function",
      "name": "find_executable_tasks",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 626,
      "complexity": 1,
      "docstring": "\u627e\u5230\u6240\u6709\u53ef\u6267\u884c\u7684\u4efb\u52a1 - \u6574\u5408\u539fCognitiveDecider.find_executable_tasks()\n\nArgs:\n    task_list: \u4efb\u52a1\u5217\u8868\n    global_state: \u5168\u5c40\u72b6\u6001\n    \nReturns:\n    (\u4efb\u52a1, \u7f6e\u4fe1\u5ea6) \u5217\u8868\uff0c\u6309\u7f6e\u4fe1\u5ea6\u6392\u5e8f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "task_list",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._find_executable_tasks_parallel",
        "len",
        "self._find_executable_tasks_serial"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:find_executable_tasks"
    },
    {
      "type": "function",
      "name": "select_next_task",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 650,
      "complexity": 1,
      "docstring": "\u4ece\u53ef\u6267\u884c\u4efb\u52a1\u4e2d\u9009\u62e9\u4e0b\u4e00\u4e2a\u8981\u6267\u884c\u7684\u4efb\u52a1 - \u6574\u5408\u539fCognitiveDecider.select_next_task()\n\nArgs:\n    executable_tasks: \u53ef\u6267\u884c\u4efb\u52a1\u5217\u8868\n    global_state: \u5168\u5c40\u72b6\u6001\n    execution_history: \u6267\u884c\u5386\u53f2\n    \nReturns:\n    \u9009\u62e9\u7684\u4efb\u52a1\uff0c\u5982\u679c\u6ca1\u6709\u5219\u8fd4\u56deNone",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "executable_tasks",
        "global_state",
        "execution_history"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "enumerate",
        "len",
        "task_options.append",
        "task_options.append",
        "task_options.append",
        "task_options.append",
        "self.llm.invoke",
        "response.content.strip",
        "re.search",
        "logger.warning",
        "global_state.get_state_summary",
        "chr(10).join",
        "self._format_execution_history",
        "SystemMessage",
        "HumanMessage",
        "json.loads",
        "result_json.get",
        "result_json.get",
        "logger.error",
        "json_match.group",
        "chr",
        "self._record_decision",
        "logger.info",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:select_next_task"
    },
    {
      "type": "function",
      "name": "evaluate_workflow_status",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 739,
      "complexity": 1,
      "docstring": "\u8bc4\u4f30\u5de5\u4f5c\u6d41\u72b6\u6001 - \u6574\u5408\u539fCognitiveDecider.evaluate_workflow_status()\n\nArgs:\n    task_list: \u4efb\u52a1\u5217\u8868\n    global_state: \u5168\u5c40\u72b6\u6001\n    \nReturns:\n    \u5de5\u4f5c\u6d41\u72b6\u6001\u8bc4\u4f30\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "task_list",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "status_counts.get",
        "status_counts.get",
        "status_counts.get",
        "self.find_executable_tasks",
        "len",
        "status_counts.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:evaluate_workflow_status"
    },
    {
      "type": "function",
      "name": "analyze_modification_needs",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 791,
      "complexity": 1,
      "docstring": "\u5206\u6790\u4fee\u6b63\u9700\u6c42 - \u6574\u5408\u539fplan_modification_decision()\u903b\u8f91\n\nArgs:\n    task_list: \u5f53\u524d\u4efb\u52a1\u5217\u8868\n    global_state: \u5168\u5c40\u72b6\u6001\n    last_execution_result: \u6700\u540e\u6267\u884c\u7ed3\u679c\n    \nReturns:\n    \u4fee\u6b63\u9700\u6c42\u5206\u6790\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "task_list",
        "global_state",
        "last_execution_result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "logger.info",
        "self.llm.invoke",
        "response.content.strip",
        "re.search",
        "dt.now",
        "task_status_counts.get",
        "hasattr",
        "self._format_task_status",
        "global_state.get_state_summary",
        "SystemMessage",
        "HumanMessage",
        "json.loads",
        "self._record_decision",
        "logger.info",
        "logger.info",
        "logger.error",
        "logger.error",
        "dict",
        "last_execution_result.to_dict",
        "json_match.group",
        "result_json.get",
        "result_json.get",
        "result_json.get",
        "dt.now",
        "getattr",
        "getattr",
        "getattr",
        "getattr",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:analyze_modification_needs"
    },
    {
      "type": "function",
      "name": "_generate_tasks_from_prompt",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 899,
      "complexity": 1,
      "docstring": "\u901a\u7528\u4efb\u52a1\u751f\u6210\u65b9\u6cd5 - \u7edf\u4e00LLM\u8c03\u7528\u548cJSON\u89e3\u6790\u903b\u8f91",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "system_prompt",
        "user_prompt",
        "task_type"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.llm.invoke",
        "response.content.strip",
        "re.search",
        "SystemMessage",
        "HumanMessage",
        "json.loads",
        "result_json.get",
        "logger.error",
        "logger.error",
        "json_match.group",
        "self._create_task_from_data",
        "tasks.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:_generate_tasks_from_prompt"
    },
    {
      "type": "function",
      "name": "_create_task_from_data",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 931,
      "complexity": 1,
      "docstring": "\u4ece\u6570\u636e\u5b57\u5178\u521b\u5efa CognitiveTask \u5bf9\u8c61 - \u7edf\u4e00\u4efb\u52a1\u5bf9\u8c61\u521b\u5efa\u903b\u8f91",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "task_data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "CognitiveTask",
        "task_data.get",
        "task_data.get",
        "TaskPhase",
        "task_data.get",
        "task_data.get",
        "dt.now().strftime",
        "dt.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:_create_task_from_data"
    },
    {
      "type": "function",
      "name": "_build_agent_info_string",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 944,
      "complexity": 1,
      "docstring": "\u6784\u5efa\u667a\u80fd\u4f53\u4fe1\u606f\u5b57\u7b26\u4e32 - \u590d\u7528\u4ee3\u7801",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.available_agents.items",
        "'\u3001'.join",
        "available_agents_info.append",
        "hasattr",
        "hasattr"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:_build_agent_info_string"
    },
    {
      "type": "function",
      "name": "_format_task_status",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 957,
      "complexity": 1,
      "docstring": "\u683c\u5f0f\u5316\u4efb\u52a1\u72b6\u6001 - \u590d\u7528\u4ee3\u7801",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "task_list"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "'\\n'.join",
        "status_lines.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:_format_task_status"
    },
    {
      "type": "function",
      "name": "_format_execution_history",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 964,
      "complexity": 1,
      "docstring": "\u683c\u5f0f\u5316\u6267\u884c\u5386\u53f2 - \u590d\u7528\u4ee3\u7801",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "execution_history"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "enumerate",
        "'\\n'.join",
        "record.get",
        "record.get",
        "history_lines.append",
        "history_lines.append",
        "hasattr"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:_format_execution_history"
    },
    {
      "type": "function",
      "name": "_record_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 986,
      "complexity": 1,
      "docstring": "\u8bb0\u5f55\u51b3\u7b56\u5386\u53f2 - \u7edf\u4e00\u51b3\u7b56\u8bb0\u5f55",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decision_type",
        "decision_data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.decision_history.append",
        "dt.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:_record_decision"
    },
    {
      "type": "function",
      "name": "_find_executable_tasks_serial",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 995,
      "complexity": 1,
      "docstring": "\u4e32\u884c\u7248\u672c\u7684\u53ef\u6267\u884c\u4efb\u52a1\u67e5\u627e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "pending_tasks",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "executable_tasks.sort",
        "self.condition_checker.check_precondition_satisfied",
        "executable_tasks.append",
        "logger.debug",
        "logger.debug"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:_find_executable_tasks_serial"
    },
    {
      "type": "function",
      "name": "_find_executable_tasks_parallel",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 1015,
      "complexity": 1,
      "docstring": "\u5e76\u884c\u7248\u672c\u7684\u53ef\u6267\u884c\u4efb\u52a1\u67e5\u627e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "pending_tasks",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "GlobalState",
        "min",
        "executable_tasks.sort",
        "logger.info",
        "len",
        "ThreadPoolExecutor",
        "as_completed",
        "copy.deepcopy",
        "copy.deepcopy",
        "self.condition_checker.check_precondition_satisfied",
        "executor.submit",
        "logger.error",
        "future.result",
        "len",
        "len",
        "executable_tasks.append",
        "logger.debug",
        "logger.debug",
        "logger.error",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:_find_executable_tasks_parallel"
    },
    {
      "type": "function",
      "name": "_validate_new_task_data",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 1069,
      "complexity": 1,
      "docstring": "\u9a8c\u8bc1\u65b0\u4efb\u52a1\u6570\u636e\u7684\u6709\u6548\u6027",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "task_data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "task_data.get",
        "task_data.get",
        "task_data.get",
        "', '.join",
        "errors.append",
        "errors.append",
        "self.available_agents.keys",
        "TaskPhase",
        "errors.append",
        "len",
        "', '.join",
        "errors.append",
        "', '.join"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:_validate_new_task_data"
    },
    {
      "type": "function",
      "name": "get_management_statistics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 1103,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u7ba1\u7406\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:get_management_statistics"
    },
    {
      "type": "function",
      "name": "execute_task",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 1118,
      "complexity": 1,
      "docstring": "\u6267\u884c\u5355\u4e2a\u4efb\u52a1\n\nArgs:\n    task: \u8981\u6267\u884c\u7684\u4efb\u52a1\n    global_state: \u5168\u5c40\u72b6\u6001\n    \nReturns:\n    \u6267\u884c\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "task",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "dt.now",
        "self.agents.get",
        "dt.now",
        "self.execution_history.append",
        "ValueError",
        "agent.execute_sync",
        "agent.chat_sync",
        "logger.info",
        "logger.error",
        "logger.error",
        "Result",
        "dt.now",
        "dt.now",
        "(dt.now() - task.created_at).total_seconds",
        "str",
        "str",
        "dt.now",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:execute_task"
    },
    {
      "type": "function",
      "name": "get_execution_statistics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 1190,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6267\u884c\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "sum",
        "len",
        "len",
        "sum",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:get_execution_statistics"
    },
    {
      "type": "function",
      "name": "set_interactive_mode",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 1256,
      "complexity": 1,
      "docstring": "\u8bbe\u7f6e\u4ea4\u4e92\u6a21\u5f0f\n\nArgs:\n    interactive: True\u542f\u7528\u4ea4\u4e92\u6a21\u5f0f\uff0cFalse\u7981\u7528\u7528\u6237\u4ea4\u4e92",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "interactive"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:set_interactive_mode"
    },
    {
      "type": "function",
      "name": "is_interactive_mode",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 1267,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u5f53\u524d\u662f\u5426\u4e3a\u4ea4\u4e92\u6a21\u5f0f\n\nReturns:\n    bool: True\u8868\u793a\u4ea4\u4e92\u6a21\u5f0f\u542f\u7528\uff0cFalse\u8868\u793a\u7981\u7528",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:is_interactive_mode"
    },
    {
      "type": "function",
      "name": "execute_cognitive_workflow",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 1276,
      "complexity": 1,
      "docstring": "\u6267\u884c\u8ba4\u77e5\u5de5\u4f5c\u6d41 - \u4e3b\u5165\u53e3\u65b9\u6cd5\n\nArgs:\n    goal: \u9ad8\u5c42\u6b21\u76ee\u6807\n    context: \u989d\u5916\u4e0a\u4e0b\u6587\n    \nReturns:\n    \u6267\u884c\u7ed3\u679c\u6458\u8981",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "goal",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "self._initialize_workflow",
        "logger.info",
        "self._generate_workflow_summary",
        "logger.debug",
        "self.manager.find_executable_tasks",
        "self.manager.select_next_task",
        "self.executor.execute_task",
        "self._update_global_state",
        "self.execution_log.append",
        "logger.info",
        "logger.info",
        "logger.info",
        "self.manager.analyze_modification_needs",
        "self.manager.evaluate_workflow_status",
        "logger.warning",
        "logger.info",
        "self._apply_plan_modification",
        "logger.info",
        "logger.info",
        "self._handle_task_failure",
        "logger.info",
        "logger.info",
        "dt.now",
        "self._handle_no_executable_tasks",
        "logger.warning",
        "logger.warning"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:execute_cognitive_workflow"
    },
    {
      "type": "function",
      "name": "_initialize_workflow",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 1367,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u5de5\u4f5c\u6d41",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "goal",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.global_state.set_original_goal",
        "self.global_state.update_state",
        "self.manager.generate_initial_tasks",
        "logger.info",
        "enumerate",
        "logger.info",
        "self.global_state.update_state",
        "logger.info",
        "logger.info",
        "logger.info",
        "logger.info",
        "logger.info",
        "logger.info",
        "logger.info",
        "logger.info",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:_initialize_workflow"
    },
    {
      "type": "function",
      "name": "_update_global_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 1399,
      "complexity": 1,
      "docstring": "\u6839\u636e\u4efb\u52a1\u6267\u884c\u7ed3\u679c\u66f4\u65b0\u5168\u5c40\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "task",
        "result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "safe_get_result_return_value",
        "safe_get_result_error",
        "self.global_state.update_state"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:_update_global_state"
    },
    {
      "type": "function",
      "name": "_handle_no_executable_tasks",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 1427,
      "complexity": 1,
      "docstring": "\u5904\u7406\u6ca1\u6709\u53ef\u6267\u884c\u4efb\u52a1\u7684\u60c5\u51b5 - \u52a8\u6001\u751f\u6210\u65b0\u4efb\u52a1\n\nReturns:\n    \u662f\u5426\u6210\u529f\u751f\u6210\u65b0\u4efb\u52a1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "self.manager.generate_recovery_tasks",
        "self.task_list.extend",
        "logger.info",
        "safe_get_result_error",
        "safe_get_result_return_value",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:_handle_no_executable_tasks"
    },
    {
      "type": "function",
      "name": "_apply_plan_modification",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 1482,
      "complexity": 1,
      "docstring": "\u5e94\u7528\u8ba1\u5212\u4fee\u6b63\u51b3\u7b56",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "modification_decision"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "logger.info",
        "self.global_state.update_state",
        "logger.info",
        "logger.info",
        "self.manager.generate_dynamic_tasks",
        "self.task_list.extend",
        "logger.info",
        "logger.warning",
        "logger.info",
        "logger.info",
        "', '.join"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:_apply_plan_modification"
    },
    {
      "type": "function",
      "name": "_handle_task_failure",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 1515,
      "complexity": 1,
      "docstring": "\u5904\u7406\u4efb\u52a1\u5931\u8d25 - \u81ea\u52a8\u6062\u590d\u673a\u5236",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "failed_task",
        "result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.warning",
        "self.manager.generate_recovery_tasks",
        "safe_get_result_error",
        "safe_get_result_return_value",
        "self.task_list.extend",
        "logger.info",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:_handle_task_failure"
    },
    {
      "type": "function",
      "name": "_generate_workflow_summary",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 1531,
      "complexity": 1,
      "docstring": "\u751f\u6210\u5de5\u4f5c\u6d41\u6267\u884c\u6458\u8981",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "len",
        "len",
        "len",
        "len",
        "self.executor.get_execution_statistics",
        "len",
        "len",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:_generate_workflow_summary"
    },
    {
      "type": "function",
      "name": "get_task_status_report",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 1555,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u4efb\u52a1\u72b6\u6001\u62a5\u544a",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "report_lines.append",
        "'\\n'.join",
        "report_lines.append",
        "{TaskStatus.COMPLETED: '\u2705', TaskStatus.FAILED: '\u274c', TaskStatus.RUNNING: '\ud83d\udd04', TaskStatus.PENDING: '\u23f3', TaskStatus.EXECUTABLE: '\ud83d\ude80'}.get",
        "report_lines.append",
        "report_lines.append",
        "phase.value.upper",
        "safe_get_result_error",
        "safe_get_result_return_value"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:get_task_status_report"
    },
    {
      "type": "function",
      "name": "check_single_task",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py",
      "line_number": 1032,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u5355\u4e2a\u4efb\u52a1\u7684\u53ef\u6267\u884c\u6027",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "task"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.condition_checker.check_precondition_satisfied",
        "logger.error",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:check_single_task"
    },
    {
      "type": "class",
      "name": "RegisteredAgent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_adapter.py",
      "line_number": 28,
      "complexity": 1,
      "docstring": "\u6ce8\u518c\u7684\u667a\u80fd\u4f53\u89c4\u683c - \u517c\u5bb9\u73b0\u6709\u63a5\u53e3",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_adapter.py:RegisteredAgent"
    },
    {
      "type": "class",
      "name": "CognitiveMultiStepAgent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_adapter.py",
      "line_number": 34,
      "complexity": 1,
      "docstring": "\u8ba4\u77e5\u591a\u6b65\u9aa4\u667a\u80fd\u4f53 - \u517c\u5bb9MultiStepAgent_v2\u63a5\u53e3\u7684\u8ba4\u77e5\u5de5\u4f5c\u6d41\u5b9e\u73b0\n\n\u8fd9\u4e2a\u7c7b\u63d0\u4f9b\u4e86\u4e0e\u539f\u6709MultiStepAgent_v2\u76f8\u540c\u7684\u63a5\u53e3\uff0c\n\u4f46\u5e95\u5c42\u4f7f\u7528\u4e86\u5168\u65b0\u7684\u8ba4\u77e5\u5de5\u4f5c\u6d41\u5f15\u64ce\u3002",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "execute_multi_step",
        "_execute_with_cognitive_workflow",
        "_execute_with_traditional_workflow",
        "get_cognitive_engine",
        "switch_to_cognitive_mode",
        "switch_to_traditional_mode",
        "get_mode_info"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Agent"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_adapter.py:CognitiveMultiStepAgent"
    },
    {
      "type": "function",
      "name": "convert_legacy_plan_to_cognitive_tasks",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_adapter.py",
      "line_number": 190,
      "complexity": 1,
      "docstring": "\u5c06\u4f20\u7edf\u8ba1\u5212\u683c\u5f0f\u8f6c\u6362\u4e3a\u8ba4\u77e5\u4efb\u52a1\u683c\u5f0f\n\nArgs:\n    legacy_plan: \u4f20\u7edf\u683c\u5f0f\u7684\u8ba1\u5212\n    \nReturns:\n    \u8ba4\u77e5\u4efb\u52a1\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "legacy_plan"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "enumerate",
        "step.get",
        "step.get",
        "step.get",
        "step.get",
        "step.get",
        "step.get",
        "CognitiveTask",
        "cognitive_tasks.append",
        "instruction_type.lower",
        "step.get",
        "', '.join"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_adapter.py:convert_legacy_plan_to_cognitive_tasks"
    },
    {
      "type": "function",
      "name": "create_migration_guide",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_adapter.py",
      "line_number": 241,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u8fc1\u79fb\u6307\u5357",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_adapter.py:create_migration_guide"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_adapter.py",
      "line_number": 42,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u8ba4\u77e5\u591a\u6b65\u9aa4\u667a\u80fd\u4f53\n\nArgs:\n    llm: \u8bed\u8a00\u6a21\u578b\n    registered_agents: \u6ce8\u518c\u7684\u667a\u80fd\u4f53\u5217\u8868\n    max_retries: \u6700\u5927\u91cd\u8bd5\u6b21\u6570\n    thinker_system_message: \u601d\u8003\u8005\u7cfb\u7edf\u6d88\u606f\n    thinker_chat_system_message: \u601d\u8003\u8005\u5bf9\u8bdd\u7cfb\u7edf\u6d88\u606f\n    use_cognitive_workflow: \u662f\u5426\u4f7f\u7528\u8ba4\u77e5\u5de5\u4f5c\u6d41\uff08False\u65f6\u56de\u9000\u5230\u4f20\u7edf\u6a21\u5f0f\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "llm",
        "registered_agents",
        "max_retries",
        "thinker_system_message",
        "thinker_chat_system_message",
        "use_cognitive_workflow"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "super().__init__",
        "StatefulExecutor",
        "self.device.set_variable",
        "CognitiveWorkflowEngine",
        "logger.info",
        "logger.info",
        "self.device.set_variable",
        "super"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_adapter.py:__init__"
    },
    {
      "type": "function",
      "name": "execute_multi_step",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_adapter.py",
      "line_number": 99,
      "complexity": 1,
      "docstring": "\u6267\u884c\u591a\u6b65\u9aa4\u4efb\u52a1 - \u517c\u5bb9\u539f\u6709\u63a5\u53e3\n\nArgs:\n    main_instruction: \u4e3b\u8981\u6307\u4ee4\n    interactive: \u662f\u5426\u4ea4\u4e92\u6a21\u5f0f\n    \nReturns:\n    \u6267\u884c\u7ed3\u679c\u5b57\u7b26\u4e32",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "main_instruction",
        "interactive"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._execute_with_cognitive_workflow",
        "self._execute_with_traditional_workflow"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_adapter.py:execute_multi_step"
    },
    {
      "type": "function",
      "name": "_execute_with_cognitive_workflow",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_adapter.py",
      "line_number": 115,
      "complexity": 1,
      "docstring": "\u4f7f\u7528\u8ba4\u77e5\u5de5\u4f5c\u6d41\u6267\u884c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "main_instruction",
        "interactive"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "self.cognitive_engine.execute_cognitive_workflow",
        "logger.error",
        "self.cognitive_engine.get_task_status_report",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_adapter.py:_execute_with_cognitive_workflow"
    },
    {
      "type": "function",
      "name": "_execute_with_traditional_workflow",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_adapter.py",
      "line_number": 146,
      "complexity": 1,
      "docstring": "\u4f7f\u7528\u4f20\u7edf\u5de5\u4f5c\u6d41\u6267\u884c\uff08\u56de\u9000\u6a21\u5f0f\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "main_instruction",
        "interactive"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_adapter.py:_execute_with_traditional_workflow"
    },
    {
      "type": "function",
      "name": "get_cognitive_engine",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_adapter.py",
      "line_number": 154,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u8ba4\u77e5\u5de5\u4f5c\u6d41\u5f15\u64ce\u5b9e\u4f8b - \u7528\u4e8e\u9ad8\u7ea7\u64cd\u4f5c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_adapter.py:get_cognitive_engine"
    },
    {
      "type": "function",
      "name": "switch_to_cognitive_mode",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_adapter.py",
      "line_number": 158,
      "complexity": 1,
      "docstring": "\u5207\u6362\u5230\u8ba4\u77e5\u5de5\u4f5c\u6d41\u6a21\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "logger.warning",
        "CognitiveWorkflowEngine"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_adapter.py:switch_to_cognitive_mode"
    },
    {
      "type": "function",
      "name": "switch_to_traditional_mode",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_adapter.py",
      "line_number": 176,
      "complexity": 1,
      "docstring": "\u5207\u6362\u5230\u4f20\u7edf\u5de5\u4f5c\u6d41\u6a21\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_adapter.py:switch_to_traditional_mode"
    },
    {
      "type": "function",
      "name": "get_mode_info",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_adapter.py",
      "line_number": 181,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u5f53\u524d\u6a21\u5f0f\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "list",
        "self.agents_dict.keys"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_adapter.py:get_mode_info"
    },
    {
      "type": "function",
      "name": "test_three_phase_planning",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_three_phase_planning.py",
      "line_number": 17,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u4e09\u9636\u6bb5\u89c4\u5212\u6a21\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "CognitivePlanner",
        "print",
        "print",
        "planner.generate_task_list",
        "print",
        "print",
        "print",
        "enumerate",
        "print",
        "print",
        "planner.generate_task_list",
        "print",
        "print",
        "print",
        "enumerate",
        "print",
        "print",
        "verify_three_phase_logic",
        "verify_three_phase_logic",
        "print",
        "print",
        "print",
        "print",
        "Agent",
        "Agent",
        "Agent",
        "phase_counts.get",
        "print",
        "print",
        "print",
        "print",
        "phase_counts2.get",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "phase_counts.get",
        "phase_counts2.get",
        "phase_tasks[task.phase.value].append",
        "len",
        "len",
        "phase_prefix.get",
        "print",
        "print",
        "len",
        "len",
        "print",
        "print",
        "any",
        "print",
        "task.id.startswith",
        "any",
        "task.precondition.lower",
        "task.precondition.lower"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_three_phase_planning.py:test_three_phase_planning"
    },
    {
      "type": "function",
      "name": "verify_three_phase_logic",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_three_phase_planning.py",
      "line_number": 97,
      "complexity": 1,
      "docstring": "\u9a8c\u8bc1\u4e09\u9636\u6bb5\u903b\u8f91\u662f\u5426\u6b63\u786e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "tasks",
        "goal_name"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "phase_tasks[task.phase.value].append",
        "len",
        "len",
        "phase_prefix.get",
        "print",
        "print",
        "print",
        "print",
        "any",
        "print",
        "task.id.startswith",
        "any",
        "task.precondition.lower",
        "task.precondition.lower"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_three_phase_planning.py:verify_three_phase_logic"
    },
    {
      "type": "function",
      "name": "add",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator.py",
      "line_number": 1,
      "complexity": 1,
      "docstring": "Addition",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "a",
        "b"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator.py:add"
    },
    {
      "type": "function",
      "name": "subtract",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator.py",
      "line_number": 5,
      "complexity": 1,
      "docstring": "Subtraction",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "a",
        "b"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator.py:subtract"
    },
    {
      "type": "function",
      "name": "multiply",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator.py",
      "line_number": 9,
      "complexity": 1,
      "docstring": "Multiplication",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "a",
        "b"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator.py:multiply"
    },
    {
      "type": "function",
      "name": "divide",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator.py",
      "line_number": 13,
      "complexity": 1,
      "docstring": "Division",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "a",
        "b"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "ValueError"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator.py:divide"
    },
    {
      "type": "function",
      "name": "simple_registry_test",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/simple_registry_test.py",
      "line_number": 18,
      "complexity": 1,
      "docstring": "\u7b80\u5355\u7684registry\u5173\u8054\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "Agent",
        "Agent",
        "print",
        "print",
        "create_production_rule_system",
        "print",
        "print",
        "workflow_engine.get_default_agent_registry",
        "default_registry.list_all_capabilities",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "found_agents.append",
        "print",
        "default_registry.get_capability",
        "print",
        "default_registry.find_capabilities_by_action",
        "print",
        "print",
        "print",
        "len",
        "list",
        "len",
        "agents.keys",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/simple_registry_test.py:simple_registry_test"
    },
    {
      "type": "function",
      "name": "test_without_explicit_registry",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/simple_registry_test.py",
      "line_number": 97,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u4e0d\u4f20\u9012agent_registry\u53c2\u6570\u662f\u5426\u4f7f\u7528\u9ed8\u8ba4registry",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "Agent",
        "create_production_rule_system",
        "print",
        "workflow_engine.get_default_agent_registry",
        "print",
        "print",
        "print",
        "print",
        "final_registry.list_all_capabilities",
        "print",
        "len",
        "print",
        "print",
        "len",
        "len",
        "default_registry.list_all_capabilities"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/simple_registry_test.py:test_without_explicit_registry"
    },
    {
      "type": "function",
      "name": "main",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/simple_registry_test.py",
      "line_number": 142,
      "complexity": 1,
      "docstring": "\u4e3b\u51fd\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "simple_registry_test",
        "test_without_explicit_registry",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "traceback.print_exc"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/simple_registry_test.py:main"
    },
    {
      "type": "function",
      "name": "test_simple_workflow",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_simple_workflow.py",
      "line_number": 17,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u7b80\u5355\u5de5\u4f5c\u6d41",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "Agent",
        "IntelligentAgentWrapper",
        "create_production_rule_system",
        "print",
        "print",
        "rule_generation.generate_rule_set",
        "print",
        "print",
        "rule_engine.state_service.create_initial_state",
        "rule_generation.make_decision",
        "print",
        "hasattr",
        "print",
        "print",
        "agent_service.get_or_create_agent",
        "print",
        "print",
        "print",
        "traceback.print_exc",
        "len",
        "type"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_simple_workflow.py:test_simple_workflow"
    },
    {
      "type": "function",
      "name": "test_basic_functionality",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_basic_functionality.py",
      "line_number": 16,
      "complexity": 1,
      "docstring": "Test that basic workflow functionality still works",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "StateRepositoryImpl",
        "LanguageModelService",
        "StateService",
        "print",
        "state_service.create_initial_state",
        "print",
        "print",
        "state_service.load_state",
        "print",
        "print",
        "print",
        "print",
        "print",
        "traceback.print_exc"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_basic_functionality.py:test_basic_functionality"
    },
    {
      "type": "function",
      "name": "test_agent_base_result_conversion",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_result_type_conversion.py",
      "line_number": 23,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5agent_base.Result\u5230cognitive_workflow.Result\u7684\u8f6c\u6362",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "AgentRegistry",
        "AgentCapability",
        "agent_registry.register_capability",
        "Agent",
        "AgentService",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "all",
        "print",
        "print",
        "print",
        "AgentBaseResult",
        "AgentBaseResult",
        "CognitiveResult",
        "agent_service._convert_to_result",
        "isinstance",
        "print",
        "print",
        "print",
        "print",
        "results.append",
        "isinstance",
        "print",
        "results.append",
        "print",
        "results.append",
        "hasattr",
        "print",
        "results.append",
        "hasattr",
        "print",
        "results.append",
        "print",
        "results.append",
        "len",
        "sum",
        "isinstance",
        "print",
        "results.append",
        "converted_result.metadata.get",
        "print",
        "results.append",
        "len",
        "sum",
        "print",
        "results.append",
        "print",
        "results.append",
        "print",
        "results.append",
        "converted_result.metadata.get",
        "sum",
        "len",
        "type"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_result_type_conversion.py:test_agent_base_result_conversion"
    },
    {
      "type": "function",
      "name": "test_real_agent_execution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_result_type_conversion.py",
      "line_number": 198,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u771f\u5b9e\u7684\u667a\u80fd\u4f53\u6267\u884c\u548c\u7ed3\u679c\u8f6c\u6362",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "AgentRegistry",
        "AgentCapability",
        "agent_registry.register_capability",
        "Agent",
        "AgentService",
        "print",
        "agent_service.execute_natural_language_instruction",
        "isinstance",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "result.metadata.get",
        "type"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_result_type_conversion.py:test_real_agent_execution"
    },
    {
      "type": "function",
      "name": "main",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_result_type_conversion.py",
      "line_number": 253,
      "complexity": 1,
      "docstring": "\u4e3b\u51fd\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "test_agent_base_result_conversion",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "traceback.print_exc"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_result_type_conversion.py:main"
    },
    {
      "type": "function",
      "name": "test_rule_phase_alignment",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_rule_phase_alignment.py",
      "line_number": 11,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5 RulePhase \u679a\u4e3e\u4e0e\u4e09\u9636\u6bb5\u6a21\u5f0f\u7684\u5bf9\u9f50",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "print",
        "hasattr",
        "print",
        "len",
        "print",
        "print",
        "getattr",
        "print",
        "print",
        "print",
        "list",
        "print",
        "print",
        "print",
        "print",
        "traceback.print_exc"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_rule_phase_alignment.py:test_rule_phase_alignment"
    },
    {
      "type": "function",
      "name": "test_json_schema_compatibility",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_rule_phase_alignment.py",
      "line_number": 65,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5 JSON schema \u517c\u5bb9\u6027",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "print",
        "RulePhase",
        "print",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_rule_phase_alignment.py:test_json_schema_compatibility"
    },
    {
      "type": "function",
      "name": "test_simple_task_example",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_new_rule_generation_format.py",
      "line_number": 7,
      "complexity": 1,
      "docstring": "\u5c55\u793a\u7b80\u5355\u4efb\u52a1\u7684\u9884\u671fJSON\u8f93\u51fa\u683c\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_new_rule_generation_format.py:test_simple_task_example"
    },
    {
      "type": "function",
      "name": "test_complex_task_example",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_new_rule_generation_format.py",
      "line_number": 49,
      "complexity": 1,
      "docstring": "\u5c55\u793a\u590d\u6742\u4efb\u52a1\u7684\u9884\u671fJSON\u8f93\u51fa\u683c\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_new_rule_generation_format.py:test_complex_task_example"
    },
    {
      "type": "function",
      "name": "test_schema_validation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_new_rule_generation_format.py",
      "line_number": 127,
      "complexity": 1,
      "docstring": "\u5c55\u793aJSON schema\u7684\u9a8c\u8bc1\u8981\u70b9",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_new_rule_generation_format.py:test_schema_validation"
    },
    {
      "type": "function",
      "name": "test_backward_compatibility",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_new_rule_generation_format.py",
      "line_number": 147,
      "complexity": 1,
      "docstring": "\u5c55\u793a\u5411\u540e\u517c\u5bb9\u6027\u652f\u6301",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "mapping.items",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_new_rule_generation_format.py:test_backward_compatibility"
    },
    {
      "type": "function",
      "name": "add",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/calculator.py",
      "line_number": 1,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "a",
        "b"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/calculator.py:add"
    },
    {
      "type": "function",
      "name": "subtract",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/calculator.py",
      "line_number": 4,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "a",
        "b"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/calculator.py:subtract"
    },
    {
      "type": "function",
      "name": "multiply",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/calculator.py",
      "line_number": 7,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "a",
        "b"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/calculator.py:multiply"
    },
    {
      "type": "function",
      "name": "divide",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/calculator.py",
      "line_number": 10,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "a",
        "b"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "ValueError"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/calculator.py:divide"
    },
    {
      "type": "class",
      "name": "TestCalculator",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py",
      "line_number": 4,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "test_add",
        "test_subtract",
        "test_multiply",
        "test_divide"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py:TestCalculator"
    },
    {
      "type": "function",
      "name": "test_add",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py",
      "line_number": 5,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.assertEqual",
        "add"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py:test_add"
    },
    {
      "type": "function",
      "name": "test_subtract",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py",
      "line_number": 8,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.assertEqual",
        "subtract"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py:test_subtract"
    },
    {
      "type": "function",
      "name": "test_multiply",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py",
      "line_number": 11,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.assertEqual",
        "multiply"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py:test_multiply"
    },
    {
      "type": "function",
      "name": "test_divide",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py",
      "line_number": 14,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.assertEqual",
        "divide",
        "self.assertRaises",
        "divide"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py:test_divide"
    },
    {
      "type": "function",
      "name": "create_production_rule_system",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/__init__.py",
      "line_number": 124,
      "complexity": 1,
      "docstring": "\u5feb\u901f\u521b\u5efa\u4ea7\u751f\u5f0f\u89c4\u5219\u7cfb\u7edf\u7684\u5de5\u5382\u51fd\u6570\n\nArgs:\n    llm: \u8bed\u8a00\u6a21\u578b\u5b9e\u4f8b\n    agents: \u667a\u80fd\u4f53\u5b57\u5178 {name: agent_instance}\n    enable_auto_recovery: \u662f\u5426\u542f\u7528\u81ea\u52a8\u6062\u590d\n    enable_adaptive_replacement: \u662f\u5426\u542f\u7528\u81ea\u9002\u5e94\u89c4\u5219\u66ff\u6362\n    enable_context_filtering: \u662f\u5426\u542f\u7528\u4e0a\u4e0b\u6587\u8fc7\u6ee4\uff08TaskTranslator\uff09\n    \nReturns:\n    ProductionRuleWorkflowEngine: \u914d\u7f6e\u597d\u7684\u5de5\u4f5c\u6d41\u5f15\u64ce",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "llm",
        "agents",
        "enable_auto_recovery",
        "enable_adaptive_replacement",
        "enable_context_filtering"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "LanguageModelService",
        "RuleRepositoryImpl",
        "StateRepositoryImpl",
        "ExecutionRepositoryImpl",
        "AgentRegistry",
        "agents.items",
        "AgentService",
        "ResourceManager",
        "RuleGenerationService",
        "RuleExecutionService",
        "StateService",
        "RuleEngineService",
        "ProductionRuleWorkflowEngine",
        "agent_registry.register_agent",
        "TaskTranslator"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/__init__.py:create_production_rule_system"
    },
    {
      "type": "function",
      "name": "get_version_info",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/__init__.py",
      "line_number": 200,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u7248\u672c\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/__init__.py:get_version_info"
    },
    {
      "type": "class",
      "name": "RuleRepositoryImpl",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 28,
      "complexity": 1,
      "docstring": "\u89c4\u5219\u4ed3\u50a8\u5b9e\u73b0 - \u57fa\u4e8e\u6587\u4ef6\u5b58\u50a8",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "save_rule_set",
        "load_rule_set",
        "find_rules_by_condition",
        "find_rules_by_phase",
        "save_rule",
        "load_rule",
        "delete_rule",
        "find_rules_by_agent_capability",
        "find_rules_by_agent_name",
        "find_rules_by_priority_range",
        "get_rule_count",
        "list_all_rule_sets",
        "_load_existing_data",
        "_rule_to_dict",
        "_dict_to_rule_set",
        "_dict_to_rule",
        "_parse_phase",
        "_modification_to_dict",
        "_dict_to_modification"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "RuleRepository"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:RuleRepositoryImpl"
    },
    {
      "type": "class",
      "name": "StateRepositoryImpl",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 325,
      "complexity": 1,
      "docstring": "\u72b6\u6001\u4ed3\u50a8\u5b9e\u73b0 - \u57fa\u4e8e\u6587\u4ef6\u5b58\u50a8",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "save_state",
        "load_state",
        "get_state_history",
        "save_state_snapshot",
        "load_state_snapshot",
        "find_states_by_workflow",
        "find_states_by_time_range",
        "get_latest_state",
        "delete_old_states",
        "get_state_count",
        "_dict_to_state"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "StateRepository"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:StateRepositoryImpl"
    },
    {
      "type": "class",
      "name": "ExecutionRepositoryImpl",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 557,
      "complexity": 1,
      "docstring": "\u6267\u884c\u4ed3\u50a8\u5b9e\u73b0 - \u57fa\u4e8e\u6587\u4ef6\u5b58\u50a8",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "save_execution",
        "load_execution",
        "find_executions_by_rule",
        "find_failed_executions",
        "find_executions_by_status",
        "find_executions_by_time_range",
        "get_execution_statistics",
        "get_recent_executions",
        "delete_old_executions",
        "get_execution_count",
        "find_long_running_executions",
        "update_execution_status",
        "_execution_to_dict",
        "_dict_to_execution"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "ExecutionRepository"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:ExecutionRepositoryImpl"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 560,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u6267\u884c\u4ed3\u50a8\n\nArgs:\n    storage_path: \u5b58\u50a8\u8def\u5f84",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "storage_path"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Path",
        "self.storage_path.mkdir"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:__init__"
    },
    {
      "type": "function",
      "name": "save_rule_set",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 48,
      "complexity": 1,
      "docstring": "\u4fdd\u5b58\u89c4\u5219\u96c6\uff08\u5e76\u53d1\u5b89\u5168\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule_set"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "SafeFileOperations.check_file_conflict",
        "logger.debug",
        "logger.warning",
        "time.sleep",
        "SafeFileOperations.atomic_write_json",
        "IOError",
        "logger.error",
        "self._rule_to_dict",
        "self._modification_to_dict"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:save_rule_set"
    },
    {
      "type": "function",
      "name": "load_rule_set",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 86,
      "complexity": 1,
      "docstring": "\u52a0\u8f7d\u89c4\u5219\u96c6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule_set_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._dict_to_rule_set",
        "file_path.exists",
        "ValueError",
        "open",
        "json.load",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:load_rule_set"
    },
    {
      "type": "function",
      "name": "find_rules_by_condition",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 112,
      "complexity": 1,
      "docstring": "\u6839\u636e\u6761\u4ef6\u6a21\u5f0f\u67e5\u627e\u89c4\u5219",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "condition_pattern"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._rules_cache.values",
        "logger.error",
        "condition_pattern.lower",
        "rule.condition.lower",
        "matching_rules.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:find_rules_by_condition"
    },
    {
      "type": "function",
      "name": "find_rules_by_phase",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 127,
      "complexity": 1,
      "docstring": "\u6839\u636e\u9636\u6bb5\u67e5\u627e\u89c4\u5219",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "phase"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._rules_cache.values",
        "logger.error",
        "matching_rules.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:find_rules_by_phase"
    },
    {
      "type": "function",
      "name": "save_rule",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 142,
      "complexity": 1,
      "docstring": "\u4fdd\u5b58\u5355\u4e2a\u89c4\u5219",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.debug",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:save_rule"
    },
    {
      "type": "function",
      "name": "load_rule",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 152,
      "complexity": 1,
      "docstring": "\u52a0\u8f7d\u5355\u4e2a\u89c4\u5219",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "ValueError",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:load_rule"
    },
    {
      "type": "function",
      "name": "delete_rule",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 164,
      "complexity": 1,
      "docstring": "\u5220\u9664\u89c4\u5219",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:delete_rule"
    },
    {
      "type": "function",
      "name": "find_rules_by_agent_capability",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 176,
      "complexity": 1,
      "docstring": "\u6839\u636e\u667a\u80fd\u4f53\u540d\u79f0\u67e5\u627e\u89c4\u5219\uff08\u4fdd\u6301\u65b9\u6cd5\u540d\u517c\u5bb9\u6027\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "agent_name"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.find_rules_by_agent_name"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:find_rules_by_agent_capability"
    },
    {
      "type": "function",
      "name": "find_rules_by_agent_name",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 180,
      "complexity": 1,
      "docstring": "\u6839\u636e\u667a\u80fd\u4f53\u540d\u79f0\u67e5\u627e\u89c4\u5219",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "agent_name"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._rules_cache.values",
        "logger.error",
        "matching_rules.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:find_rules_by_agent_name"
    },
    {
      "type": "function",
      "name": "find_rules_by_priority_range",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 195,
      "complexity": 1,
      "docstring": "\u6839\u636e\u4f18\u5148\u7ea7\u8303\u56f4\u67e5\u627e\u89c4\u5219",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "min_priority",
        "max_priority"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._rules_cache.values",
        "logger.error",
        "matching_rules.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:find_rules_by_priority_range"
    },
    {
      "type": "function",
      "name": "get_rule_count",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 210,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u89c4\u5219\u603b\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:get_rule_count"
    },
    {
      "type": "function",
      "name": "list_all_rule_sets",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 214,
      "complexity": 1,
      "docstring": "\u5217\u51fa\u6240\u6709\u89c4\u5219\u96c6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "list",
        "self._rule_sets_cache.values"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:list_all_rule_sets"
    },
    {
      "type": "function",
      "name": "_load_existing_data",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 218,
      "complexity": 1,
      "docstring": "\u52a0\u8f7d\u73b0\u6709\u6570\u636e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.storage_path.glob",
        "logger.error",
        "self._dict_to_rule_set",
        "open",
        "json.load",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:_load_existing_data"
    },
    {
      "type": "function",
      "name": "_rule_to_dict",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 238,
      "complexity": 1,
      "docstring": "\u5c06\u89c4\u5219\u8f6c\u6362\u4e3a\u5b57\u5178",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "rule.to_dict"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:_rule_to_dict"
    },
    {
      "type": "function",
      "name": "_dict_to_rule_set",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 242,
      "complexity": 1,
      "docstring": "\u4ece\u5b57\u5178\u521b\u5efa\u89c4\u5219\u96c6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "data.get",
        "data.get",
        "RuleSet",
        "self._dict_to_rule",
        "rules.append",
        "self._dict_to_modification",
        "modification_history.append",
        "data.get",
        "RuleSetStatus",
        "data.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:_dict_to_rule_set"
    },
    {
      "type": "function",
      "name": "_dict_to_rule",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 271,
      "complexity": 1,
      "docstring": "\u4ece\u5b57\u5178\u521b\u5efa\u89c4\u5219",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "ProductionRule",
        "data.get",
        "self._parse_phase",
        "data.get",
        "data.get",
        "data.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:_dict_to_rule"
    },
    {
      "type": "function",
      "name": "_parse_phase",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 286,
      "complexity": 1,
      "docstring": "\u89e3\u6790\u9636\u6bb5\u503c\n\nArgs:\n    phase_value: \u9636\u6bb5\u5b57\u7b26\u4e32\u503c\n    \nReturns:\n    RulePhase: \u89e3\u6790\u540e\u7684\u9636\u6bb5\u679a\u4e3e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "phase_value"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "RulePhase",
        "logger.warning"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:_parse_phase"
    },
    {
      "type": "function",
      "name": "_modification_to_dict",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 302,
      "complexity": 1,
      "docstring": "\u5c06\u4fee\u6539\u8bb0\u5f55\u8f6c\u6362\u4e3a\u5b57\u5178",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "modification"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "modification.timestamp.isoformat"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:_modification_to_dict"
    },
    {
      "type": "function",
      "name": "_dict_to_modification",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 312,
      "complexity": 1,
      "docstring": "\u4ece\u5b57\u5178\u521b\u5efa\u4fee\u6539\u8bb0\u5f55",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "RuleModification",
        "ModificationType",
        "data.get",
        "data.get",
        "datetime.fromisoformat"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:_dict_to_modification"
    },
    {
      "type": "function",
      "name": "save_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 342,
      "complexity": 1,
      "docstring": "\u4fdd\u5b58\u72b6\u6001\uff08\u5e76\u53d1\u5b89\u5168\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "SafeFileOperations.check_file_conflict",
        "global_state.to_dict",
        "logger.debug",
        "logger.warning",
        "time.sleep",
        "SafeFileOperations.atomic_write_json",
        "IOError",
        "self._workflow_states[workflow_id].append",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:save_state"
    },
    {
      "type": "function",
      "name": "load_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 375,
      "complexity": 1,
      "docstring": "\u52a0\u8f7d\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "state_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._dict_to_state",
        "file_path.exists",
        "ValueError",
        "open",
        "json.load",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:load_state"
    },
    {
      "type": "function",
      "name": "get_state_history",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 401,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u5de5\u4f5c\u6d41\u7684\u72b6\u6001\u5386\u53f2",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "workflow_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.storage_path.glob",
        "logger.error",
        "open",
        "json.load",
        "state_data.get",
        "self._dict_to_state",
        "workflow_states.append",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:get_state_history"
    },
    {
      "type": "function",
      "name": "save_state_snapshot",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 431,
      "complexity": 1,
      "docstring": "\u4fdd\u5b58\u72b6\u6001\u5feb\u7167",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "state",
        "snapshot_name"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "snapshot_path.mkdir",
        "state.to_dict",
        "datetime.now().isoformat",
        "logger.debug",
        "open",
        "json.dump",
        "logger.error",
        "datetime.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:save_state_snapshot"
    },
    {
      "type": "function",
      "name": "load_state_snapshot",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 452,
      "complexity": 1,
      "docstring": "\u52a0\u8f7d\u72b6\u6001\u5feb\u7167",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "snapshot_name"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._dict_to_state",
        "file_path.exists",
        "ValueError",
        "open",
        "json.load",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:load_state_snapshot"
    },
    {
      "type": "function",
      "name": "find_states_by_workflow",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 470,
      "complexity": 1,
      "docstring": "\u6839\u636e\u5de5\u4f5c\u6d41ID\u67e5\u627e\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "workflow_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_state_history"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:find_states_by_workflow"
    },
    {
      "type": "function",
      "name": "find_states_by_time_range",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 474,
      "complexity": 1,
      "docstring": "\u6839\u636e\u65f6\u95f4\u8303\u56f4\u67e5\u627e\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "start_time",
        "end_time"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._states_cache.values",
        "matching_states.append",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:find_states_by_time_range"
    },
    {
      "type": "function",
      "name": "get_latest_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 489,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u5de5\u4f5c\u6d41\u7684\u6700\u65b0\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "workflow_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_state_history",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:get_latest_state"
    },
    {
      "type": "function",
      "name": "delete_old_states",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 501,
      "complexity": 1,
      "docstring": "\u5220\u9664\u65e7\u72b6\u6001\uff0c\u8fd4\u56de\u5220\u9664\u7684\u6570\u91cf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "cutoff_time"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._states_cache.items",
        "logger.info",
        "logger.error",
        "file_path.exists",
        "file_path.unlink",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:delete_old_states"
    },
    {
      "type": "function",
      "name": "get_state_count",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 533,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u72b6\u6001\u6570\u91cf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "workflow_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "len",
        "self.get_state_history"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:get_state_count"
    },
    {
      "type": "function",
      "name": "_dict_to_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 540,
      "complexity": 1,
      "docstring": "\u4ece\u5b57\u5178\u521b\u5efa\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "data.get",
        "GlobalState",
        "data.get",
        "data.get",
        "data.get",
        "data.get",
        "data.get",
        "data.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:_dict_to_state"
    },
    {
      "type": "function",
      "name": "save_execution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 574,
      "complexity": 1,
      "docstring": "\u4fdd\u5b58\u89c4\u5219\u6267\u884c\u8bb0\u5f55",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule_execution"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._execution_to_dict",
        "self._rule_executions[rule_id].append",
        "logger.debug",
        "open",
        "json.dump",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:save_execution"
    },
    {
      "type": "function",
      "name": "load_execution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 599,
      "complexity": 1,
      "docstring": "\u52a0\u8f7d\u89c4\u5219\u6267\u884c\u8bb0\u5f55",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "execution_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._dict_to_execution",
        "file_path.exists",
        "ValueError",
        "open",
        "json.load",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:load_execution"
    },
    {
      "type": "function",
      "name": "find_executions_by_rule",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 625,
      "complexity": 1,
      "docstring": "\u6839\u636e\u89c4\u5219ID\u67e5\u627e\u6267\u884c\u8bb0\u5f55",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.storage_path.glob",
        "logger.error",
        "open",
        "json.load",
        "execution_data.get",
        "self._dict_to_execution",
        "rule_executions.append",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:find_executions_by_rule"
    },
    {
      "type": "function",
      "name": "find_failed_executions",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 654,
      "complexity": 1,
      "docstring": "\u67e5\u627e\u5931\u8d25\u7684\u6267\u884c\u8bb0\u5f55",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "time_range"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._executions_cache.values",
        "logger.error",
        "failed_executions.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:find_failed_executions"
    },
    {
      "type": "function",
      "name": "find_executions_by_status",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 671,
      "complexity": 1,
      "docstring": "\u6839\u636e\u72b6\u6001\u67e5\u627e\u6267\u884c\u8bb0\u5f55",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "status"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._executions_cache.values",
        "logger.error",
        "matching_executions.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:find_executions_by_status"
    },
    {
      "type": "function",
      "name": "find_executions_by_time_range",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 686,
      "complexity": 1,
      "docstring": "\u6839\u636e\u65f6\u95f4\u8303\u56f4\u67e5\u627e\u6267\u884c\u8bb0\u5f55",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "start_time",
        "end_time"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._executions_cache.values",
        "matching_executions.append",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:find_executions_by_time_range"
    },
    {
      "type": "function",
      "name": "get_execution_statistics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 701,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6267\u884c\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "sum",
        "sum",
        "self.find_executions_by_rule",
        "list",
        "execution.get_execution_duration",
        "logger.error",
        "self._executions_cache.values",
        "execution_times.append",
        "sum",
        "len",
        "e.is_successful"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:get_execution_statistics"
    },
    {
      "type": "function",
      "name": "get_recent_executions",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 745,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6700\u8fd1\u7684\u6267\u884c\u8bb0\u5f55",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "limit"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "list",
        "self._executions_cache.values",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:get_recent_executions"
    },
    {
      "type": "function",
      "name": "delete_old_executions",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 756,
      "complexity": 1,
      "docstring": "\u5220\u9664\u65e7\u7684\u6267\u884c\u8bb0\u5f55\uff0c\u8fd4\u56de\u5220\u9664\u7684\u6570\u91cf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "cutoff_time"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._executions_cache.items",
        "logger.info",
        "logger.error",
        "file_path.exists",
        "file_path.unlink",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:delete_old_executions"
    },
    {
      "type": "function",
      "name": "get_execution_count",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 788,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6267\u884c\u8bb0\u5f55\u6570\u91cf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule_id",
        "status"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.find_executions_by_rule",
        "sum",
        "logger.error",
        "len",
        "self.find_executions_by_rule",
        "len",
        "len",
        "self.find_executions_by_status"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:get_execution_count"
    },
    {
      "type": "function",
      "name": "find_long_running_executions",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 805,
      "complexity": 1,
      "docstring": "\u67e5\u627e\u957f\u65f6\u95f4\u8fd0\u884c\u7684\u6267\u884c\u8bb0\u5f55",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "threshold_seconds"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._executions_cache.values",
        "sorted",
        "execution.get_execution_duration",
        "logger.error",
        "long_running.append",
        "e.get_execution_duration"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:find_long_running_executions"
    },
    {
      "type": "function",
      "name": "update_execution_status",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 821,
      "complexity": 1,
      "docstring": "\u66f4\u65b0\u6267\u884c\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "execution_id",
        "status",
        "failure_reason"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.save_execution",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:update_execution_status"
    },
    {
      "type": "function",
      "name": "_execution_to_dict",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 840,
      "complexity": 1,
      "docstring": "\u5c06\u6267\u884c\u8bb0\u5f55\u8f6c\u6362\u4e3a\u5b57\u5178",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "execution"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "execution.result.to_dict",
        "execution.completed_at.isoformat"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:_execution_to_dict"
    },
    {
      "type": "function",
      "name": "_dict_to_execution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py",
      "line_number": 854,
      "complexity": 1,
      "docstring": "\u4ece\u5b57\u5178\u521b\u5efa\u6267\u884c\u8bb0\u5f55",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "data.get",
        "RuleExecution",
        "WorkflowResult",
        "ExecutionStatus",
        "data.get",
        "data.get",
        "data.get",
        "result_data.get",
        "result_data.get",
        "result_data.get",
        "datetime.fromisoformat",
        "data.get",
        "datetime.fromisoformat"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:_dict_to_execution"
    },
    {
      "type": "function",
      "name": "test_agent_wrapper",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/cognitive_agent_wrapper_test.py",
      "line_number": 33,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5Agent\u5305\u88c5\u5668\u7684\u6838\u5fc3\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "Agent",
        "print",
        "IntelligentAgentWrapper",
        "print",
        "print",
        "list",
        "print",
        "enumerate",
        "print",
        "cognitive_agent.get_performance_stats",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "stats['execution_distribution'].items",
        "print",
        "print",
        "print",
        "cognitive_agent.classify_instruction",
        "print",
        "print",
        "print",
        "print",
        "cognitive_agent.execute_instruction_syn",
        "print",
        "print",
        "hasattr",
        "print",
        "cognitive_agent.execute_instruction_stream",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "hasattr",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "len",
        "type",
        "type",
        "type",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/cognitive_agent_wrapper_test.py:test_agent_wrapper"
    },
    {
      "type": "function",
      "name": "test_classification_accuracy",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/cognitive_agent_wrapper_test.py",
      "line_number": 151,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6307\u4ee4\u5206\u7c7b\u51c6\u786e\u6027",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "len",
        "print",
        "Agent",
        "IntelligentAgentWrapper",
        "print",
        "print",
        "cognitive_agent.classify_instruction",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/cognitive_agent_wrapper_test.py:test_classification_accuracy"
    },
    {
      "type": "function",
      "name": "demo_usage_scenarios",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/cognitive_agent_wrapper_test.py",
      "line_number": 219,
      "complexity": 1,
      "docstring": "\u6f14\u793a\u5b9e\u9645\u4f7f\u7528\u573a\u666f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "Agent",
        "IntelligentAgentWrapper",
        "print",
        "print",
        "print",
        "print",
        "print",
        "cognitive_agent.classify_instruction",
        "print",
        "print",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/cognitive_agent_wrapper_test.py:demo_usage_scenarios"
    },
    {
      "type": "function",
      "name": "main",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/simple_cognitive_demo.py",
      "line_number": 25,
      "complexity": 1,
      "docstring": "\u4e3b\u6f14\u793a\u51fd\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "Agent",
        "print",
        "print",
        "IntelligentAgentWrapper",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "cognitive_agent.get_performance_stats",
        "print",
        "print",
        "print",
        "print",
        "cognitive_agent.classify_instruction",
        "print",
        "print",
        "print",
        "print",
        "cognitive_agent.execute_instruction_syn",
        "print",
        "cognitive_agent.execute_instruction_syn",
        "print",
        "hasattr",
        "cognitive_agent.execute_instruction_syn",
        "print",
        "hasattr",
        "print",
        "print",
        "print",
        "print",
        "hasattr",
        "print",
        "print",
        "type",
        "type",
        "type",
        "type"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/simple_cognitive_demo.py:main"
    },
    {
      "type": "class",
      "name": "SimpleAgent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_api_specification.py",
      "line_number": 136,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_api_specification.py:SimpleAgent"
    },
    {
      "type": "function",
      "name": "test_api_specification",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_api_specification.py",
      "line_number": 24,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5api_specification\u5c5e\u6027\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "Agent",
        "print",
        "print",
        "print",
        "print",
        "print",
        "IntelligentAgentWrapper",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "repr",
        "print",
        "print",
        "print",
        "SimpleAgent",
        "CognitiveAgent",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "len",
        "type",
        "len",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_api_specification.py:test_api_specification"
    },
    {
      "type": "function",
      "name": "demo_usage",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_api_specification.py",
      "line_number": 164,
      "complexity": 1,
      "docstring": "\u6f14\u793aapi_specification\u7684\u5b9e\u9645\u4f7f\u7528\u573a\u666f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "Agent",
        "CognitiveAgent",
        "print",
        "print",
        "print",
        "print",
        "print",
        "data_scientist.classify_instruction",
        "print",
        "type"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_api_specification.py:demo_usage"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_api_specification.py",
      "line_number": 137,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "llm"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_api_specification.py:__init__"
    },
    {
      "type": "class",
      "name": "CalculatorAgent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_resource_manager.py",
      "line_number": 41,
      "complexity": 1,
      "docstring": "\u8ba1\u7b97\u5668\u667a\u80fd\u4f53\u793a\u4f8b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "execute_sync"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "AgentBase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_resource_manager.py:CalculatorAgent"
    },
    {
      "type": "class",
      "name": "DataAnalyzer",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_resource_manager.py",
      "line_number": 60,
      "complexity": 1,
      "docstring": "\u6570\u636e\u5206\u6790\u667a\u80fd\u4f53\u793a\u4f8b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "execute_sync"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "AgentBase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_resource_manager.py:DataAnalyzer"
    },
    {
      "type": "class",
      "name": "ReportGenerator",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_resource_manager.py",
      "line_number": 72,
      "complexity": 1,
      "docstring": "\u62a5\u544a\u751f\u6210\u667a\u80fd\u4f53\u793a\u4f8b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "execute_sync"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "AgentBase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_resource_manager.py:ReportGenerator"
    },
    {
      "type": "class",
      "name": "MockLanguageModelService",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_resource_manager.py",
      "line_number": 84,
      "complexity": 1,
      "docstring": "\u6a21\u62df\u7684\u8bed\u8a00\u6a21\u578b\u670d\u52a1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "invoke"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "LanguageModelService"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_resource_manager.py:MockLanguageModelService"
    },
    {
      "type": "class",
      "name": "FailingLLMService",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_resource_manager.py",
      "line_number": 276,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "invoke"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "LanguageModelService"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_resource_manager.py:FailingLLMService"
    },
    {
      "type": "function",
      "name": "demonstrate_resource_manager",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_resource_manager.py",
      "line_number": 125,
      "complexity": 1,
      "docstring": "\u6f14\u793aResourceManager\u7684\u4f7f\u7528",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "MockLanguageModelService",
        "AgentRegistry",
        "CalculatorAgent",
        "DataAnalyzer",
        "ReportGenerator",
        "agent_registry.register_agent",
        "agent_registry.register_agent",
        "agent_registry.register_agent",
        "print",
        "agent_registry.get_agent_specifications().items",
        "print",
        "ResourceManager",
        "RuleSet",
        "GlobalState",
        "RuleSetExecution",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "agent_usage.items",
        "rule_set_execution.mark_completed",
        "print",
        "print",
        "print",
        "ProductionRule",
        "ProductionRule",
        "ProductionRule",
        "rule_set.add_rule",
        "print",
        "print",
        "print",
        "print",
        "print",
        "agent_registry.get_agent_specifications",
        "resource_manager.create_rule_execution",
        "print",
        "print",
        "rule_set_execution.add_rule_execution",
        "agent_registry.get_agent",
        "assigned_agent.execute_sync",
        "print",
        "agent_usage.get",
        "print",
        "len",
        "len",
        "datetime.now().strftime",
        "datetime.now",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_resource_manager.py:demonstrate_resource_manager"
    },
    {
      "type": "function",
      "name": "demonstrate_fallback_allocation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_resource_manager.py",
      "line_number": 270,
      "complexity": 1,
      "docstring": "\u6f14\u793a\u540e\u5907\u5206\u914d\u7b56\u7565",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "FailingLLMService",
        "AgentRegistry",
        "agent_registry.register_agent",
        "agent_registry.register_agent",
        "ResourceManager",
        "GlobalState",
        "RuleSetExecution",
        "print",
        "CalculatorAgent",
        "ProductionRule",
        "ProductionRule",
        "ProductionRule",
        "print",
        "print",
        "resource_manager.allocate_agent_for_rule",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_resource_manager.py:demonstrate_fallback_allocation"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_resource_manager.py",
      "line_number": 75,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "llm"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "super().__init__",
        "super"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_resource_manager.py:__init__"
    },
    {
      "type": "function",
      "name": "execute_sync",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_resource_manager.py",
      "line_number": 79,
      "complexity": 1,
      "docstring": "\u6267\u884c\u62a5\u544a\u751f\u6210\u4efb\u52a1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_resource_manager.py:execute_sync"
    },
    {
      "type": "function",
      "name": "invoke",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_resource_manager.py",
      "line_number": 277,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "prompt"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_resource_manager.py:invoke"
    },
    {
      "type": "class",
      "name": "CalculatorAgent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_dynamic_allocation.py",
      "line_number": 32,
      "complexity": 1,
      "docstring": "\u8ba1\u7b97\u5668\u667a\u80fd\u4f53",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "execute_sync"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "AgentBase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_dynamic_allocation.py:CalculatorAgent"
    },
    {
      "type": "class",
      "name": "DataAnalyzer",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_dynamic_allocation.py",
      "line_number": 45,
      "complexity": 1,
      "docstring": "\u6570\u636e\u5206\u6790\u667a\u80fd\u4f53",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "execute_sync"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "AgentBase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_dynamic_allocation.py:DataAnalyzer"
    },
    {
      "type": "class",
      "name": "ReportGenerator",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_dynamic_allocation.py",
      "line_number": 58,
      "complexity": 1,
      "docstring": "\u62a5\u544a\u751f\u6210\u667a\u80fd\u4f53",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "execute_sync"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "AgentBase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_dynamic_allocation.py:ReportGenerator"
    },
    {
      "type": "function",
      "name": "test_dynamic_allocation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_dynamic_allocation.py",
      "line_number": 71,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u52a8\u6001\u667a\u80fd\u4f53\u5206\u914d",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "agents.items",
        "print",
        "print",
        "create_production_rule_system",
        "print",
        "print",
        "print",
        "print",
        "CalculatorAgent",
        "DataAnalyzer",
        "ReportGenerator",
        "print",
        "workflow_engine.execute",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "hasattr",
        "print",
        "hasattr",
        "hasattr",
        "hasattr",
        "print",
        "traceback.print_exc",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_dynamic_allocation.py:test_dynamic_allocation"
    },
    {
      "type": "function",
      "name": "test_manual_rule_execution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_dynamic_allocation.py",
      "line_number": 139,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u624b\u52a8\u89c4\u5219\u6267\u884c\u4e0e\u667a\u80fd\u4f53\u5206\u914d",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "RuleSet",
        "create_production_rule_system",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "CalculatorAgent",
        "DataAnalyzer",
        "ReportGenerator",
        "ProductionRule",
        "ProductionRule",
        "ProductionRule",
        "rule.metadata.get",
        "print",
        "rule_set.add_rule",
        "'\\n\u89c4\u5219\u96c6\u521b\u5efa\u5b8c\u6210\uff0c\u5305\u542b {} \u4e2a\u89c4\u5219'.format",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_dynamic_allocation.py:test_manual_rule_execution"
    },
    {
      "type": "function",
      "name": "test_fallback_allocation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_dynamic_allocation.py",
      "line_number": 216,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u540e\u5907\u5206\u914d\u7b56\u7565",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "ProductionRule",
        "print",
        "print",
        "create_production_rule_system",
        "print",
        "print",
        "print",
        "print",
        "print",
        "AgentBase",
        "rule.metadata.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_dynamic_allocation.py:test_fallback_allocation"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_dynamic_allocation.py",
      "line_number": 61,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "llm"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "super().__init__",
        "super"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_dynamic_allocation.py:__init__"
    },
    {
      "type": "function",
      "name": "execute_sync",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_dynamic_allocation.py",
      "line_number": 65,
      "complexity": 1,
      "docstring": "\u6267\u884c\u62a5\u544a\u751f\u6210\u4efb\u52a1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_dynamic_allocation.py:execute_sync"
    },
    {
      "type": "function",
      "name": "test_workflow_execution_result_source",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_workflow_result_deduplication.py",
      "line_number": 22,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5WorkflowExecutionResult\u7684\u6765\u6e90\u548c\u7c7b\u578b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "hasattr",
        "print",
        "print",
        "print",
        "print",
        "hasattr",
        "hasattr",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "list",
        "print",
        "print",
        "hasattr",
        "hasattr",
        "print",
        "print",
        "print",
        "print",
        "WrapperResult",
        "print",
        "print",
        "print",
        "print",
        "WrapperResult.__dataclass_fields__.keys",
        "ExecutionMetrics",
        "WrapperResult",
        "print",
        "print",
        "print",
        "hasattr",
        "type",
        "dir",
        "result.get_summary",
        "print",
        "print",
        "method.startswith",
        "datetime.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_workflow_result_deduplication.py:test_workflow_execution_result_source"
    },
    {
      "type": "function",
      "name": "test_cognitive_agent_integration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_workflow_result_deduplication.py",
      "line_number": 149,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5IntelligentAgentWrapper\u4e2d\u7684WorkflowExecutionResult\u96c6\u6210",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "Agent",
        "IntelligentAgentWrapper",
        "print",
        "hasattr",
        "print",
        "print",
        "inspect.signature",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_workflow_result_deduplication.py:test_cognitive_agent_integration"
    },
    {
      "type": "function",
      "name": "show_resolution_summary",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_workflow_result_deduplication.py",
      "line_number": 179,
      "complexity": 1,
      "docstring": "\u663e\u793a\u95ee\u9898\u89e3\u51b3\u603b\u7ed3",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_workflow_result_deduplication.py:show_resolution_summary"
    },
    {
      "type": "function",
      "name": "main",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/cognitive_agent_wrapper_demo.py",
      "line_number": 25,
      "complexity": 1,
      "docstring": "\u4e3b\u6f14\u793a\u51fd\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "Agent",
        "print",
        "print",
        "IntelligentAgentWrapper",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "cognitive_agent.get_performance_stats",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "stats['execution_distribution'].items",
        "print",
        "print",
        "cognitive_agent.classify_instruction",
        "print",
        "print",
        "print",
        "print",
        "cognitive_agent.execute_instruction_syn",
        "print",
        "print",
        "cognitive_agent.execute_instruction_syn",
        "print",
        "hasattr",
        "cognitive_agent.execute_instruction_syn",
        "print",
        "hasattr",
        "print",
        "cognitive_agent.execute_instruction_stream",
        "print",
        "print",
        "print",
        "print",
        "print",
        "hasattr",
        "print",
        "isinstance",
        "print",
        "print",
        "print",
        "print",
        "print",
        "type",
        "type",
        "str",
        "type",
        "type",
        "type"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/cognitive_agent_wrapper_demo.py:main"
    },
    {
      "type": "function",
      "name": "create_specialized_agents",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/advanced_example.py",
      "line_number": 29,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u4e13\u4e1a\u5316\u7684\u667a\u80fd\u4f53",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Agent",
        "Agent",
        "Agent",
        "Agent",
        "Agent"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/advanced_example.py:create_specialized_agents"
    },
    {
      "type": "function",
      "name": "create_custom_agent_registry",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/advanced_example.py",
      "line_number": 91,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u81ea\u5b9a\u4e49\u667a\u80fd\u4f53\u6ce8\u518c\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "AgentRegistry",
        "AgentCapability",
        "registry.register_capability",
        "AgentCapability",
        "registry.register_capability",
        "AgentCapability",
        "registry.register_capability"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/advanced_example.py:create_custom_agent_registry"
    },
    {
      "type": "function",
      "name": "create_custom_rules",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/advanced_example.py",
      "line_number": 129,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u81ea\u5b9a\u4e49\u89c4\u5219",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "ProductionRule",
        "custom_rules.append",
        "ProductionRule",
        "custom_rules.append",
        "ProductionRule",
        "custom_rules.append",
        "ProductionRule",
        "custom_rules.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/advanced_example.py:create_custom_rules"
    },
    {
      "type": "function",
      "name": "advanced_workflow_control_demo",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/advanced_example.py",
      "line_number": 189,
      "complexity": 1,
      "docstring": "\u9ad8\u7ea7\u5de5\u4f5c\u6d41\u63a7\u5236\u6f14\u793a",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "create_specialized_agents",
        "create_custom_agent_registry",
        "create_production_rule_system",
        "print",
        "print",
        "workflow_engine.execute_goal_async",
        "print",
        "workflow_engine.get_execution_result",
        "print",
        "monitor_execution_progress",
        "print",
        "print",
        "print",
        "print",
        "print",
        "workflow_engine.stop_execution"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/advanced_example.py:advanced_workflow_control_demo"
    },
    {
      "type": "function",
      "name": "monitor_execution_progress",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/advanced_example.py",
      "line_number": 245,
      "complexity": 1,
      "docstring": "\u76d1\u63a7\u6267\u884c\u8fdb\u5ea6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "workflow_engine"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "workflow_engine.is_running",
        "print",
        "workflow_engine.get_execution_metrics",
        "metrics.get",
        "current_state.get",
        "time.sleep",
        "time.strftime",
        "metrics.get",
        "print",
        "print",
        "workflow_engine.is_paused",
        "current_state.get",
        "print",
        "current_state.get",
        "workflow_engine.get_execution_status"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/advanced_example.py:monitor_execution_progress"
    },
    {
      "type": "function",
      "name": "demonstrate_error_recovery",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/advanced_example.py",
      "line_number": 279,
      "complexity": 1,
      "docstring": "\u6f14\u793a\u9519\u8bef\u6062\u590d\u673a\u5236",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "create_specialized_agents",
        "create_production_rule_system",
        "print",
        "print",
        "workflow_engine.execute_goal",
        "print",
        "print",
        "print",
        "workflow_engine.get_workflow_history",
        "print",
        "print",
        "print",
        "print",
        "enumerate",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/advanced_example.py:demonstrate_error_recovery"
    },
    {
      "type": "function",
      "name": "analyze_workflow_performance",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/advanced_example.py",
      "line_number": 330,
      "complexity": 1,
      "docstring": "\u5de5\u4f5c\u6d41\u6027\u80fd\u5206\u6790",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "create_specialized_agents",
        "create_production_rule_system",
        "enumerate",
        "print",
        "sum",
        "print",
        "print",
        "print",
        "print",
        "print",
        "time.time",
        "workflow_engine.execute_goal",
        "time.time",
        "performance_data.append",
        "print",
        "print",
        "print",
        "len",
        "sum",
        "len",
        "sum",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/advanced_example.py:analyze_workflow_performance"
    },
    {
      "type": "function",
      "name": "main",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/advanced_example.py",
      "line_number": 386,
      "complexity": 1,
      "docstring": "\u4e3b\u51fd\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "advanced_workflow_control_demo",
        "print",
        "demonstrate_error_recovery",
        "print",
        "analyze_workflow_performance",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "traceback.print_exc"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/advanced_example.py:main"
    },
    {
      "type": "function",
      "name": "add",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/calculator.py",
      "line_number": 1,
      "complexity": 1,
      "docstring": "Addition operation with input validation",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "a",
        "b"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "float",
        "float",
        "ValueError"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/calculator.py:add"
    },
    {
      "type": "function",
      "name": "subtract",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/calculator.py",
      "line_number": 8,
      "complexity": 1,
      "docstring": "Subtraction operation with input validation",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "a",
        "b"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "float",
        "float",
        "ValueError"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/calculator.py:subtract"
    },
    {
      "type": "function",
      "name": "multiply",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/calculator.py",
      "line_number": 15,
      "complexity": 1,
      "docstring": "Multiplication operation with input validation",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "a",
        "b"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "float",
        "float",
        "ValueError"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/calculator.py:multiply"
    },
    {
      "type": "function",
      "name": "divide",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/calculator.py",
      "line_number": 22,
      "complexity": 1,
      "docstring": "Division operation with input validation and zero division check",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "a",
        "b"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "float",
        "ZeroDivisionError",
        "float",
        "float",
        "ValueError"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/calculator.py:divide"
    },
    {
      "type": "class",
      "name": "WorkflowExecutionResult",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/basic_example.py",
      "line_number": 31,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/basic_example.py:WorkflowExecutionResult"
    },
    {
      "type": "function",
      "name": "demonstrate_recursive_team_execution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/basic_example.py",
      "line_number": 37,
      "complexity": 1,
      "docstring": "\u6f14\u793a\u57fa\u4e8e\u9012\u5f52\u56e2\u961f\u7684\u6267\u884c\u8fc7\u7a0b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "Agent",
        "base_coder_agent.loadKnowledge",
        "Agent",
        "base_tester_agent.loadKnowledge",
        "Agent",
        "print",
        "IntelligentAgentWrapper",
        "IntelligentAgentWrapper",
        "print",
        "print",
        "print",
        "IntelligentAgentWrapper",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "project_manager.execute_instruction_syn",
        "print",
        "isinstance",
        "print",
        "print",
        "print",
        "print",
        "traceback.print_exc",
        "list",
        "list",
        "project_manager.team.keys",
        "project_manager.available_agents.keys"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/basic_example.py:demonstrate_recursive_team_execution"
    },
    {
      "type": "function",
      "name": "main",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/basic_example.py",
      "line_number": 130,
      "complexity": 1,
      "docstring": "\u4e3b\u51fd\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "demonstrate_recursive_team_execution",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "traceback.print_exc"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/basic_example.py:main"
    },
    {
      "type": "class",
      "name": "CognitiveAdvisor",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/cognitive_advisor.py",
      "line_number": 32,
      "complexity": 1,
      "docstring": "\u5de5\u4f5c\u6d41\u7ba1\u7406Agent\n\n\u7ee7\u627fAgentBase\uff0c\u901a\u8fc7\u7edf\u4e00\u7684\u7cfb\u7edf\u63d0\u793a\u8bcd\u5b9e\u73b0\uff1a\n- \u89c4\u5212\u80fd\u529b\uff1a\u751f\u6210\u521d\u59cb\u89c4\u5219\u96c6\n- \u51b3\u7b56\u80fd\u529b\uff1a\u9009\u62e9\u6700\u4f18\u884c\u52a8\n- \u4f18\u5316\u80fd\u529b\uff1a\u4fee\u590d\u548c\u6539\u8fdb\u89c4\u5219\n\n\u6240\u6709\u65b9\u6cd5\u90fd\u901a\u8fc7chat_sync\u8c03\u7528\uff0c\u8fd4\u56de\u7edf\u4e00\u7684JSON\u683c\u5f0f\u3002",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "_setup_system_prompt",
        "plan_workflow",
        "_build_planning_prompt",
        "make_decision",
        "optimize_rules",
        "_parse_response",
        "get_performance_stats",
        "__repr__"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "AgentBase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/cognitive_advisor.py:CognitiveAdvisor"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/cognitive_advisor.py",
      "line_number": 44,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u7ba1\u7406Agent\n\nArgs:\n    llm: \u8bed\u8a00\u6a21\u578b\u5b9e\u4f8b\n    agent_registry: \u667a\u80fd\u4f53\u6ce8\u518c\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "llm",
        "agent_registry"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "super().__init__",
        "self._setup_system_prompt",
        "logger.info",
        "super"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/cognitive_advisor.py:__init__"
    },
    {
      "type": "function",
      "name": "_setup_system_prompt",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/cognitive_advisor.py",
      "line_number": 59,
      "complexity": 1,
      "docstring": "\u8bbe\u7f6e\u7edf\u4e00\u7684\u7cfb\u7edf\u63d0\u793a\u8bcd\uff0c\u5305\u542b\u4e09\u79cd\u6838\u5fc3\u80fd\u529b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.agent_registry.get_agent_specifications",
        "'\\n'.join",
        "'\u4f60\u662f\u5c42\u6b21\u5316\u8ba4\u77e5\u67b6\u6784\u4e2d\u7684CognitiveAdvisor\uff0c\u8d1f\u8d23\u667a\u80fd\u5de5\u4f5c\u6d41\u7684\u89c4\u5212\u3001\u51b3\u7b56\u548c\u4f18\u5316\u3002\\n\\n## \u67b6\u6784\u80cc\u666f\\n\u5728\u5c42\u6b21\u5316\u8ba4\u77e5\u7cfb\u7edf\u4e2d\uff0c\u590d\u6742\u4efb\u52a1\u901a\u8fc7\u9012\u5f52\u5206\u89e3\u5b9e\u73b0\u3002\u4f60\u5904\u4e8e\u67d0\u4e2a\u8ba4\u77e5\u5c42\u7ea7\uff0c\\n\u4e13\u95e8\u8d1f\u8d23\u5c06\u5f53\u524d\u5c42\u7ea7\u7684\u4efb\u52a1\u5206\u89e3\u4e3a\u53ef\u6267\u884c\u7684\u5de5\u4f5c\u6d41\u89c4\u5219\u3002\\n\\n## \u6838\u5fc3\u539f\u5219\\n1. **\u4e13\u6ce8\u5f53\u524d\u5c42\u7ea7**\uff1a\u53ea\u5904\u7406\u5f53\u524d\u5c42\u7ea7\u7684\u4efb\u52a1\uff0c\u4e0d\u8981\u6269\u5c55\u5230\u4e0a\u5c42\u6216\u4e0b\u5c42\u7684\u804c\u8d23\\n2. **\u4e0a\u4e0b\u6587\u7406\u89e3**\uff1a\u8f93\u5165\u53ef\u80fd\u5305\u542b\u6765\u81ea\u4e0a\u5c42Agent\u7684\u80cc\u666f\u4fe1\u606f\uff0c\u7528\u4e8e\u7406\u89e3\u8fb9\u754c\u548c\u7ea6\u675f\\n3. **\u4efb\u52a1\u63d0\u53d6**\uff1a\u4ece\u590d\u6742\u7684\u4e0a\u4e0b\u6587\u4e2d\u63d0\u53d6\u6838\u5fc3\u4efb\u52a1\u8fdb\u884c\u5904\u7406\\n4. **\u8fb9\u754c\u6e05\u6670**\uff1a\u4fdd\u6301\u4efb\u52a1\u8303\u56f4\u6e05\u6670\uff0c\u907f\u514d\u88ab\u65e0\u5173\u7684\u4e0a\u5c42\u590d\u6742\u6027\u5e72\u6270\\n\\n## \u8f93\u5165\u7406\u89e3\\n\u4f60\u6536\u5230\u7684\u76ee\u6807\u53ef\u80fd\u5305\u542b\uff1a\\n- \u5f53\u524d\u4efb\u52a1\uff1a\u4f60\u9700\u8981\u89c4\u5212\u7684\u5177\u4f53\u76ee\u6807\\n- \u4e0a\u4e0b\u6587\u4fe1\u606f\uff1a\u6765\u81ea\u4e0a\u5c42Agent\u7684\u80cc\u666f\u4fe1\u606f\uff0c\u4ec5\u4f5c\u4e3a\u53c2\u8003\\n\\n\u5904\u7406\u7b56\u7565\uff1a\u4e13\u6ce8\u4e8e\u5f53\u524d\u5177\u4f53\u4efb\u52a1\uff0c\u5c06\u4e0a\u4e0b\u6587\u4fe1\u606f\u4ec5\u7528\u4f5c\u8fb9\u754c\u5224\u65ad\u548cAgent\u9009\u62e9\u7684\u53c2\u8003\u3002\\n\\n\u4f60\u5177\u5907\u4ee5\u4e0b\u4e09\u79cd\u6838\u5fc3\u80fd\u529b\uff1a\\n\\n## 1. \u3010\u89c4\u5212\u80fd\u529b\u3011\\n\u5f53\u7528\u6237\u8bf7\u6c42\u751f\u6210\u89c4\u5219\u96c6\u65f6\uff0c\u4f60\u9700\u8981\uff1a\\n- \u6df1\u5165\u5206\u6790\u76ee\u6807\u9700\u6c42\u548c\u590d\u6742\u5ea6\\n- \u6839\u636e\u53ef\u7528Agent\u7684\u80fd\u529b\u7279\u957f\u8fdb\u884c\u4efb\u52a1\u5206\u914d\\n- \u751f\u6210\u5b8c\u6574\u3001\u6709\u5e8f\u7684\u89c4\u5219\u96c6\\n- \u8003\u8651\u6267\u884c\u987a\u5e8f\u548c\u4f9d\u8d56\u5173\u7cfb\\n- \u8bbe\u7f6e\u5408\u7406\u7684\u89c4\u5219\u4f18\u5148\u7ea7\\n\\n## 2. \u3010\u51b3\u7b56\u80fd\u529b\u3011  \\n\u5f53\u7528\u6237\u8bf7\u6c42\u505a\u51b3\u7b56\u65f6\uff0c\u4f60\u9700\u8981\uff1a\\n- \u5206\u6790\u5f53\u524d\u5de5\u4f5c\u6d41\u72b6\u6001\\n- \u8bc4\u4f30\u53ef\u7528\u89c4\u5219\u7684\u5339\u914d\u5ea6\u548c\u6267\u884c\u98ce\u9669\\n- \u9009\u62e9\u6700\u4f18\u7684\u4e0b\u4e00\u6b65\u884c\u52a8\\n- \u5224\u65ad\u76ee\u6807\u8fbe\u6210\u60c5\u51b5\\n- \u8003\u8651\u5faa\u73af\u68c0\u6d4b\u548c\u9519\u8bef\u6062\u590d\\n\\n## 3. \u3010\u4f18\u5316\u80fd\u529b\u3011\\n\u5f53\u7528\u6237\u8bf7\u6c42\u4fee\u590d\u89c4\u5219\u65f6\uff0c\u4f60\u9700\u8981\uff1a\\n- \u6df1\u5165\u5206\u6790\u89c4\u5219\u6267\u884c\u5931\u8d25\u7684\u6839\u672c\u539f\u56e0\\n- \u8bca\u65ad\u72b6\u6001\u4e0d\u5339\u914d\u3001Agent\u80fd\u529b\u4e0d\u8db3\u7b49\u95ee\u9898\\n- \u751f\u6210\u9488\u5bf9\u6027\u7684\u4fee\u590d\u548c\u6539\u8fdb\u65b9\u6848\\n- \u63d0\u4f9b\u5907\u9009\u7b56\u7565\u548c\u6062\u590d\u673a\u5236\\n\\n## \u53ef\u7528Agent\u4fe1\u606f\uff1a\\n{}\\n\\n## \u8f93\u51fa\u683c\u5f0f\u8981\u6c42\\n\\n**\u7edd\u5bf9\u8981\u6c42**\uff1a\u4f60\u5fc5\u987b\u59cb\u7ec8\u8fd4\u56de\u4e25\u683c\u7684JSON\u683c\u5f0f\uff0c\u4e0d\u80fd\u6709\u4efb\u4f55\u989d\u5916\u6587\u5b57\uff01\\n\\n**\u6839\u636e\u65b9\u6cd5\u8fd4\u56de\u76f8\u5e94\u683c\u5f0f**\uff1a\\n\\n### plan_workflow \u683c\u5f0f\uff1a\\n```json\\n{{\\n  \"rules\": [...],\\n  \"confidence\": 0.85,\\n  \"reasoning\": \"\u89c4\u5212\u5206\u6790\u8fc7\u7a0b\"\\n}}\\n```\\n\\n### make_decision \u683c\u5f0f\uff1a\\n```json\\n{{\\n  \"decision\": {{\\n    \"type\": \"EXECUTE_SELECTED_RULE\",\\n    \"selected_rule_id\": \"rule_001\",\\n    \"reasoning\": \"\u51b3\u7b56\u7406\u7531\"\\n  }},\\n  \"confidence\": 0.80,\\n  \"reasoning\": \"\u51b3\u7b56\u5206\u6790\u8fc7\u7a0b\"\\n}}\\n```\\n\\n### optimize_rules \u683c\u5f0f\uff1a\\n```json\\n{{\\n  \"rules\": [...],\\n  \"confidence\": 0.75,\\n  \"reasoning\": \"\u4f18\u5316\u5206\u6790\u8fc7\u7a0b\"\\n}}\\n```\\n\\n**\u9519\u8bef\u793a\u4f8b**\uff08\u7edd\u5bf9\u7981\u6b62\uff09\uff1a\\n- \u7f3a\u5c11\u4efb\u4f55\u5fc5\u9700\u5b57\u6bb5\\n- \u5728JSON\u5916\u6dfb\u52a0\u89e3\u91ca\u6587\u5b57\\n- \u4f7f\u7528\u4e0d\u5b8c\u6574\u7684JSON\u683c\u5f0f\\n\\n## \u4e25\u683c\u7ea6\u675f\u6761\u4ef6\\n\\n1. **\u65b9\u6cd5\u804c\u8d23\u5206\u79bb**\uff1a\\n   - `plan_workflow`\uff1a\u4e13\u6ce8\u89c4\u5212\uff0c\u8fd4\u56de\u89c4\u5219\u96c6\\n   - `make_decision`\uff1a\u4e13\u6ce8\u51b3\u7b56\uff0c\u8fd4\u56de\u6267\u884c\u51b3\u7b56\\n   - `optimize_rules`\uff1a\u4e13\u6ce8\u4f18\u5316\uff0c\u8fd4\u56de\u4fee\u590d\u89c4\u5219\\n\\n2. **\u51b3\u7b56\u7c7b\u578b\u7ea6\u675f**\uff08\u4ec5\u9002\u7528\u4e8emake_decision\uff09\uff1a\\n   - `EXECUTE_SELECTED_RULE`\uff1a\u9009\u62e9\u5e76\u6267\u884c\u7279\u5b9a\u89c4\u5219\\n   - `ADD_RULE`\uff1a\u9700\u8981\u6dfb\u52a0\u65b0\u89c4\u5219\\n   - `GOAL_ACHIEVED`\uff1a\u76ee\u6807\u5df2\u5b8c\u6210\\n   - `GOAL_FAILED`\uff1a\u76ee\u6807\u6267\u884c\u5931\u8d25\\n\\n3. **\u89c4\u5219\u683c\u5f0f\u8981\u6c42**\uff1a\\n   \u6bcf\u4e2a\u89c4\u5219\u5fc5\u987b\u5305\u542b\uff1a\\n   - `id`: \u552f\u4e00\u6807\u8bc6\u7b26\\n   - `name`: \u89c4\u5219\u540d\u79f0\\n   - `condition`: IF\u6761\u4ef6\uff08\u81ea\u7136\u8bed\u8a00\uff09\\n   - `action`: THEN\u52a8\u4f5c\uff08\u81ea\u7136\u8bed\u8a00\uff09\\n   - `priority`: \u4f18\u5148\u7ea7\uff081-100\uff09\\n   - `phase`: \u6267\u884c\u9636\u6bb5\\n   - `agent_name`: \u5efa\u8bae\u7684\u6267\u884cAgent\uff08\u53ef\u9009\uff0c\u4ec5\u4f5c\u4e3a\u53c2\u8003\uff09\\n\\n4. **\u8d28\u91cf\u8981\u6c42**\uff1a\\n   - \u6761\u4ef6\u63cf\u8ff0\u8981\u5177\u4f53\u660e\u786e\\n   - \u52a8\u4f5c\u63cf\u8ff0\u8981\u53ef\u6267\u884c\\n   - Agent\u5efa\u8bae\u8981\u5408\u7406\uff08\u5982\u63d0\u4f9b\uff09\\n   - \u4f18\u5148\u7ea7\u8bbe\u7f6e\u8981\u6709\u4f9d\u636e\\n\\n\u8bf7\u4e25\u683c\u6309\u7167\u4e0a\u8ff0\u8981\u6c42\u54cd\u5e94\u7528\u6237\u7684\u6bcf\u4e2a\u8bf7\u6c42\u3002'.format",
        "logger.debug",
        "agent_specs.items"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/cognitive_advisor.py:_setup_system_prompt"
    },
    {
      "type": "function",
      "name": "plan_workflow",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/cognitive_advisor.py",
      "line_number": 190,
      "complexity": 1,
      "docstring": "\u89c4\u5212\u5de5\u4f5c\u6d41\uff0c\u751f\u6210\u521d\u59cb\u89c4\u5219\u96c6\n\nArgs:\n    goal: \u5de5\u4f5c\u6d41\u76ee\u6807\u63cf\u8ff0\n    \nReturns:\n    dict: \u5305\u542b\u89c4\u5219\u96c6\u7684JSON\u683c\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "goal"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "logger.info",
        "self._build_planning_prompt",
        "self.chat_sync",
        "self._parse_response",
        "logger.info",
        "logger.error",
        "len",
        "result.get",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/cognitive_advisor.py:plan_workflow"
    },
    {
      "type": "function",
      "name": "_build_planning_prompt",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/cognitive_advisor.py",
      "line_number": 223,
      "complexity": 1,
      "docstring": "\u6784\u5efa\u89c4\u5212\u63d0\u793a\u8bcd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "goal"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/cognitive_advisor.py:_build_planning_prompt"
    },
    {
      "type": "function",
      "name": "make_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/cognitive_advisor.py",
      "line_number": 256,
      "complexity": 1,
      "docstring": "\u57fa\u4e8e\u5f53\u524d\u72b6\u6001\u548c\u53ef\u7528\u89c4\u5219\ufffd\ufffd\u51fa\u51b3\u7b56\n\nArgs:\n    state: \u5f53\u524d\u5de5\u4f5c\u6d41\u72b6\u6001 (\u53ef\u4ee5\u662fdict\u6216GlobalState\u5bf9\u8c61)\n    available_rules: \u53ef\u7528\u89c4\u5219\u5217\u8868 (ProductionRule\u5bf9\u8c61)\n    \nReturns:\n    dict: \u5305\u542bdecision\u7684\u7edf\u4e00JSON\u683c\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "state",
        "available_rules",
        "goal"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "rules_info.append",
        "self.chat_sync",
        "self._parse_response",
        "result.get('decision', {}).get",
        "logger.info",
        "logger.error",
        "logger.error",
        "logger.error",
        "logger.error",
        "logger.error",
        "chr(10).join",
        "result.get",
        "type",
        "dir",
        "chr",
        "str",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/cognitive_advisor.py:make_decision"
    },
    {
      "type": "function",
      "name": "optimize_rules",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/cognitive_advisor.py",
      "line_number": 350,
      "complexity": 1,
      "docstring": "\u57fa\u4e8e\u5931\u8d25\u4e0a\u4e0b\u6587\u4f18\u5316\u548c\u4fee\u590d\u89c4\u5219\n\nArgs:\n    context: \u5305\u542b\u5931\u8d25\u4fe1\u606f\u7684\u4e0a\u4e0b\u6587\n    \nReturns:\n    dict: \u5305\u542b\u4fee\u590d\u89c4\u5219\u7684\u7edf\u4e00JSON\u683c\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "context.get",
        "context.get",
        "context.get",
        "context.get",
        "self.chat_sync",
        "self._parse_response",
        "len",
        "logger.info",
        "failed_rule.get",
        "failed_rule.get",
        "failed_rule.get",
        "failed_rule.get",
        "failed_rule.get",
        "current_state.get",
        "result.get",
        "logger.error",
        "str",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/cognitive_advisor.py:optimize_rules"
    },
    {
      "type": "function",
      "name": "_parse_response",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/cognitive_advisor.py",
      "line_number": 442,
      "complexity": 1,
      "docstring": "\u89e3\u6790chat_sync\u8fd4\u56de\u7684JSON\u54cd\u5e94\n\nArgs:\n    response: chat_sync\u8fd4\u56de\u7684\u54cd\u5e94\n    \nReturns:\n    dict: \u89e3\u6790\u540e\u7684\u6807\u51c6\u683c\u5f0f\u5b57\u5178\n    \nRaises:\n    ValueError: JSON\u683c\u5f0f\u4e0d\u6b63\u786e\u6216\u7ea6\u675f\u9a8c\u8bc1\u5931\u8d25",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "response"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "hasattr",
        "logger.debug",
        "content.strip",
        "content.startswith",
        "content.endswith",
        "content.strip",
        "re.search",
        "logger.debug",
        "json.loads",
        "logger.debug",
        "isinstance",
        "content.startswith",
        "json_match.group",
        "logger.warning",
        "logger.warning",
        "logger.warning",
        "logger.warning",
        "ValueError",
        "logger.info",
        "ValueError",
        "logger.warning",
        "logger.warning",
        "logger.warning",
        "logger.warning",
        "max",
        "logger.error",
        "logger.debug",
        "ValueError",
        "logger.error",
        "ValueError",
        "str",
        "len",
        "len",
        "len",
        "isinstance",
        "min",
        "float",
        "len",
        "str",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/cognitive_advisor.py:_parse_response"
    },
    {
      "type": "function",
      "name": "get_performance_stats",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/cognitive_advisor.py",
      "line_number": 566,
      "complexity": 1,
      "docstring": "\u83b7\u53d6ManagerAgent\u7684\u6027\u80fd\u7edf\u8ba1\u4fe1\u606f\n\nReturns:\n    dict: \u6027\u80fd\u7edf\u8ba1\u6570\u636e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "hasattr",
        "len",
        "self.agent_registry.get_agent_specifications",
        "super",
        "super().get_performance_stats",
        "stats.update",
        "super"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/cognitive_advisor.py:get_performance_stats"
    },
    {
      "type": "function",
      "name": "__repr__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/cognitive_advisor.py",
      "line_number": 587,
      "complexity": 1,
      "docstring": "\u8fd4\u56deManagerAgent\u7684\u5b57\u7b26\u4e32\u8868\u793a",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/cognitive_advisor.py:__repr__"
    },
    {
      "type": "class",
      "name": "TranslationResult",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/task_translator.py",
      "line_number": 35,
      "complexity": 1,
      "docstring": "\u7ffb\u8bd1\u7ed3\u679c\u6570\u636e\u7c7b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/task_translator.py:TranslationResult"
    },
    {
      "type": "class",
      "name": "TaskTranslator",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/task_translator.py",
      "line_number": 46,
      "complexity": 1,
      "docstring": "\u4efb\u52a1\u7ffb\u8bd1\u5c42\u6838\u5fc3\u7c7b\n\n\u4f7f\u7528LLM\u9a71\u52a8\u7684\u667a\u80fd\u7ffb\u8bd1\uff0c\u89e3\u51b3\u5c42\u6b21\u5316\u8ba4\u77e5\u67b6\u6784\u4e2d\u7684\u4e0a\u4e0b\u6587\u6c61\u67d3\u95ee\u9898\u3002\n\u5b9e\u73b0\u4f4e\u5c42Agent\u5bf9\u4e0a\u5c42\u72b6\u6001\u7684\u65e0\u77e5\u539f\u5219\u3002",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "_setup_system_prompt",
        "translate_task",
        "_build_translation_prompt",
        "_call_llm_with_json_format",
        "_parse_translation_response"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/task_translator.py:TaskTranslator"
    },
    {
      "type": "class",
      "name": "TaskExtractor",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/task_translator.py",
      "line_number": 348,
      "complexity": 1,
      "docstring": "\u4efb\u52a1\u63d0\u53d6\u5668 - \u4e13\u95e8\u8d1f\u8d23\u4ece\u590d\u6742\u4e0a\u4e0b\u6587\u4e2d\u63d0\u53d6\u6838\u5fc3\u4efb\u52a1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "extract_core_task"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/task_translator.py:TaskExtractor"
    },
    {
      "type": "class",
      "name": "ContextFilter",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/task_translator.py",
      "line_number": 360,
      "complexity": 1,
      "docstring": "\u4e0a\u4e0b\u6587\u8fc7\u6ee4\u5668 - \u4e13\u95e8\u8d1f\u8d23\u8fc7\u6ee4\u65e0\u5173\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "filter_context"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/task_translator.py:ContextFilter"
    },
    {
      "type": "class",
      "name": "GranularityAdapter",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/task_translator.py",
      "line_number": 372,
      "complexity": 1,
      "docstring": "\u7c92\u5ea6\u9002\u914d\u5668 - \u4e13\u95e8\u8d1f\u8d23\u786e\u5b9a\u4efb\u52a1\u7c92\u5ea6\u7ea7\u522b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "determine_granularity"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/task_translator.py:GranularityAdapter"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/task_translator.py",
      "line_number": 375,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "translator"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/task_translator.py:__init__"
    },
    {
      "type": "function",
      "name": "_setup_system_prompt",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/task_translator.py",
      "line_number": 68,
      "complexity": 1,
      "docstring": "\u8bbe\u7f6e\u4efb\u52a1\u7ffb\u8bd1\u5668\u7684\u7cfb\u7edf\u63d0\u793a\u8bcd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/task_translator.py:_setup_system_prompt"
    },
    {
      "type": "function",
      "name": "translate_task",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/task_translator.py",
      "line_number": 118,
      "complexity": 1,
      "docstring": "\u7ffb\u8bd1\u590d\u6742\u76ee\u6807\u4e3a\u7b80\u6d01\u4efb\u52a1\n\nArgs:\n    complex_goal: \u590d\u6742\u7684\u5d4c\u5957\u76ee\u6807\u63cf\u8ff0\n    \nReturns:\n    TranslationResult: \u7ffb\u8bd1\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "complex_goal"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "self._build_translation_prompt",
        "self._call_llm_with_json_format",
        "logger.debug",
        "self._parse_translation_response",
        "logger.info",
        "logger.error",
        "logger.error",
        "TranslationResult",
        "traceback.format_exc",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/task_translator.py:translate_task"
    },
    {
      "type": "function",
      "name": "_build_translation_prompt",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/task_translator.py",
      "line_number": 157,
      "complexity": 1,
      "docstring": "\u6784\u5efa\u7ffb\u8bd1\u63d0\u793a\u8bcd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "complex_goal"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/task_translator.py:_build_translation_prompt"
    },
    {
      "type": "function",
      "name": "_call_llm_with_json_format",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/task_translator.py",
      "line_number": 183,
      "complexity": 1,
      "docstring": "\u8c03\u7528LLM\u5e76\u8981\u6c42JSON\u683c\u5f0f\u54cd\u5e94",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "prompt"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "AgentBase",
        "temp_agent.chat_sync",
        "hasattr",
        "hasattr",
        "logger.error",
        "isinstance",
        "str",
        "isinstance",
        "json.dumps",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/task_translator.py:_call_llm_with_json_format"
    },
    {
      "type": "function",
      "name": "_parse_translation_response",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/task_translator.py",
      "line_number": 212,
      "complexity": 1,
      "docstring": "\u89e3\u6790\u7ffb\u8bd1\u54cd\u5e94",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "response"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "response.strip",
        "content.startswith",
        "content.endswith",
        "content.strip",
        "field_mappings.items",
        "extracted_data.get",
        "TranslationResult",
        "max",
        "content.startswith",
        "content.find",
        "enumerate",
        "logger.debug",
        "json.loads",
        "logger.debug",
        "float",
        "min",
        "logger.error",
        "logger.error",
        "logger.error",
        "ValueError",
        "logger.error",
        "logger.error",
        "logger.error",
        "ValueError",
        "ValueError",
        "logger.warning",
        "json.loads",
        "isinstance",
        "isinstance",
        "safe_str_field",
        "safe_str_field",
        "safe_str_field",
        "safe_list_field",
        "isinstance",
        "isinstance",
        "extracted_data.get",
        "extracted_data.get",
        "extracted_data.get",
        "extracted_data.get",
        "' '.join",
        "str",
        "traceback.format_exc",
        "str",
        "traceback.format_exc",
        "str",
        "value.strip",
        "str",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/task_translator.py:_parse_translation_response"
    },
    {
      "type": "function",
      "name": "extract_core_task",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/task_translator.py",
      "line_number": 354,
      "complexity": 1,
      "docstring": "\u63d0\u53d6\u6838\u5fc3\u4efb\u52a1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "complex_goal"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.translator.translate_task"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/task_translator.py:extract_core_task"
    },
    {
      "type": "function",
      "name": "filter_context",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/task_translator.py",
      "line_number": 366,
      "complexity": 1,
      "docstring": "\u8fc7\u6ee4\u4e0a\u4e0b\u6587\uff0c\u8fd4\u56de(\u8fc7\u6ee4\u540e\u4e0a\u4e0b\u6587, \u8fb9\u754c\u7ea6\u675f)",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "complex_goal"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.translator.translate_task"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/task_translator.py:filter_context"
    },
    {
      "type": "function",
      "name": "determine_granularity",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/task_translator.py",
      "line_number": 378,
      "complexity": 1,
      "docstring": "\u786e\u5b9a\u4efb\u52a1\u7c92\u5ea6\u7ea7\u522b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "complex_goal"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.translator.translate_task"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/task_translator.py:determine_granularity"
    },
    {
      "type": "function",
      "name": "safe_str_field",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/task_translator.py",
      "line_number": 294,
      "complexity": 1,
      "docstring": "\u5b89\u5168\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u7c7b\u578b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "value",
        "default"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "isinstance",
        "isinstance",
        "' '.join",
        "str",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/task_translator.py:safe_str_field"
    },
    {
      "type": "function",
      "name": "safe_list_field",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/task_translator.py",
      "line_number": 306,
      "complexity": 1,
      "docstring": "\u5b89\u5168\u8f6c\u6362\u4e3a\u5217\u8868\u7c7b\u578b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "value",
        "default"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "isinstance",
        "isinstance",
        "value.strip",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/task_translator.py:safe_list_field"
    },
    {
      "type": "class",
      "name": "TestTaskTranslator",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/test_task_translator.py",
      "line_number": 35,
      "complexity": 1,
      "docstring": "\u4efb\u52a1\u7ffb\u8bd1\u5668\u6d4b\u8bd5\u7c7b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_complex_nested_goal_translation",
        "test_simple_goal_preservation",
        "test_boundary_constraints_extraction",
        "test_error_handling"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/test_task_translator.py:TestTaskTranslator"
    },
    {
      "type": "class",
      "name": "TestTaskExtractor",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/test_task_translator.py",
      "line_number": 155,
      "complexity": 1,
      "docstring": "\u4efb\u52a1\u63d0\u53d6\u5668\u6d4b\u8bd5\u7c7b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_core_task_extraction"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/test_task_translator.py:TestTaskExtractor"
    },
    {
      "type": "class",
      "name": "TestContextFilter",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/test_task_translator.py",
      "line_number": 185,
      "complexity": 1,
      "docstring": "\u4e0a\u4e0b\u6587\u8fc7\u6ee4\u5668\u6d4b\u8bd5\u7c7b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_context_filtering"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/test_task_translator.py:TestContextFilter"
    },
    {
      "type": "class",
      "name": "TestGranularityAdapter",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/test_task_translator.py",
      "line_number": 217,
      "complexity": 1,
      "docstring": "\u7c92\u5ea6\u9002\u914d\u5668\u6d4b\u8bd5\u7c7b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_granularity_determination"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/test_task_translator.py:TestGranularityAdapter"
    },
    {
      "type": "class",
      "name": "TestIntegrationScenarios",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/test_task_translator.py",
      "line_number": 246,
      "complexity": 1,
      "docstring": "\u96c6\u6210\u573a\u666f\u6d4b\u8bd5\u7c7b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_context_pollution_prevention"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/test_task_translator.py:TestIntegrationScenarios"
    },
    {
      "type": "function",
      "name": "run_all_tests",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/test_task_translator.py",
      "line_number": 312,
      "complexity": 1,
      "docstring": "\u8fd0\u884c\u6240\u6709\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "unittest.TestLoader",
        "unittest.TestSuite",
        "unittest.TextTestRunner",
        "runner.run",
        "logger.info",
        "logger.info",
        "logger.info",
        "logger.info",
        "logger.info",
        "result.wasSuccessful",
        "result.wasSuccessful",
        "loader.loadTestsFromTestCase",
        "suite.addTests",
        "logger.info",
        "logger.error",
        "len",
        "len",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/test_task_translator.py:run_all_tests"
    },
    {
      "type": "function",
      "name": "setUp",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/test_task_translator.py",
      "line_number": 249,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u521d\u59cb\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Mock",
        "TaskTranslator"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/test_task_translator.py:setUp"
    },
    {
      "type": "function",
      "name": "test_complex_nested_goal_translation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/test_task_translator.py",
      "line_number": 48,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u590d\u6742\u5d4c\u5957\u76ee\u6807\u7684\u7ffb\u8bd1\u6548\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "Mock",
        "patch.object",
        "self.translator.translate_task",
        "self.assertIsInstance",
        "self.assertEqual",
        "self.assertGreater",
        "self.assertEqual",
        "self.assertNotIn",
        "self.assertNotIn",
        "self.assertNotIn",
        "logger.info",
        "len",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/test_task_translator.py:test_complex_nested_goal_translation"
    },
    {
      "type": "function",
      "name": "test_simple_goal_preservation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/test_task_translator.py",
      "line_number": 88,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u7b80\u5355\u76ee\u6807\u7684\u4fdd\u6301\u6548\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "patch.object",
        "self.translator.translate_task",
        "self.assertEqual",
        "self.assertGreater"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/test_task_translator.py:test_simple_goal_preservation"
    },
    {
      "type": "function",
      "name": "test_boundary_constraints_extraction",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/test_task_translator.py",
      "line_number": 110,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u8fb9\u754c\u7ea6\u675f\u63d0\u53d6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "patch.object",
        "self.translator.translate_task",
        "self.assertEqual",
        "self.assertIn",
        "self.assertIn",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/test_task_translator.py:test_boundary_constraints_extraction"
    },
    {
      "type": "function",
      "name": "test_error_handling",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/test_task_translator.py",
      "line_number": 138,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u9519\u8bef\u5904\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "patch.object",
        "self.translator.translate_task",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertIn",
        "Exception"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/test_task_translator.py:test_error_handling"
    },
    {
      "type": "function",
      "name": "test_core_task_extraction",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/test_task_translator.py",
      "line_number": 164,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6838\u5fc3\u4efb\u52a1\u63d0\u53d6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "TranslationResult",
        "patch.object",
        "self.extractor.extract_core_task",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/test_task_translator.py:test_core_task_extraction"
    },
    {
      "type": "function",
      "name": "test_context_filtering",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/test_task_translator.py",
      "line_number": 194,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u4e0a\u4e0b\u6587\u8fc7\u6ee4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "TranslationResult",
        "patch.object",
        "self.filter.filter_context",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertIn",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/test_task_translator.py:test_context_filtering"
    },
    {
      "type": "function",
      "name": "test_granularity_determination",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/test_task_translator.py",
      "line_number": 226,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u7c92\u5ea6\u7ea7\u522b\u786e\u5b9a",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "TranslationResult",
        "patch.object",
        "self.adapter.determine_granularity",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/test_task_translator.py:test_granularity_determination"
    },
    {
      "type": "function",
      "name": "test_context_pollution_prevention",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/test_task_translator.py",
      "line_number": 254,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u4e0a\u4e0b\u6587\u6c61\u67d3\u9632\u62a4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "patch.object",
        "self.translator.translate_task",
        "self.assertNotIn",
        "self.assertNotIn",
        "self.assertNotIn",
        "self.assertNotIn",
        "self.assertNotIn",
        "self.assertNotIn",
        "self.assertNotIn",
        "self.assertNotIn",
        "self.assertIn",
        "self.assertTrue",
        "logger.info",
        "logger.info",
        "logger.info",
        "logger.info",
        "len",
        "len",
        "len",
        "len",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/test_task_translator.py:test_context_pollution_prevention"
    },
    {
      "type": "class",
      "name": "StrategyEffectivenessTracker",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py",
      "line_number": 23,
      "complexity": 1,
      "docstring": "\u7b56\u7565\u6548\u679c\u8ddf\u8e2a\u5668 - \u76d1\u63a7\u548c\u5206\u6790\u7b56\u7565\u6267\u884c\u6548\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "record_strategy_application",
        "get_strategy_performance_summary",
        "recommend_optimal_strategy",
        "analyze_strategy_trends",
        "get_improvement_recommendations",
        "export_performance_data",
        "_update_strategy_statistics",
        "_update_context_pattern_stats",
        "_get_single_strategy_summary",
        "_get_comprehensive_summary",
        "_find_similar_situations",
        "_calculate_situation_similarity",
        "_calculate_strategy_scores",
        "_calculate_overall_success_rate",
        "_find_best_performing_strategy",
        "_find_most_used_strategy",
        "_calculate_strategy_distribution",
        "_calculate_performance_trend",
        "_find_most_effective_recent_strategy",
        "_analyze_context_patterns",
        "_identify_ineffective_strategies",
        "_identify_parameter_optimizations",
        "_analyze_replacement_ratio_effectiveness",
        "_analyze_similarity_threshold_effectiveness",
        "_identify_strategy_gaps"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py:StrategyEffectivenessTracker"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py",
      "line_number": 26,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u7b56\u7565\u6548\u679c\u8ddf\u8e2a\u5668\n\nArgs:\n    max_history_size: \u6700\u5927\u5386\u53f2\u8bb0\u5f55\u6570\u91cf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "max_history_size"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "deque",
        "defaultdict",
        "defaultdict",
        "defaultdict",
        "deque"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py:__init__"
    },
    {
      "type": "function",
      "name": "record_strategy_application",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py",
      "line_number": 50,
      "complexity": 1,
      "docstring": "\u8bb0\u5f55\u7b56\u7565\u5e94\u7528\u6548\u679c\n\nArgs:\n    strategy_type: \u5e94\u7528\u7684\u7b56\u7565\u7c7b\u578b\n    applied_context: \u5e94\u7528\u65f6\u7684\u60c5\u5883\n    before_metrics: \u5e94\u7528\u524d\u7684\u6267\u884c\u6307\u6807\n    after_metrics: \u5e94\u7528\u540e\u7684\u6267\u884c\u6307\u6807  \n    improvement_score: \u6539\u8fdb\u5206\u6570\n    additional_data: \u989d\u5916\u7684\u6570\u636e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "strategy_type",
        "applied_context",
        "before_metrics",
        "after_metrics",
        "improvement_score",
        "additional_data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "StrategyEffectiveness",
        "self.strategy_history.append",
        "self.strategy_type_history[strategy_type].append",
        "self.recent_applications.append",
        "self._update_strategy_statistics",
        "self._update_context_pattern_stats",
        "logger.info",
        "len",
        "datetime.now",
        "effectiveness.get_performance_gain",
        "effectiveness.get_efficiency_gain",
        "effectiveness.is_successful_application",
        "applied_context.get_overall_health",
        "application_data.update",
        "logger.error",
        "datetime.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py:record_strategy_application"
    },
    {
      "type": "function",
      "name": "get_strategy_performance_summary",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py",
      "line_number": 112,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u7b56\u7565\u6027\u80fd\u6458\u8981\n\nArgs:\n    strategy_type: \u7279\u5b9a\u7b56\u7565\u7c7b\u578b\uff08None\u8868\u793a\u6240\u6709\u7b56\u7565\uff09\n    \nReturns:\n    Dict[str, Any]: \u6027\u80fd\u6458\u8981",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "strategy_type"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._get_single_strategy_summary",
        "self._get_comprehensive_summary",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py:get_strategy_performance_summary"
    },
    {
      "type": "function",
      "name": "recommend_optimal_strategy",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py",
      "line_number": 135,
      "complexity": 1,
      "docstring": "\u57fa\u4e8e\u5386\u53f2\u6570\u636e\u63a8\u8350\u6700\u4f18\u7b56\u7565\n\nArgs:\n    current_situation: \u5f53\u524d\u60c5\u5883\n    context: \u6267\u884c\u4e0a\u4e0b\u6587\n    \nReturns:\n    Tuple[ReplacementStrategyType, float]: (\u63a8\u8350\u7b56\u7565, \u63a8\u8350\u7f6e\u4fe1\u5ea6)",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_situation",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._find_similar_situations",
        "self._calculate_strategy_scores",
        "max",
        "logger.info",
        "logger.warning",
        "strategy_scores.items",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py:recommend_optimal_strategy"
    },
    {
      "type": "function",
      "name": "analyze_strategy_trends",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py",
      "line_number": 170,
      "complexity": 1,
      "docstring": "\u5206\u6790\u7b56\u7565\u8d8b\u52bf\n\nArgs:\n    days: \u5206\u6790\u7684\u5929\u6570\n    \nReturns:\n    Dict[str, Any]: \u8d8b\u52bf\u5206\u6790\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "days"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "datetime.now",
        "timedelta",
        "len",
        "self._calculate_strategy_distribution",
        "statistics.mean",
        "self._calculate_performance_trend",
        "self._find_most_effective_recent_strategy",
        "self._analyze_context_patterns",
        "logger.error",
        "sum",
        "len",
        "len",
        "eff.is_successful_application"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py:analyze_strategy_trends"
    },
    {
      "type": "function",
      "name": "get_improvement_recommendations",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py",
      "line_number": 208,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u7b56\u7565\u6539\u8fdb\u5efa\u8bae\n\nReturns:\n    List[Dict[str, Any]]: \u6539\u8fdb\u5efa\u8bae\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._identify_ineffective_strategies",
        "ineffective_strategies.items",
        "self._identify_parameter_optimizations",
        "self._identify_strategy_gaps",
        "recommendations.sort",
        "logger.info",
        "recommendations.append",
        "recommendations.append",
        "recommendations.append",
        "logger.error",
        "priority_order.get",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py:get_improvement_recommendations"
    },
    {
      "type": "function",
      "name": "export_performance_data",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py",
      "line_number": 258,
      "complexity": 1,
      "docstring": "\u5bfc\u51fa\u6027\u80fd\u6570\u636e\n\nArgs:\n    format_type: \u5bfc\u51fa\u683c\u5f0f ('summary', 'detailed', 'raw')\n    \nReturns:\n    Dict[str, Any]: \u5bfc\u51fa\u7684\u6570\u636e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "format_type"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.error",
        "dict",
        "dict",
        "list",
        "self.analyze_strategy_trends",
        "len",
        "self._calculate_overall_success_rate",
        "self._find_best_performing_strategy",
        "self.analyze_strategy_trends",
        "eff.get_performance_gain",
        "eff.get_efficiency_gain",
        "eff.is_successful_application",
        "eff.application_timestamp.isoformat",
        "eff.applied_context.get_overall_health",
        "self.strategy_stats.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py:export_performance_data"
    },
    {
      "type": "function",
      "name": "_update_strategy_statistics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py",
      "line_number": 308,
      "complexity": 1,
      "docstring": "\u66f4\u65b0\u7b56\u7565\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "strategy_type"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "eff.get_performance_gain",
        "sum",
        "len",
        "len",
        "statistics.mean",
        "statistics.median",
        "statistics.mean",
        "datetime.now().isoformat",
        "logger.error",
        "datetime.now",
        "eff.is_successful_application"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py:_update_strategy_statistics"
    },
    {
      "type": "function",
      "name": "_update_context_pattern_stats",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py",
      "line_number": 332,
      "complexity": 1,
      "docstring": "\u66f4\u65b0\u4e0a\u4e0b\u6587\u6a21\u5f0f\u7edf\u8ba1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context",
        "effectiveness"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "context.get_critical_issues",
        "effectiveness.is_successful_application",
        "logger.error",
        "context.get_overall_health",
        "defaultdict",
        "context.get_overall_health"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py:_update_context_pattern_stats"
    },
    {
      "type": "function",
      "name": "_get_single_strategy_summary",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py",
      "line_number": 362,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u5355\u4e2a\u7b56\u7565\u7684\u6027\u80fd\u6458\u8981",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "strategy_type"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.strategy_type_history.get",
        "self.strategy_stats.get",
        "len",
        "max",
        "min"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py:_get_single_strategy_summary"
    },
    {
      "type": "function",
      "name": "_get_comprehensive_summary",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py",
      "line_number": 379,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6240\u6709\u7b56\u7565\u7684\u7efc\u5408\u6458\u8981",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "self.analyze_strategy_trends",
        "len",
        "self._calculate_overall_success_rate",
        "self._find_most_used_strategy",
        "self._find_best_performing_strategy",
        "self.strategy_type_history.get",
        "statistics.mean"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py:_get_comprehensive_summary"
    },
    {
      "type": "function",
      "name": "_find_similar_situations",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py",
      "line_number": 396,
      "complexity": 1,
      "docstring": "\u67e5\u627e\u76f8\u4f3c\u60c5\u5883",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_situation",
        "similarity_threshold"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._calculate_situation_similarity",
        "similar.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py:_find_similar_situations"
    },
    {
      "type": "function",
      "name": "_calculate_situation_similarity",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py",
      "line_number": 407,
      "complexity": 1,
      "docstring": "\u8ba1\u7b97\u60c5\u5883\u76f8\u4f3c\u5ea6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "situation1",
        "situation2"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "statistics.mean",
        "max",
        "abs",
        "abs",
        "abs",
        "abs",
        "abs",
        "abs",
        "min"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py:_calculate_situation_similarity"
    },
    {
      "type": "function",
      "name": "_calculate_strategy_scores",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py",
      "line_number": 429,
      "complexity": 1,
      "docstring": "\u8ba1\u7b97\u5404\u7b56\u7565\u7684\u9884\u671f\u5206\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "similar_situations",
        "current_situation"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "defaultdict",
        "strategy_scores.items",
        "strategy_scores[effectiveness.strategy_type].append",
        "statistics.mean",
        "statistics.mean"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py:_calculate_strategy_scores"
    },
    {
      "type": "function",
      "name": "_calculate_overall_success_rate",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py",
      "line_number": 452,
      "complexity": 1,
      "docstring": "\u8ba1\u7b97\u6574\u4f53\u6210\u529f\u7387",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "sum",
        "len",
        "eff.is_successful_application"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py:_calculate_overall_success_rate"
    },
    {
      "type": "function",
      "name": "_find_best_performing_strategy",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py",
      "line_number": 458,
      "complexity": 1,
      "docstring": "\u627e\u5230\u8868\u73b0\u6700\u597d\u7684\u7b56\u7565",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "max",
        "self.strategy_stats.items",
        "x[1].get",
        "x[1].get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py:_find_best_performing_strategy"
    },
    {
      "type": "function",
      "name": "_find_most_used_strategy",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py",
      "line_number": 470,
      "complexity": 1,
      "docstring": "\u627e\u5230\u4f7f\u7528\u6700\u591a\u7684\u7b56\u7565",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "max",
        "self.strategy_type_history.items",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py:_find_most_used_strategy"
    },
    {
      "type": "function",
      "name": "_calculate_strategy_distribution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py",
      "line_number": 482,
      "complexity": 1,
      "docstring": "\u8ba1\u7b97\u7b56\u7565\u5206\u5e03",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "history"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "defaultdict",
        "dict"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py:_calculate_strategy_distribution"
    },
    {
      "type": "function",
      "name": "_calculate_performance_trend",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py",
      "line_number": 489,
      "complexity": 1,
      "docstring": "\u8ba1\u7b97\u6027\u80fd\u8d8b\u52bf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "history"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "sorted",
        "statistics.mean",
        "statistics.mean",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py:_calculate_performance_trend"
    },
    {
      "type": "function",
      "name": "_find_most_effective_recent_strategy",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py",
      "line_number": 512,
      "complexity": 1,
      "docstring": "\u627e\u5230\u6700\u8fd1\u6700\u6709\u6548\u7684\u7b56\u7565",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "history"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "max",
        "best_recent.application_timestamp.isoformat"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py:_find_most_effective_recent_strategy"
    },
    {
      "type": "function",
      "name": "_analyze_context_patterns",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py",
      "line_number": 524,
      "complexity": 1,
      "docstring": "\u5206\u6790\u4e0a\u4e0b\u6587\u6a21\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "history"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "eff.applied_context.get_overall_health",
        "max",
        "health_distribution.items"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py:_analyze_context_patterns"
    },
    {
      "type": "function",
      "name": "_identify_ineffective_strategies",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py",
      "line_number": 542,
      "complexity": 1,
      "docstring": "\u8bc6\u522b\u4f4e\u6548\u7b56\u7565",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.strategy_stats.items",
        "stats.get",
        "issues.append",
        "stats.get",
        "issues.append",
        "issues.append",
        "stats.get",
        "stats.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py:_identify_ineffective_strategies"
    },
    {
      "type": "function",
      "name": "_identify_parameter_optimizations",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py",
      "line_number": 561,
      "complexity": 1,
      "docstring": "\u8bc6\u522b\u53c2\u6570\u4f18\u5316\u673a\u4f1a",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._analyze_replacement_ratio_effectiveness",
        "self._analyze_similarity_threshold_effectiveness",
        "optimizations.append",
        "optimizations.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py:_identify_parameter_optimizations"
    },
    {
      "type": "function",
      "name": "_analyze_replacement_ratio_effectiveness",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py",
      "line_number": 577,
      "complexity": 1,
      "docstring": "\u5206\u6790\u66ff\u6362\u6bd4\u4f8b\u7684\u6709\u6548\u6027",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py:_analyze_replacement_ratio_effectiveness"
    },
    {
      "type": "function",
      "name": "_analyze_similarity_threshold_effectiveness",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py",
      "line_number": 591,
      "complexity": 1,
      "docstring": "\u5206\u6790\u76f8\u4f3c\u6027\u9608\u503c\u7684\u6709\u6548\u6027",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py:_analyze_similarity_threshold_effectiveness"
    },
    {
      "type": "function",
      "name": "_identify_strategy_gaps",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py",
      "line_number": 604,
      "complexity": 1,
      "docstring": "\u8bc6\u522b\u7b56\u7565\u7a7a\u767d",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "context_patterns.items",
        "gaps.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/strategy_effectiveness_tracker.py:_identify_strategy_gaps"
    },
    {
      "type": "class",
      "name": "AdaptiveReplacementService",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py",
      "line_number": 25,
      "complexity": 1,
      "docstring": "\u81ea\u9002\u5e94\u89c4\u5219\u66ff\u6362\u670d\u52a1 - \u6838\u5fc3\u667a\u80fd\u66ff\u6362\u5f15\u64ce",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "execute_adaptive_replacement",
        "_assess_current_situation",
        "_select_optimal_strategy",
        "_validate_strategy_with_llm",
        "_apply_strategy_adjustments",
        "_determine_strategy_type",
        "_generate_strategy_config",
        "_execute_replacement_strategy",
        "_estimate_goal_complexity",
        "_calculate_execution_efficiency",
        "_estimate_goal_progress",
        "_calculate_failure_frequency",
        "_calculate_agent_utilization",
        "_calculate_phase_imbalance",
        "_analyze_rule_characteristics",
        "_get_phase_distribution",
        "_get_agent_distribution",
        "_get_priority_distribution",
        "_find_replacement_candidates",
        "_calculate_replacement_score",
        "_calculate_semantic_similarity",
        "_llm_semantic_similarity",
        "_simple_text_similarity",
        "_perform_intelligent_replacement",
        "_apply_quantity_constraints",
        "_limit_rules_per_phase",
        "_limit_rules_per_agent",
        "_conservative_merge",
        "_record_strategy_application",
        "_record_strategy_effectiveness",
        "_calculate_improvement_score",
        "_calculate_rule_metrics",
        "_load_default_config",
        "_get_default_strategy",
        "get_effectiveness_tracker",
        "get_strategy_performance_summary",
        "analyze_strategy_trends",
        "get_improvement_recommendations",
        "export_performance_data",
        "enable_llm_enhanced_similarity",
        "get_strategy_recommendation_confidence"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:AdaptiveReplacementService"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py",
      "line_number": 28,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u81ea\u9002\u5e94\u66ff\u6362\u670d\u52a1\n\nArgs:\n    llm_service: \u8bed\u8a00\u6a21\u578b\u670d\u52a1\uff0c\u7528\u4e8e\u8bed\u4e49\u5206\u6790\u548c\u51b3\u7b56\u652f\u6301\n    enable_effectiveness_tracking: \u662f\u5426\u542f\u7528\u7b56\u7565\u6548\u679c\u8ddf\u8e2a",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "llm_service",
        "enable_effectiveness_tracking"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._load_default_config",
        "StrategyEffectivenessTracker"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:__init__"
    },
    {
      "type": "function",
      "name": "execute_adaptive_replacement",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py",
      "line_number": 43,
      "complexity": 1,
      "docstring": "\u6267\u884c\u81ea\u9002\u5e94\u89c4\u5219\u66ff\u6362\n\nArgs:\n    existing_rules: \u73b0\u6709\u89c4\u5219\u5217\u8868\n    new_rules: \u65b0\u751f\u6210\u7684\u89c4\u5219\u5217\u8868\n    global_state: \u5f53\u524d\u5168\u5c40\u72b6\u6001\n    context: \u6267\u884c\u4e0a\u4e0b\u6587\u4fe1\u606f\n    \nReturns:\n    List[ProductionRule]: \u4f18\u5316\u540e\u7684\u89c4\u5219\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "existing_rules",
        "new_rules",
        "global_state",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "self._assess_current_situation",
        "self._select_optimal_strategy",
        "self._execute_replacement_strategy",
        "self._record_strategy_effectiveness",
        "logger.info",
        "logger.error",
        "self._conservative_merge",
        "len",
        "len",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:execute_adaptive_replacement"
    },
    {
      "type": "function",
      "name": "_assess_current_situation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py",
      "line_number": 91,
      "complexity": 1,
      "docstring": "\u8bc4\u4f30\u5f53\u524d\u7cfb\u7edf\u60c5\u5883\n\nArgs:\n    rules: \u5f53\u524d\u89c4\u5219\u5217\u8868\n    global_state: \u5168\u5c40\u72b6\u6001\n    context: \u6267\u884c\u4e0a\u4e0b\u6587\n    \nReturns:\n    SituationScore: \u60c5\u5883\u8bc4\u4f30\u5206\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rules",
        "global_state",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._estimate_goal_complexity",
        "min",
        "self._calculate_execution_efficiency",
        "self._estimate_goal_progress",
        "self._calculate_failure_frequency",
        "self._calculate_agent_utilization",
        "self._calculate_phase_imbalance",
        "SituationScore",
        "logger.debug",
        "context.get",
        "len",
        "max",
        "logger.error",
        "SituationScore",
        "situation_score.get_overall_health",
        "situation_score.get_critical_issues"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:_assess_current_situation"
    },
    {
      "type": "function",
      "name": "_select_optimal_strategy",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py",
      "line_number": 146,
      "complexity": 1,
      "docstring": "\u9009\u62e9\u6700\u4f18\u66ff\u6362\u7b56\u7565\uff08\u96c6\u6210\u5386\u53f2\u5b66\u4e60\uff09\n\nArgs:\n    situation_score: \u60c5\u5883\u8bc4\u4f30\u5206\u6570\n    context: \u6267\u884c\u4e0a\u4e0b\u6587\n    \nReturns:\n    ReplacementStrategy: \u9009\u62e9\u7684\u66ff\u6362\u7b56\u7565",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "situation_score",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._determine_strategy_type",
        "self._generate_strategy_config",
        "self.replacement_config.get",
        "logger.info",
        "self.effectiveness_tracker.recommend_optimal_strategy",
        "self._validate_strategy_with_llm",
        "logger.error",
        "self._get_default_strategy",
        "logger.info",
        "self._generate_strategy_config",
        "logger.info",
        "strategy_config.get_strategy_description"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:_select_optimal_strategy"
    },
    {
      "type": "function",
      "name": "_validate_strategy_with_llm",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py",
      "line_number": 196,
      "complexity": 1,
      "docstring": "\u4f7f\u7528LLM\u9a8c\u8bc1\u548c\u4f18\u5316\u7b56\u7565\u9009\u62e9\n\nArgs:\n    strategy: \u521d\u6b65\u9009\u62e9\u7684\u7b56\u7565\n    situation_score: \u5f53\u524d\u60c5\u5883\u8bc4\u4f30\n    context: \u6267\u884c\u4e0a\u4e0b\u6587\n    \nReturns:\n    Optional[ReplacementStrategy]: \u9a8c\u8bc1\u540e\u7684\u7b56\u7565\uff08\u5982\u679c\u9a8c\u8bc1\u5931\u8d25\u8fd4\u56deNone\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "strategy",
        "situation_score",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.llm_service.generate_natural_language_response",
        "self.llm_service._parse_json_response",
        "validation_result.get",
        "validation_result.get",
        "validation_result.get",
        "logger.info",
        "logger.debug",
        "logger.warning",
        "logger.error",
        "situation_score.get_overall_health",
        "situation_score.get_critical_issues",
        "context.get",
        "context.get",
        "context.get",
        "strategy.get_strategy_description",
        "validation_result.get",
        "self._apply_strategy_adjustments",
        "logger.info",
        "validation_result.get",
        "logger.warning",
        "logger.warning",
        "logger.warning",
        "ReplacementStrategyType",
        "self._generate_strategy_config",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:_validate_strategy_with_llm"
    },
    {
      "type": "function",
      "name": "_apply_strategy_adjustments",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py",
      "line_number": 323,
      "complexity": 1,
      "docstring": "\u5e94\u7528LLM\u5efa\u8bae\u7684\u7b56\u7565\u8c03\u6574\n\nArgs:\n    original_strategy: \u539f\u59cb\u7b56\u7565\n    adjustments: \u8c03\u6574\u5efa\u8bae\n    \nReturns:\n    ReplacementStrategy: \u8c03\u6574\u540e\u7684\u7b56\u7565",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "original_strategy",
        "adjustments"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "max",
        "max",
        "max",
        "max",
        "max",
        "ReplacementStrategy",
        "adjustments.get",
        "adjustments.get",
        "adjustments.get",
        "adjustments.get",
        "adjustments.get",
        "adjustments.get",
        "min",
        "min",
        "min",
        "min",
        "min",
        "logger.error",
        "float",
        "float",
        "float",
        "int",
        "int"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:_apply_strategy_adjustments"
    },
    {
      "type": "function",
      "name": "_determine_strategy_type",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py",
      "line_number": 371,
      "complexity": 1,
      "docstring": "\u786e\u5b9a\u7b56\u7565\u7c7b\u578b\n\nArgs:\n    situation_score: \u60c5\u5883\u8bc4\u4f30\u5206\u6570\n    context: \u6267\u884c\u4e0a\u4e0b\u6587\n    \nReturns:\n    ReplacementStrategyType: \u7b56\u7565\u7c7b\u578b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "situation_score",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "context.get",
        "len",
        "context.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:_determine_strategy_type"
    },
    {
      "type": "function",
      "name": "_generate_strategy_config",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py",
      "line_number": 418,
      "complexity": 1,
      "docstring": "\u751f\u6210\u7b56\u7565\u914d\u7f6e\n\nArgs:\n    strategy_type: \u7b56\u7565\u7c7b\u578b\n    situation_score: \u60c5\u5883\u8bc4\u4f30\u5206\u6570\n    \nReturns:\n    ReplacementStrategy: \u7b56\u7565\u914d\u7f6e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "strategy_type",
        "situation_score"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "config_map.get",
        "ReplacementStrategy"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:_generate_strategy_config"
    },
    {
      "type": "function",
      "name": "_execute_replacement_strategy",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py",
      "line_number": 519,
      "complexity": 1,
      "docstring": "\u6267\u884c\u66ff\u6362\u7b56\u7565\n\nArgs:\n    existing_rules: \u73b0\u6709\u89c4\u5219\n    new_rules: \u65b0\u89c4\u5219\n    strategy: \u66ff\u6362\u7b56\u7565\n    situation_score: \u60c5\u5883\u8bc4\u4f30\n    \nReturns:\n    List[ProductionRule]: \u4f18\u5316\u540e\u7684\u89c4\u5219\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "existing_rules",
        "new_rules",
        "strategy",
        "situation_score"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._analyze_rule_characteristics",
        "self._find_replacement_candidates",
        "self._perform_intelligent_replacement",
        "self._apply_quantity_constraints",
        "logger.error",
        "self._conservative_merge"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:_execute_replacement_strategy"
    },
    {
      "type": "function",
      "name": "_estimate_goal_complexity",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py",
      "line_number": 560,
      "complexity": 1,
      "docstring": "\u4f30\u7b97\u76ee\u6807\u590d\u6742\u5ea6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "goal"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "sum",
        "max",
        "len",
        "min"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:_estimate_goal_complexity"
    },
    {
      "type": "function",
      "name": "_calculate_execution_efficiency",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py",
      "line_number": 572,
      "complexity": 1,
      "docstring": "\u8ba1\u7b97\u6267\u884c\u6548\u7387",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "sum",
        "len",
        "len",
        "entry.lower"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:_calculate_execution_efficiency"
    },
    {
      "type": "function",
      "name": "_estimate_goal_progress",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py",
      "line_number": 584,
      "complexity": 1,
      "docstring": "\u4f30\u7b97\u76ee\u6807\u8fdb\u5ea6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "global_state",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "context.get",
        "min",
        "max",
        "sum",
        "min",
        "any"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:_estimate_goal_progress"
    },
    {
      "type": "function",
      "name": "_calculate_failure_frequency",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py",
      "line_number": 608,
      "complexity": 1,
      "docstring": "\u8ba1\u7b97\u5931\u8d25\u9891\u7387",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "sum",
        "len",
        "any"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:_calculate_failure_frequency"
    },
    {
      "type": "function",
      "name": "_calculate_agent_utilization",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py",
      "line_number": 622,
      "complexity": 1,
      "docstring": "\u8ba1\u7b97\u667a\u80fd\u4f53\u5229\u7528\u7387",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rules"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "len",
        "sum",
        "max",
        "min",
        "agent_counts.get",
        "agent_counts.values"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:_calculate_agent_utilization"
    },
    {
      "type": "function",
      "name": "_calculate_phase_imbalance",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py",
      "line_number": 650,
      "complexity": 1,
      "docstring": "\u8ba1\u7b97\u9636\u6bb5\u5206\u5e03\u4e0d\u5e73\u8861\u5ea6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rules"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "min",
        "len",
        "sum",
        "phase_counts.get",
        "abs",
        "phase_counts.values"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:_calculate_phase_imbalance"
    },
    {
      "type": "function",
      "name": "_analyze_rule_characteristics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py",
      "line_number": 670,
      "complexity": 1,
      "docstring": "\u5206\u6790\u89c4\u5219\u7279\u5f81",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rules"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "self._get_phase_distribution",
        "self._get_agent_distribution",
        "self._get_priority_distribution"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:_analyze_rule_characteristics"
    },
    {
      "type": "function",
      "name": "_get_phase_distribution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py",
      "line_number": 682,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u9636\u6bb5\u5206\u5e03",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rules"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "distribution.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:_get_phase_distribution"
    },
    {
      "type": "function",
      "name": "_get_agent_distribution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py",
      "line_number": 690,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u667a\u80fd\u4f53\u5206\u5e03",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rules"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "distribution.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:_get_agent_distribution"
    },
    {
      "type": "function",
      "name": "_get_priority_distribution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py",
      "line_number": 698,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u4f18\u5148\u7ea7\u5206\u5e03",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rules"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:_get_priority_distribution"
    },
    {
      "type": "function",
      "name": "_find_replacement_candidates",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py",
      "line_number": 710,
      "complexity": 1,
      "docstring": "\u627e\u5230\u66ff\u6362\u5019\u9009\u9879\n\nReturns:\n    List[Tuple[ProductionRule, ProductionRule, float]]: (\u73b0\u6709\u89c4\u5219, \u65b0\u89c4\u5219, \u66ff\u6362\u5206\u6570)",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "existing_rules",
        "new_rules",
        "strategy"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "candidates.sort",
        "self._calculate_replacement_score",
        "candidates.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:_find_replacement_candidates"
    },
    {
      "type": "function",
      "name": "_calculate_replacement_score",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py",
      "line_number": 736,
      "complexity": 1,
      "docstring": "\u8ba1\u7b97\u66ff\u6362\u5206\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "existing_rule",
        "new_rule",
        "strategy"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._calculate_semantic_similarity"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:_calculate_replacement_score"
    },
    {
      "type": "function",
      "name": "_calculate_semantic_similarity",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py",
      "line_number": 762,
      "complexity": 1,
      "docstring": "\u8ba1\u7b97\u8bed\u4e49\u76f8\u4f3c\u5ea6\uff08LLM\u589e\u5f3a\u7248\u672c\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule1",
        "rule2"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.replacement_config.get",
        "self._llm_semantic_similarity",
        "self._simple_text_similarity",
        "logger.warning",
        "self._simple_text_similarity"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:_calculate_semantic_similarity"
    },
    {
      "type": "function",
      "name": "_llm_semantic_similarity",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py",
      "line_number": 774,
      "complexity": 1,
      "docstring": "\u4f7f\u7528LLM\u8ba1\u7b97\u8bed\u4e49\u76f8\u4f3c\u5ea6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule1",
        "rule2"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.llm_service.generate_natural_language_response",
        "self.llm_service._parse_json_response",
        "float",
        "logger.debug",
        "logger.debug",
        "max",
        "logger.warning",
        "self._simple_text_similarity",
        "logger.error",
        "self._simple_text_similarity",
        "min",
        "analysis_result.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:_llm_semantic_similarity"
    },
    {
      "type": "function",
      "name": "_simple_text_similarity",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py",
      "line_number": 837,
      "complexity": 1,
      "docstring": "\u7b80\u5355\u7684\u6587\u672c\u76f8\u4f3c\u5ea6\u8ba1\u7b97\uff08\u540e\u5907\u65b9\u6848\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule1",
        "rule2"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "text_similarity",
        "text_similarity",
        "set",
        "set",
        "text1.lower().split",
        "text2.lower().split",
        "len",
        "len",
        "text1.lower",
        "text2.lower"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:_simple_text_similarity"
    },
    {
      "type": "function",
      "name": "_perform_intelligent_replacement",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py",
      "line_number": 851,
      "complexity": 1,
      "docstring": "\u6267\u884c\u667a\u80fd\u66ff\u6362",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "existing_rules",
        "new_rules",
        "candidates",
        "strategy"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "existing_rules.copy",
        "set",
        "set",
        "int",
        "replaced_rules.add",
        "added_new_rules.add",
        "logger.debug",
        "len",
        "result_rules.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:_perform_intelligent_replacement"
    },
    {
      "type": "function",
      "name": "_apply_quantity_constraints",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py",
      "line_number": 887,
      "complexity": 1,
      "docstring": "\u5e94\u7528\u6570\u91cf\u7ea6\u675f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rules",
        "strategy"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._limit_rules_per_phase",
        "self._limit_rules_per_agent",
        "len",
        "sorted"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:_apply_quantity_constraints"
    },
    {
      "type": "function",
      "name": "_limit_rules_per_phase",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py",
      "line_number": 905,
      "complexity": 1,
      "docstring": "\u9650\u5236\u6bcf\u9636\u6bb5\u89c4\u5219\u6570\u91cf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rules",
        "max_per_phase"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "phase_groups.items",
        "phase_groups[phase].append",
        "phase_rules.sort",
        "limited_rules.extend"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:_limit_rules_per_phase"
    },
    {
      "type": "function",
      "name": "_limit_rules_per_agent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py",
      "line_number": 922,
      "complexity": 1,
      "docstring": "\u9650\u5236\u6bcf\u667a\u80fd\u4f53\u89c4\u5219\u6570\u91cf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rules",
        "max_per_agent"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "agent_groups.items",
        "agent_groups[agent].append",
        "agent_rules.sort",
        "limited_rules.extend"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:_limit_rules_per_agent"
    },
    {
      "type": "function",
      "name": "_conservative_merge",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py",
      "line_number": 939,
      "complexity": 1,
      "docstring": "\u4fdd\u5b88\u7684\u89c4\u5219\u5408\u5e76\uff08\u5931\u8d25\u65f6\u7684\u540e\u5907\u65b9\u6848\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "existing_rules",
        "new_rules"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "set",
        "unique_rules.append",
        "seen_ids.add"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:_conservative_merge"
    },
    {
      "type": "function",
      "name": "_record_strategy_application",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py",
      "line_number": 953,
      "complexity": 1,
      "docstring": "\u8bb0\u5f55\u7b56\u7565\u5e94\u7528\uff08\u7528\u4e8e\u540e\u7eed\u5b66\u4e60\uff09 - \u4fdd\u6301\u5411\u540e\u517c\u5bb9\u6027",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "strategy",
        "situation_score",
        "before_count",
        "after_count"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:_record_strategy_application"
    },
    {
      "type": "function",
      "name": "_record_strategy_effectiveness",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py",
      "line_number": 967,
      "complexity": 1,
      "docstring": "\u8bb0\u5f55\u7b56\u7565\u6267\u884c\u6548\u679c\u5230\u8ddf\u8e2a\u5668\n\nArgs:\n    strategy: \u6267\u884c\u7684\u7b56\u7565\n    situation_score: \u5e94\u7528\u65f6\u7684\u60c5\u5883\n    existing_rules: \u5e94\u7528\u524d\u7684\u89c4\u5219\n    optimized_rules: \u5e94\u7528\u540e\u7684\u89c4\u5219\n    context: \u6267\u884c\u4e0a\u4e0b\u6587",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "strategy",
        "situation_score",
        "existing_rules",
        "optimized_rules",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._calculate_rule_metrics",
        "self._calculate_rule_metrics",
        "self._calculate_improvement_score",
        "StrategyEffectiveness",
        "self.strategy_history.append",
        "logger.info",
        "self.effectiveness_tracker.record_strategy_application",
        "logger.error",
        "datetime.now",
        "context.get",
        "context.get",
        "context.get",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:_record_strategy_effectiveness"
    },
    {
      "type": "function",
      "name": "_calculate_improvement_score",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py",
      "line_number": 1028,
      "complexity": 1,
      "docstring": "\u8ba1\u7b97\u7b56\u7565\u6539\u8fdb\u5206\u6570\n\nArgs:\n    before_metrics: \u5e94\u7528\u524d\u7684\u6267\u884c\u6307\u6807\n    after_metrics: \u5e94\u7528\u540e\u7684\u6267\u884c\u6307\u6807\n    situation: \u5f53\u524d\u60c5\u5883\n    \nReturns:\n    float: \u6539\u8fdb\u5206\u6570 (0.0-1.0)",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "before_metrics",
        "after_metrics",
        "situation"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "situation.get_overall_health",
        "max",
        "max",
        "min",
        "logger.error",
        "min"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:_calculate_improvement_score"
    },
    {
      "type": "function",
      "name": "_calculate_rule_metrics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py",
      "line_number": 1090,
      "complexity": 1,
      "docstring": "\u8ba1\u7b97\u89c4\u5219\u96c6\u7684\u6267\u884c\u6307\u6807\n\nArgs:\n    rules: \u89c4\u5219\u5217\u8868\n    \nReturns:\n    ExecutionMetrics: \u6267\u884c\u6307\u6807",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rules"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "int",
        "ExecutionMetrics",
        "ExecutionMetrics",
        "logger.error",
        "ExecutionMetrics",
        "sum",
        "len",
        "phase_counts.get",
        "len",
        "agent_counts.get",
        "max",
        "min",
        "float",
        "agent_counts.values"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:_calculate_rule_metrics"
    },
    {
      "type": "function",
      "name": "_load_default_config",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py",
      "line_number": 1158,
      "complexity": 1,
      "docstring": "\u52a0\u8f7d\u9ed8\u8ba4\u914d\u7f6e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:_load_default_config"
    },
    {
      "type": "function",
      "name": "_get_default_strategy",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py",
      "line_number": 1167,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u9ed8\u8ba4\u7b56\u7565",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "ReplacementStrategy"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:_get_default_strategy"
    },
    {
      "type": "function",
      "name": "get_effectiveness_tracker",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py",
      "line_number": 1180,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u7b56\u7565\u6548\u679c\u8ddf\u8e2a\u5668\n\nReturns:\n    Optional[StrategyEffectivenessTracker]: \u6548\u679c\u8ddf\u8e2a\u5668\u5b9e\u4f8b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:get_effectiveness_tracker"
    },
    {
      "type": "function",
      "name": "get_strategy_performance_summary",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py",
      "line_number": 1189,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u7b56\u7565\u6027\u80fd\u6458\u8981\n\nReturns:\n    Dict[str, Any]: \u6027\u80fd\u6458\u8981\u6570\u636e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "strategy_stats.items",
        "self.effectiveness_tracker.get_strategy_performance_summary",
        "effectiveness.is_successful_application",
        "len",
        "sum",
        "len",
        "max",
        "strategy_stats.items",
        "eff.is_successful_application"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:get_strategy_performance_summary"
    },
    {
      "type": "function",
      "name": "analyze_strategy_trends",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py",
      "line_number": 1233,
      "complexity": 1,
      "docstring": "\u5206\u6790\u7b56\u7565\u8d8b\u52bf\n\nArgs:\n    days: \u5206\u6790\u5929\u6570\n    \nReturns:\n    Dict[str, Any]: \u8d8b\u52bf\u5206\u6790\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "days"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.effectiveness_tracker.analyze_strategy_trends",
        "len",
        "max",
        "sum",
        "len",
        "set",
        "min",
        "len",
        "sum"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:analyze_strategy_trends"
    },
    {
      "type": "function",
      "name": "get_improvement_recommendations",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py",
      "line_number": 1262,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u7b56\u7565\u6539\u8fdb\u5efa\u8bae\n\nReturns:\n    List[Dict[str, Any]]: \u6539\u8fdb\u5efa\u8bae\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.effectiveness_tracker.get_improvement_recommendations"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:get_improvement_recommendations"
    },
    {
      "type": "function",
      "name": "export_performance_data",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py",
      "line_number": 1282,
      "complexity": 1,
      "docstring": "\u5bfc\u51fa\u6027\u80fd\u6570\u636e\n\nArgs:\n    format_type: \u5bfc\u51fa\u683c\u5f0f\n    \nReturns:\n    Dict[str, Any]: \u6027\u80fd\u6570\u636e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "format_type"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_strategy_performance_summary",
        "self.analyze_strategy_trends",
        "self.effectiveness_tracker.export_performance_data",
        "datetime.now().isoformat",
        "len",
        "datetime.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:export_performance_data"
    },
    {
      "type": "function",
      "name": "enable_llm_enhanced_similarity",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py",
      "line_number": 1308,
      "complexity": 1,
      "docstring": "\u542f\u7528\u6216\u7981\u7528LLM\u589e\u5f3a\u7684\u76f8\u4f3c\u6027\u5206\u6790\n\nArgs:\n    enable: \u662f\u5426\u542f\u7528",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "enable"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:enable_llm_enhanced_similarity"
    },
    {
      "type": "function",
      "name": "get_strategy_recommendation_confidence",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py",
      "line_number": 1318,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u7b56\u7565\u63a8\u8350\u7684\u7f6e\u4fe1\u5ea6\n\nArgs:\n    situation_score: \u5f53\u524d\u60c5\u5883\u8bc4\u4f30\n    \nReturns:\n    float: \u63a8\u8350\u7f6e\u4fe1\u5ea6 (0.0-1.0)",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "situation_score"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.effectiveness_tracker.recommend_optimal_strategy",
        "situation_score.get_overall_health"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:get_strategy_recommendation_confidence"
    },
    {
      "type": "function",
      "name": "text_similarity",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py",
      "line_number": 839,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "text1",
        "text2"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "set",
        "set",
        "text1.lower().split",
        "text2.lower().split",
        "len",
        "len",
        "text1.lower",
        "text2.lower"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:text_similarity"
    },
    {
      "type": "class",
      "name": "BenchmarkType",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 37,
      "complexity": 1,
      "docstring": "\u57fa\u51c6\u6d4b\u8bd5\u7c7b\u578b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:BenchmarkType"
    },
    {
      "type": "class",
      "name": "BenchmarkMetric",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 48,
      "complexity": 1,
      "docstring": "\u57fa\u51c6\u6d4b\u8bd5\u6307\u6807",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:BenchmarkMetric"
    },
    {
      "type": "class",
      "name": "BenchmarkConfiguration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 63,
      "complexity": 1,
      "docstring": "\u57fa\u51c6\u6d4b\u8bd5\u914d\u7f6e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "to_dict"
      ],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:BenchmarkConfiguration"
    },
    {
      "type": "class",
      "name": "BenchmarkResult",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 93,
      "complexity": 1,
      "docstring": "\u57fa\u51c6\u6d4b\u8bd5\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "to_dict"
      ],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:BenchmarkResult"
    },
    {
      "type": "class",
      "name": "ComparisonResult",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 123,
      "complexity": 1,
      "docstring": "\u5bf9\u6bd4\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "to_dict"
      ],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:ComparisonResult"
    },
    {
      "type": "class",
      "name": "SystemResourceMonitor",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 144,
      "complexity": 1,
      "docstring": "\u7cfb\u7edf\u8d44\u6e90\u76d1\u63a7\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "start_monitoring",
        "stop_monitoring",
        "_monitor_loop"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:SystemResourceMonitor"
    },
    {
      "type": "class",
      "name": "WorkloadGenerator",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 237,
      "complexity": 1,
      "docstring": "\u5de5\u4f5c\u8d1f\u8f7d\u751f\u6210\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "generate_synthetic_context",
        "generate_workload_batch",
        "_generate_random_parameters"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:WorkloadGenerator"
    },
    {
      "type": "class",
      "name": "BenchmarkExecutor",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 323,
      "complexity": 1,
      "docstring": "\u57fa\u51c6\u6d4b\u8bd5\u6267\u884c\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "execute_single_iteration",
        "execute_benchmark",
        "_run_warmup",
        "_process_iteration_result",
        "_get_current_memory_usage",
        "_collect_system_info",
        "_calculate_summary_statistics"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:BenchmarkExecutor"
    },
    {
      "type": "class",
      "name": "BenchmarkAnalyzer",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 593,
      "complexity": 1,
      "docstring": "\u57fa\u51c6\u6d4b\u8bd5\u5206\u6790\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "compare_results",
        "_calculate_improvements",
        "_detect_regression",
        "_identify_significant_changes",
        "_generate_recommendation",
        "generate_performance_report",
        "_analyze_performance_trends",
        "_calculate_trend",
        "_analyze_resource_utilization",
        "_generate_optimization_recommendations"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:BenchmarkAnalyzer"
    },
    {
      "type": "class",
      "name": "IntelligentPerformanceBenchmark",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 940,
      "complexity": 1,
      "docstring": "\u667a\u80fd\u6027\u80fd\u57fa\u51c6\u6d4b\u8bd5\u7cfb\u7edf - Phase 3\u6838\u5fc3\u7ec4\u4ef6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "_create_predefined_configurations",
        "run_benchmark",
        "run_comparative_benchmark",
        "run_regression_test",
        "create_custom_benchmark",
        "generate_comprehensive_report",
        "_assess_system_capabilities",
        "_analyze_configuration_effectiveness",
        "_generate_system_recommendations",
        "get_benchmark_status",
        "export_benchmark_data",
        "reset_benchmark_data"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:IntelligentPerformanceBenchmark"
    },
    {
      "type": "function",
      "name": "to_dict",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 132,
      "complexity": 1,
      "docstring": "\u8f6c\u6362\u4e3a\u5b57\u5178",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.baseline_result.to_dict",
        "self.comparison_result.to_dict"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:to_dict"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 943,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u667a\u80fd\u6027\u80fd\u57fa\u51c6\u6d4b\u8bd5\u7cfb\u7edf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "BenchmarkExecutor",
        "BenchmarkAnalyzer",
        "self._create_predefined_configurations",
        "logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:__init__"
    },
    {
      "type": "function",
      "name": "start_monitoring",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 153,
      "complexity": 1,
      "docstring": "\u5f00\u59cb\u76d1\u63a7",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.samples.clear",
        "threading.Thread",
        "self.monitor_thread.start",
        "logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:start_monitoring"
    },
    {
      "type": "function",
      "name": "stop_monitoring",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 164,
      "complexity": 1,
      "docstring": "\u505c\u6b62\u76d1\u63a7\u5e76\u8fd4\u56de\u6570\u636e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "self.monitor_thread.join",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:stop_monitoring"
    },
    {
      "type": "function",
      "name": "_monitor_loop",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 190,
      "complexity": 1,
      "docstring": "\u76d1\u63a7\u5faa\u73af",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "psutil.disk_io_counters",
        "psutil.net_io_counters",
        "psutil.cpu_percent",
        "psutil.virtual_memory",
        "psutil.disk_io_counters",
        "psutil.net_io_counters",
        "self.samples.append",
        "time.sleep",
        "time.time",
        "logger.error",
        "time.sleep"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:_monitor_loop"
    },
    {
      "type": "function",
      "name": "generate_synthetic_context",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 244,
      "complexity": 1,
      "docstring": "\u751f\u6210\u5408\u6210\u4e0a\u4e0b\u6587",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "complexity_level"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "SituationScore",
        "SituationScore",
        "SituationScore",
        "random.uniform",
        "random.uniform",
        "random.uniform",
        "random.uniform",
        "random.uniform",
        "random.uniform",
        "random.uniform",
        "random.uniform",
        "random.uniform",
        "random.uniform",
        "random.uniform",
        "random.uniform",
        "random.uniform",
        "random.uniform",
        "random.uniform",
        "random.uniform",
        "random.uniform",
        "random.uniform"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:generate_synthetic_context"
    },
    {
      "type": "function",
      "name": "generate_workload_batch",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 275,
      "complexity": 1,
      "docstring": "\u751f\u6210\u5de5\u4f5c\u8d1f\u8f7d\u6279\u6b21",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "batch_size",
        "complexity_distribution"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "range",
        "random.random",
        "complexity_distribution.items",
        "workloads.append",
        "self.generate_synthetic_context",
        "random.choice",
        "self._generate_random_parameters",
        "random.uniform"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:generate_workload_batch"
    },
    {
      "type": "function",
      "name": "_generate_random_parameters",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 309,
      "complexity": 1,
      "docstring": "\u751f\u6210\u968f\u673a\u53c2\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "random.uniform",
        "random.uniform",
        "random.uniform",
        "random.randint",
        "random.randint",
        "random.uniform",
        "random.uniform",
        "random.choice"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:_generate_random_parameters"
    },
    {
      "type": "function",
      "name": "execute_single_iteration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 331,
      "complexity": 1,
      "docstring": "\u6267\u884c\u5355\u6b21\u8fed\u4ee3",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "workload",
        "target_function"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "time.time",
        "target_function",
        "self._get_current_memory_usage",
        "time.time",
        "str",
        "logger.warning",
        "time.time"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:execute_single_iteration"
    },
    {
      "type": "function",
      "name": "execute_benchmark",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 365,
      "complexity": 1,
      "docstring": "\u6267\u884c\u57fa\u51c6\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "configuration",
        "target_function"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "datetime.now",
        "self._collect_system_info",
        "self.resource_monitor.start_monitoring",
        "min",
        "range",
        "self.resource_monitor.stop_monitoring",
        "datetime.now",
        "(end_time - start_time).total_seconds",
        "self._calculate_summary_statistics",
        "BenchmarkResult",
        "logger.info",
        "logger.info",
        "self._run_warmup",
        "time.sleep",
        "min",
        "self.workload_generator.generate_workload_batch",
        "total_workloads.extend",
        "as_completed",
        "logger.error",
        "self.resource_monitor.stop_monitoring",
        "self.execute_single_iteration",
        "self._process_iteration_result",
        "self.executor.submit",
        "futures.append",
        "future.result",
        "self._process_iteration_result",
        "(datetime.now() - start_time).total_seconds",
        "logger.info",
        "len",
        "next",
        "futures.remove",
        "completed_future.result",
        "self._process_iteration_result",
        "(datetime.now() - start_time).total_seconds",
        "future.cancel",
        "as_completed",
        "(datetime.now() - start_time).total_seconds",
        "logger.info",
        "max",
        "datetime.now",
        "datetime.now",
        "datetime.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:execute_benchmark"
    },
    {
      "type": "function",
      "name": "_run_warmup",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 500,
      "complexity": 1,
      "docstring": "\u8fd0\u884c\u9884\u70ed",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "configuration",
        "target_function"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.workload_generator.generate_workload_batch",
        "self.execute_single_iteration"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:_run_warmup"
    },
    {
      "type": "function",
      "name": "_process_iteration_result",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 514,
      "complexity": 1,
      "docstring": "\u5904\u7406\u8fed\u4ee3\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "iteration_result",
        "metrics",
        "configuration"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "metrics[BenchmarkMetric.EXECUTION_TIME].append",
        "metrics[BenchmarkMetric.MEMORY_USAGE].append",
        "metrics[BenchmarkMetric.SUCCESS_RATE].append",
        "metrics[BenchmarkMetric.ERROR_RATE].append",
        "hasattr",
        "metrics[BenchmarkMetric.IMPROVEMENT_SCORE].append",
        "hasattr",
        "result_obj.get_efficiency_gain",
        "metrics[BenchmarkMetric.EFFICIENCY_GAIN].append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:_process_iteration_result"
    },
    {
      "type": "function",
      "name": "_get_current_memory_usage",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 543,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u5f53\u524d\u5185\u5b58\u4f7f\u7528\u91cf\uff08MB\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "psutil.Process",
        "process.memory_info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:_get_current_memory_usage"
    },
    {
      "type": "function",
      "name": "_collect_system_info",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 551,
      "complexity": 1,
      "docstring": "\u6536\u96c6\u7cfb\u7edf\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "psutil.cpu_count",
        "__import__('platform').platform",
        "datetime.now().isoformat",
        "logger.warning",
        "psutil.cpu_freq",
        "psutil.cpu_freq()._asdict",
        "psutil.disk_usage(part.mountpoint)._asdict",
        "__import__",
        "psutil.virtual_memory",
        "psutil.disk_partitions",
        "__import__",
        "datetime.now",
        "psutil.cpu_freq",
        "psutil.disk_usage"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:_collect_system_info"
    },
    {
      "type": "function",
      "name": "_calculate_summary_statistics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 570,
      "complexity": 1,
      "docstring": "\u8ba1\u7b97\u6c47\u603b\u7edf\u8ba1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "metrics"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "metrics.items",
        "summary.update",
        "statistics.mean",
        "statistics.median",
        "min",
        "max",
        "np.percentile",
        "np.percentile",
        "statistics.stdev",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:_calculate_summary_statistics"
    },
    {
      "type": "function",
      "name": "compare_results",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 600,
      "complexity": 1,
      "docstring": "\u5bf9\u6bd4\u57fa\u51c6\u6d4b\u8bd5\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "baseline",
        "comparison"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "self._calculate_improvements",
        "self._detect_regression",
        "self._identify_significant_changes",
        "self._generate_recommendation",
        "ComparisonResult"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:compare_results"
    },
    {
      "type": "function",
      "name": "_calculate_improvements",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 627,
      "complexity": 1,
      "docstring": "\u8ba1\u7b97\u6539\u8fdb\u6307\u6807",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "baseline",
        "comparison"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "set",
        "set",
        "statistics.mean",
        "statistics.mean",
        "baseline.metrics.keys",
        "comparison.metrics.keys",
        "stat_name.lower",
        "stat_name.lower",
        "stat_name.lower"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:_calculate_improvements"
    },
    {
      "type": "function",
      "name": "_detect_regression",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 679,
      "complexity": 1,
      "docstring": "\u68c0\u6d4b\u6027\u80fd\u56de\u5f52",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "improvements"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:_detect_regression"
    },
    {
      "type": "function",
      "name": "_identify_significant_changes",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 699,
      "complexity": 1,
      "docstring": "\u8bc6\u522b\u663e\u8457\u53d8\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "baseline",
        "comparison"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "set",
        "set",
        "statistics.mean",
        "statistics.mean",
        "math.sqrt",
        "baseline.metrics.keys",
        "comparison.metrics.keys",
        "statistics.stdev",
        "statistics.stdev",
        "significant_changes.append",
        "len",
        "len",
        "len",
        "len",
        "abs",
        "abs"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:_identify_significant_changes"
    },
    {
      "type": "function",
      "name": "_generate_recommendation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 759,
      "complexity": 1,
      "docstring": "\u751f\u6210\u5efa\u8bae",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "improvements",
        "regression_detected",
        "significant_changes"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "len",
        "len",
        "len",
        "len",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:_generate_recommendation"
    },
    {
      "type": "function",
      "name": "generate_performance_report",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 783,
      "complexity": 1,
      "docstring": "\u751f\u6210\u6027\u80fd\u62a5\u544a",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "results"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._analyze_performance_trends",
        "self._analyze_resource_utilization",
        "self._generate_optimization_recommendations",
        "len",
        "sum",
        "sum",
        "result.to_dict",
        "sum",
        "max",
        "sum"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:generate_performance_report"
    },
    {
      "type": "function",
      "name": "_analyze_performance_trends",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 804,
      "complexity": 1,
      "docstring": "\u5206\u6790\u6027\u80fd\u8d8b\u52bf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "results"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "sorted",
        "len",
        "len",
        "self._calculate_trend",
        "len",
        "self._calculate_trend",
        "statistics.mean",
        "execution_times.append",
        "statistics.mean",
        "memory_usages.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:_analyze_performance_trends"
    },
    {
      "type": "function",
      "name": "_calculate_trend",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 836,
      "complexity": 1,
      "docstring": "\u8ba1\u7b97\u8d8b\u52bf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "values"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "list",
        "len",
        "range",
        "len",
        "len",
        "np.corrcoef"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:_calculate_trend"
    },
    {
      "type": "function",
      "name": "_analyze_resource_utilization",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 865,
      "complexity": 1,
      "docstring": "\u5206\u6790\u8d44\u6e90\u5229\u7528\u7387",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "results"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "statistics.mean",
        "max",
        "statistics.mean",
        "max",
        "self._calculate_trend",
        "cpu_utilizations.extend",
        "memory_utilizations.extend",
        "len",
        "statistics.stdev",
        "statistics.mean"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:_analyze_resource_utilization"
    },
    {
      "type": "function",
      "name": "_generate_optimization_recommendations",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 899,
      "complexity": 1,
      "docstring": "\u751f\u6210\u4f18\u5316\u5efa\u8bae",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "results"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "sum",
        "max",
        "recommendations.append",
        "statistics.mean",
        "max",
        "recommendations.append",
        "sum",
        "all_execution_times.extend",
        "recommendations.append",
        "statistics.stdev",
        "recommendations.append",
        "all_memory_usage.extend",
        "recommendations.append",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:_generate_optimization_recommendations"
    },
    {
      "type": "function",
      "name": "_create_predefined_configurations",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 957,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u9884\u5b9a\u4e49\u7684\u57fa\u51c6\u6d4b\u8bd5\u914d\u7f6e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "BenchmarkConfiguration",
        "BenchmarkConfiguration",
        "BenchmarkConfiguration",
        "BenchmarkConfiguration"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:_create_predefined_configurations"
    },
    {
      "type": "function",
      "name": "run_benchmark",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 1033,
      "complexity": 1,
      "docstring": "\u8fd0\u884c\u57fa\u51c6\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "configuration_name",
        "target_function",
        "custom_config"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "self.executor.execute_benchmark",
        "self.benchmark_history.append",
        "logger.info",
        "logger.error",
        "ValueError"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:run_benchmark"
    },
    {
      "type": "function",
      "name": "run_comparative_benchmark",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 1066,
      "complexity": 1,
      "docstring": "\u8fd0\u884c\u5bf9\u6bd4\u57fa\u51c6\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "baseline_config_name",
        "comparison_config_name",
        "target_function"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "self.run_benchmark",
        "self.run_benchmark",
        "self.analyzer.compare_results",
        "logger.info",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:run_comparative_benchmark"
    },
    {
      "type": "function",
      "name": "run_regression_test",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 1090,
      "complexity": 1,
      "docstring": "\u8fd0\u884c\u56de\u5f52\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "baseline_name",
        "target_function"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.executor.execute_benchmark",
        "self.analyzer.compare_results",
        "logger.info",
        "ValueError",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:run_regression_test"
    },
    {
      "type": "function",
      "name": "create_custom_benchmark",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 1116,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u81ea\u5b9a\u4e49\u57fa\u51c6\u6d4b\u8bd5\u914d\u7f6e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "name",
        "benchmark_type",
        "duration_seconds",
        "iterations",
        "concurrency_level",
        "metrics"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "BenchmarkConfiguration",
        "logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:create_custom_benchmark"
    },
    {
      "type": "function",
      "name": "generate_comprehensive_report",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 1148,
      "complexity": 1,
      "docstring": "\u751f\u6210\u7efc\u5408\u62a5\u544a",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.analyzer.generate_performance_report",
        "performance_report.copy",
        "report.update",
        "logger.error",
        "self._analyze_configuration_effectiveness",
        "self._generate_system_recommendations",
        "str",
        "list",
        "len",
        "len",
        "self._assess_system_capabilities",
        "self.predefined_configurations.keys"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:generate_comprehensive_report"
    },
    {
      "type": "function",
      "name": "_assess_system_capabilities",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 1176,
      "complexity": 1,
      "docstring": "\u8bc4\u4f30\u7cfb\u7edf\u80fd\u529b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "psutil.cpu_count",
        "min",
        "logger.warning",
        "psutil.cpu_count",
        "psutil.virtual_memory",
        "psutil.virtual_memory"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:_assess_system_capabilities"
    },
    {
      "type": "function",
      "name": "_analyze_configuration_effectiveness",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 1189,
      "complexity": 1,
      "docstring": "\u5206\u6790\u914d\u7f6e\u6709\u6548\u6027",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "config_performance.items",
        "statistics.mean",
        "config_performance[config_name].append",
        "max",
        "result.metrics.get",
        "statistics.mean",
        "len",
        "max",
        "len",
        "statistics.stdev",
        "statistics.mean"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:_analyze_configuration_effectiveness"
    },
    {
      "type": "function",
      "name": "_generate_system_recommendations",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 1219,
      "complexity": 1,
      "docstring": "\u751f\u6210\u7cfb\u7edf\u5efa\u8bae",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "set",
        "set",
        "len",
        "recommendations.append",
        "recommendations.append",
        "recommendations.append",
        "', '.join"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:_generate_system_recommendations"
    },
    {
      "type": "function",
      "name": "get_benchmark_status",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 1239,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u57fa\u51c6\u6d4b\u8bd5\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "list",
        "len",
        "len",
        "self.predefined_configurations.keys",
        "result.start_time.isoformat",
        "max"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:get_benchmark_status"
    },
    {
      "type": "function",
      "name": "export_benchmark_data",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 1255,
      "complexity": 1,
      "docstring": "\u5bfc\u51fa\u57fa\u51c6\u6d4b\u8bd5\u6570\u636e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "format_type"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_benchmark_status",
        "logger.error",
        "self.executor._collect_system_info",
        "str",
        "config.to_dict",
        "result.to_dict",
        "result.to_dict",
        "self.predefined_configurations.items",
        "self.baseline_results.items"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:export_benchmark_data"
    },
    {
      "type": "function",
      "name": "reset_benchmark_data",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py",
      "line_number": 1272,
      "complexity": 1,
      "docstring": "\u91cd\u7f6e\u57fa\u51c6\u6d4b\u8bd5\u6570\u636e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.benchmark_history.clear",
        "self.baseline_results.clear",
        "logger.info",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:reset_benchmark_data"
    },
    {
      "type": "class",
      "name": "PatternType",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py",
      "line_number": 30,
      "complexity": 1,
      "docstring": "\u6a21\u5f0f\u7c7b\u578b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:PatternType"
    },
    {
      "type": "class",
      "name": "Pattern",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py",
      "line_number": 43,
      "complexity": 1,
      "docstring": "\u6a21\u5f0f\u5b9a\u4e49",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "to_dict"
      ],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:Pattern"
    },
    {
      "type": "class",
      "name": "PatternPrediction",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py",
      "line_number": 71,
      "complexity": 1,
      "docstring": "\u6a21\u5f0f\u9884\u6d4b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "to_dict"
      ],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:PatternPrediction"
    },
    {
      "type": "class",
      "name": "PatternDetector",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py",
      "line_number": 92,
      "complexity": 1,
      "docstring": "\u6a21\u5f0f\u68c0\u6d4b\u5668\u57fa\u7c7b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "detect_patterns",
        "get_pattern_type"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "ABC"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:PatternDetector"
    },
    {
      "type": "class",
      "name": "TemporalPatternDetector",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py",
      "line_number": 106,
      "complexity": 1,
      "docstring": "\u65f6\u95f4\u6a21\u5f0f\u68c0\u6d4b\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "get_pattern_type",
        "detect_patterns",
        "_calculate_time_intervals",
        "_detect_interval_pattern",
        "_detect_cyclical_patterns",
        "_detect_time_trend"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "PatternDetector"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:TemporalPatternDetector"
    },
    {
      "type": "class",
      "name": "ContextualPatternDetector",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py",
      "line_number": 258,
      "complexity": 1,
      "docstring": "\u4e0a\u4e0b\u6587\u6a21\u5f0f\u68c0\u6d4b\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "get_pattern_type",
        "detect_patterns",
        "_detect_health_patterns",
        "_detect_issue_patterns",
        "_detect_context_clusters"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "PatternDetector"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:ContextualPatternDetector"
    },
    {
      "type": "class",
      "name": "PerformancePatternDetector",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py",
      "line_number": 411,
      "complexity": 1,
      "docstring": "\u6027\u80fd\u6a21\u5f0f\u68c0\u6d4b\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "get_pattern_type",
        "detect_patterns",
        "_detect_peak_patterns",
        "_detect_decline_patterns",
        "_detect_stability_patterns",
        "_detect_performance_anomalies",
        "_find_common_context_features",
        "_merge_overlapping_regions"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "PatternDetector"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:PerformancePatternDetector"
    },
    {
      "type": "class",
      "name": "StrategySequencePatternDetector",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py",
      "line_number": 665,
      "complexity": 1,
      "docstring": "\u7b56\u7565\u5e8f\u5217\u6a21\u5f0f\u68c0\u6d4b\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "get_pattern_type",
        "detect_patterns",
        "_detect_transition_patterns",
        "_detect_combination_patterns",
        "_detect_success_sequences"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "PatternDetector"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:StrategySequencePatternDetector"
    },
    {
      "type": "class",
      "name": "AdvancedPatternRecognitionEngine",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py",
      "line_number": 819,
      "complexity": 1,
      "docstring": "\u9ad8\u7ea7\u6a21\u5f0f\u8bc6\u522b\u5f15\u64ce - Phase 3\u6838\u5fc3\u7ec4\u4ef6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "analyze_patterns",
        "_generate_predictions",
        "_create_pattern_prediction",
        "_predict_cyclical_pattern",
        "_predict_trend_pattern",
        "_predict_performance_pattern",
        "_predict_sequence_pattern",
        "_predict_generic_pattern",
        "_identify_important_patterns",
        "_explain_importance",
        "_generate_insights",
        "get_pattern_summary",
        "export_patterns",
        "clear_patterns"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:AdvancedPatternRecognitionEngine"
    },
    {
      "type": "function",
      "name": "to_dict",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py",
      "line_number": 80,
      "complexity": 1,
      "docstring": "\u8f6c\u6362\u4e3a\u5b57\u5178",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.predicted_pattern.to_dict",
        "self.expected_timing.isoformat"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:to_dict"
    },
    {
      "type": "function",
      "name": "detect_patterns",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py",
      "line_number": 671,
      "complexity": 1,
      "docstring": "\u68c0\u6d4b\u7b56\u7565\u5e8f\u5217\u6a21\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "self._detect_transition_patterns",
        "patterns.extend",
        "self._detect_combination_patterns",
        "patterns.extend",
        "self._detect_success_sequences",
        "patterns.extend",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:detect_patterns"
    },
    {
      "type": "function",
      "name": "get_pattern_type",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py",
      "line_number": 668,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:get_pattern_type"
    },
    {
      "type": "function",
      "name": "_calculate_time_intervals",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py",
      "line_number": 140,
      "complexity": 1,
      "docstring": "\u8ba1\u7b97\u65f6\u95f4\u95f4\u9694",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "range",
        "len",
        "(data[i].application_timestamp - data[i - 1].application_timestamp).total_seconds",
        "intervals.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:_calculate_time_intervals"
    },
    {
      "type": "function",
      "name": "_detect_interval_pattern",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py",
      "line_number": 148,
      "complexity": 1,
      "docstring": "\u68c0\u6d4b\u95f4\u9694\u6a21\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "intervals"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "np.mean",
        "np.std",
        "len",
        "Pattern",
        "len",
        "datetime.now",
        "int"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:_detect_interval_pattern"
    },
    {
      "type": "function",
      "name": "_detect_cyclical_patterns",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py",
      "line_number": 178,
      "complexity": 1,
      "docstring": "\u68c0\u6d4b\u5468\u671f\u6027\u6a21\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "defaultdict",
        "len",
        "hourly_performance[hour].append",
        "len",
        "hourly_performance.items",
        "max",
        "min",
        "np.mean",
        "hour_scores.items",
        "hour_scores.items",
        "patterns.append",
        "Pattern",
        "len",
        "datetime.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:_detect_cyclical_patterns"
    },
    {
      "type": "function",
      "name": "_detect_time_trend",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py",
      "line_number": 222,
      "complexity": 1,
      "docstring": "\u68c0\u6d4b\u65f6\u95f4\u8d8b\u52bf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "(eff.application_timestamp - data[0].application_timestamp).total_seconds",
        "abs",
        "abs",
        "Pattern",
        "len",
        "np.corrcoef",
        "len",
        "datetime.now",
        "len",
        "abs"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:_detect_time_trend"
    },
    {
      "type": "function",
      "name": "_detect_health_patterns",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py",
      "line_number": 289,
      "complexity": 1,
      "docstring": "\u68c0\u6d4b\u5065\u5eb7\u5ea6\u6a21\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "health_groups.items",
        "eff.applied_context.get_overall_health",
        "health_groups['high'].append",
        "len",
        "np.mean",
        "patterns.append",
        "health_groups['medium'].append",
        "health_groups['low'].append",
        "Pattern",
        "len",
        "max",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:_detect_health_patterns"
    },
    {
      "type": "function",
      "name": "_detect_issue_patterns",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py",
      "line_number": 328,
      "complexity": 1,
      "docstring": "\u68c0\u6d4b\u5173\u952e\u95ee\u9898\u6a21\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "defaultdict",
        "issue_performance.items",
        "eff.applied_context.get_critical_issues",
        "issue_performance['no_issues'].append",
        "len",
        "np.mean",
        "patterns.append",
        "issue_performance[issue].append",
        "Pattern",
        "len",
        "datetime.now",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:_detect_issue_patterns"
    },
    {
      "type": "function",
      "name": "_detect_context_clusters",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py",
      "line_number": 366,
      "complexity": 1,
      "docstring": "\u68c0\u6d4b\u4e0a\u4e0b\u6587\u805a\u7c7b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "context_signatures.items",
        "context.get_critical_issues",
        "context_signatures[signature].append",
        "len",
        "np.mean",
        "np.std",
        "patterns.append",
        "context.get_overall_health",
        "Pattern",
        "context.get_overall_health",
        "len",
        "max",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:_detect_context_clusters"
    },
    {
      "type": "function",
      "name": "_detect_peak_patterns",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py",
      "line_number": 446,
      "complexity": 1,
      "docstring": "\u68c0\u6d4b\u6027\u80fd\u5cf0\u503c\u6a21\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "np.mean",
        "np.std",
        "len",
        "self._find_common_context_features",
        "enumerate",
        "patterns.append",
        "Pattern",
        "len",
        "len",
        "len",
        "np.mean"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:_detect_peak_patterns"
    },
    {
      "type": "function",
      "name": "_detect_decline_patterns",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py",
      "line_number": 485,
      "complexity": 1,
      "docstring": "\u68c0\u6d4b\u6027\u80fd\u4e0b\u964d\u6a21\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "range",
        "len",
        "len",
        "decline_sequences.append",
        "patterns.append",
        "current_decline.append",
        "len",
        "decline_sequences.append",
        "Pattern",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:_detect_decline_patterns"
    },
    {
      "type": "function",
      "name": "_detect_stability_patterns",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py",
      "line_number": 534,
      "complexity": 1,
      "docstring": "\u68c0\u6d4b\u6027\u80fd\u7a33\u5b9a\u533a\u95f4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "min",
        "range",
        "self._merge_overlapping_regions",
        "len",
        "np.std",
        "stable_regions.append",
        "patterns.append",
        "len",
        "Pattern",
        "np.mean"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:_detect_stability_patterns"
    },
    {
      "type": "function",
      "name": "_detect_performance_anomalies",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py",
      "line_number": 576,
      "complexity": 1,
      "docstring": "\u68c0\u6d4b\u6027\u80fd\u5f02\u5e38",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "np.mean",
        "np.std",
        "enumerate",
        "patterns.append",
        "anomalies.append",
        "Pattern",
        "len",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:_detect_performance_anomalies"
    },
    {
      "type": "function",
      "name": "_find_common_context_features",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py",
      "line_number": 615,
      "complexity": 1,
      "docstring": "\u627e\u5230\u4e0a\u4e0b\u6587\u7684\u5171\u540c\u7279\u5f81",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "contexts"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "ctx.get_overall_health",
        "len",
        "all_issues.extend",
        "Counter",
        "set",
        "ctx.get_critical_issues",
        "issue_counts.items",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:_find_common_context_features"
    },
    {
      "type": "function",
      "name": "_merge_overlapping_regions",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py",
      "line_number": 641,
      "complexity": 1,
      "docstring": "\u5408\u5e76\u91cd\u53e0\u7684\u533a\u95f4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "regions"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "sorted",
        "max",
        "min",
        "merged.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:_merge_overlapping_regions"
    },
    {
      "type": "function",
      "name": "_detect_transition_patterns",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py",
      "line_number": 696,
      "complexity": 1,
      "docstring": "\u68c0\u6d4b\u7b56\u7565\u8f6c\u6362\u6a21\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Counter",
        "len",
        "range",
        "range",
        "transition_counts.items",
        "np.mean",
        "patterns.append",
        "max",
        "len",
        "performance_changes.append",
        "Pattern",
        "len",
        "datetime.now",
        "abs"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:_detect_transition_patterns"
    },
    {
      "type": "function",
      "name": "_detect_combination_patterns",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py",
      "line_number": 742,
      "complexity": 1,
      "docstring": "\u68c0\u6d4b\u7b56\u7565\u7ec4\u5408\u6a21\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "range",
        "tuple",
        "np.mean",
        "patterns.append",
        "len",
        "Pattern",
        "'_'.join",
        "' \u2192 '.join"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:_detect_combination_patterns"
    },
    {
      "type": "function",
      "name": "_detect_success_sequences",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py",
      "line_number": 774,
      "complexity": 1,
      "docstring": "\u68c0\u6d4b\u6210\u529f\u5e8f\u5217\u6a21\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "eff.is_successful_application",
        "len",
        "success_sequences.append",
        "np.mean",
        "patterns.append",
        "current_sequence.append",
        "Pattern",
        "len",
        "success_sequences.append",
        "len",
        "len",
        "seq[0].application_timestamp.isoformat",
        "seq[-1].application_timestamp.isoformat",
        "len",
        "seq[0].application_timestamp.strftime",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:_detect_success_sequences"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py",
      "line_number": 822,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u6a21\u5f0f\u8bc6\u522b\u5f15\u64ce",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "TemporalPatternDetector",
        "ContextualPatternDetector",
        "PerformancePatternDetector",
        "StrategySequencePatternDetector"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:__init__"
    },
    {
      "type": "function",
      "name": "analyze_patterns",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py",
      "line_number": 843,
      "complexity": 1,
      "docstring": "\u5206\u6790\u6a21\u5f0f\n\nArgs:\n    effectiveness_history: \u7b56\u7565\u6548\u679c\u5386\u53f2\u6570\u636e\n    include_predictions: \u662f\u5426\u5305\u542b\u9884\u6d4b\n    \nReturns:\n    Dict[str, Any]: \u5206\u6790\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "effectiveness_history",
        "include_predictions"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "self.detectors.items",
        "sum",
        "sum",
        "self._identify_important_patterns",
        "self._generate_insights",
        "logger.info",
        "len",
        "self._generate_predictions",
        "pattern_counts.values",
        "logger.error",
        "detector.detect_patterns",
        "len",
        "logger.info",
        "p.to_dict",
        "len",
        "datetime.now().isoformat",
        "len",
        "len",
        "p.to_dict",
        "logger.error",
        "all_patterns.values",
        "str",
        "sorted",
        "datetime.now",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:analyze_patterns"
    },
    {
      "type": "function",
      "name": "_generate_predictions",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py",
      "line_number": 946,
      "complexity": 1,
      "docstring": "\u751f\u6210\u6a21\u5f0f\u9884\u6d4b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "history"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.discovered_patterns.values",
        "predictions.sort",
        "logger.error",
        "self._create_pattern_prediction",
        "predictions.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:_generate_predictions"
    },
    {
      "type": "function",
      "name": "_create_pattern_prediction",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py",
      "line_number": 968,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u6a21\u5f0f\u9884\u6d4b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "pattern",
        "history"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._predict_cyclical_pattern",
        "logger.error",
        "self._predict_trend_pattern",
        "self._predict_performance_pattern",
        "self._predict_sequence_pattern",
        "self._predict_generic_pattern"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:_create_pattern_prediction"
    },
    {
      "type": "function",
      "name": "_predict_cyclical_pattern",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py",
      "line_number": 989,
      "complexity": 1,
      "docstring": "\u9884\u6d4b\u5468\u671f\u6027\u6a21\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "pattern",
        "history"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "datetime.now",
        "now.replace",
        "PatternPrediction",
        "timedelta"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:_predict_cyclical_pattern"
    },
    {
      "type": "function",
      "name": "_predict_trend_pattern",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py",
      "line_number": 1013,
      "complexity": 1,
      "docstring": "\u9884\u6d4b\u8d8b\u52bf\u6a21\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "pattern",
        "history"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "pattern.parameters.get",
        "pattern.parameters.get",
        "PatternPrediction",
        "datetime.now",
        "timedelta"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:_predict_trend_pattern"
    },
    {
      "type": "function",
      "name": "_predict_performance_pattern",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py",
      "line_number": 1042,
      "complexity": 1,
      "docstring": "\u9884\u6d4b\u6027\u80fd\u6a21\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "pattern",
        "history"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "pattern.pattern_id.startswith",
        "pattern.parameters.get",
        "PatternPrediction",
        "conditions.append",
        "conditions.append",
        "datetime.now",
        "timedelta",
        "', '.join"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:_predict_performance_pattern"
    },
    {
      "type": "function",
      "name": "_predict_sequence_pattern",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py",
      "line_number": 1067,
      "complexity": 1,
      "docstring": "\u9884\u6d4b\u5e8f\u5217\u6a21\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "pattern",
        "history"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "pattern.pattern_id.startswith",
        "pattern.parameters.get",
        "pattern.parameters.get",
        "PatternPrediction",
        "datetime.now",
        "timedelta"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:_predict_sequence_pattern"
    },
    {
      "type": "function",
      "name": "_predict_generic_pattern",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py",
      "line_number": 1088,
      "complexity": 1,
      "docstring": "\u9884\u6d4b\u901a\u7528\u6a21\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "pattern",
        "history"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "PatternPrediction",
        "datetime.now",
        "timedelta"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:_predict_generic_pattern"
    },
    {
      "type": "function",
      "name": "_identify_important_patterns",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py",
      "line_number": 1101,
      "complexity": 1,
      "docstring": "\u8bc6\u522b\u91cd\u8981\u6a21\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "all_patterns"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "all_patterns.items",
        "important.sort",
        "important.append",
        "self._explain_importance"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:_identify_important_patterns"
    },
    {
      "type": "function",
      "name": "_explain_importance",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py",
      "line_number": 1126,
      "complexity": 1,
      "docstring": "\u89e3\u91ca\u6a21\u5f0f\u91cd\u8981\u6027",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "pattern",
        "score"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "reasons.append",
        "reasons.append",
        "reasons.append",
        "reasons.append",
        "reasons.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:_explain_importance"
    },
    {
      "type": "function",
      "name": "_generate_insights",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py",
      "line_number": 1147,
      "complexity": 1,
      "docstring": "\u751f\u6210\u6d1e\u5bdf\u548c\u5efa\u8bae",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "all_patterns",
        "history"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "sum",
        "insights.append",
        "logger.error",
        "len",
        "insights.append",
        "len",
        "insights.append",
        "insights.append",
        "all_patterns.values",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:_generate_insights"
    },
    {
      "type": "function",
      "name": "get_pattern_summary",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py",
      "line_number": 1199,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6a21\u5f0f\u6458\u8981",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "defaultdict",
        "self.discovered_patterns.values",
        "len",
        "np.mean",
        "sum",
        "patterns_by_type[pattern.pattern_type.value].append",
        "len",
        "len",
        "max",
        "self.discovered_patterns.values",
        "self.discovered_patterns.values",
        "patterns_by_type.items",
        "self.discovered_patterns.values"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:get_pattern_summary"
    },
    {
      "type": "function",
      "name": "export_patterns",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py",
      "line_number": 1224,
      "complexity": 1,
      "docstring": "\u5bfc\u51fa\u6a21\u5f0f\u6570\u636e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "format_type"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_pattern_summary",
        "pattern.to_dict",
        "pred.to_dict",
        "self.discovered_patterns.items"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:export_patterns"
    },
    {
      "type": "function",
      "name": "clear_patterns",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py",
      "line_number": 1239,
      "complexity": 1,
      "docstring": "\u6e05\u9664\u6240\u6709\u6a21\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.discovered_patterns.clear",
        "self.pattern_predictions.clear",
        "logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:clear_patterns"
    },
    {
      "type": "class",
      "name": "OptimizationAlgorithm",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py",
      "line_number": 29,
      "complexity": 1,
      "docstring": "\u4f18\u5316\u7b97\u6cd5\u7c7b\u578b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py:OptimizationAlgorithm"
    },
    {
      "type": "class",
      "name": "ParameterRange",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py",
      "line_number": 40,
      "complexity": 1,
      "docstring": "\u53c2\u6570\u8303\u56f4\u5b9a\u4e49",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "clip",
        "normalize",
        "denormalize"
      ],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py:ParameterRange"
    },
    {
      "type": "class",
      "name": "OptimizationState",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py",
      "line_number": 64,
      "complexity": 1,
      "docstring": "\u4f18\u5316\u72b6\u6001\u8bb0\u5f55",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py:OptimizationState"
    },
    {
      "type": "class",
      "name": "LearningCurve",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py",
      "line_number": 77,
      "complexity": 1,
      "docstring": "\u5b66\u4e60\u66f2\u7ebf\u6570\u636e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "add_point"
      ],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py:LearningCurve"
    },
    {
      "type": "class",
      "name": "DynamicParameterOptimizer",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py",
      "line_number": 98,
      "complexity": 1,
      "docstring": "\u52a8\u6001\u53c2\u6570\u4f18\u5316\u5668 - Phase 3\u6838\u5fc3\u7ec4\u4ef6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "_define_parameter_ranges",
        "optimize_parameters",
        "_gradient_descent_optimization",
        "_bayesian_optimization",
        "_reinforcement_learning_optimization",
        "_adaptive_learning_rate_optimization",
        "_estimate_gradients",
        "_calculate_performance_score",
        "_calculate_trend",
        "_generate_parameter_candidates",
        "_calculate_expected_improvement",
        "_encode_state",
        "_get_possible_actions",
        "_calculate_reward",
        "_validate_and_clip_parameters",
        "_record_optimization_state",
        "get_optimization_summary",
        "_check_convergence",
        "_analyze_parameter_stability",
        "export_learning_data",
        "reset_optimization_state"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py:DynamicParameterOptimizer"
    },
    {
      "type": "function",
      "name": "clip",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py",
      "line_number": 48,
      "complexity": 1,
      "docstring": "\u5c06\u503c\u9650\u5236\u5728\u6709\u6548\u8303\u56f4\u5185",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "value"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "max",
        "min"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py:clip"
    },
    {
      "type": "function",
      "name": "normalize",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py",
      "line_number": 52,
      "complexity": 1,
      "docstring": "\u5c06\u503c\u5f52\u4e00\u5316\u5230[0,1]\u8303\u56f4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "value"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py:normalize"
    },
    {
      "type": "function",
      "name": "denormalize",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py",
      "line_number": 58,
      "complexity": 1,
      "docstring": "\u5c06\u5f52\u4e00\u5316\u503c\u8fd8\u539f\u5230\u539f\u59cb\u8303\u56f4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "normalized_value"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py:denormalize"
    },
    {
      "type": "function",
      "name": "add_point",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py",
      "line_number": 86,
      "complexity": 1,
      "docstring": "\u6dfb\u52a0\u5b66\u4e60\u66f2\u7ebf\u6570\u636e\u70b9",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "iteration",
        "score",
        "parameters",
        "convergence"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.iterations.append",
        "self.performance_scores.append",
        "self.parameter_values.append",
        "self.convergence_metrics.append",
        "parameters.copy",
        "parameters.copy"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py:add_point"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py",
      "line_number": 101,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u52a8\u6001\u53c2\u6570\u4f18\u5316\u5668\n\nArgs:\n    optimization_algorithm: \u4f7f\u7528\u7684\u4f18\u5316\u7b97\u6cd5\n    max_iterations: \u6700\u5927\u4f18\u5316\u8fed\u4ee3\u6b21\u6570\n    convergence_threshold: \u6536\u655b\u9608\u503c\n    learning_rate: \u5b66\u4e60\u7387",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "optimization_algorithm",
        "max_iterations",
        "convergence_threshold",
        "learning_rate"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._define_parameter_ranges",
        "defaultdict",
        "logger.info",
        "defaultdict"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py:__init__"
    },
    {
      "type": "function",
      "name": "_define_parameter_ranges",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py",
      "line_number": 147,
      "complexity": 1,
      "docstring": "\u5b9a\u4e49\u53ef\u4f18\u5316\u53c2\u6570\u7684\u8303\u56f4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "ParameterRange",
        "ParameterRange",
        "ParameterRange",
        "ParameterRange",
        "ParameterRange",
        "ParameterRange",
        "ParameterRange",
        "ParameterRange"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py:_define_parameter_ranges"
    },
    {
      "type": "function",
      "name": "optimize_parameters",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py",
      "line_number": 176,
      "complexity": 1,
      "docstring": "\u4f18\u5316\u7b56\u7565\u53c2\u6570\n\nArgs:\n    strategy_type: \u7b56\u7565\u7c7b\u578b\n    current_parameters: \u5f53\u524d\u53c2\u6570\u503c\n    performance_history: \u6027\u80fd\u5386\u53f2\u6570\u636e\n    situation_context: \u5f53\u524d\u60c5\u5883\u4e0a\u4e0b\u6587\n    \nReturns:\n    Dict[str, float]: \u4f18\u5316\u540e\u7684\u53c2\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "strategy_type",
        "current_parameters",
        "performance_history",
        "situation_context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "self._calculate_performance_score",
        "self._validate_and_clip_parameters",
        "self._record_optimization_state",
        "logger.info",
        "self._gradient_descent_optimization",
        "logger.error",
        "self._bayesian_optimization",
        "self._reinforcement_learning_optimization",
        "self._adaptive_learning_rate_optimization",
        "self._adaptive_learning_rate_optimization"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py:optimize_parameters"
    },
    {
      "type": "function",
      "name": "_gradient_descent_optimization",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py",
      "line_number": 238,
      "complexity": 1,
      "docstring": "\u68af\u5ea6\u4e0b\u964d\u4f18\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "strategy_type",
        "current_params",
        "history",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._estimate_gradients",
        "current_params.items",
        "len",
        "logger.error",
        "gradients.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py:_gradient_descent_optimization"
    },
    {
      "type": "function",
      "name": "_bayesian_optimization",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py",
      "line_number": 279,
      "complexity": 1,
      "docstring": "\u8d1d\u53f6\u65af\u4f18\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "strategy_type",
        "current_params",
        "history",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._calculate_performance_score",
        "self.gaussian_process_data.append",
        "max",
        "self._generate_parameter_candidates",
        "len",
        "self._calculate_expected_improvement",
        "logger.error",
        "current_params.copy"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py:_bayesian_optimization"
    },
    {
      "type": "function",
      "name": "_reinforcement_learning_optimization",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py",
      "line_number": 321,
      "complexity": 1,
      "docstring": "\u5f3a\u5316\u5b66\u4e60\u4f18\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "strategy_type",
        "current_params",
        "history",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._encode_state",
        "self._get_possible_actions",
        "max",
        "np.random.random",
        "np.random.choice",
        "len",
        "self._calculate_reward",
        "self.q_table[state_key].get",
        "logger.error",
        "list",
        "np.random.choice",
        "max",
        "possible_actions.keys",
        "max",
        "list",
        "self.q_table[state_key].values",
        "q_values.items",
        "possible_actions.keys"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py:_reinforcement_learning_optimization"
    },
    {
      "type": "function",
      "name": "_adaptive_learning_rate_optimization",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py",
      "line_number": 369,
      "complexity": 1,
      "docstring": "\u81ea\u9002\u5e94\u5b66\u4e60\u7387\u4f18\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "strategy_type",
        "current_params",
        "history",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._calculate_trend",
        "context.get_overall_health",
        "current_params.items",
        "len",
        "min",
        "logger.error",
        "max",
        "param_range.clip"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py:_adaptive_learning_rate_optimization"
    },
    {
      "type": "function",
      "name": "_estimate_gradients",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py",
      "line_number": 424,
      "complexity": 1,
      "docstring": "\u4f30\u8ba1\u53c2\u6570\u68af\u5ea6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "params",
        "history"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py:_estimate_gradients"
    },
    {
      "type": "function",
      "name": "_calculate_performance_score",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py",
      "line_number": 454,
      "complexity": 1,
      "docstring": "\u8ba1\u7b97\u6574\u4f53\u6027\u80fd\u5206\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "history"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "zip",
        "sum",
        "sum",
        "range",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py:_calculate_performance_score"
    },
    {
      "type": "function",
      "name": "_calculate_trend",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py",
      "line_number": 465,
      "complexity": 1,
      "docstring": "\u8ba1\u7b97\u6027\u80fd\u8d8b\u52bf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "scores"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "list",
        "sum",
        "sum",
        "sum",
        "sum",
        "len",
        "range",
        "zip"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py:_calculate_trend"
    },
    {
      "type": "function",
      "name": "_generate_parameter_candidates",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py",
      "line_number": 487,
      "complexity": 1,
      "docstring": "\u751f\u6210\u53c2\u6570\u5019\u9009",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_params",
        "num_candidates"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "range",
        "current_params.items",
        "candidates.append",
        "param_range.clip",
        "np.random.normal"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py:_generate_parameter_candidates"
    },
    {
      "type": "function",
      "name": "_calculate_expected_improvement",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py",
      "line_number": 508,
      "complexity": 1,
      "docstring": "\u8ba1\u7b97\u671f\u671b\u6539\u8fdb",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "candidate_params",
        "best_score"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "math.sqrt",
        "param_range.normalize",
        "param_range.normalize"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py:_calculate_expected_improvement"
    },
    {
      "type": "function",
      "name": "_encode_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py",
      "line_number": 543,
      "complexity": 1,
      "docstring": "\u7f16\u7801\u72b6\u6001\u4e3a\u5b57\u7b26\u4e32",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context",
        "params"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "sorted",
        "params.keys",
        "'_'.join",
        "context.get_overall_health",
        "param_range.normalize",
        "int",
        "param_signature.append",
        "context.get_overall_health"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py:_encode_state"
    },
    {
      "type": "function",
      "name": "_get_possible_actions",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py",
      "line_number": 558,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u53ef\u80fd\u7684\u52a8\u4f5c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_params"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "current_params.items",
        "current_params.copy",
        "current_params.copy",
        "param_range.clip",
        "current_params.copy",
        "param_range.clip"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py:_get_possible_actions"
    },
    {
      "type": "function",
      "name": "_calculate_reward",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py",
      "line_number": 583,
      "complexity": 1,
      "docstring": "\u8ba1\u7b97\u5f3a\u5316\u5b66\u4e60\u5956\u52b1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "effectiveness"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "effectiveness.is_successful_application",
        "effectiveness.get_performance_gain"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py:_calculate_reward"
    },
    {
      "type": "function",
      "name": "_validate_and_clip_parameters",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py",
      "line_number": 598,
      "complexity": 1,
      "docstring": "\u9a8c\u8bc1\u5e76\u88c1\u526a\u53c2\u6570\u5230\u6709\u6548\u8303\u56f4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "params"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "params.items",
        "param_range.clip"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py:_validate_and_clip_parameters"
    },
    {
      "type": "function",
      "name": "_record_optimization_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py",
      "line_number": 611,
      "complexity": 1,
      "docstring": "\u8bb0\u5f55\u4f18\u5316\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "strategy_type",
        "parameters",
        "performance_score",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "OptimizationState",
        "self.optimization_history.append",
        "self.learning_curves[strategy_type].add_point",
        "abs",
        "LearningCurve",
        "max",
        "parameters.copy",
        "datetime.now",
        "abs",
        "context.get_overall_health",
        "context.get_critical_issues"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py:_record_optimization_state"
    },
    {
      "type": "function",
      "name": "get_optimization_summary",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py",
      "line_number": 654,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u4f18\u5316\u6458\u8981",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "max",
        "self._check_convergence",
        "self._analyze_parameter_stability",
        "len",
        "self.learning_curves.items"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py:get_optimization_summary"
    },
    {
      "type": "function",
      "name": "_check_convergence",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py",
      "line_number": 678,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u6536\u655b\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "sum",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py:_check_convergence"
    },
    {
      "type": "function",
      "name": "_analyze_parameter_stability",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py",
      "line_number": 695,
      "complexity": 1,
      "docstring": "\u5206\u6790\u53c2\u6570\u7a33\u5b9a\u6027",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "values.append",
        "len",
        "sum",
        "len",
        "math.sqrt",
        "sum",
        "len",
        "abs"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py:_analyze_parameter_stability"
    },
    {
      "type": "function",
      "name": "export_learning_data",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py",
      "line_number": 720,
      "complexity": 1,
      "docstring": "\u5bfc\u51fa\u5b66\u4e60\u6570\u636e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "format_type"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_optimization_summary",
        "asdict",
        "asdict",
        "getattr",
        "self.learning_curves.items",
        "self.parameter_ranges.items"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py:export_learning_data"
    },
    {
      "type": "function",
      "name": "reset_optimization_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py",
      "line_number": 750,
      "complexity": 1,
      "docstring": "\u91cd\u7f6e\u4f18\u5316\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.optimization_history.clear",
        "self.learning_curves.clear",
        "self.gradient_estimates.clear",
        "self.momentum_terms.clear",
        "self.adaptive_rates.clear",
        "self.gaussian_process_data.clear",
        "self.q_table.clear",
        "logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/dynamic_parameter_optimizer.py:reset_optimization_state"
    },
    {
      "type": "class",
      "name": "RLAlgorithmType",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py",
      "line_number": 30,
      "complexity": 1,
      "docstring": "\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5\u7c7b\u578b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py:RLAlgorithmType"
    },
    {
      "type": "class",
      "name": "ActionType",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py",
      "line_number": 40,
      "complexity": 1,
      "docstring": "\u884c\u52a8\u7c7b\u578b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py:ActionType"
    },
    {
      "type": "class",
      "name": "RLState",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py",
      "line_number": 48,
      "complexity": 1,
      "docstring": "\u5f3a\u5316\u5b66\u4e60\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "to_vector",
        "to_dict"
      ],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py:RLState"
    },
    {
      "type": "class",
      "name": "RLAction",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py",
      "line_number": 80,
      "complexity": 1,
      "docstring": "\u5f3a\u5316\u5b66\u4e60\u884c\u52a8",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "to_dict"
      ],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py:RLAction"
    },
    {
      "type": "class",
      "name": "RLExperience",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py",
      "line_number": 102,
      "complexity": 1,
      "docstring": "\u5f3a\u5316\u5b66\u4e60\u7ecf\u9a8c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "to_dict"
      ],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py:RLExperience"
    },
    {
      "type": "class",
      "name": "QLearningAgent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py",
      "line_number": 123,
      "complexity": 1,
      "docstring": "Q-Learning\u667a\u80fd\u4f53",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "discretize_state",
        "choose_action",
        "learn",
        "get_q_value",
        "get_policy"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py:QLearningAgent"
    },
    {
      "type": "class",
      "name": "MultiArmedBanditAgent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py",
      "line_number": 245,
      "complexity": 1,
      "docstring": "\u591a\u81c2\u8001\u864e\u673a\u667a\u80fd\u4f53",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "choose_action",
        "choose_action_ucb",
        "update",
        "get_arm_statistics"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py:MultiArmedBanditAgent"
    },
    {
      "type": "class",
      "name": "PolicyGradientAgent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py",
      "line_number": 316,
      "complexity": 1,
      "docstring": "\u7b56\u7565\u68af\u5ea6\u667a\u80fd\u4f53\uff08\u7b80\u5316\u5b9e\u73b0\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "get_action_probabilities",
        "choose_action",
        "store_transition",
        "learn_episode",
        "_compute_discounted_rewards"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py:PolicyGradientAgent"
    },
    {
      "type": "class",
      "name": "ReinforcementLearningOptimizer",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py",
      "line_number": 416,
      "complexity": 1,
      "docstring": "\u5f3a\u5316\u5b66\u4e60\u4f18\u5316\u5668 - Phase 3\u6838\u5fc3\u7ec4\u4ef6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "_create_agent",
        "_define_action_space",
        "encode_state",
        "choose_action",
        "learn_from_experience",
        "calculate_reward",
        "_get_action_index",
        "_get_strategy_index",
        "_generate_context_signature",
        "_end_episode",
        "get_learning_statistics",
        "_calculate_reward_trend",
        "get_policy_recommendations",
        "export_learning_data",
        "save_model",
        "load_model",
        "reset_learning"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py:ReinforcementLearningOptimizer"
    },
    {
      "type": "function",
      "name": "to_vector",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py",
      "line_number": 61,
      "complexity": 1,
      "docstring": "\u8f6c\u6362\u4e3a\u72b6\u6001\u5411\u91cf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "np.array"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py:to_vector"
    },
    {
      "type": "function",
      "name": "to_dict",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py",
      "line_number": 111,
      "complexity": 1,
      "docstring": "\u8f6c\u6362\u4e3a\u5b57\u5178",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.state.to_dict",
        "self.action.to_dict",
        "self.next_state.to_dict",
        "self.timestamp.isoformat"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py:to_dict"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py",
      "line_number": 419,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u5f3a\u5316\u5b66\u4e60\u4f18\u5316\u5668\n\nArgs:\n    algorithm_type: \u4f7f\u7528\u7684\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5\n    state_size: \u72b6\u6001\u7a7a\u95f4\u7ef4\u5ea6\n    action_size: \u884c\u52a8\u7a7a\u95f4\u5927\u5c0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "algorithm_type",
        "state_size",
        "action_size"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._create_agent",
        "list",
        "self._define_action_space",
        "deque",
        "logger.info",
        "getattr"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py:__init__"
    },
    {
      "type": "function",
      "name": "discretize_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py",
      "line_number": 164,
      "complexity": 1,
      "docstring": "\u79bb\u6563\u5316\u72b6\u6001\u5411\u91cf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "state_vector"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "'_'.join",
        "int",
        "discretized.append",
        "np.clip",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py:discretize_state"
    },
    {
      "type": "function",
      "name": "choose_action",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py",
      "line_number": 550,
      "complexity": 1,
      "docstring": "\u9009\u62e9\u884c\u52a8",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.agent.choose_action",
        "self.agent.choose_action",
        "len",
        "hasattr",
        "logger.error",
        "len",
        "RLAction",
        "self.agent.get_q_value"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py:choose_action"
    },
    {
      "type": "function",
      "name": "learn",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py",
      "line_number": 192,
      "complexity": 1,
      "docstring": "Q-Learning\u66f4\u65b0",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "state",
        "action",
        "reward",
        "next_state",
        "done"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.discretize_state",
        "self.discretize_state",
        "max",
        "state.to_vector",
        "next_state.to_vector",
        "max",
        "next_q_values.values"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py:learn"
    },
    {
      "type": "function",
      "name": "get_q_value",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py",
      "line_number": 216,
      "complexity": 1,
      "docstring": "\u83b7\u53d6Q\u503c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "state",
        "action"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.discretize_state",
        "state.to_vector"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py:get_q_value"
    },
    {
      "type": "function",
      "name": "get_policy",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py",
      "line_number": 221,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u7b56\u7565\uff08\u884c\u52a8\u6982\u7387\u5206\u5e03\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.discretize_state",
        "max",
        "sum",
        "range",
        "state.to_vector",
        "q_values.values",
        "math.exp",
        "exp_q.values",
        "q_values.items",
        "range"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py:get_policy"
    },
    {
      "type": "function",
      "name": "choose_action_ucb",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py",
      "line_number": 281,
      "complexity": 1,
      "docstring": "\u4f7f\u7528Upper Confidence Bound\u9009\u62e9\u884c\u52a8",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "c"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "range",
        "np.argmax",
        "random.randint",
        "ucb_values.append",
        "ucb_values.append",
        "float",
        "math.sqrt",
        "math.log"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py:choose_action_ucb"
    },
    {
      "type": "function",
      "name": "update",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py",
      "line_number": 296,
      "complexity": 1,
      "docstring": "\u66f4\u65b0\u4ef7\u503c\u4f30\u8ba1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "action",
        "reward"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py:update"
    },
    {
      "type": "function",
      "name": "get_arm_statistics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py",
      "line_number": 305,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u81c2\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.values.copy",
        "self.counts.copy",
        "max"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py:get_arm_statistics"
    },
    {
      "type": "function",
      "name": "get_action_probabilities",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py",
      "line_number": 346,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u884c\u52a8\u6982\u7387",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "state.to_vector",
        "np.exp",
        "np.dot",
        "np.sum",
        "np.max"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py:get_action_probabilities"
    },
    {
      "type": "function",
      "name": "store_transition",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py",
      "line_number": 363,
      "complexity": 1,
      "docstring": "\u5b58\u50a8\u8f6c\u6362",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "state",
        "action",
        "reward"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.episode_states.append",
        "self.episode_actions.append",
        "self.episode_rewards.append",
        "state.to_vector"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py:store_transition"
    },
    {
      "type": "function",
      "name": "learn_episode",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py",
      "line_number": 369,
      "complexity": 1,
      "docstring": "\u4ece\u4e00\u4e2a\u56de\u5408\u5b66\u4e60",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._compute_discounted_rewards",
        "enumerate",
        "self.episode_states.clear",
        "self.episode_actions.clear",
        "self.episode_rewards.clear",
        "len",
        "zip",
        "self.get_action_probabilities",
        "np.outer",
        "RLState",
        "np.mean",
        "np.std",
        "np.eye",
        "np.eye"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py:learn_episode"
    },
    {
      "type": "function",
      "name": "_compute_discounted_rewards",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py",
      "line_number": 404,
      "complexity": 1,
      "docstring": "\u8ba1\u7b97\u6298\u6263\u5956\u52b1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "gamma"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "np.zeros_like",
        "reversed",
        "range",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py:_compute_discounted_rewards"
    },
    {
      "type": "function",
      "name": "_create_agent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py",
      "line_number": 462,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u6307\u5b9a\u7c7b\u578b\u7684\u667a\u80fd\u4f53",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "algorithm_type"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "QLearningAgent",
        "MultiArmedBanditAgent",
        "PolicyGradientAgent",
        "logger.warning",
        "QLearningAgent",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py:_create_agent"
    },
    {
      "type": "function",
      "name": "_define_action_space",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py",
      "line_number": 486,
      "complexity": 1,
      "docstring": "\u5b9a\u4e49\u884c\u52a8\u7a7a\u95f4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "RLAction",
        "actions.append",
        "RLAction",
        "actions.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py:_define_action_space"
    },
    {
      "type": "function",
      "name": "encode_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py",
      "line_number": 529,
      "complexity": 1,
      "docstring": "\u7f16\u7801\u5f53\u524d\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "situation",
        "last_strategy",
        "last_performance",
        "time_since_last"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._generate_context_signature",
        "RLState",
        "situation.get_overall_health"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py:encode_state"
    },
    {
      "type": "function",
      "name": "learn_from_experience",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py",
      "line_number": 585,
      "complexity": 1,
      "docstring": "\u4ece\u7ecf\u9a8c\u5b66\u4e60",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "state",
        "action",
        "reward",
        "next_state",
        "done"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "RLExperience",
        "self.experience_buffer.append",
        "self.current_episode_experiences.append",
        "logger.debug",
        "self._get_action_index",
        "self._end_episode",
        "logger.error",
        "datetime.now",
        "self.agent.learn",
        "self._get_strategy_index",
        "self.agent.update",
        "self._get_action_index",
        "self.agent.store_transition"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py:learn_from_experience"
    },
    {
      "type": "function",
      "name": "calculate_reward",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py",
      "line_number": 639,
      "complexity": 1,
      "docstring": "\u8ba1\u7b97\u5956\u52b1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "effectiveness",
        "previous_health"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "effectiveness.is_successful_application",
        "effectiveness.get_performance_gain",
        "effectiveness.get_efficiency_gain",
        "effectiveness.applied_context.get_overall_health",
        "np.clip",
        "effectiveness.execution_duration.total_seconds",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py:calculate_reward"
    },
    {
      "type": "function",
      "name": "_get_action_index",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py",
      "line_number": 683,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u884c\u52a8\u7d22\u5f15",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "action"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "enumerate"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py:_get_action_index"
    },
    {
      "type": "function",
      "name": "_get_strategy_index",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py",
      "line_number": 692,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u7b56\u7565\u7d22\u5f15",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "strategy"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.strategy_mapping.index"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py:_get_strategy_index"
    },
    {
      "type": "function",
      "name": "_generate_context_signature",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py",
      "line_number": 701,
      "complexity": 1,
      "docstring": "\u751f\u6210\u4e0a\u4e0b\u6587\u7b7e\u540d",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "situation"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "situation.get_overall_health"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py:_generate_context_signature"
    },
    {
      "type": "function",
      "name": "_end_episode",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py",
      "line_number": 711,
      "complexity": 1,
      "docstring": "\u7ed3\u675f\u5f53\u524d\u56de\u5408",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "sum",
        "len",
        "self.episode_rewards.append",
        "self.episode_lengths.append",
        "self.learning_stats['learning_progress'].append",
        "hasattr",
        "self.current_episode_experiences.clear",
        "logger.info",
        "self.agent.learn_episode",
        "logger.error",
        "np.mean"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py:_end_episode"
    },
    {
      "type": "function",
      "name": "get_learning_statistics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py",
      "line_number": 746,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u5b66\u4e60\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.learning_stats.copy",
        "hasattr",
        "hasattr",
        "len",
        "self.agent.get_arm_statistics",
        "len",
        "sum",
        "logger.error",
        "len",
        "max",
        "min",
        "self._calculate_reward_trend",
        "str",
        "len",
        "np.mean",
        "np.mean",
        "self.agent.q_table.values",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py:get_learning_statistics"
    },
    {
      "type": "function",
      "name": "_calculate_reward_trend",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py",
      "line_number": 778,
      "complexity": 1,
      "docstring": "\u8ba1\u7b97\u5956\u52b1\u8d8b\u52bf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "np.mean",
        "np.mean",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py:_calculate_reward_trend"
    },
    {
      "type": "function",
      "name": "get_policy_recommendations",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py",
      "line_number": 794,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u7b56\u7565\u5efa\u8bae",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "hasattr",
        "self.agent.get_policy",
        "sorted",
        "enumerate",
        "logger.error",
        "policy.items",
        "hasattr",
        "len",
        "recommendations.append",
        "self.agent.get_arm_statistics",
        "arm_scores.sort",
        "enumerate",
        "action.to_dict",
        "getattr",
        "range",
        "len",
        "recommendations.append",
        "len",
        "min"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py:get_policy_recommendations"
    },
    {
      "type": "function",
      "name": "export_learning_data",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py",
      "line_number": 845,
      "complexity": 1,
      "docstring": "\u5bfc\u51fa\u5b66\u4e60\u6570\u636e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "format_type"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_learning_statistics",
        "logger.error",
        "self.get_learning_statistics",
        "str",
        "exp.to_dict",
        "action.to_dict",
        "list"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py:export_learning_data"
    },
    {
      "type": "function",
      "name": "save_model",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py",
      "line_number": 867,
      "complexity": 1,
      "docstring": "\u4fdd\u5b58\u6a21\u578b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "filepath"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "hasattr",
        "hasattr",
        "hasattr",
        "logger.info",
        "dict",
        "self.agent.weights.tolist",
        "self.agent.bias.tolist",
        "open",
        "json.dump",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py:save_model"
    },
    {
      "type": "function",
      "name": "load_model",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py",
      "line_number": 901,
      "complexity": 1,
      "docstring": "\u52a0\u8f7d\u6a21\u578b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "filepath"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "model_data.get",
        "model_data.get",
        "model_data.get",
        "model_data.get",
        "logger.info",
        "open",
        "json.load",
        "hasattr",
        "defaultdict",
        "model_data['q_table'].items",
        "hasattr",
        "hasattr",
        "np.array",
        "np.array",
        "logger.error",
        "actions.items",
        "defaultdict",
        "int"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py:load_model"
    },
    {
      "type": "function",
      "name": "reset_learning",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py",
      "line_number": 936,
      "complexity": 1,
      "docstring": "\u91cd\u7f6e\u5b66\u4e60\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._create_agent",
        "self.experience_buffer.clear",
        "self.current_episode_experiences.clear",
        "self.episode_rewards.clear",
        "self.episode_lengths.clear",
        "logger.info",
        "getattr",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/reinforcement_learning_optimizer.py:reset_learning"
    },
    {
      "type": "class",
      "name": "OptimizationMethod",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 32,
      "complexity": 1,
      "docstring": "\u4f18\u5316\u65b9\u6cd5\u7c7b\u578b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:OptimizationMethod"
    },
    {
      "type": "class",
      "name": "HyperparameterType",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 44,
      "complexity": 1,
      "docstring": "\u8d85\u53c2\u6570\u7c7b\u578b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:HyperparameterType"
    },
    {
      "type": "class",
      "name": "HyperparameterSpace",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 53,
      "complexity": 1,
      "docstring": "\u8d85\u53c2\u6570\u7a7a\u95f4\u5b9a\u4e49",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "sample_random",
        "clip_value",
        "to_dict"
      ],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:HyperparameterSpace"
    },
    {
      "type": "class",
      "name": "OptimizationResult",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 95,
      "complexity": 1,
      "docstring": "\u4f18\u5316\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "to_dict"
      ],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:OptimizationResult"
    },
    {
      "type": "class",
      "name": "EvaluationRecord",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 119,
      "complexity": 1,
      "docstring": "\u8bc4\u4f30\u8bb0\u5f55",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "to_dict"
      ],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:EvaluationRecord"
    },
    {
      "type": "class",
      "name": "ObjectiveFunction",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 138,
      "complexity": 1,
      "docstring": "\u76ee\u6807\u51fd\u6570\u57fa\u7c7b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "evaluate",
        "_evaluate_impl",
        "get_best_result",
        "reset"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:ObjectiveFunction"
    },
    {
      "type": "class",
      "name": "PerformanceObjectiveFunction",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 191,
      "complexity": 1,
      "docstring": "\u6027\u80fd\u76ee\u6807\u51fd\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "_evaluate_impl",
        "_assess_parameter_configuration",
        "_assess_context_fit"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "ObjectiveFunction"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:PerformanceObjectiveFunction"
    },
    {
      "type": "class",
      "name": "BayesianOptimizer",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 292,
      "complexity": 1,
      "docstring": "\u8d1d\u53f6\u65af\u4f18\u5316\u5668\uff08\u7b80\u5316\u5b9e\u73b0\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "suggest_next_parameters",
        "update_observations",
        "_random_sample"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:BayesianOptimizer"
    },
    {
      "type": "class",
      "name": "GridSearchOptimizer",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 351,
      "complexity": 1,
      "docstring": "\u7f51\u683c\u641c\u7d22\u4f18\u5316\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "_generate_grid",
        "suggest_next_parameters",
        "get_progress"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:GridSearchOptimizer"
    },
    {
      "type": "class",
      "name": "RandomSearchOptimizer",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 407,
      "complexity": 1,
      "docstring": "\u968f\u673a\u641c\u7d22\u4f18\u5316\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "suggest_next_parameters",
        "get_progress"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:RandomSearchOptimizer"
    },
    {
      "type": "class",
      "name": "GeneticAlgorithmOptimizer",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 434,
      "complexity": 1,
      "docstring": "\u9057\u4f20\u7b97\u6cd5\u4f18\u5316\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "_initialize_population",
        "suggest_next_parameters",
        "update_fitness",
        "_evolve_population",
        "_selection",
        "_crossover",
        "_mutate"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:GeneticAlgorithmOptimizer"
    },
    {
      "type": "class",
      "name": "AdaptiveHyperparameterOptimizer",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 553,
      "complexity": 1,
      "docstring": "\u81ea\u9002\u5e94\u8d85\u53c2\u6570\u4f18\u5316\u5668 - Phase 3\u6838\u5fc3\u7ec4\u4ef6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "_define_hyperparameter_space",
        "_create_optimizer",
        "set_objective_function",
        "optimize",
        "_check_convergence",
        "_adaptive_strategy_adjustment",
        "_switch_optimization_method",
        "suggest_parameters",
        "evaluate_parameters",
        "get_optimization_status",
        "_calculate_trend",
        "get_parameter_importance",
        "export_optimization_data",
        "reset_optimization",
        "create_performance_objective"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:AdaptiveHyperparameterOptimizer"
    },
    {
      "type": "function",
      "name": "sample_random",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 63,
      "complexity": 1,
      "docstring": "\u968f\u673a\u91c7\u6837",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "random.uniform",
        "random.randint",
        "int",
        "int",
        "random.choice",
        "random.choice"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:sample_random"
    },
    {
      "type": "function",
      "name": "clip_value",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 76,
      "complexity": 1,
      "docstring": "\u88c1\u526a\u503c\u5230\u6709\u6548\u8303\u56f4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "value"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "max",
        "min",
        "max",
        "int",
        "min",
        "int",
        "int",
        "bool"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:clip_value"
    },
    {
      "type": "function",
      "name": "to_dict",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 127,
      "complexity": 1,
      "docstring": "\u8f6c\u6362\u4e3a\u5b57\u5178",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.timestamp.isoformat"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:to_dict"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 556,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u81ea\u9002\u5e94\u8d85\u53c2\u6570\u4f18\u5316\u5668\n\nArgs:\n    optimization_method: \u4f18\u5316\u65b9\u6cd5\n    max_evaluations: \u6700\u5927\u8bc4\u4f30\u6b21\u6570\n    convergence_threshold: \u6536\u655b\u9608\u503c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "optimization_method",
        "max_evaluations",
        "convergence_threshold"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._define_hyperparameter_space",
        "self._create_optimizer",
        "logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:__init__"
    },
    {
      "type": "function",
      "name": "evaluate",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 146,
      "complexity": 1,
      "docstring": "\u8bc4\u4f30\u53c2\u6570\u914d\u7f6e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "parameters"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "datetime.now",
        "self._evaluate_impl",
        "(datetime.now() - start_time).total_seconds",
        "EvaluationRecord",
        "self.evaluation_history.append",
        "logger.error",
        "float",
        "parameters.copy",
        "datetime.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:evaluate"
    },
    {
      "type": "function",
      "name": "_evaluate_impl",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 199,
      "complexity": 1,
      "docstring": "\u57fa\u4e8e\u6027\u80fd\u5386\u53f2\u8bc4\u4f30\u53c2\u6570\u914d\u7f6e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "parameters"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "hasattr",
        "self._assess_parameter_configuration",
        "self._assess_context_fit",
        "random.gauss",
        "max",
        "self.effectiveness_tracker.get_recent_effectiveness",
        "min",
        "logger.error",
        "np.mean"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:_evaluate_impl"
    },
    {
      "type": "function",
      "name": "get_best_result",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 179,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6700\u4f73\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "max"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:get_best_result"
    },
    {
      "type": "function",
      "name": "reset",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 185,
      "complexity": 1,
      "docstring": "\u91cd\u7f6e\u8bc4\u4f30\u5386\u53f2",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.evaluation_history.clear"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:reset"
    },
    {
      "type": "function",
      "name": "_assess_parameter_configuration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 236,
      "complexity": 1,
      "docstring": "\u8bc4\u4f30\u53c2\u6570\u914d\u7f6e\u8d28\u91cf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "parameters"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "parameters.get",
        "parameters.get",
        "parameters.get",
        "parameters.get",
        "max",
        "min"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:_assess_parameter_configuration"
    },
    {
      "type": "function",
      "name": "_assess_context_fit",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 264,
      "complexity": 1,
      "docstring": "\u8bc4\u4f30\u53c2\u6570\u4e0e\u5f53\u524d\u4e0a\u4e0b\u6587\u7684\u5339\u914d\u5ea6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "parameters"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.current_context.get_overall_health",
        "parameters.get",
        "parameters.get",
        "parameters.get",
        "parameters.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:_assess_context_fit"
    },
    {
      "type": "function",
      "name": "suggest_next_parameters",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 463,
      "complexity": 1,
      "docstring": "\u5efa\u8bae\u4e0b\u4e00\u4e2a\u53c2\u6570\u914d\u7f6e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._evolve_population"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:suggest_next_parameters"
    },
    {
      "type": "function",
      "name": "update_observations",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 335,
      "complexity": 1,
      "docstring": "\u66f4\u65b0\u89c2\u6d4b\u6570\u636e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "parameters",
        "objective_value"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.observations.append",
        "len",
        "parameters.copy"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:update_observations"
    },
    {
      "type": "function",
      "name": "_random_sample",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 343,
      "complexity": 1,
      "docstring": "\u968f\u673a\u91c7\u6837",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.hyperparameter_space.items",
        "space.sample_random"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:_random_sample"
    },
    {
      "type": "function",
      "name": "_generate_grid",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 359,
      "complexity": 1,
      "docstring": "\u751f\u6210\u7f51\u683c\u70b9",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.hyperparameter_space.items",
        "list",
        "list",
        "itertools.product",
        "param_grids.keys",
        "param_grids.values",
        "dict",
        "grid_points.append",
        "np.linspace",
        "grid_values.tolist",
        "zip",
        "list",
        "range",
        "int",
        "int"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:_generate_grid"
    },
    {
      "type": "function",
      "name": "get_progress",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 429,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u641c\u7d22\u8fdb\u5ea6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:get_progress"
    },
    {
      "type": "function",
      "name": "_initialize_population",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 453,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u79cd\u7fa4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "range",
        "self.hyperparameter_space.items",
        "population.append",
        "space.sample_random"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:_initialize_population"
    },
    {
      "type": "function",
      "name": "update_fitness",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 477,
      "complexity": 1,
      "docstring": "\u66f4\u65b0\u9002\u5e94\u5ea6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "parameters",
        "fitness"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "enumerate"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:update_fitness"
    },
    {
      "type": "function",
      "name": "_evolve_population",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 487,
      "complexity": 1,
      "docstring": "\u8fdb\u5316\u79cd\u7fa4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._selection",
        "range",
        "len",
        "new_population.extend",
        "np.argmax",
        "random.random",
        "self._crossover",
        "random.random",
        "self._mutate",
        "random.random",
        "self._mutate",
        "len",
        "parent1.copy",
        "parent2.copy"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:_evolve_population"
    },
    {
      "type": "function",
      "name": "_selection",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 519,
      "complexity": 1,
      "docstring": "\u9526\u6807\u8d5b\u9009\u62e9",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "range",
        "random.sample",
        "max",
        "selected.append",
        "range",
        "self.population[best_index].copy"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:_selection"
    },
    {
      "type": "function",
      "name": "_crossover",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 529,
      "complexity": 1,
      "docstring": "\u5355\u70b9\u4ea4\u53c9",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "parent1",
        "parent2"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "list",
        "random.randint",
        "range",
        "parent1.copy",
        "parent2.copy",
        "self.hyperparameter_space.keys",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:_crossover"
    },
    {
      "type": "function",
      "name": "_mutate",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 542,
      "complexity": 1,
      "docstring": "\u53d8\u5f02\u64cd\u4f5c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "individual"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "individual.copy",
        "self.hyperparameter_space.items",
        "random.random",
        "space.sample_random"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:_mutate"
    },
    {
      "type": "function",
      "name": "_define_hyperparameter_space",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 597,
      "complexity": 1,
      "docstring": "\u5b9a\u4e49\u8d85\u53c2\u6570\u7a7a\u95f4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "HyperparameterSpace",
        "HyperparameterSpace",
        "HyperparameterSpace",
        "HyperparameterSpace",
        "HyperparameterSpace",
        "HyperparameterSpace",
        "HyperparameterSpace",
        "HyperparameterSpace",
        "HyperparameterSpace"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:_define_hyperparameter_space"
    },
    {
      "type": "function",
      "name": "_create_optimizer",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 662,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u4f18\u5316\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "BayesianOptimizer",
        "GridSearchOptimizer",
        "RandomSearchOptimizer",
        "GeneticAlgorithmOptimizer",
        "BayesianOptimizer"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:_create_optimizer"
    },
    {
      "type": "function",
      "name": "set_objective_function",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 676,
      "complexity": 1,
      "docstring": "\u8bbe\u7f6e\u76ee\u6807\u51fd\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "objective_function"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:set_objective_function"
    },
    {
      "type": "function",
      "name": "optimize",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 681,
      "complexity": 1,
      "docstring": "\u6267\u884c\u4f18\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "max_time_minutes"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "datetime.now",
        "float",
        "(datetime.now() - self.start_time).total_seconds",
        "enumerate",
        "OptimizationResult",
        "logger.info",
        "ValueError",
        "self.optimizer.suggest_next_parameters",
        "self.objective_function.evaluate",
        "EvaluationRecord",
        "self.optimization_history.append",
        "hasattr",
        "convergence_history.append",
        "self._check_convergence",
        "logger.error",
        "logger.info",
        "self.optimizer.update_observations",
        "hasattr",
        "next_params.copy",
        "logger.info",
        "logger.info",
        "self._adaptive_strategy_adjustment",
        "logger.info",
        "(datetime.now() - self.start_time).total_seconds",
        "logger.info",
        "datetime.now",
        "self.optimizer.update_fitness",
        "datetime.now",
        "datetime.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:optimize"
    },
    {
      "type": "function",
      "name": "_check_convergence",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 785,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u6536\u655b\u6027",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "history"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "max",
        "min"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:_check_convergence"
    },
    {
      "type": "function",
      "name": "_adaptive_strategy_adjustment",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 796,
      "complexity": 1,
      "docstring": "\u81ea\u9002\u5e94\u7b56\u7565\u8c03\u6574",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "range",
        "len",
        "recent_improvements.append",
        "np.mean",
        "self._switch_optimization_method",
        "logger.error",
        "max",
        "max"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:_adaptive_strategy_adjustment"
    },
    {
      "type": "function",
      "name": "_switch_optimization_method",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 822,
      "complexity": 1,
      "docstring": "\u5207\u6362\u4f18\u5316\u65b9\u6cd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "random.choice",
        "logger.info",
        "self._create_optimizer",
        "hasattr",
        "logger.error",
        "self.optimizer.update_observations"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:_switch_optimization_method"
    },
    {
      "type": "function",
      "name": "suggest_parameters",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 851,
      "complexity": 1,
      "docstring": "\u5efa\u8bae\u53c2\u6570\u914d\u7f6e\uff08\u5355\u6b21\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "hasattr",
        "self.optimizer.suggest_next_parameters",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:suggest_parameters"
    },
    {
      "type": "function",
      "name": "evaluate_parameters",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 870,
      "complexity": 1,
      "docstring": "\u8bc4\u4f30\u53c2\u6570\u914d\u7f6e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "parameters"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.objective_function.evaluate",
        "ValueError"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:evaluate_parameters"
    },
    {
      "type": "function",
      "name": "get_optimization_status",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 877,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u4f18\u5316\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "hasattr",
        "len",
        "(datetime.now() - self.start_time).total_seconds",
        "self.optimizer.get_progress",
        "len",
        "self._calculate_trend",
        "logger.error",
        "self.best_result.to_dict",
        "space.to_dict",
        "len",
        "str",
        "datetime.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:get_optimization_status"
    },
    {
      "type": "function",
      "name": "_calculate_trend",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 909,
      "complexity": 1,
      "docstring": "\u8ba1\u7b97\u8d8b\u52bf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "values"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "list",
        "len",
        "range",
        "len",
        "len",
        "np.corrcoef"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:_calculate_trend"
    },
    {
      "type": "function",
      "name": "get_parameter_importance",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 925,
      "complexity": 1,
      "docstring": "\u5206\u6790\u53c2\u6570\u91cd\u8981\u6027",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "logger.error",
        "param_values.append",
        "objective_values.append",
        "len",
        "abs",
        "np.isnan",
        "np.corrcoef"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:get_parameter_importance"
    },
    {
      "type": "function",
      "name": "export_optimization_data",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 965,
      "complexity": 1,
      "docstring": "\u5bfc\u51fa\u4f18\u5316\u6570\u636e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "format_type"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_optimization_status",
        "logger.error",
        "self.get_parameter_importance",
        "self.get_optimization_status",
        "str",
        "space.to_dict",
        "record.to_dict",
        "self.best_result.to_dict"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:export_optimization_data"
    },
    {
      "type": "function",
      "name": "reset_optimization",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 989,
      "complexity": 1,
      "docstring": "\u91cd\u7f6e\u4f18\u5316\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.optimization_history.clear",
        "self._create_optimizer",
        "logger.info",
        "self.objective_function.reset",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:reset_optimization"
    },
    {
      "type": "function",
      "name": "create_performance_objective",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py",
      "line_number": 1009,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u6027\u80fd\u76ee\u6807\u51fd\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "effectiveness_tracker",
        "current_context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "PerformanceObjectiveFunction",
        "self.set_objective_function"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:create_performance_objective"
    },
    {
      "type": "class",
      "name": "PredictionHorizon",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py",
      "line_number": 34,
      "complexity": 1,
      "docstring": "\u9884\u6d4b\u65f6\u95f4\u8303\u56f4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py:PredictionHorizon"
    },
    {
      "type": "class",
      "name": "OptimizationObjective",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py",
      "line_number": 41,
      "complexity": 1,
      "docstring": "\u4f18\u5316\u76ee\u6807",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py:OptimizationObjective"
    },
    {
      "type": "class",
      "name": "PredictionModel",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py",
      "line_number": 51,
      "complexity": 1,
      "docstring": "\u9884\u6d4b\u6a21\u578b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "to_dict"
      ],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py:PredictionModel"
    },
    {
      "type": "class",
      "name": "SystemStatePrediction",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py",
      "line_number": 66,
      "complexity": 1,
      "docstring": "\u7cfb\u7edf\u72b6\u6001\u9884\u6d4b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "to_dict"
      ],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py:SystemStatePrediction"
    },
    {
      "type": "class",
      "name": "OptimizationAction",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py",
      "line_number": 97,
      "complexity": 1,
      "docstring": "\u4f18\u5316\u884c\u52a8",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "to_dict"
      ],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py:OptimizationAction"
    },
    {
      "type": "class",
      "name": "OptimizationPlan",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py",
      "line_number": 124,
      "complexity": 1,
      "docstring": "\u4f18\u5316\u8ba1\u5212",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "to_dict"
      ],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py:OptimizationPlan"
    },
    {
      "type": "class",
      "name": "TimeSeriesPredictor",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py",
      "line_number": 148,
      "complexity": 1,
      "docstring": "\u65f6\u95f4\u5e8f\u5217\u9884\u6d4b\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "add_observation",
        "predict_next_state",
        "_calculate_trend"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py:TimeSeriesPredictor"
    },
    {
      "type": "class",
      "name": "ContextualPredictor",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py",
      "line_number": 226,
      "complexity": 1,
      "docstring": "\u4e0a\u4e0b\u6587\u9884\u6d4b\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "learn_context_patterns",
        "predict_context_evolution",
        "_encode_context",
        "_decode_context",
        "_predict_by_trend"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py:ContextualPredictor"
    },
    {
      "type": "class",
      "name": "PerformancePredictor",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py",
      "line_number": 357,
      "complexity": 1,
      "docstring": "\u6027\u80fd\u9884\u6d4b\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "train_performance_models",
        "predict_strategy_performance",
        "_build_strategy_model",
        "_extract_context_features",
        "_extract_parameter_features",
        "_apply_model"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py:PerformancePredictor"
    },
    {
      "type": "class",
      "name": "PredictiveOptimizationFramework",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py",
      "line_number": 509,
      "complexity": 1,
      "docstring": "\u9884\u6d4b\u6027\u4f18\u5316\u6846\u67b6 - Phase 3\u6838\u5fc3\u7ec4\u4ef6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "initialize_predictive_models",
        "generate_system_predictions",
        "_generate_horizon_prediction",
        "create_optimization_plans",
        "_create_objective_plan",
        "_create_performance_actions",
        "_create_efficiency_actions",
        "_create_adaptive_actions",
        "_assess_prediction_risks",
        "_generate_preparation_recommendations",
        "_identify_contributing_factors",
        "_prioritize_plans",
        "execute_optimization_plan",
        "_check_prerequisites",
        "_execute_action",
        "get_framework_status",
        "_calculate_framework_health",
        "export_framework_data",
        "reset_framework"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py:PredictiveOptimizationFramework"
    },
    {
      "type": "function",
      "name": "to_dict",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py",
      "line_number": 135,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.created_time.isoformat",
        "action.to_dict",
        "v.isoformat",
        "self.execution_schedule.items"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py:to_dict"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py",
      "line_number": 512,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u9884\u6d4b\u6027\u4f18\u5316\u6846\u67b6\n\nArgs:\n    parameter_optimizer: \u52a8\u6001\u53c2\u6570\u4f18\u5316\u5668\n    pattern_engine: \u9ad8\u7ea7\u6a21\u5f0f\u8bc6\u522b\u5f15\u64ce\n    effectiveness_tracker: \u7b56\u7565\u6548\u679c\u8ddf\u8e2a\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "parameter_optimizer",
        "pattern_engine",
        "effectiveness_tracker"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "TimeSeriesPredictor",
        "ContextualPredictor",
        "PerformancePredictor",
        "ThreadPoolExecutor",
        "logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py:__init__"
    },
    {
      "type": "function",
      "name": "add_observation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py",
      "line_number": 155,
      "complexity": 1,
      "docstring": "\u6dfb\u52a0\u89c2\u6d4b\u6570\u636e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "timestamp",
        "features"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.feature_history.append",
        "features.copy"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py:add_observation"
    },
    {
      "type": "function",
      "name": "predict_next_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py",
      "line_number": 162,
      "complexity": 1,
      "docstring": "\u9884\u6d4b\u4e0b\u4e00\u4e2a\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "horizon_minutes"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "features.items",
        "obs['features'].items",
        "np.mean",
        "logger.error",
        "self.feature_history[0]['features'].keys",
        "features[key].append",
        "len",
        "self._calculate_trend",
        "max",
        "max",
        "confidence_scores.append",
        "np.var",
        "np.var",
        "min",
        "len",
        "min"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py:predict_next_state"
    },
    {
      "type": "function",
      "name": "_calculate_trend",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py",
      "line_number": 204,
      "complexity": 1,
      "docstring": "\u8ba1\u7b97\u8d8b\u52bf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "values"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "list",
        "len",
        "sum",
        "sum",
        "sum",
        "sum",
        "len",
        "range",
        "len",
        "zip"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py:_calculate_trend"
    },
    {
      "type": "function",
      "name": "learn_context_patterns",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py",
      "line_number": 233,
      "complexity": 1,
      "docstring": "\u5b66\u4e60\u4e0a\u4e0b\u6587\u6a21\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "history"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.context_patterns.clear",
        "self.transition_probabilities.clear",
        "range",
        "self.transition_probabilities.items",
        "logger.info",
        "self._encode_context",
        "self._encode_context",
        "self.context_patterns[current_context].append",
        "sum",
        "logger.error",
        "len",
        "defaultdict",
        "transitions.values",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py:learn_context_patterns"
    },
    {
      "type": "function",
      "name": "predict_context_evolution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py",
      "line_number": 267,
      "complexity": 1,
      "docstring": "\u9884\u6d4b\u4e0a\u4e0b\u6587\u6f14\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_context",
        "horizon_minutes"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._encode_context",
        "self._predict_by_trend",
        "logger.error",
        "max",
        "self._decode_context",
        "transitions.items"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py:predict_context_evolution"
    },
    {
      "type": "function",
      "name": "_encode_context",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py",
      "line_number": 295,
      "complexity": 1,
      "docstring": "\u7f16\u7801\u4e0a\u4e0b\u6587",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "context.get_overall_health",
        "context.get_critical_issues"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py:_encode_context"
    },
    {
      "type": "function",
      "name": "_decode_context",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py",
      "line_number": 309,
      "complexity": 1,
      "docstring": "\u89e3\u7801\u4e0a\u4e0b\u6587",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "encoded",
        "base_context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "encoded.split",
        "len",
        "SituationScore",
        "logger.error",
        "min",
        "min",
        "max",
        "max"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py:_decode_context"
    },
    {
      "type": "function",
      "name": "_predict_by_trend",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py",
      "line_number": 344,
      "complexity": 1,
      "docstring": "\u57fa\u4e8e\u8d8b\u52bf\u9884\u6d4b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "SituationScore",
        "max",
        "min",
        "min",
        "max",
        "min"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py:_predict_by_trend"
    },
    {
      "type": "function",
      "name": "train_performance_models",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py",
      "line_number": 364,
      "complexity": 1,
      "docstring": "\u8bad\u7ec3\u6027\u80fd\u6a21\u578b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "history"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "defaultdict",
        "strategy_groups.items",
        "logger.info",
        "strategy_groups[eff.strategy_type].append",
        "logger.error",
        "len",
        "self._build_strategy_model",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py:train_performance_models"
    },
    {
      "type": "function",
      "name": "predict_strategy_performance",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py",
      "line_number": 383,
      "complexity": 1,
      "docstring": "\u9884\u6d4b\u7b56\u7565\u6027\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "strategy_type",
        "predicted_context",
        "parameters"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._extract_context_features",
        "self._extract_parameter_features",
        "self._apply_model",
        "model.get",
        "logger.error",
        "predicted_context.get_overall_health",
        "max",
        "min"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py:predict_strategy_performance"
    },
    {
      "type": "function",
      "name": "_build_strategy_model",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py",
      "line_number": 413,
      "complexity": 1,
      "docstring": "\u6784\u5efa\u7b56\u7565\u6a21\u578b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "history"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "context_features[0].keys",
        "np.mean",
        "np.std",
        "self._extract_context_features",
        "context_features.append",
        "performance_scores.append",
        "max",
        "len",
        "logger.error",
        "np.corrcoef",
        "np.isnan"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py:_build_strategy_model"
    },
    {
      "type": "function",
      "name": "_extract_context_features",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py",
      "line_number": 452,
      "complexity": 1,
      "docstring": "\u63d0\u53d6\u4e0a\u4e0b\u6587\u7279\u5f81",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "context.get_overall_health",
        "context.get_critical_issues"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py:_extract_context_features"
    },
    {
      "type": "function",
      "name": "_extract_parameter_features",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py",
      "line_number": 465,
      "complexity": 1,
      "docstring": "\u63d0\u53d6\u53c2\u6570\u7279\u5f81",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "parameters"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "parameters.items"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py:_extract_parameter_features"
    },
    {
      "type": "function",
      "name": "_apply_model",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py",
      "line_number": 481,
      "complexity": 1,
      "docstring": "\u5e94\u7528\u6a21\u578b\u8fdb\u884c\u9884\u6d4b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "model",
        "context_features",
        "param_features"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "model['feature_correlations'].items",
        "max",
        "model.get",
        "logger.error",
        "min"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py:_apply_model"
    },
    {
      "type": "function",
      "name": "initialize_predictive_models",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py",
      "line_number": 556,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u9884\u6d4b\u6a21\u578b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "historical_data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "enumerate",
        "self.contextual_predictor.learn_context_patterns",
        "self.performance_predictor.train_performance_models",
        "PredictionModel",
        "PredictionModel",
        "PredictionModel",
        "logger.info",
        "len",
        "logger.warning",
        "self.time_series_predictor.add_observation",
        "logger.error",
        "eff.get_performance_gain",
        "eff.get_efficiency_gain",
        "eff.applied_context.get_overall_health",
        "datetime.now",
        "len",
        "datetime.now",
        "len",
        "datetime.now",
        "len",
        "len",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py:initialize_predictive_models"
    },
    {
      "type": "function",
      "name": "generate_system_predictions",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py",
      "line_number": 617,
      "complexity": 1,
      "docstring": "\u751f\u6210\u7cfb\u7edf\u72b6\u6001\u9884\u6d4b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_context",
        "current_parameters"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "self.prediction_horizons.items",
        "logger.info",
        "self._generate_horizon_prediction",
        "logger.error",
        "predictions.append",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py:generate_system_predictions"
    },
    {
      "type": "function",
      "name": "_generate_horizon_prediction",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py",
      "line_number": 644,
      "complexity": 1,
      "docstring": "\u751f\u6210\u7279\u5b9a\u65f6\u95f4\u8303\u56f4\u7684\u9884\u6d4b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_context",
        "current_parameters",
        "horizon",
        "minutes"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.time_series_predictor.predict_next_state",
        "self.contextual_predictor.predict_context_evolution",
        "self._assess_prediction_risks",
        "self._generate_preparation_recommendations",
        "self._identify_contributing_factors",
        "SystemStatePrediction",
        "datetime.now",
        "timedelta",
        "logger.error",
        "prediction_time.strftime"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py:_generate_horizon_prediction"
    },
    {
      "type": "function",
      "name": "create_optimization_plans",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py",
      "line_number": 695,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u4f18\u5316\u8ba1\u5212",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "predictions",
        "current_parameters"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "self._prioritize_plans",
        "logger.info",
        "self._create_objective_plan",
        "logger.error",
        "plans.append",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py:create_optimization_plans"
    },
    {
      "type": "function",
      "name": "_create_objective_plan",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py",
      "line_number": 723,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u7279\u5b9a\u76ee\u6807\u7684\u4f18\u5316\u8ba1\u5212",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "objective",
        "predictions",
        "current_parameters"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "enumerate",
        "OptimizationPlan",
        "self._create_performance_actions",
        "np.mean",
        "logger.error",
        "datetime.now().strftime",
        "self._create_efficiency_actions",
        "datetime.now",
        "self._create_adaptive_actions",
        "datetime.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py:_create_objective_plan"
    },
    {
      "type": "function",
      "name": "_create_performance_actions",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py",
      "line_number": 774,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u6027\u80fd\u4f18\u5316\u884c\u52a8",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "predictions",
        "current_parameters"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.error",
        "prediction.predicted_situation.get_overall_health",
        "OptimizationAction",
        "actions.append",
        "min",
        "max",
        "timedelta",
        "current_parameters.get",
        "current_parameters.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py:_create_performance_actions"
    },
    {
      "type": "function",
      "name": "_create_efficiency_actions",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py",
      "line_number": 807,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u6548\u7387\u4f18\u5316\u884c\u52a8",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "predictions",
        "current_parameters"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.error",
        "OptimizationAction",
        "actions.append",
        "min",
        "max",
        "timedelta",
        "current_parameters.get",
        "current_parameters.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py:_create_efficiency_actions"
    },
    {
      "type": "function",
      "name": "_create_adaptive_actions",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py",
      "line_number": 839,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u81ea\u9002\u5e94\u884c\u52a8",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "predictions",
        "current_parameters"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.error",
        "len",
        "OptimizationAction",
        "actions.append",
        "timedelta"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py:_create_adaptive_actions"
    },
    {
      "type": "function",
      "name": "_assess_prediction_risks",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py",
      "line_number": 871,
      "complexity": 1,
      "docstring": "\u8bc4\u4f30\u9884\u6d4b\u98ce\u9669",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_context",
        "predicted_context",
        "horizon_minutes"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "min",
        "predicted_context.get_overall_health",
        "current_context.get_overall_health",
        "min",
        "min",
        "min",
        "logger.error",
        "abs",
        "abs"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py:_assess_prediction_risks"
    },
    {
      "type": "function",
      "name": "_generate_preparation_recommendations",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py",
      "line_number": 904,
      "complexity": 1,
      "docstring": "\u751f\u6210\u51c6\u5907\u5efa\u8bae",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_context",
        "predicted_context",
        "risks"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "recommendations.append",
        "recommendations.append",
        "recommendations.append",
        "recommendations.append",
        "recommendations.append",
        "recommendations.append",
        "recommendations.append",
        "recommendations.append",
        "recommendations.append",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py:_generate_preparation_recommendations"
    },
    {
      "type": "function",
      "name": "_identify_contributing_factors",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py",
      "line_number": 940,
      "complexity": 1,
      "docstring": "\u8bc6\u522b\u8d21\u732e\u56e0\u7d20",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "current_context",
        "predicted_context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "abs",
        "factors.append",
        "abs",
        "factors.append",
        "abs",
        "factors.append",
        "abs",
        "factors.append",
        "factors.append",
        "logger.error",
        "factors.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py:_identify_contributing_factors"
    },
    {
      "type": "function",
      "name": "_prioritize_plans",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py",
      "line_number": 970,
      "complexity": 1,
      "docstring": "\u4f18\u5148\u7ea7\u6392\u5e8f\u8ba1\u5212",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "plans"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "scored_plans.sort",
        "sum",
        "scored_plans.append",
        "logger.error",
        "plan.expected_outcomes.values"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py:_prioritize_plans"
    },
    {
      "type": "function",
      "name": "execute_optimization_plan",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py",
      "line_number": 992,
      "complexity": 1,
      "docstring": "\u6267\u884c\u4f18\u5316\u8ba1\u5212",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "plan"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "len",
        "sorted",
        "logger.info",
        "datetime.now().isoformat",
        "logger.error",
        "self._check_prerequisites",
        "self._execute_action",
        "result.get",
        "logger.info",
        "logger.error",
        "datetime.now",
        "str",
        "result.get",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py:execute_optimization_plan"
    },
    {
      "type": "function",
      "name": "_check_prerequisites",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py",
      "line_number": 1057,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u5148\u51b3\u6761\u4ef6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "prerequisites"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py:_check_prerequisites"
    },
    {
      "type": "function",
      "name": "_execute_action",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py",
      "line_number": 1063,
      "complexity": 1,
      "docstring": "\u6267\u884c\u5355\u4e2a\u4f18\u5316\u884c\u52a8",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "action"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "logger.error",
        "logger.info",
        "logger.info",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py:_execute_action"
    },
    {
      "type": "function",
      "name": "get_framework_status",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py",
      "line_number": 1106,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6846\u67b6\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "len",
        "self._calculate_framework_health",
        "datetime.now().isoformat",
        "logger.error",
        "model.to_dict",
        "pred.to_dict",
        "plan.to_dict",
        "str",
        "self.prediction_models.items",
        "datetime.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py:get_framework_status"
    },
    {
      "type": "function",
      "name": "_calculate_framework_health",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py",
      "line_number": 1129,
      "complexity": 1,
      "docstring": "\u8ba1\u7b97\u6846\u67b6\u5065\u5eb7\u5ea6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "min",
        "np.mean",
        "np.mean",
        "len",
        "logger.error",
        "self.prediction_models.values"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py:_calculate_framework_health"
    },
    {
      "type": "function",
      "name": "export_framework_data",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py",
      "line_number": 1157,
      "complexity": 1,
      "docstring": "\u5bfc\u51fa\u6846\u67b6\u6570\u636e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "format_type"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_framework_status",
        "logger.error",
        "str",
        "model.to_dict",
        "pred.to_dict",
        "plan.to_dict",
        "len",
        "len",
        "len",
        "len",
        "self.prediction_models.items"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py:export_framework_data"
    },
    {
      "type": "function",
      "name": "reset_framework",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py",
      "line_number": 1187,
      "complexity": 1,
      "docstring": "\u91cd\u7f6e\u6846\u67b6\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.prediction_models.clear",
        "self.active_predictions.clear",
        "self.optimization_plans.clear",
        "TimeSeriesPredictor",
        "ContextualPredictor",
        "PerformancePredictor",
        "logger.info",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/predictive_optimization_framework.py:reset_framework"
    },
    {
      "type": "class",
      "name": "StateService",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/state_service.py",
      "line_number": 26,
      "complexity": 1,
      "docstring": "\u72b6\u6001\u670d\u52a1 - \u4e13\u6ce8\u4e8e\u81ea\u7136\u8bed\u8a00\u72b6\u6001\u7ba1\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "update_state",
        "get_current_state",
        "get_state_history",
        "check_rule_condition_satisfied",
        "find_applicable_rules",
        "evaluate_goal_achievement",
        "save_state",
        "load_state",
        "analyze_state_changes",
        "create_initial_state",
        "_generate_new_state_description",
        "_create_history_entry",
        "_update_context_variables",
        "_identify_key_changes",
        "_evaluate_change_significance",
        "_print_state_update_in_red",
        "_format_rules_for_context",
        "_analyze_loop_indicators_for_goal_evaluation",
        "_get_adaptive_confidence_threshold"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/state_service.py:StateService"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/state_service.py",
      "line_number": 29,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u72b6\u6001\u670d\u52a1\n\nArgs:\n    llm_service: \u8bed\u8a00\u6a21\u578b\u670d\u52a1\n    state_repository: \u72b6\u6001\u4ed3\u50a8",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "llm_service",
        "state_repository"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/state_service.py:__init__"
    },
    {
      "type": "function",
      "name": "update_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/state_service.py",
      "line_number": 43,
      "complexity": 1,
      "docstring": "\u66f4\u65b0\u5168\u5c40\u72b6\u6001\u5e76\u68c0\u67e5\u76ee\u6807\u8fbe\u6210\n\nArgs:\n    execution_result: \u6267\u884c\u7ed3\u679c\n    global_state: \u5f53\u524d\u5168\u5c40\u72b6\u6001\n    goal: \u5de5\u4f5c\u6d41\u76ee\u6807\uff08\u53ef\u9009\uff0c\u7528\u4e8e\u76ee\u6807\u8fbe\u6210\u68c0\u67e5\uff09\n    rule_set: \u5f53\u524d\u89c4\u5219\u96c6\uff08\u53ef\u9009\uff0c\u7528\u4e8e\u667a\u80fd\u72b6\u6001\u751f\u6210\u548c\u6570\u636e\u6536\u96c6\uff09\n    \nReturns:\n    GlobalState: \u66f4\u65b0\u540e\u7684\u5168\u5c40\u72b6\u6001\uff0c\u5305\u542b\u76ee\u6807\u8fbe\u6210\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "execution_result",
        "global_state",
        "goal",
        "rule_set"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._generate_new_state_description",
        "id_generator.generate_state_id",
        "GlobalState",
        "self._create_history_entry",
        "new_state.execution_history.append",
        "self._update_context_variables",
        "self.state_repository.save_state",
        "self._print_state_update_in_red",
        "logger.info",
        "self.evaluate_goal_achievement",
        "logger.error",
        "global_state.context_variables.copy",
        "global_state.execution_history.copy",
        "logger.info",
        "new_state.execution_history.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/state_service.py:update_state"
    },
    {
      "type": "function",
      "name": "get_current_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/state_service.py",
      "line_number": 107,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u5f53\u524d\u72b6\u6001\n\nReturns:\n    Optional[GlobalState]: \u5f53\u524d\u72b6\u6001\uff0c\u53ef\u80fd\u4e3aNone",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/state_service.py:get_current_state"
    },
    {
      "type": "function",
      "name": "get_state_history",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/state_service.py",
      "line_number": 116,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u72b6\u6001\u5386\u53f2\n\nArgs:\n    workflow_id: \u5de5\u4f5c\u6d41ID\n    \nReturns:\n    List[GlobalState]: \u72b6\u6001\u5386\u53f2\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "workflow_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.state_repository.get_state_history",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/state_service.py:get_state_history"
    },
    {
      "type": "function",
      "name": "check_rule_condition_satisfied",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/state_service.py",
      "line_number": 132,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u89c4\u5219\u6761\u4ef6\u662f\u5426\u6ee1\u8db3\n\nArgs:\n    condition: \u89c4\u5219\u6761\u4ef6\uff08\u81ea\u7136\u8bed\u8a00\uff09\n    global_state: \u5168\u5c40\u72b6\u6001\n    \nReturns:\n    Tuple[bool, float, str]: (\u662f\u5426\u6ee1\u8db3, \u7f6e\u4fe1\u5ea6, \u89e3\u91ca)",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "condition",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.llm_service.semantic_match",
        "logger.error",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/state_service.py:check_rule_condition_satisfied"
    },
    {
      "type": "function",
      "name": "find_applicable_rules",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/state_service.py",
      "line_number": 161,
      "complexity": 1,
      "docstring": "\u67e5\u627e\u9002\u7528\u89c4\u5219\n\nArgs:\n    rules: \u89c4\u5219\u5217\u8868\n    global_state: \u5168\u5c40\u72b6\u6001\n    \nReturns:\n    List[ProductionRule]: \u9002\u7528\u7684\u89c4\u5219\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rules",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "applicable_rules.sort",
        "logger.info",
        "self.check_rule_condition_satisfied",
        "applicable_rules.append",
        "logger.debug",
        "logger.error",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/state_service.py:find_applicable_rules"
    },
    {
      "type": "function",
      "name": "evaluate_goal_achievement",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/state_service.py",
      "line_number": 197,
      "complexity": 1,
      "docstring": "\u8bc4\u4f30\u76ee\u6807\u662f\u5426\u8fbe\u6210\uff08\u589e\u5f3a\u7248 - \u5305\u542b\u5faa\u73af\u68c0\u6d4b\u8003\u8651\uff09\n\nArgs:\n    goal: \u76ee\u6807\u63cf\u8ff0\n    global_state: \u5168\u5c40\u72b6\u6001\n    \nReturns:\n    bool: \u662f\u5426\u8fbe\u6210\u76ee\u6807",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "goal",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._analyze_loop_indicators_for_goal_evaluation",
        "self.llm_service.evaluate_goal_achievement",
        "self._get_adaptive_confidence_threshold",
        "logger.info",
        "logger.debug",
        "logger.debug",
        "logger.warning",
        "logger.info",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/state_service.py:evaluate_goal_achievement"
    },
    {
      "type": "function",
      "name": "save_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/state_service.py",
      "line_number": 243,
      "complexity": 1,
      "docstring": "\u4fdd\u5b58\u72b6\u6001\n\nArgs:\n    global_state: \u8981\u4fdd\u5b58\u7684\u72b6\u6001\n    \nReturns:\n    bool: \u662f\u5426\u4fdd\u5b58\u6210\u529f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.state_repository.save_state",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/state_service.py:save_state"
    },
    {
      "type": "function",
      "name": "load_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/state_service.py",
      "line_number": 261,
      "complexity": 1,
      "docstring": "\u52a0\u8f7d\u72b6\u6001\n\nArgs:\n    state_id: \u72b6\u6001ID\n    \nReturns:\n    Optional[GlobalState]: \u52a0\u8f7d\u7684\u72b6\u6001\uff0c\u53ef\u80fd\u4e3aNone",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "state_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.state_repository.load_state",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/state_service.py:load_state"
    },
    {
      "type": "function",
      "name": "analyze_state_changes",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/state_service.py",
      "line_number": 279,
      "complexity": 1,
      "docstring": "\u5206\u6790\u72b6\u6001\u53d8\u5316\n\nArgs:\n    before: \u53d8\u5316\u524d\u72b6\u6001\n    after: \u53d8\u5316\u540e\u72b6\u6001\n    \nReturns:\n    StateChangeAnalysis: \u72b6\u6001\u53d8\u5316\u5206\u6790",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "before",
        "after"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.llm_service.evaluate_semantic_similarity",
        "self._identify_key_changes",
        "self._evaluate_change_significance",
        "StateChangeAnalysis",
        "logger.error",
        "StateChangeAnalysis",
        "datetime.now",
        "datetime.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/state_service.py:analyze_state_changes"
    },
    {
      "type": "function",
      "name": "create_initial_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/state_service.py",
      "line_number": 326,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u521d\u59cb\u72b6\u6001\n\nArgs:\n    goal: \u5de5\u4f5c\u6d41\u76ee\u6807\n    workflow_id: \u5de5\u4f5c\u6d41ID\n    \nReturns:\n    GlobalState: \u521d\u59cb\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "goal",
        "workflow_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "id_generator.generate_state_id",
        "GlobalState",
        "self.save_state",
        "logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/state_service.py:create_initial_state"
    },
    {
      "type": "function",
      "name": "_generate_new_state_description",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/state_service.py",
      "line_number": 358,
      "complexity": 1,
      "docstring": "\u751f\u6210\u65b0\u7684\u72b6\u6001\u63cf\u8ff0\uff0c\u8003\u8651\u89c4\u5219\u96c6\u4e0a\u4e0b\u6587\n\nArgs:\n    execution_result: \u6267\u884c\u7ed3\u679c\n    current_state: \u5f53\u524d\u72b6\u6001\n    rule_set: \u5f53\u524d\u89c4\u5219\u96c6\uff08\u7528\u4e8e\u4e86\u89e3\u53ef\u80fd\u9700\u8981\u7684\u6570\u636e\u548c\u540e\u7eed\u89c4\u5219\uff09\n    \nReturns:\n    str: \u65b0\u7684\u72b6\u6001\u63cf\u8ff0",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "execution_result",
        "current_state",
        "rule_set"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.llm_service.generate_natural_language_response",
        "new_description.strip",
        "logger.error",
        "self._format_rules_for_context"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/state_service.py:_generate_new_state_description"
    },
    {
      "type": "function",
      "name": "_create_history_entry",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/state_service.py",
      "line_number": 426,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u5386\u53f2\u8bb0\u5f55\u6761\u76ee\n\nArgs:\n    execution_result: \u6267\u884c\u7ed3\u679c\n    \nReturns:\n    str: \u5386\u53f2\u8bb0\u5f55\u6761\u76ee",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "execution_result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/state_service.py:_create_history_entry"
    },
    {
      "type": "function",
      "name": "_update_context_variables",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/state_service.py",
      "line_number": 440,
      "complexity": 1,
      "docstring": "\u66f4\u65b0\u4e0a\u4e0b\u6587\u53d8\u91cf\n\nArgs:\n    state: \u8981\u66f4\u65b0\u7684\u72b6\u6001\n    execution_result: \u6267\u884c\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "state",
        "execution_result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "execution_result.metadata.items",
        "isinstance",
        "execution_result.data.items",
        "key.startswith",
        "key.startswith"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/state_service.py:_update_context_variables"
    },
    {
      "type": "function",
      "name": "_identify_key_changes",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/state_service.py",
      "line_number": 468,
      "complexity": 1,
      "docstring": "\u8bc6\u522b\u5173\u952e\u53d8\u5316\n\nArgs:\n    before: \u53d8\u5316\u524d\u72b6\u6001\n    after: \u53d8\u5316\u540e\u72b6\u6001\n    \nReturns:\n    List[str]: \u5173\u952e\u53d8\u5316\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "before",
        "after"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "set",
        "set",
        "changes.append",
        "set",
        "set",
        "set",
        "set",
        "changes.append",
        "changes.append",
        "after_context.keys",
        "before_context.keys",
        "before_context.keys",
        "after_context.keys",
        "changes.append",
        "before_context.keys",
        "after_context.keys"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/state_service.py:_identify_key_changes"
    },
    {
      "type": "function",
      "name": "_evaluate_change_significance",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/state_service.py",
      "line_number": 507,
      "complexity": 1,
      "docstring": "\u8bc4\u4f30\u53d8\u5316\u91cd\u8981\u6027\n\nArgs:\n    before: \u53d8\u5316\u524d\u72b6\u6001\n    after: \u53d8\u5316\u540e\u72b6\u6001\n    similarity: \u8bed\u4e49\u76f8\u4f3c\u5ea6\n    \nReturns:\n    str: \u53d8\u5316\u91cd\u8981\u6027\u7ea7\u522b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "before",
        "after",
        "similarity"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/state_service.py:_evaluate_change_significance"
    },
    {
      "type": "function",
      "name": "_print_state_update_in_red",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/state_service.py",
      "line_number": 530,
      "complexity": 1,
      "docstring": "\u4f7f\u7528\u7ea2\u8272\u5b57\u4f53\u6253\u5370\u72b6\u6001\u66f4\u65b0\u4fe1\u606f\n\nArgs:\n    new_state: \u66f4\u65b0\u540e\u7684\u5168\u5c40\u72b6\u6001\n    execution_result: \u6267\u884c\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "new_state",
        "execution_result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "len",
        "execution_result.metadata.items",
        "print",
        "print",
        "print",
        "logger.error",
        "print",
        "print",
        "key.startswith",
        "print",
        "print",
        "len",
        "context_changes.append",
        "print",
        "len",
        "print",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/state_service.py:_print_state_update_in_red"
    },
    {
      "type": "function",
      "name": "_format_rules_for_context",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/state_service.py",
      "line_number": 618,
      "complexity": 1,
      "docstring": "\u683c\u5f0f\u5316\u89c4\u5219\u4fe1\u606f\u4f9b\u72b6\u6001\u751f\u6210\u4e0a\u4e0b\u6587\u4f7f\u7528\n\nArgs:\n    rules: \u89c4\u5219\u5217\u8868\n    \nReturns:\n    str: \u683c\u5f0f\u5316\u7684\u89c4\u5219\u6982\u89c8\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rules"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "phases.items",
        "'\\n'.join",
        "phases[phase].append",
        "formatted_lines.append",
        "formatted_lines.append",
        "len",
        "formatted_lines.append",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/state_service.py:_format_rules_for_context"
    },
    {
      "type": "function",
      "name": "_analyze_loop_indicators_for_goal_evaluation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/state_service.py",
      "line_number": 649,
      "complexity": 1,
      "docstring": "\u5206\u6790\u5faa\u73af\u6307\u6807\u4ee5\u8f85\u52a9\u76ee\u6807\u8bc4\u4f30\n\nArgs:\n    global_state: \u5168\u5c40\u72b6\u6001\n    \nReturns:\n    Dict[str, Any]: \u5faa\u73af\u5206\u6790\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "isinstance",
        "global_state.detect_potential_loop",
        "len",
        "logger.error",
        "global_state.check_state_cycle",
        "len",
        "set",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/state_service.py:_analyze_loop_indicators_for_goal_evaluation"
    },
    {
      "type": "function",
      "name": "_get_adaptive_confidence_threshold",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/state_service.py",
      "line_number": 712,
      "complexity": 1,
      "docstring": "\u6839\u636e\u5faa\u73af\u6307\u6807\u83b7\u53d6\u81ea\u9002\u5e94\u7684\u7f6e\u4fe1\u5ea6\u9608\u503c\n\nArgs:\n    loop_indicators: \u5faa\u73af\u6307\u6807\n    \nReturns:\n    float: \u7f6e\u4fe1\u5ea6\u9608\u503c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "loop_indicators"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "loop_indicators.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/state_service.py:_get_adaptive_confidence_threshold"
    },
    {
      "type": "class",
      "name": "RuleGenerationService",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 22,
      "complexity": 1,
      "docstring": "\u89c4\u5219\u751f\u6210\u670d\u52a1 - \u4e13\u6ce8\u4e8e\u667a\u80fd\u89c4\u5219\u521b\u5efa",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "generate_rule_set",
        "generate_recovery_rules",
        "_generate_llm_recovery_rules",
        "generate_strategy_adjustment_rules",
        "expand_rule_details",
        "validate_rule_set",
        "optimize_rule_priorities",
        "_generate_initial_rules",
        "_create_rule_from_data",
        "_format_agents_for_rule_generation",
        "_analyze_goal_progress",
        "_generate_strategic_adjustment_rules",
        "_generate_llm_strategic_rules",
        "_get_default_strategic_rules",
        "_generate_detailed_outcome",
        "_optimize_action_description",
        "_validate_single_rule",
        "_check_priority_conflicts",
        "_check_rule_coverage",
        "_optimize_phase_priorities",
        "_create_fallback_rule_set",
        "make_decision",
        "_make_llm_decision",
        "_format_rules_for_decision",
        "_get_available_agents_for_decision",
        "_analyze_agent_data_affinity",
        "_parse_llm_decision",
        "_print_decision_in_red",
        "_analyze_loop_indicators",
        "_basic_loop_detection",
        "_get_available_rules_with_loop_prevention",
        "_handle_no_available_rules",
        "_format_rules_for_decision_with_loop_info",
        "_advanced_loop_detection",
        "_detect_execution_pattern_loops",
        "_detect_semantic_loops",
        "_detect_execution_stagnation",
        "_detect_rule_exhaustion",
        "_detect_temporal_loops",
        "_calculate_loop_risk_score",
        "_implement_loop_prevention_strategy",
        "_enhanced_error_recovery_strategy",
        "_classify_failure_type",
        "_generate_agent_fallback_rules",
        "_generate_timeout_recovery_rules",
        "_generate_data_recovery_rules",
        "_generate_permission_recovery_rules",
        "_generate_generic_recovery_rules",
        "_generate_fallback_strategy_rules",
        "_convert_manager_rules_to_production_rules",
        "_make_advisor_decision",
        "_parse_rules_from_llm_response"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:RuleGenerationService"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 25,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u89c4\u5219\u751f\u6210\u670d\u52a1\n\nArgs:\n    llm_service: \u8bed\u8a00\u6a21\u578b\u670d\u52a1\n    agent_registry: \u667a\u80fd\u4f53\u6ce8\u518c\u8868\uff08\u7528\u4e8e\u51b3\u7b56\u529f\u80fd\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "llm_service",
        "agent_registry"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "CognitiveAdvisor",
        "logger.info",
        "logger.warning"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:__init__"
    },
    {
      "type": "function",
      "name": "generate_rule_set",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 44,
      "complexity": 1,
      "docstring": "\u6839\u636e\u76ee\u6807\u751f\u6210\u521d\u59cb\u89c4\u5219\u96c6\n\nArgs:\n    goal: \u76ee\u6807\u63cf\u8ff0\n    agent_registry: \u667a\u80fd\u4f53\u6ce8\u518c\u8868\n    \nReturns:\n    RuleSet: \u751f\u6210\u7684\u89c4\u5219\u96c6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "goal",
        "agent_registry"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "RuleSet",
        "logger.info",
        "logger.info",
        "self.advisor.plan_workflow",
        "self._convert_manager_rules_to_production_rules",
        "logger.info",
        "logger.info",
        "agent_registry.list_all_agents",
        "self._format_agents_for_rule_generation",
        "self._generate_initial_rules",
        "logger.error",
        "advisor_result.get",
        "len",
        "advisor_result.get",
        "hash"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:generate_rule_set"
    },
    {
      "type": "function",
      "name": "generate_recovery_rules",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 91,
      "complexity": 1,
      "docstring": "\u4f7f\u7528\u589e\u5f3a\u7b56\u7565\u751f\u6210\u9519\u8bef\u6062\u590d\u89c4\u5219\n\nArgs:\n    failure_context: \u5931\u8d25\u4e0a\u4e0b\u6587\u4fe1\u606f\n    \nReturns:\n    List[ProductionRule]: \u6062\u590d\u89c4\u5219\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "failure_context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "failure_context.get",
        "self._generate_llm_recovery_rules",
        "logger.info",
        "self._enhanced_error_recovery_strategy",
        "logger.error",
        "logger.info",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:generate_recovery_rules"
    },
    {
      "type": "function",
      "name": "_generate_llm_recovery_rules",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 122,
      "complexity": 1,
      "docstring": "\u4f7f\u7528\u8bed\u8a00\u6a21\u578b\u667a\u80fd\u751f\u6210\u9519\u8bef\u6062\u590d\u89c4\u5219\n\nArgs:\n    failure_context: \u5931\u8d25\u4e0a\u4e0b\u6587\u4fe1\u606f\n    \nReturns:\n    List[ProductionRule]: LLM\u751f\u6210\u7684\u6062\u590d\u89c4\u5219\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "failure_context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "str",
        "str",
        "str",
        "failure_context.get",
        "isinstance",
        "str",
        "hasattr",
        "self._current_agent_registry.list_all_agents",
        "'\\n'.join",
        "failure_context.get",
        "failure_context.get",
        "failure_context.get",
        "str",
        "str",
        "failure_context.get",
        "self.llm_service.generate_natural_language_response",
        "self.llm_service._parse_json_response",
        "isinstance",
        "enumerate",
        "logger.warning",
        "failure_context.get",
        "isinstance",
        "ProductionRule",
        "recovery_rules.append",
        "logger.error",
        "getattr",
        "available_agents.append",
        "logger.error",
        "str",
        "str",
        "rule_data.get",
        "failure_context.get",
        "isinstance",
        "rule_data.get",
        "rule_data.get",
        "ProductionRule",
        "recovery_rules.append",
        "logger.debug",
        "execution_context.items",
        "str",
        "RulePhase",
        "logger.warning",
        "rule_data.get",
        "rule_data.get",
        "int",
        "rule_data.get",
        "failure_context.get",
        "hash",
        "rule_data.get",
        "hash",
        "str",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_generate_llm_recovery_rules"
    },
    {
      "type": "function",
      "name": "generate_strategy_adjustment_rules",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 288,
      "complexity": 1,
      "docstring": "\u751f\u6210\u7b56\u7565\u8c03\u6574\u89c4\u5219\uff08\u76ee\u6807\u7ea7\u5931\u8d25\u54cd\u5e94\uff09\n\nArgs:\n    goal_context: \u76ee\u6807\u4e0a\u4e0b\u6587\u4fe1\u606f\n    \nReturns:\n    List[ProductionRule]: \u7b56\u7565\u8c03\u6574\u89c4\u5219\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "goal_context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "self._analyze_goal_progress",
        "self._generate_strategic_adjustment_rules",
        "logger.info",
        "logger.error",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:generate_strategy_adjustment_rules"
    },
    {
      "type": "function",
      "name": "expand_rule_details",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 314,
      "complexity": 1,
      "docstring": "\u6269\u5c55\u89c4\u5219\u7ec6\u8282\n\nArgs:\n    rule: \u8981\u6269\u5c55\u7684\u89c4\u5219\n    \nReturns:\n    ProductionRule: \u6269\u5c55\u540e\u7684\u89c4\u5219",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._generate_detailed_outcome",
        "self._optimize_action_description",
        "rule.metadata.copy",
        "ProductionRule",
        "logger.debug",
        "hasattr",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:expand_rule_details"
    },
    {
      "type": "function",
      "name": "validate_rule_set",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 356,
      "complexity": 1,
      "docstring": "\u9a8c\u8bc1\u89c4\u5219\u96c6\u6709\u6548\u6027\n\nArgs:\n    rule_set: \u8981\u9a8c\u8bc1\u7684\u89c4\u5219\u96c6\n    \nReturns:\n    List[str]: \u9a8c\u8bc1\u95ee\u9898\u5217\u8868\uff0c\u7a7a\u5217\u8868\u8868\u793a\u65e0\u95ee\u9898",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule_set"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "enumerate",
        "self._check_priority_conflicts",
        "issues.extend",
        "self._check_rule_coverage",
        "issues.extend",
        "logger.info",
        "rule_set.goal.strip",
        "issues.append",
        "len",
        "issues.append",
        "self._validate_single_rule",
        "issues.extend",
        "logger.error",
        "len",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:validate_rule_set"
    },
    {
      "type": "function",
      "name": "optimize_rule_priorities",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 396,
      "complexity": 1,
      "docstring": "\u4f18\u5316\u89c4\u5219\u4f18\u5148\u7ea7\n\nArgs:\n    rules: \u8981\u4f18\u5316\u7684\u89c4\u5219\u5217\u8868\n    \nReturns:\n    List[ProductionRule]: \u4f18\u5316\u540e\u7684\u89c4\u5219\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rules"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "phase_groups.items",
        "logger.info",
        "phase_groups[rule.phase].append",
        "self._optimize_phase_priorities",
        "optimized_rules.extend",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:optimize_rule_priorities"
    },
    {
      "type": "function",
      "name": "_generate_initial_rules",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 430,
      "complexity": 1,
      "docstring": "\u751f\u6210\u521d\u59cb\u89c4\u5219\n\nArgs:\n    goal: \u76ee\u6807\u63cf\u8ff0\n    agents_desc: \u53ef\u7528\u667a\u80fd\u4f53\u63cf\u8ff0\n    \nReturns:\n    List[ProductionRule]: \u751f\u6210\u7684\u89c4\u5219\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "goal",
        "agents_desc"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.llm_service.generate_natural_language_response",
        "self.llm_service._parse_json_response",
        "isinstance",
        "isinstance",
        "ValueError",
        "logger.error",
        "ValueError",
        "self._create_rule_from_data",
        "rules.append",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_generate_initial_rules"
    },
    {
      "type": "function",
      "name": "_create_rule_from_data",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 517,
      "complexity": 1,
      "docstring": "\u4ece\u6570\u636e\u5b57\u5178\u521b\u5efa\u89c4\u5219\n\nArgs:\n    rule_data: \u89c4\u5219\u6570\u636e\u5b57\u5178\n    \nReturns:\n    Optional[ProductionRule]: \u521b\u5efa\u7684\u89c4\u5219\uff0c\u5931\u8d25\u65f6\u8fd4\u56deNone",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule_data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "rule_data.get",
        "ProductionRule",
        "rule_data.get",
        "rule_data.get",
        "logger.debug",
        "RulePhase",
        "rule_data.get",
        "rule_data.get",
        "logger.error",
        "logger.warning",
        "rule_data.get",
        "int",
        "hash",
        "rule_data.get",
        "rule_data.get",
        "rule_data.get",
        "rule_data.get",
        "rule_data.get",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_create_rule_from_data"
    },
    {
      "type": "function",
      "name": "_format_agents_for_rule_generation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 588,
      "complexity": 1,
      "docstring": "\u683c\u5f0f\u5316\u667a\u80fd\u4f53\u4fe1\u606f\u4f9b\u89c4\u5219\u751f\u6210\u4f7f\u7528\n\nArgs:\n    agents_list: \u667a\u80fd\u4f53\u5217\u8868\uff0c\u683c\u5f0f\u4e3a[(name, agent), ...]\n    \nReturns:\n    str: \u683c\u5f0f\u5316\u7684\u667a\u80fd\u4f53\u63cf\u8ff0",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "agents_list"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "'\\n'.join",
        "getattr",
        "formatted_lines.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_format_agents_for_rule_generation"
    },
    {
      "type": "function",
      "name": "_analyze_goal_progress",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 613,
      "complexity": 1,
      "docstring": "\u5206\u6790\u76ee\u6807\u6267\u884c\u8fdb\u5ea6\n\nArgs:\n    goal_context: \u76ee\u6807\u4e0a\u4e0b\u6587\n    \nReturns:\n    Dict[str, Any]: \u8fdb\u5ea6\u5206\u6790\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "goal_context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "goal_context.get",
        "goal_context.get",
        "goal_context.get",
        "goal_context.get",
        "goal_context.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_analyze_goal_progress"
    },
    {
      "type": "function",
      "name": "_generate_strategic_adjustment_rules",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 631,
      "complexity": 1,
      "docstring": "\u4f7f\u7528\u8bed\u8a00\u6a21\u578b\u667a\u80fd\u751f\u6210\u7b56\u7565\u8c03\u6574\u89c4\u5219\n\nArgs:\n    goal_analysis: \u76ee\u6807\u5206\u6790\u7ed3\u679c\n    \nReturns:\n    List[ProductionRule]: \u7b56\u7565\u8c03\u6574\u89c4\u5219\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "goal_analysis"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "self._generate_llm_strategic_rules",
        "logger.info",
        "logger.error",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_generate_strategic_adjustment_rules"
    },
    {
      "type": "function",
      "name": "_generate_llm_strategic_rules",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 654,
      "complexity": 1,
      "docstring": "\u4f7f\u7528\u8bed\u8a00\u6a21\u578b\u667a\u80fd\u751f\u6210\u7b56\u7565\u8c03\u6574\u89c4\u5219\n\nArgs:\n    goal_analysis: \u76ee\u6807\u5206\u6790\u7ed3\u679c\n    \nReturns:\n    List[ProductionRule]: \u667a\u80fd\u751f\u6210\u7684\u7b56\u7565\u8c03\u6574\u89c4\u5219\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "goal_analysis"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.llm_service.generate_natural_language_response",
        "logger.debug",
        "self._parse_rules_from_llm_response",
        "logger.info",
        "logger.error",
        "goal_analysis.get",
        "goal_analysis.get",
        "goal_analysis.get",
        "goal_analysis.get",
        "goal_analysis.get",
        "logger.warning",
        "self._get_default_strategic_rules",
        "logger.error",
        "self._get_default_strategic_rules",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_generate_llm_strategic_rules"
    },
    {
      "type": "function",
      "name": "_get_default_strategic_rules",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 742,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u9ed8\u8ba4\u7684\u7b56\u7565\u8c03\u6574\u89c4\u5219\uff08\u5f53LLM\u751f\u6210\u5931\u8d25\u65f6\u4f7f\u7528\uff09\n\nArgs:\n    goal_analysis: \u76ee\u6807\u5206\u6790\u7ed3\u679c\n    \nReturns:\n    List[ProductionRule]: \u9ed8\u8ba4\u7b56\u7565\u8c03\u6574\u89c4\u5219\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "goal_analysis"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "goal_analysis.get",
        "goal_analysis.get",
        "default_rules.append",
        "logger.info",
        "isinstance",
        "str",
        "default_rules.append",
        "ProductionRule",
        "logger.error",
        "ProductionRule",
        "len",
        "hash",
        "hash"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_get_default_strategic_rules"
    },
    {
      "type": "function",
      "name": "_generate_detailed_outcome",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 797,
      "complexity": 1,
      "docstring": "\u751f\u6210\u8be6\u7ec6\u7684\u671f\u671b\u7ed3\u679c\n\nArgs:\n    rule: \u89c4\u5219\n    \nReturns:\n    str: \u8be6\u7ec6\u7684\u671f\u671b\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.llm_service.generate_natural_language_response",
        "outcome.strip",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_generate_detailed_outcome"
    },
    {
      "type": "function",
      "name": "_optimize_action_description",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 831,
      "complexity": 1,
      "docstring": "\u4f18\u5316\u52a8\u4f5c\u63cf\u8ff0\n\nArgs:\n    rule: \u89c4\u5219\n    \nReturns:\n    str: \u4f18\u5316\u540e\u7684\u52a8\u4f5c\u63cf\u8ff0",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.llm_service.generate_natural_language_response",
        "optimized_action.strip",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_optimize_action_description"
    },
    {
      "type": "function",
      "name": "_validate_single_rule",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 865,
      "complexity": 1,
      "docstring": "\u9a8c\u8bc1\u5355\u4e2a\u89c4\u5219\n\nArgs:\n    rule: \u8981\u9a8c\u8bc1\u7684\u89c4\u5219\n    index: \u89c4\u5219\u7d22\u5f15\n    \nReturns:\n    List[str]: \u95ee\u9898\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule",
        "index"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "rule.name.strip",
        "issues.append",
        "rule.condition.strip",
        "issues.append",
        "rule.action.strip",
        "issues.append",
        "rule.agent_capability_id.strip",
        "issues.append",
        "issues.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_validate_single_rule"
    },
    {
      "type": "function",
      "name": "_check_priority_conflicts",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 895,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u4f18\u5148\u7ea7\u51b2\u7a81\n\nArgs:\n    rules: \u89c4\u5219\u5217\u8868\n    \nReturns:\n    List[str]: \u51b2\u7a81\u95ee\u9898\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rules"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "issues.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_check_priority_conflicts"
    },
    {
      "type": "function",
      "name": "_check_rule_coverage",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 921,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u89c4\u5219\u8986\u76d6\u5ea6\n\nArgs:\n    rule_set: \u89c4\u5219\u96c6\n    \nReturns:\n    List[str]: \u8986\u76d6\u5ea6\u95ee\u9898\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule_set"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "set",
        "set",
        "issues.append",
        "', '.join"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_check_rule_coverage"
    },
    {
      "type": "function",
      "name": "_optimize_phase_priorities",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 944,
      "complexity": 1,
      "docstring": "\u4f18\u5316\u9636\u6bb5\u5185\u7684\u89c4\u5219\u4f18\u5148\u7ea7\n\nArgs:\n    rules: \u9636\u6bb5\u5185\u7684\u89c4\u5219\u5217\u8868\n    phase: \u6267\u884c\u9636\u6bb5\n    \nReturns:\n    List[ProductionRule]: \u4f18\u5316\u540e\u7684\u89c4\u5219\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rules",
        "phase"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "sorted",
        "enumerate",
        "len",
        "rule.metadata.copy",
        "ProductionRule",
        "optimized_rules.append",
        "rule.update_priority",
        "hasattr"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_optimize_phase_priorities"
    },
    {
      "type": "function",
      "name": "_create_fallback_rule_set",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 992,
      "complexity": 1,
      "docstring": "\u56de\u9000\u89c4\u5219\u96c6\u521b\u5efa\u65b9\u6cd5\uff08\u5df2\u5e9f\u5f03\uff0c\u76f4\u63a5\u629b\u51fa\u5f02\u5e38\uff09\n\nArgs:\n    goal: \u76ee\u6807\u63cf\u8ff0\n    agent_registry: \u667a\u80fd\u4f53\u6ce8\u518c\u8868\n    \nReturns:\n    RuleSet: \u4e0d\u4f1a\u8fd4\u56de\uff0c\u76f4\u63a5\u629b\u51fa\u5f02\u5e38\n    \nRaises:\n    RuntimeError: \u89c4\u5219\u751f\u6210\u5931\u8d25\u65f6\u76f4\u63a5\u62a5\u9519",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "goal",
        "agent_registry"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.error",
        "RuntimeError"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_create_fallback_rule_set"
    },
    {
      "type": "function",
      "name": "make_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 1014,
      "complexity": 1,
      "docstring": "\u8fdb\u884c\u5de5\u4f5c\u6d41\u51b3\u7b56 - \u4f7f\u7528\u5355\u6b21LLM\u8c03\u7528\u5b8c\u6210\u6240\u6709\u51b3\u7b56\u903b\u8f91\n\nArgs:\n    global_state: \u5f53\u524d\u5168\u5c40\u72b6\u6001\n    rule_set: \u89c4\u5219\u96c6\n    \nReturns:\n    DecisionResult: \u5de5\u4f5c\u6d41\u51b3\u7b56\u7ed3\u679c\uff0c\u5305\u542b\u51b3\u7b56\u7c7b\u578b\u548c\u76f8\u5173\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "global_state",
        "rule_set"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.debug",
        "logger.info",
        "DecisionResult",
        "logger.info",
        "self._make_advisor_decision",
        "logger.info",
        "self._make_llm_decision",
        "logger.error",
        "DecisionResult",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:make_decision"
    },
    {
      "type": "function",
      "name": "_make_llm_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 1058,
      "complexity": 1,
      "docstring": "\u4f7f\u7528\u5355\u6b21LLM\u8c03\u7528\u8fdb\u884c\u667a\u80fd\u5de5\u4f5c\u6d41\u51b3\u7b56\uff08\u589e\u5f3a\u7248 - \u9632\u6b7b\u5faa\u73af\uff09\n\n\u8fd9\u662f\u7cfb\u7edf\u7684\u6838\u5fc3\u51b3\u7b56\u65b9\u6cd5\uff0c\u901a\u8fc7LLM\u5206\u6790\u5f53\u524d\u72b6\u6001\u548c\u53ef\u7528\u89c4\u5219\uff0c\n\u51b3\u5b9a\u4e0b\u4e00\u6b65\u5e94\u8be5\u91c7\u53d6\u7684\u884c\u52a8\uff1a\u6267\u884c\u89c4\u5219\u3001\u751f\u6210\u65b0\u89c4\u5219\u3001\u6216\u5224\u65ad\u76ee\u6807\u8fbe\u6210\u3002\n\n\u589e\u5f3a\u529f\u80fd\uff1a\n1. \u6b7b\u5faa\u73af\u68c0\u6d4b\u548c\u9884\u9632\n2. \u5df2\u6267\u884c\u89c4\u5219\u8fc7\u6ee4\n3. \u5931\u8d25\u89c4\u5219\u8df3\u8fc7\n4. \u72b6\u6001\u5faa\u73af\u8bc6\u522b\n\nArgs:\n    global_state: \u5f53\u524d\u5168\u5c40\u72b6\u6001\uff0c\u5305\u542b\u72b6\u6001\u63cf\u8ff0\u3001\u4e0a\u4e0b\u6587\u53d8\u91cf\u548c\u6267\u884c\u5386\u53f2\n    rule_set: \u5b8c\u6574\u7684\u89c4\u5219\u96c6\uff0c\u5305\u542b\u6240\u6709\u53ef\u7528\u7684\u4ea7\u751f\u5f0f\u89c4\u5219\n    \nReturns:\n    DecisionResult: \u51b3\u7b56\u7ed3\u679c\uff0c\u5305\u542b\uff1a\n        - decision_type: \u51b3\u7b56\u7c7b\u578b\uff08\u6267\u884c\u89c4\u5219/\u751f\u6210\u89c4\u5219/\u76ee\u6807\u8fbe\u6210/\u5931\u8d25\uff09\n        - selected_rule: \u5982\u679c\u662f\u6267\u884c\u51b3\u7b56\uff0c\u5305\u542b\u9009\u4e2d\u7684\u89c4\u5219\n        - new_rules: \u5982\u679c\u662f\u751f\u6210\u51b3\u7b56\uff0c\u5305\u542b\u65b0\u751f\u6210\u7684\u89c4\u5219\n        - confidence: \u51b3\u7b56\u7f6e\u4fe1\u5ea6 (0.0-1.0)\n        - reasoning: \u8be6\u7ec6\u7684\u51b3\u7b56\u63a8\u7406\u8fc7\u7a0b\n        - context: \u51b3\u7b56\u4e0a\u4e0b\u6587\u4fe1\u606f\n\nRaises:\n    Exception: \u5f53LLM\u8c03\u7528\u5931\u8d25\u6216\u89e3\u6790\u7ed3\u679c\u5f02\u5e38\u65f6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "global_state",
        "rule_set"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._analyze_loop_indicators",
        "self._advanced_loop_detection",
        "self._get_available_rules_with_loop_prevention",
        "self._format_rules_for_decision_with_loop_info",
        "self._get_available_agents_for_decision",
        "self.llm_service.generate_natural_language_response",
        "self.llm_service._parse_json_response",
        "self._parse_llm_decision",
        "self._print_decision_in_red",
        "self._implement_loop_prevention_strategy",
        "logger.warning",
        "DecisionResult",
        "logger.info",
        "self._handle_no_available_rules",
        "logger.error",
        "DecisionResult",
        "logger.warning",
        "chr(10).join",
        "chr",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_make_llm_decision"
    },
    {
      "type": "function",
      "name": "_format_rules_for_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 1224,
      "complexity": 1,
      "docstring": "\u683c\u5f0f\u5316\u89c4\u5219\u4fe1\u606f\u4f9b\u51b3\u7b56\u4f7f\u7528\n\nArgs:\n    rules: \u89c4\u5219\u5217\u8868\n    \nReturns:\n    str: \u683c\u5f0f\u5316\u7684\u89c4\u5219\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rules"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "'\\n\\n'.join",
        "formatted_rules.append",
        "rule_info.strip"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_format_rules_for_decision"
    },
    {
      "type": "function",
      "name": "_get_available_agents_for_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 1253,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u53ef\u7528\u7684\u667a\u80fd\u4f53\u4fe1\u606f\uff0c\u5305\u542b\u53cc\u7ef4\u5ea6\u5206\u6790\u6570\u636e\n\nArgs:\n    global_state: \u5168\u5c40\u72b6\u6001\uff0c\u7528\u4e8e\u5206\u6790\u6570\u636e\u4eb2\u548c\u6027\n\nReturns:\n    str: \u683c\u5f0f\u5316\u7684\u667a\u80fd\u4f53\u4fe1\u606f\uff0c\u5305\u542b\u80fd\u529b\u548c\u5386\u53f2\u5206\u6790",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "hasattr",
        "self._current_agent_registry.list_all_agents",
        "logger.error",
        "'\\n'.join",
        "getattr",
        "self._analyze_agent_data_affinity",
        "agent_info.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_get_available_agents_for_decision"
    },
    {
      "type": "function",
      "name": "_analyze_agent_data_affinity",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 1292,
      "complexity": 1,
      "docstring": "\u5206\u6790\u667a\u80fd\u4f53\u7684\u6570\u636e\u4eb2\u548c\u6027\n\nArgs:\n    agent_name: \u667a\u80fd\u4f53\u540d\u79f0\n    global_state: \u5168\u5c40\u72b6\u6001\n    \nReturns:\n    str: \u6570\u636e\u4eb2\u548c\u6027\u5206\u6790\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "agent_name",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.error",
        "agent_history.append",
        "agent_name.lower",
        "agent_name.lower",
        "agent_name.lower",
        "task_types.append",
        "agent_name.lower",
        "task_types.append",
        "', '.join",
        "task_types.append",
        "set"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_analyze_agent_data_affinity"
    },
    {
      "type": "function",
      "name": "_parse_llm_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 1339,
      "complexity": 1,
      "docstring": "\u89e3\u6790LLM\u51b3\u7b56\u7ed3\u679c\n\nArgs:\n    decision_data: LLM\u8fd4\u56de\u7684\u51b3\u7b56\u6570\u636e\n    rule_set: \u89c4\u5219\u96c6\n    \nReturns:\n    DecisionResult: \u89e3\u6790\u540e\u7684\u51b3\u7b56\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decision_data",
        "rule_set"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "decision_data.get('decision', {}).get",
        "float",
        "decision_data.get",
        "decision_data.get",
        "decision_data.get('decision', {}).get",
        "DecisionResult",
        "logger.error",
        "DecisionResult",
        "decision_data.get",
        "decision_data.get",
        "logger.info",
        "DecisionResult",
        "logger.warning",
        "DecisionResult",
        "decision_data.get",
        "logger.info",
        "DecisionResult",
        "self._create_rule_from_data",
        "new_rules.append",
        "logger.warning",
        "len",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_parse_llm_decision"
    },
    {
      "type": "function",
      "name": "_print_decision_in_red",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 1429,
      "complexity": 1,
      "docstring": "\u4f7f\u7528\u7ea2\u8272\u5b57\u4f53\u6253\u5370LLM\u51b3\u7b56\u4fe1\u606f\n\nArgs:\n    decision_result: \u89e3\u6790\u540e\u7684\u51b3\u7b56\u7ed3\u679c\n    decision_data: \u539f\u59cb\u51b3\u7b56\u6570\u636e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decision_result",
        "decision_data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "decision_data.get('decision', {}).get",
        "print",
        "decision_data.get",
        "print",
        "decision_data.get",
        "print",
        "print",
        "print",
        "decision_data.get('decision', {}).get",
        "logger.error",
        "print",
        "print",
        "print",
        "decision_data.get",
        "print",
        "print",
        "print",
        "print",
        "print",
        "decision_data.get",
        "print",
        "enumerate",
        "decision_data.get",
        "print",
        "print",
        "print",
        "print",
        "len",
        "print",
        "print",
        "print",
        "decision_result.get_decision_summary",
        "len",
        "rule_data.get",
        "rule_data.get",
        "rule_data.get",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_print_decision_in_red"
    },
    {
      "type": "function",
      "name": "_analyze_loop_indicators",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 1494,
      "complexity": 1,
      "docstring": "\u5206\u6790\u5faa\u73af\u6307\u6807\uff0c\u68c0\u6d4b\u6f5c\u5728\u7684\u6b7b\u5faa\u73af\n\nArgs:\n    global_state: \u5f53\u524d\u5168\u5c40\u72b6\u6001\n    rule_set: \u89c4\u5219\u96c6\n    \nReturns:\n    Dict[str, Any]: \u5faa\u73af\u5206\u6790\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "global_state",
        "rule_set"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "isinstance",
        "self._get_available_rules_with_loop_prevention",
        "len",
        "global_state.check_state_cycle",
        "global_state.detect_potential_loop",
        "loop_context.update",
        "logger.error",
        "hasattr",
        "self._basic_loop_detection"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_analyze_loop_indicators"
    },
    {
      "type": "function",
      "name": "_basic_loop_detection",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 1563,
      "complexity": 1,
      "docstring": "\u5bf9\u666e\u901aGlobalState\u8fdb\u884c\u57fa\u7840\u5faa\u73af\u68c0\u6d4b\n\nArgs:\n    global_state: \u5168\u5c40\u72b6\u6001\n    rule_set: \u89c4\u5219\u96c6\n    \nReturns:\n    Dict[str, Any]: \u57fa\u7840\u5faa\u73af\u68c0\u6d4b\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "global_state",
        "rule_set"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_basic_loop_detection"
    },
    {
      "type": "function",
      "name": "_get_available_rules_with_loop_prevention",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 1590,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u53ef\u7528\u89c4\u5219\uff0c\u5e94\u7528\u5faa\u73af\u9884\u9632\u8fc7\u6ee4\n\nArgs:\n    global_state: \u5168\u5c40\u72b6\u6001\n    all_rules: \u6240\u6709\u89c4\u5219\n    \nReturns:\n    List[ProductionRule]: \u8fc7\u6ee4\u540e\u7684\u53ef\u7528\u89c4\u5219",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "global_state",
        "all_rules"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "isinstance",
        "global_state.get_available_rules"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_get_available_rules_with_loop_prevention"
    },
    {
      "type": "function",
      "name": "_handle_no_available_rules",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 1608,
      "complexity": 1,
      "docstring": "\u5904\u7406\u6ca1\u6709\u53ef\u7528\u89c4\u5219\u7684\u60c5\u51b5\n\nArgs:\n    global_state: \u5168\u5c40\u72b6\u6001\n    rule_set: \u89c4\u5219\u96c6\n    loop_context: \u5faa\u73af\u4e0a\u4e0b\u6587\n    \nReturns:\n    DecisionResult: \u51b3\u7b56\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "global_state",
        "rule_set",
        "loop_context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "loop_context.get",
        "DecisionResult",
        "DecisionResult"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_handle_no_available_rules"
    },
    {
      "type": "function",
      "name": "_format_rules_for_decision_with_loop_info",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 1640,
      "complexity": 1,
      "docstring": "\u683c\u5f0f\u5316\u89c4\u5219\u4fe1\u606f\uff0c\u5305\u542b\u5faa\u73af\u9884\u9632\u4fe1\u606f\n\nArgs:\n    rules: \u53ef\u7528\u89c4\u5219\u5217\u8868\n    global_state: \u5168\u5c40\u72b6\u6001\n    \nReturns:\n    str: \u683c\u5f0f\u5316\u7684\u89c4\u5219\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rules",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "'\\n\\n'.join",
        "isinstance",
        "formatted_rules.append",
        "global_state.is_rule_executed",
        "global_state.get_rule_failure_count",
        "rule_info.strip"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_format_rules_for_decision_with_loop_info"
    },
    {
      "type": "function",
      "name": "_advanced_loop_detection",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 1678,
      "complexity": 1,
      "docstring": "\u9ad8\u7ea7\u5faa\u73af\u68c0\u6d4b\u673a\u5236 - \u591a\u7ef4\u5ea6\u5206\u6790\u6f5c\u5728\u5faa\u73af\n\nArgs:\n    global_state: \u5168\u5c40\u72b6\u6001\n    rule_set: \u89c4\u5219\u96c6\n    \nReturns:\n    Dict[str, Any]: \u9ad8\u7ea7\u5faa\u73af\u68c0\u6d4b\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "global_state",
        "rule_set"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._detect_execution_pattern_loops",
        "self._detect_semantic_loops",
        "self._detect_execution_stagnation",
        "self._detect_rule_exhaustion",
        "self._detect_temporal_loops",
        "self._calculate_loop_risk_score",
        "detection_result['recommendations'].append",
        "detection_result['recommendations'].append",
        "detection_result['recommendations'].append",
        "detection_result['recommendations'].append",
        "detection_result['recommendations'].append",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_advanced_loop_detection"
    },
    {
      "type": "function",
      "name": "_detect_execution_pattern_loops",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 1734,
      "complexity": 1,
      "docstring": "\u68c0\u6d4b\u6267\u884c\u6a21\u5f0f\u5faa\u73af",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "range",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_detect_execution_pattern_loops"
    },
    {
      "type": "function",
      "name": "_detect_semantic_loops",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 1750,
      "complexity": 1,
      "docstring": "\u68c0\u6d4b\u8bed\u4e49\u5faa\u73af",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "global_state.state.lower",
        "sum",
        "current_state.count"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_detect_semantic_loops"
    },
    {
      "type": "function",
      "name": "_detect_execution_stagnation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 1764,
      "complexity": 1,
      "docstring": "\u68c0\u6d4b\u6267\u884c\u505c\u6ede",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "sum",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_detect_execution_stagnation"
    },
    {
      "type": "function",
      "name": "_detect_rule_exhaustion",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 1775,
      "complexity": 1,
      "docstring": "\u68c0\u6d4b\u89c4\u5219\u8017\u5c3d",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "global_state",
        "rule_set"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "isinstance",
        "global_state.get_available_rules",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_detect_rule_exhaustion"
    },
    {
      "type": "function",
      "name": "_detect_temporal_loops",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 1782,
      "complexity": 1,
      "docstring": "\u68c0\u6d4b\u65f6\u95f4\u7ef4\u5ea6\u5faa\u73af",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_detect_temporal_loops"
    },
    {
      "type": "function",
      "name": "_calculate_loop_risk_score",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 1787,
      "complexity": 1,
      "docstring": "\u8ba1\u7b97\u5faa\u73af\u98ce\u9669\u8bc4\u5206",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "detection_result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "min"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_calculate_loop_risk_score"
    },
    {
      "type": "function",
      "name": "_implement_loop_prevention_strategy",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 1804,
      "complexity": 1,
      "docstring": "\u5b9e\u65bd\u5faa\u73af\u9884\u9632\u7b56\u7565\n\nArgs:\n    global_state: \u5168\u5c40\u72b6\u6001\n    detection_result: \u5faa\u73af\u68c0\u6d4b\u7ed3\u679c\n    \nReturns:\n    DecisionResult: \u9884\u9632\u7b56\u7565\u51b3\u7b56",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "global_state",
        "detection_result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "DecisionResult",
        "DecisionResult",
        "', '.join",
        "', '.join"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_implement_loop_prevention_strategy"
    },
    {
      "type": "function",
      "name": "_enhanced_error_recovery_strategy",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 1840,
      "complexity": 1,
      "docstring": "\u589e\u5f3a\u7684\u9519\u8bef\u6062\u590d\u7b56\u7565\n\nArgs:\n    failure_context: \u5931\u8d25\u4e0a\u4e0b\u6587\n    global_state: \u5168\u5c40\u72b6\u6001\n    \nReturns:\n    List[ProductionRule]: \u6062\u590d\u89c4\u5219\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "failure_context",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._classify_failure_type",
        "logger.info",
        "recovery_rules.extend",
        "len",
        "recovery_rules.extend",
        "logger.error",
        "self._generate_generic_recovery_rules",
        "self._generate_agent_fallback_rules",
        "recovery_rules.extend",
        "self._generate_fallback_strategy_rules",
        "self._generate_timeout_recovery_rules",
        "recovery_rules.extend",
        "len",
        "self._generate_data_recovery_rules",
        "recovery_rules.extend",
        "recovery_rules.extend",
        "self._generate_permission_recovery_rules",
        "self._generate_generic_recovery_rules"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_enhanced_error_recovery_strategy"
    },
    {
      "type": "function",
      "name": "_classify_failure_type",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 1881,
      "complexity": 1,
      "docstring": "\u5206\u7c7b\u5931\u8d25\u7c7b\u578b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "failure_context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "failure_context.get('error_message', '').lower",
        "failure_context.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_classify_failure_type"
    },
    {
      "type": "function",
      "name": "_generate_agent_fallback_rules",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 1896,
      "complexity": 1,
      "docstring": "\u751f\u6210\u667a\u80fd\u4f53\u56de\u9000\u89c4\u5219",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "failure_context",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "list",
        "failure_context.get",
        "self._current_agent_registry.agents.keys",
        "enumerate",
        "ProductionRule",
        "rules.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_generate_agent_fallback_rules"
    },
    {
      "type": "function",
      "name": "_generate_timeout_recovery_rules",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 1925,
      "complexity": 1,
      "docstring": "\u751f\u6210\u8d85\u65f6\u6062\u590d\u89c4\u5219",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "failure_context",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "failure_context.get",
        "ProductionRule",
        "rules.append",
        "ProductionRule",
        "rules.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_generate_timeout_recovery_rules"
    },
    {
      "type": "function",
      "name": "_generate_data_recovery_rules",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 1960,
      "complexity": 1,
      "docstring": "\u751f\u6210\u6570\u636e\u6062\u590d\u89c4\u5219",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "failure_context",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "failure_context.get",
        "ProductionRule",
        "rules.append",
        "ProductionRule",
        "rules.append",
        "failure_context.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_generate_data_recovery_rules"
    },
    {
      "type": "function",
      "name": "_generate_permission_recovery_rules",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 1994,
      "complexity": 1,
      "docstring": "\u751f\u6210\u6743\u9650\u6062\u590d\u89c4\u5219",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "failure_context",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "failure_context.get",
        "ProductionRule",
        "rules.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_generate_permission_recovery_rules"
    },
    {
      "type": "function",
      "name": "_generate_generic_recovery_rules",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 2014,
      "complexity": 1,
      "docstring": "\u751f\u6210\u901a\u7528\u6062\u590d\u89c4\u5219",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "failure_context",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "failure_context.get",
        "ProductionRule",
        "rules.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_generate_generic_recovery_rules"
    },
    {
      "type": "function",
      "name": "_generate_fallback_strategy_rules",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 2035,
      "complexity": 1,
      "docstring": "\u751f\u6210\u964d\u7ea7\u7b56\u7565\u89c4\u5219",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "failure_context",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "failure_context.get",
        "ProductionRule",
        "rules.append",
        "ProductionRule",
        "rules.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_generate_fallback_strategy_rules"
    },
    {
      "type": "function",
      "name": "_convert_manager_rules_to_production_rules",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 2070,
      "complexity": 1,
      "docstring": "\u5c06ManagerAgent\u8fd4\u56de\u7684\u89c4\u5219\u5b57\u5178\u5217\u8868\u8f6c\u6362\u4e3aProductionRule\u5bf9\u8c61\u5217\u8868\n\nArgs:\n    manager_rules: ManagerAgent\u8fd4\u56de\u7684\u89c4\u5219\u5b57\u5178\u5217\u8868\n    \nReturns:\n    List[ProductionRule]: \u8f6c\u6362\u540e\u7684\u4ea7\u751f\u5f0f\u89c4\u5219\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "manager_rules"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "enumerate",
        "logger.info",
        "rule_data.get",
        "rule_data.get",
        "rule_data.get",
        "rule_data.get",
        "rule_data.get",
        "int",
        "rule_data.get",
        "rule_data.get",
        "ProductionRule",
        "rules.append",
        "logger.debug",
        "rule_data.get",
        "isinstance",
        "logger.error",
        "ProductionRule",
        "rules.append",
        "len",
        "RulePhase",
        "logger.warning",
        "phase_str.lower",
        "hash",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_convert_manager_rules_to_production_rules"
    },
    {
      "type": "function",
      "name": "_make_advisor_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 2140,
      "complexity": 1,
      "docstring": "\u4f7f\u7528CognitiveAdvisor\u8fdb\u884c\u667a\u80fd\u51b3\u7b56\n\nArgs:\n    global_state: \u5f53\u524d\u5168\u5c40\u72b6\u6001\n    rule_set: \u89c4\u5219\u96c6\n    \nReturns:\n    DecisionResult: \u51b3\u7b56\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "global_state",
        "rule_set"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.advisor.make_decision",
        "self._parse_llm_decision",
        "self._print_decision_in_red",
        "logger.error",
        "DecisionResult",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_make_advisor_decision"
    },
    {
      "type": "function",
      "name": "_parse_rules_from_llm_response",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py",
      "line_number": 2172,
      "complexity": 1,
      "docstring": "\u4eceLLM\u54cd\u5e94\u4e2d\u89e3\u6790\u89c4\u5219\n\nArgs:\n    response: LLM\u54cd\u5e94\u6587\u672c\n    rule_type: \u89c4\u5219\u7c7b\u578b\u6807\u8bc6\u7b26\n    \nReturns:\n    List[ProductionRule]: \u89e3\u6790\u51fa\u7684\u89c4\u5219\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "response",
        "rule_type"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.debug",
        "self.llm_service._parse_json_response",
        "isinstance",
        "logger.info",
        "isinstance",
        "logger.error",
        "rules_data.get",
        "rules_data.get",
        "rules_data.get",
        "isinstance",
        "enumerate",
        "enumerate",
        "len",
        "self._create_rule_from_data",
        "self._create_rule_from_data",
        "len",
        "rules.append",
        "rules.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_parse_rules_from_llm_response"
    },
    {
      "type": "class",
      "name": "RuleExecutionService",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_execution_service.py",
      "line_number": 27,
      "complexity": 1,
      "docstring": "\u89c4\u5219\u6267\u884c\u670d\u52a1 - \u4e13\u6ce8\u4e8e\u89c4\u5219\u6267\u884c\u548c\u7ed3\u679c\u7ba1\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "execute_rule",
        "prepare_execution_context",
        "handle_execution_failure",
        "validate_execution_result",
        "_execute_natural_language_action",
        "_prepare_natural_language_instruction",
        "_validate_natural_language_result",
        "_fallback_keyword_validation",
        "_calculate_confidence_score",
        "_check_context_consistency",
        "get_execution_statistics",
        "get_recent_executions",
        "retry_failed_execution"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_execution_service.py:RuleExecutionService"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_execution_service.py",
      "line_number": 30,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u89c4\u5219\u6267\u884c\u670d\u52a1\n\nArgs:\n    agent_service: \u667a\u80fd\u4f53\u670d\u52a1\n    execution_repository: \u6267\u884c\u4ed3\u50a8\n    llm_service: \u8bed\u8a00\u6a21\u578b\u670d\u52a1\n    resource_manager: \u8d44\u6e90\u7ba1\u7406\u5668\uff08\u53ef\u9009\uff0c\u7528\u4e8e\u52a8\u6001\u5206\u914d\u667a\u80fd\u4f53\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "agent_service",
        "execution_repository",
        "llm_service",
        "resource_manager"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_execution_service.py:__init__"
    },
    {
      "type": "function",
      "name": "execute_rule",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_execution_service.py",
      "line_number": 49,
      "complexity": 1,
      "docstring": "\u6267\u884c\u5355\u4e2a\u89c4\u5219\n\nArgs:\n    rule: \u8981\u6267\u884c\u7684\u89c4\u5219\n    global_state: \u5168\u5c40\u72b6\u6001\n    rule_set_execution: \u89c4\u5219\u96c6\u6267\u884c\u5b9e\u4f8b\uff08\u53ef\u9009\uff0c\u7528\u4e8e\u52a8\u6001\u5206\u914d\u667a\u80fd\u4f53\uff09\n    \nReturns:\n    RuleExecution: \u6267\u884c\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule",
        "global_state",
        "rule_set_execution"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "RuleExecution",
        "self.resource_manager.allocate_agent_for_rule",
        "logger.info",
        "logger.info",
        "logger.info",
        "self.prepare_execution_context",
        "self.execution_repository.save_execution",
        "self._execute_natural_language_action",
        "self.validate_execution_result",
        "self._calculate_confidence_score",
        "rule_execution.mark_completed",
        "logger.info",
        "self.execution_repository.save_execution",
        "hasattr",
        "next",
        "logger.warning",
        "logger.error",
        "self.handle_execution_failure",
        "iter",
        "datetime.now().strftime",
        "self.agent_service.agent_registry.agents.keys",
        "str",
        "datetime.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_execution_service.py:execute_rule"
    },
    {
      "type": "function",
      "name": "prepare_execution_context",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_execution_service.py",
      "line_number": 135,
      "complexity": 1,
      "docstring": "\u51c6\u5907\u6267\u884c\u4e0a\u4e0b\u6587\n\nArgs:\n    rule: \u8981\u6267\u884c\u7684\u89c4\u5219\n    global_state: \u5168\u5c40\u72b6\u6001\n    \nReturns:\n    Dict[str, Any]: \u6267\u884c\u4e0a\u4e0b\u6587",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "global_state.context_variables.copy",
        "datetime.now().isoformat",
        "datetime.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_execution_service.py:prepare_execution_context"
    },
    {
      "type": "function",
      "name": "handle_execution_failure",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_execution_service.py",
      "line_number": 184,
      "complexity": 1,
      "docstring": "\u5904\u7406\u6267\u884c\u5931\u8d25\n\nArgs:\n    rule: \u5931\u8d25\u7684\u89c4\u5219\n    error: \u5f02\u5e38\u4fe1\u606f\n    \nReturns:\n    RuleExecution: \u5931\u8d25\u7684\u6267\u884c\u8bb0\u5f55",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule",
        "error"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "RuleExecution",
        "WorkflowResult",
        "logger.error",
        "str",
        "datetime.now",
        "str",
        "datetime.now().strftime",
        "type",
        "datetime.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_execution_service.py:handle_execution_failure"
    },
    {
      "type": "function",
      "name": "validate_execution_result",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_execution_service.py",
      "line_number": 227,
      "complexity": 1,
      "docstring": "\u9a8c\u8bc1\u6267\u884c\u7ed3\u679c\n\nArgs:\n    rule: \u6267\u884c\u7684\u89c4\u5219\n    result: \u6267\u884c\u7ed3\u679c\n    \nReturns:\n    bool: \u662f\u5426\u6709\u6548",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule",
        "result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.warning",
        "rule.expected_outcome.strip",
        "self._validate_natural_language_result",
        "logger.error",
        "result.message.strip"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_execution_service.py:validate_execution_result"
    },
    {
      "type": "function",
      "name": "_execute_natural_language_action",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_execution_service.py",
      "line_number": 266,
      "complexity": 1,
      "docstring": "\u6267\u884c\u81ea\u7136\u8bed\u8a00\u52a8\u4f5c\u6307\u4ee4\n\nArgs:\n    action: \u81ea\u7136\u8bed\u8a00\u52a8\u4f5c\u63cf\u8ff0\n    agent_name: \u667a\u80fd\u4f53\u540d\u79f0\n    context: \u6267\u884c\u4e0a\u4e0b\u6587\n    \nReturns:\n    WorkflowResult: \u6267\u884c\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "action",
        "agent_name",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._prepare_natural_language_instruction",
        "self.agent_service.execute_natural_language_instruction",
        "logger.error",
        "WorkflowResult",
        "str",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_execution_service.py:_execute_natural_language_action"
    },
    {
      "type": "function",
      "name": "_prepare_natural_language_instruction",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_execution_service.py",
      "line_number": 303,
      "complexity": 1,
      "docstring": "\u51c6\u5907\u81ea\u7136\u8bed\u8a00\u6307\u4ee4\n\nArgs:\n    action: \u539f\u59cb\u52a8\u4f5c\u63cf\u8ff0\n    context: \u6267\u884c\u4e0a\u4e0b\u6587\n    \nReturns:\n    str: \u589e\u5f3a\u540e\u7684\u81ea\u7136\u8bed\u8a00\u6307\u4ee4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "action",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "context.get('state_info', {}).get",
        "context.get",
        "context.get",
        "context.get",
        "enumerate",
        "logger.error",
        "context.get",
        "rule_info.get",
        "rule_info.get",
        "rule_info.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_execution_service.py:_prepare_natural_language_instruction"
    },
    {
      "type": "function",
      "name": "_validate_natural_language_result",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_execution_service.py",
      "line_number": 357,
      "complexity": 1,
      "docstring": "\u9a8c\u8bc1\u81ea\u7136\u8bed\u8a00\u6267\u884c\u7ed3\u679c\uff08\u4f7f\u7528\u8bed\u8a00\u6a21\u578b\u8fdb\u884c\u667a\u80fd\u9a8c\u8bc1\uff09\n\nArgs:\n    action: \u6267\u884c\u7684\u52a8\u4f5c\n    result: \u6267\u884c\u7ed3\u679c\n    expected_outcome: \u671f\u671b\u7ed3\u679c\n    \nReturns:\n    bool: \u662f\u5426\u7b26\u5408\u671f\u671b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "action",
        "result",
        "expected_outcome"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.llm_service.validate_execution_result",
        "logger.debug",
        "logger.warning",
        "self._fallback_keyword_validation",
        "logger.error",
        "self._fallback_keyword_validation"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_execution_service.py:_validate_natural_language_result"
    },
    {
      "type": "function",
      "name": "_fallback_keyword_validation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_execution_service.py",
      "line_number": 395,
      "complexity": 1,
      "docstring": "\u5907\u7528\u7684\u5173\u952e\u8bcd\u5339\u914d\u9a8c\u8bc1\u65b9\u6cd5\n\nArgs:\n    result_text: \u7ed3\u679c\u6587\u672c\n    expected_outcome: \u671f\u671b\u7ed3\u679c\n    \nReturns:\n    bool: \u662f\u5426\u5339\u914d",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "result_text",
        "expected_outcome"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "result_text.lower",
        "expected_outcome.lower().split",
        "sum",
        "len",
        "logger.error",
        "expected_outcome.lower",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_execution_service.py:_fallback_keyword_validation"
    },
    {
      "type": "function",
      "name": "_calculate_confidence_score",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_execution_service.py",
      "line_number": 425,
      "complexity": 1,
      "docstring": "\u8ba1\u7b97\u6267\u884c\u7f6e\u4fe1\u5ea6\u5206\u6570\n\nArgs:\n    rule: \u6267\u884c\u7684\u89c4\u5219\n    result: \u6267\u884c\u7ed3\u679c\n    global_state: \u5168\u5c40\u72b6\u6001\n    \nReturns:\n    float: \u7f6e\u4fe1\u5ea6\u5206\u6570\uff080.0-1.0\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule",
        "result",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._check_context_consistency",
        "min",
        "self._validate_natural_language_result",
        "logger.error",
        "len",
        "len",
        "result.message.strip"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_execution_service.py:_calculate_confidence_score"
    },
    {
      "type": "function",
      "name": "_check_context_consistency",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_execution_service.py",
      "line_number": 479,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u4e0a\u4e0b\u6587\u4e00\u81f4\u6027\n\nArgs:\n    result: \u6267\u884c\u7ed3\u679c\n    global_state: \u5168\u5c40\u72b6\u6001\n    \nReturns:\n    bool: \u662f\u5426\u4e00\u81f4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "result",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "result.metadata.items",
        "logger.error",
        "key.startswith",
        "global_state.context_variables.get",
        "str",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_execution_service.py:_check_context_consistency"
    },
    {
      "type": "function",
      "name": "get_execution_statistics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_execution_service.py",
      "line_number": 506,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6267\u884c\u7edf\u8ba1\u4fe1\u606f\n\nArgs:\n    rule_id: \u53ef\u9009\u7684\u89c4\u5219ID\uff0c\u5982\u679c\u63d0\u4f9b\u5219\u8fd4\u56de\u7279\u5b9a\u89c4\u5219\u7684\u7edf\u8ba1\n    \nReturns:\n    Dict[str, Any]: \u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.execution_repository.get_execution_statistics",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_execution_service.py:get_execution_statistics"
    },
    {
      "type": "function",
      "name": "get_recent_executions",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_execution_service.py",
      "line_number": 528,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6700\u8fd1\u7684\u6267\u884c\u8bb0\u5f55\n\nArgs:\n    limit: \u8fd4\u56de\u7684\u8bb0\u5f55\u6570\u91cf\u9650\u5236\n    \nReturns:\n    List[RuleExecution]: \u6700\u8fd1\u7684\u6267\u884c\u8bb0\u5f55",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "limit"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.execution_repository.get_recent_executions",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_execution_service.py:get_recent_executions"
    },
    {
      "type": "function",
      "name": "retry_failed_execution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_execution_service.py",
      "line_number": 544,
      "complexity": 1,
      "docstring": "\u91cd\u8bd5\u5931\u8d25\u7684\u6267\u884c\n\nArgs:\n    execution_id: \u5931\u8d25\u7684\u6267\u884cID\n    \nReturns:\n    Optional[RuleExecution]: \u91cd\u8bd5\u7684\u6267\u884c\u7ed3\u679c\uff0c\u5982\u679c\u91cd\u8bd5\u5931\u8d25\u5219\u8fd4\u56deNone",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "execution_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.execution_repository.load_execution",
        "logger.info",
        "logger.warning",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_execution_service.py:retry_failed_execution"
    },
    {
      "type": "class",
      "name": "RuleEngineService",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_engine_service.py",
      "line_number": 34,
      "complexity": 1,
      "docstring": "\u6838\u5fc3\u89c4\u5219\u5f15\u64ce\u670d\u52a1 - \u6574\u4e2a\u4ea7\u751f\u5f0f\u89c4\u5219\u7cfb\u7edf\u7684\u534f\u8c03\u8005",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "execute_workflow",
        "handle_rule_failure",
        "manage_rule_lifecycle",
        "get_workflow_status",
        "pause_workflow",
        "resume_workflow",
        "_generate_new_rules_for_situation",
        "_calculate_execution_metrics",
        "_cleanup_invalid_rules",
        "get_rule_set",
        "add_rule_to_current_set",
        "_should_generate_new_rule",
        "_apply_adaptive_replacement",
        "_conservative_rule_merge"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_engine_service.py:RuleEngineService"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_engine_service.py",
      "line_number": 37,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u89c4\u5219\u5f15\u64ce\u670d\u52a1\n\nArgs:\n    rule_repository: \u89c4\u5219\u4ed3\u50a8\n    state_repository: \u72b6\u6001\u4ed3\u50a8\n    execution_repository: \u6267\u884c\u4ed3\u50a8\n    rule_execution: \u89c4\u5219\u6267\u884c\u670d\u52a1\n    rule_generation: \u89c4\u5219\u751f\u6210\u670d\u52a1\n    state_service: \u72b6\u6001\u670d\u52a1\n    enable_auto_recovery: \u662f\u5426\u542f\u7528\u81ea\u52a8\u6062\u590d\n    max_iterations: \u6700\u5927\u8fed\u4ee3\u6b21\u6570\n    enable_adaptive_replacement: \u662f\u5426\u542f\u7528\u81ea\u9002\u5e94\u89c4\u5219\u66ff\u6362",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule_repository",
        "state_repository",
        "execution_repository",
        "rule_execution",
        "rule_generation",
        "state_service",
        "enable_auto_recovery",
        "max_iterations",
        "enable_adaptive_replacement",
        "resource_manager"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "AdaptiveReplacementService"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_engine_service.py:__init__"
    },
    {
      "type": "function",
      "name": "execute_workflow",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_engine_service.py",
      "line_number": 87,
      "complexity": 1,
      "docstring": "\u6267\u884c\u5b8c\u6574\u7684\u5de5\u4f5c\u6d41\u7a0b\n\nArgs:\n    goal: \u5de5\u4f5c\u6d41\u76ee\u6807\n    agent_registry: \u667a\u80fd\u4f53\u6ce8\u518c\u8868\n    \nReturns:\n    WorkflowExecutionResult: \u5de5\u4f5c\u6d41\u6267\u884c\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "goal",
        "agent_registry"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "id_generator.generate_workflow_id",
        "logger.info",
        "datetime.now",
        "logger.info",
        "self.rule_generation.generate_rule_set",
        "self.rule_repository.save_rule_set",
        "self.state_service.create_initial_state",
        "datetime.now",
        "self._calculate_execution_metrics",
        "WorkflowExecutionResult",
        "logger.info",
        "RuleSetExecution",
        "logger.info",
        "self.rule_generation.make_decision",
        "decision_history.append",
        "self._current_rule_set_execution.mark_completed",
        "id_generator.release_workflow_id",
        "logger.debug",
        "logger.error",
        "datetime.now",
        "ExecutionMetrics",
        "WorkflowExecutionResult",
        "len",
        "decision_history.pop",
        "len",
        "self.rule_execution.execute_rule",
        "self.state_service.update_state",
        "logger.info",
        "logger.warning",
        "len",
        "logger.warning",
        "logger.warning",
        "self._current_rule_set_execution.add_rule_execution",
        "self.handle_rule_failure",
        "(end_time - start_time).total_seconds",
        "getattr",
        "set",
        "rule_execution.is_successful",
        "self._apply_adaptive_replacement",
        "self.rule_repository.save_rule_set",
        "logger.info",
        "self._apply_adaptive_replacement",
        "self.rule_repository.save_rule_set",
        "logger.info",
        "logger.warning",
        "self.state_service.save_state",
        "logger.info",
        "logger.warning",
        "self.rule_generation.generate_strategy_adjustment_rules",
        "str",
        "str",
        "self._apply_adaptive_replacement",
        "self.rule_repository.save_rule_set",
        "logger.info",
        "len",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_engine_service.py:execute_workflow"
    },
    {
      "type": "function",
      "name": "handle_rule_failure",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_engine_service.py",
      "line_number": 307,
      "complexity": 1,
      "docstring": "\u5904\u7406\u89c4\u5219\u6267\u884c\u5931\u8d25\uff0c\u751f\u6210\u6062\u590d\u89c4\u5219\n\nArgs:\n    rule_execution: \u5931\u8d25\u7684\u89c4\u5219\u6267\u884c\n    global_state: \u5168\u5c40\u72b6\u6001\n    \nReturns:\n    List[ProductionRule]: \u6062\u590d\u89c4\u5219\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule_execution",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "self.rule_generation.generate_recovery_rules",
        "logger.info",
        "logger.error",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_engine_service.py:handle_rule_failure"
    },
    {
      "type": "function",
      "name": "manage_rule_lifecycle",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_engine_service.py",
      "line_number": 345,
      "complexity": 1,
      "docstring": "\u7ba1\u7406\u89c4\u5219\u751f\u547d\u5468\u671f\n\nArgs:\n    rule_set: \u89c4\u5219\u96c6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule_set"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.rule_generation.validate_rule_set",
        "self._cleanup_invalid_rules",
        "logger.warning",
        "len",
        "self.rule_generation.optimize_rule_priorities",
        "self.rule_repository.save_rule_set",
        "logger.info",
        "logger.error",
        "', '.join"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_engine_service.py:manage_rule_lifecycle"
    },
    {
      "type": "function",
      "name": "get_workflow_status",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_engine_service.py",
      "line_number": 371,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u5de5\u4f5c\u6d41\u72b6\u6001\n\nReturns:\n    Dict[str, Any]: \u5de5\u4f5c\u6d41\u72b6\u6001\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.state_service.get_current_state",
        "logger.error",
        "len",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_engine_service.py:get_workflow_status"
    },
    {
      "type": "function",
      "name": "pause_workflow",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_engine_service.py",
      "line_number": 400,
      "complexity": 1,
      "docstring": "\u6682\u505c\u5de5\u4f5c\u6d41\n\nReturns:\n    bool: \u662f\u5426\u6210\u529f\u6682\u505c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.state_service.get_current_state",
        "logger.info",
        "self.state_service.save_state",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_engine_service.py:pause_workflow"
    },
    {
      "type": "function",
      "name": "resume_workflow",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_engine_service.py",
      "line_number": 421,
      "complexity": 1,
      "docstring": "\u6062\u590d\u5de5\u4f5c\u6d41\n\nReturns:\n    bool: \u662f\u5426\u6210\u529f\u6062\u590d",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.state_service.get_current_state",
        "logger.info",
        "current_state.context_variables.pop",
        "self.state_service.save_state",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_engine_service.py:resume_workflow"
    },
    {
      "type": "function",
      "name": "_generate_new_rules_for_situation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_engine_service.py",
      "line_number": 442,
      "complexity": 1,
      "docstring": "\u4e3a\u5f53\u524d\u60c5\u51b5\u751f\u6210\u65b0\u89c4\u5219\n\nArgs:\n    global_state: \u5168\u5c40\u72b6\u6001\n    goal: \u76ee\u6807\n    \nReturns:\n    List[ProductionRule]: \u65b0\u751f\u6210\u7684\u89c4\u5219\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "global_state",
        "goal"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.rule_generation.generate_strategy_adjustment_rules",
        "self.rule_generation.generate_recovery_rules",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_engine_service.py:_generate_new_rules_for_situation"
    },
    {
      "type": "function",
      "name": "_calculate_execution_metrics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_engine_service.py",
      "line_number": 477,
      "complexity": 1,
      "docstring": "\u8ba1\u7b97\u6267\u884c\u6307\u6807\n\nArgs:\n    workflow_id: \u5de5\u4f5c\u6d41ID\n    \nReturns:\n    ExecutionMetrics: \u6267\u884c\u6307\u6807",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "workflow_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.rule_execution.get_execution_statistics",
        "ExecutionMetrics",
        "logger.error",
        "ExecutionMetrics",
        "stats.get",
        "stats.get",
        "stats.get",
        "stats.get",
        "stats.get",
        "stats.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_engine_service.py:_calculate_execution_metrics"
    },
    {
      "type": "function",
      "name": "_cleanup_invalid_rules",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_engine_service.py",
      "line_number": 511,
      "complexity": 1,
      "docstring": "\u6e05\u7406\u65e0\u6548\u89c4\u5219\n\nArgs:\n    rule_set: \u89c4\u5219\u96c6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule_set"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "len",
        "logger.info",
        "self.rule_repository.save_rule_set",
        "logger.error",
        "rule.condition.strip",
        "rule.action.strip",
        "rule.agent_name.strip",
        "valid_rules.append",
        "logger.warning"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_engine_service.py:_cleanup_invalid_rules"
    },
    {
      "type": "function",
      "name": "get_rule_set",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_engine_service.py",
      "line_number": 541,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u5f53\u524d\u89c4\u5219\u96c6\n\nReturns:\n    Optional[RuleSet]: \u5f53\u524d\u89c4\u5219\u96c6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_engine_service.py:get_rule_set"
    },
    {
      "type": "function",
      "name": "add_rule_to_current_set",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_engine_service.py",
      "line_number": 550,
      "complexity": 1,
      "docstring": "\u5411\u5f53\u524d\u89c4\u5219\u96c6\u6dfb\u52a0\u89c4\u5219\n\nArgs:\n    rule: \u8981\u6dfb\u52a0\u7684\u89c4\u5219\n    \nReturns:\n    bool: \u662f\u5426\u6210\u529f\u6dfb\u52a0",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._current_rule_set.add_rule",
        "self.rule_repository.save_rule_set",
        "logger.info",
        "logger.warning",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_engine_service.py:add_rule_to_current_set"
    },
    {
      "type": "function",
      "name": "_should_generate_new_rule",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_engine_service.py",
      "line_number": 575,
      "complexity": 1,
      "docstring": "\u5224\u65ad\u662f\u5426\u5e94\u8be5\u751f\u6210\u65b0\u89c4\u5219\n\nArgs:\n    global_state: \u5f53\u524d\u5168\u5c40\u72b6\u6001\n    rule_set: \u89c4\u5219\u96c6\n    \nReturns:\n    bool: \u662f\u5426\u5e94\u8be5\u751f\u6210\u65b0\u89c4\u5219",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "global_state",
        "rule_set"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "global_state.context_variables.get",
        "self.rule_generation.llm_service.generate_natural_language_response",
        "logger.warning",
        "response.strip",
        "logger.info",
        "logger.error",
        "len",
        "chr(10).join",
        "chr"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_engine_service.py:_should_generate_new_rule"
    },
    {
      "type": "function",
      "name": "_apply_adaptive_replacement",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_engine_service.py",
      "line_number": 636,
      "complexity": 1,
      "docstring": "\u5e94\u7528\u81ea\u9002\u5e94\u89c4\u5219\u66ff\u6362\u7b56\u7565\n\nArgs:\n    existing_rules: \u73b0\u6709\u89c4\u5219\u5217\u8868\n    new_rules: \u65b0\u89c4\u5219\u5217\u8868\n    global_state: \u5f53\u524d\u5168\u5c40\u72b6\u6001\n    context: \u6267\u884c\u4e0a\u4e0b\u6587\n    \nReturns:\n    List[ProductionRule]: \u4f18\u5316\u540e\u7684\u89c4\u5219\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "existing_rules",
        "new_rules",
        "global_state",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "self.adaptive_replacement.execute_adaptive_replacement",
        "logger.info",
        "logger.debug",
        "self._conservative_rule_merge",
        "logger.error",
        "self._conservative_rule_merge",
        "context.get",
        "len",
        "len",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_engine_service.py:_apply_adaptive_replacement"
    },
    {
      "type": "function",
      "name": "_conservative_rule_merge",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_engine_service.py",
      "line_number": 677,
      "complexity": 1,
      "docstring": "\u4fdd\u5b88\u7684\u89c4\u5219\u5408\u5e76\u7b56\u7565\uff08\u81ea\u9002\u5e94\u66ff\u6362\u5931\u8d25\u65f6\u7684\u540e\u5907\u65b9\u6848\uff09\n\nArgs:\n    existing_rules: \u73b0\u6709\u89c4\u5219\n    new_rules: \u65b0\u89c4\u5219\n    \nReturns:\n    List[ProductionRule]: \u5408\u5e76\u540e\u7684\u89c4\u5219\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "existing_rules",
        "new_rules"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "set",
        "len",
        "unique_rules.sort",
        "logger.warning",
        "unique_rules.append",
        "seen_ids.add"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_engine_service.py:_conservative_rule_merge"
    },
    {
      "type": "class",
      "name": "AllocationStrategy",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/resource_manager.py",
      "line_number": 25,
      "complexity": 1,
      "docstring": "\u5206\u914d\u7b56\u7565\u534f\u8bae",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "allocate_agent"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Protocol"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/resource_manager.py:AllocationStrategy"
    },
    {
      "type": "class",
      "name": "AllocationResult",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/resource_manager.py",
      "line_number": 39,
      "complexity": 1,
      "docstring": "\u5206\u914d\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/resource_manager.py:AllocationResult"
    },
    {
      "type": "class",
      "name": "LLMAllocationStrategy",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/resource_manager.py",
      "line_number": 46,
      "complexity": 1,
      "docstring": "\u57fa\u4e8e\u8bed\u8a00\u6a21\u578b\u7684\u667a\u80fd\u5206\u914d\u7b56\u7565",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "allocate_agent",
        "_prepare_agent_info",
        "_build_allocation_prompt",
        "_parse_allocation_response"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/resource_manager.py:LLMAllocationStrategy"
    },
    {
      "type": "class",
      "name": "ResourceManager",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/resource_manager.py",
      "line_number": 168,
      "complexity": 1,
      "docstring": "\u8d44\u6e90\u7ba1\u7406\u5668 - \u8d1f\u8d23\u667a\u80fd\u4f53\u7684\u52a8\u6001\u5206\u914d\u548c\u7ba1\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "allocate_agent_for_rule",
        "create_rule_execution",
        "_fallback_allocation",
        "get_agent_workload",
        "optimize_allocation"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/resource_manager.py:ResourceManager"
    },
    {
      "type": "function",
      "name": "allocate_agent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/resource_manager.py",
      "line_number": 52,
      "complexity": 1,
      "docstring": "\u4f7f\u7528\u8bed\u8a00\u6a21\u578b\u4e3a\u89c4\u5219\u5206\u914d\u6700\u5408\u9002\u7684\u667a\u80fd\u4f53",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule",
        "available_agents",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._prepare_agent_info",
        "self._build_allocation_prompt",
        "self.llm_service.invoke",
        "self._parse_allocation_response",
        "logger.info",
        "logger.warning",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/resource_manager.py:allocate_agent"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/resource_manager.py",
      "line_number": 171,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "agent_registry",
        "llm_service",
        "allocation_strategy"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "LLMAllocationStrategy"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/resource_manager.py:__init__"
    },
    {
      "type": "function",
      "name": "_prepare_agent_info",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/resource_manager.py",
      "line_number": 87,
      "complexity": 1,
      "docstring": "\u51c6\u5907\u667a\u80fd\u4f53\u4fe1\u606f\u63cf\u8ff0",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "available_agents"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "available_agents.items",
        "'\\n'.join",
        "getattr",
        "agent_descriptions.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/resource_manager.py:_prepare_agent_info"
    },
    {
      "type": "function",
      "name": "_build_allocation_prompt",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/resource_manager.py",
      "line_number": 98,
      "complexity": 1,
      "docstring": "\u6784\u5efa\u667a\u80fd\u4f53\u5206\u914d\u63d0\u793a\u8bcd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule",
        "agent_info",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "context.get",
        "context.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/resource_manager.py:_build_allocation_prompt"
    },
    {
      "type": "function",
      "name": "_parse_allocation_response",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/resource_manager.py",
      "line_number": 146,
      "complexity": 1,
      "docstring": "\u89e3\u6790\u8bed\u8a00\u6a21\u578b\u7684\u5206\u914d\u54cd\u5e94",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "response"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "response.find",
        "response.rfind",
        "json.loads",
        "AllocationResult",
        "logger.error",
        "data.get",
        "float",
        "data.get",
        "data.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/resource_manager.py:_parse_allocation_response"
    },
    {
      "type": "function",
      "name": "allocate_agent_for_rule",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/resource_manager.py",
      "line_number": 181,
      "complexity": 1,
      "docstring": "\u4e3a\u89c4\u5219\u5206\u914d\u667a\u80fd\u4f53",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule",
        "rule_set_execution"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.allocation_strategy.allocate_agent",
        "logger.error",
        "rule_set_execution.context.get",
        "self._fallback_allocation"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/resource_manager.py:allocate_agent_for_rule"
    },
    {
      "type": "function",
      "name": "create_rule_execution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/resource_manager.py",
      "line_number": 214,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u89c4\u5219\u6267\u884c\u5b9e\u4f8b\uff0c\u5305\u542b\u667a\u80fd\u4f53\u5206\u914d",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule",
        "rule_set_execution"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.allocate_agent_for_rule",
        "RuleExecution",
        "ValueError"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/resource_manager.py:create_rule_execution"
    },
    {
      "type": "function",
      "name": "_fallback_allocation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/resource_manager.py",
      "line_number": 243,
      "complexity": 1,
      "docstring": "\u540e\u5907\u5206\u914d\u65b9\u6848 - \u57fa\u4e8e\u7b80\u5355\u7684\u5173\u952e\u8bcd\u5339\u914d",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule",
        "available_agents"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "rule.action.lower",
        "keyword_mapping.items",
        "next",
        "logger.warning",
        "hasattr",
        "iter",
        "logger.info",
        "logger.info",
        "available_agents.keys"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/resource_manager.py:_fallback_allocation"
    },
    {
      "type": "function",
      "name": "get_agent_workload",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/resource_manager.py",
      "line_number": 283,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u667a\u80fd\u4f53\u7684\u5de5\u4f5c\u8d1f\u8f7d\u7edf\u8ba1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/resource_manager.py:get_agent_workload"
    },
    {
      "type": "function",
      "name": "optimize_allocation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/resource_manager.py",
      "line_number": 288,
      "complexity": 1,
      "docstring": "\u57fa\u4e8e\u6267\u884c\u5386\u53f2\u4f18\u5316\u5206\u914d\u7b56\u7565",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "execution_history"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/resource_manager.py:optimize_allocation"
    },
    {
      "type": "class",
      "name": "LanguageModelService",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/language_model_service.py",
      "line_number": 20,
      "complexity": 1,
      "docstring": "\u8bed\u8a00\u6a21\u578b\u670d\u52a1 - \u7edf\u4e00\u7684LLM\u670d\u52a1\u62bd\u8c61",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "semantic_match",
        "generate_natural_language_response",
        "evaluate_semantic_similarity",
        "explain_reasoning",
        "classify_text",
        "extract_key_information",
        "evaluate_goal_achievement",
        "validate_execution_result",
        "invoke",
        "_call_llm",
        "_parse_json_response",
        "_format_context"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/language_model_service.py:LanguageModelService"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/language_model_service.py",
      "line_number": 23,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u8bed\u8a00\u6a21\u578b\u670d\u52a1\n\nArgs:\n    primary_llm: \u4e3b\u8981\u7684\u8bed\u8a00\u6a21\u578b\n    fallback_llm: \u5907\u7528\u7684\u8bed\u8a00\u6a21\u578b\uff08\u53ef\u9009\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "primary_llm",
        "fallback_llm"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/language_model_service.py:__init__"
    },
    {
      "type": "function",
      "name": "semantic_match",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/language_model_service.py",
      "line_number": 36,
      "complexity": 1,
      "docstring": "\u8bed\u4e49\u5339\u914d\uff1a\u5224\u65ad\u6761\u4ef6\u662f\u5426\u4e0e\u72b6\u6001\u63cf\u8ff0\u5339\u914d\n\nArgs:\n    condition: \u89c4\u5219\u6761\u4ef6\uff08\u81ea\u7136\u8bed\u8a00\uff09\n    state_description: \u5f53\u524d\u72b6\u6001\u63cf\u8ff0\uff08\u81ea\u7136\u8bed\u8a00\uff09\n    \nReturns:\n    MatchingResult: \u5339\u914d\u7ed3\u679c\uff0c\u5305\u542b\u662f\u5426\u5339\u914d\u3001\u7f6e\u4fe1\u5ea6\u3001\u63a8\u7406\u7b49",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "condition",
        "state_description"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._call_llm",
        "self._parse_json_response",
        "MatchingResult",
        "logger.error",
        "MatchingResult",
        "result_data.get",
        "float",
        "result_data.get",
        "float",
        "result_data.get",
        "result_data.get",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/language_model_service.py:semantic_match"
    },
    {
      "type": "function",
      "name": "generate_natural_language_response",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/language_model_service.py",
      "line_number": 90,
      "complexity": 1,
      "docstring": "\u751f\u6210\u81ea\u7136\u8bed\u8a00\u54cd\u5e94\n\nArgs:\n    prompt: \u8f93\u5165\u63d0\u793a\n    context: \u53ef\u9009\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\n    \nReturns:\n    str: \u751f\u6210\u7684\u81ea\u7136\u8bed\u8a00\u54cd\u5e94",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "prompt",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._call_llm",
        "self._format_context",
        "logger.error",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/language_model_service.py:generate_natural_language_response"
    },
    {
      "type": "function",
      "name": "evaluate_semantic_similarity",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/language_model_service.py",
      "line_number": 117,
      "complexity": 1,
      "docstring": "\u8bc4\u4f30\u4e24\u4e2a\u6587\u672c\u7684\u8bed\u4e49\u76f8\u4f3c\u5ea6\n\nArgs:\n    text1: \u7b2c\u4e00\u4e2a\u6587\u672c\n    text2: \u7b2c\u4e8c\u4e2a\u6587\u672c\n    \nReturns:\n    float: \u76f8\u4f3c\u5ea6\u5206\u6570\uff080.0-1.0\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "text1",
        "text2"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._call_llm",
        "re.findall",
        "float",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/language_model_service.py:evaluate_semantic_similarity"
    },
    {
      "type": "function",
      "name": "explain_reasoning",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/language_model_service.py",
      "line_number": 158,
      "complexity": 1,
      "docstring": "\u89e3\u91ca\u63a8\u7406\u8fc7\u7a0b\n\nArgs:\n    decision_context: \u51b3\u7b56\u4e0a\u4e0b\u6587\n    \nReturns:\n    str: \u63a8\u7406\u89e3\u91ca",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "decision_context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._call_llm",
        "logger.error",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/language_model_service.py:explain_reasoning"
    },
    {
      "type": "function",
      "name": "classify_text",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/language_model_service.py",
      "line_number": 190,
      "complexity": 1,
      "docstring": "\u6587\u672c\u5206\u7c7b\n\nArgs:\n    text: \u8981\u5206\u7c7b\u7684\u6587\u672c\n    categories: \u5206\u7c7b\u7c7b\u522b\u5217\u8868\n    \nReturns:\n    Tuple[str, float]: (\u5206\u7c7b\u7ed3\u679c, \u7f6e\u4fe1\u5ea6)",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "text",
        "categories"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "'\u3001'.join",
        "self._call_llm",
        "response.strip().split",
        "line.startswith",
        "logger.error",
        "response.strip",
        "line.split(':', 1)[1].strip",
        "line.startswith",
        "float",
        "line.split",
        "line.split(':', 1)[1].strip",
        "line.split"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/language_model_service.py:classify_text"
    },
    {
      "type": "function",
      "name": "extract_key_information",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/language_model_service.py",
      "line_number": 239,
      "complexity": 1,
      "docstring": "\u63d0\u53d6\u5173\u952e\u4fe1\u606f\n\nArgs:\n    text: \u8f93\u5165\u6587\u672c\n    schema: \u63d0\u53d6\u6a21\u5f0f\uff0c\u683c\u5f0f\u4e3a {\u5b57\u6bb5\u540d: \u5b57\u6bb5\u63cf\u8ff0}\n    \nReturns:\n    Dict[str, Any]: \u63d0\u53d6\u7684\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "text",
        "schema"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "schema.items",
        "self._call_llm",
        "self._parse_json_response",
        "schema.keys",
        "extracted_data.get",
        "logger.error",
        "schema.keys"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/language_model_service.py:extract_key_information"
    },
    {
      "type": "function",
      "name": "evaluate_goal_achievement",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/language_model_service.py",
      "line_number": 286,
      "complexity": 1,
      "docstring": "\u8bc4\u4f30\u76ee\u6807\u662f\u5426\u8fbe\u6210\n\nArgs:\n    goal: \u76ee\u6807\u63cf\u8ff0\n    current_state: \u5f53\u524d\u72b6\u6001\u63cf\u8ff0\n    \nReturns:\n    Tuple[bool, float, str]: (\u662f\u5426\u8fbe\u6210, \u7f6e\u4fe1\u5ea6, \u5206\u6790\u8bf4\u660e)",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "goal",
        "current_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._call_llm",
        "self._parse_json_response",
        "result_data.get",
        "float",
        "result_data.get",
        "logger.error",
        "result_data.get",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/language_model_service.py:evaluate_goal_achievement"
    },
    {
      "type": "function",
      "name": "validate_execution_result",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/language_model_service.py",
      "line_number": 331,
      "complexity": 1,
      "docstring": "\u9a8c\u8bc1\u6267\u884c\u7ed3\u679c\u662f\u5426\u7b26\u5408\u671f\u671b\n\nArgs:\n    action: \u6267\u884c\u7684\u52a8\u4f5c\u63cf\u8ff0\n    actual_result: \u5b9e\u9645\u6267\u884c\u7ed3\u679c\n    expected_outcome: \u671f\u671b\u7684\u7ed3\u679c\n    \nReturns:\n    Tuple[bool, float, str]: (\u662f\u5426\u7b26\u5408\u671f\u671b, \u7f6e\u4fe1\u5ea6, \u9a8c\u8bc1\u8bf4\u660e)",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "action",
        "actual_result",
        "expected_outcome"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._call_llm",
        "self._parse_json_response",
        "result_data.get",
        "float",
        "result_data.get",
        "logger.error",
        "result_data.get",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/language_model_service.py:validate_execution_result"
    },
    {
      "type": "function",
      "name": "invoke",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/language_model_service.py",
      "line_number": 386,
      "complexity": 1,
      "docstring": "\u516c\u5171\u65b9\u6cd5\uff1a\u8c03\u7528\u8bed\u8a00\u6a21\u578b\n\nArgs:\n    prompt: \u8f93\u5165\u63d0\u793a\n    \nReturns:\n    str: \u6a21\u578b\u54cd\u5e94",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "prompt"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._call_llm"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/language_model_service.py:invoke"
    },
    {
      "type": "function",
      "name": "_call_llm",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/language_model_service.py",
      "line_number": 398,
      "complexity": 1,
      "docstring": "\u8c03\u7528\u8bed\u8a00\u6a21\u578b\n\nArgs:\n    prompt: \u8f93\u5165\u63d0\u793a\n    \nReturns:\n    str: \u6a21\u578b\u54cd\u5e94",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "prompt"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.primary_llm.invoke",
        "HumanMessage",
        "logger.warning",
        "Exception",
        "self.fallback_llm.invoke",
        "HumanMessage",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/language_model_service.py:_call_llm"
    },
    {
      "type": "function",
      "name": "_parse_json_response",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/language_model_service.py",
      "line_number": 428,
      "complexity": 1,
      "docstring": "\u89e3\u6790JSON\u54cd\u5e94\uff0c\u652f\u6301\u5bf9\u8c61\u548c\u6570\u7ec4\u683c\u5f0f\n\nArgs:\n    response: \u6a21\u578b\u54cd\u5e94\n    \nReturns:\n    Union[Dict[str, Any], List[Any]]: \u89e3\u6790\u540e\u7684JSON\u6570\u636e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "response"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "response.strip",
        "cleaned_response.startswith",
        "cleaned_response.endswith",
        "cleaned_response.strip",
        "cleaned_response.startswith",
        "json.loads",
        "logger.error",
        "re.search",
        "re.search",
        "json.loads",
        "json_object_match.group",
        "json_array_match.group",
        "json.loads",
        "json.loads"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/language_model_service.py:_parse_json_response"
    },
    {
      "type": "function",
      "name": "_format_context",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/language_model_service.py",
      "line_number": 483,
      "complexity": 1,
      "docstring": "\u683c\u5f0f\u5316\u4e0a\u4e0b\u6587\u4fe1\u606f\n\nArgs:\n    context: \u4e0a\u4e0b\u6587\u5b57\u5178\n    \nReturns:\n    str: \u683c\u5f0f\u5316\u540e\u7684\u4e0a\u4e0b\u6587\u5b57\u7b26\u4e32",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "context.items",
        "'\\n'.join",
        "isinstance",
        "formatted_items.append",
        "json.dumps",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/language_model_service.py:_format_context"
    },
    {
      "type": "class",
      "name": "SystemAgentProxy",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/agent_service.py",
      "line_number": 18,
      "complexity": 1,
      "docstring": "\u7cfb\u7edf\u4ee3\u7406\u667a\u80fd\u4f53 - \u7528\u4e8e\u5904\u7406\u7cfb\u7edf\u7ea7\u64cd\u4f5c\u548c\u9519\u8bef\u6062\u590d",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "execute_sync"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/agent_service.py:SystemAgentProxy"
    },
    {
      "type": "class",
      "name": "AgentService",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/agent_service.py",
      "line_number": 68,
      "complexity": 1,
      "docstring": "\u667a\u80fd\u4f53\u670d\u52a1 - \u7ba1\u7406\u667a\u80fd\u4f53\u751f\u547d\u5468\u671f\u548c\u80fd\u529b\u5339\u914d",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "get_or_create_agent",
        "execute_natural_language_instruction",
        "validate_agent_capability",
        "manage_agent_lifecycle",
        "get_agent_performance_metrics",
        "scale_agent_pool",
        "list_available_agents",
        "register_agent_instance",
        "_prepare_execution_context",
        "_convert_to_result",
        "_update_performance_metrics",
        "_apply_context_filtering",
        "_should_apply_filtering",
        "get_context_filtering_stats"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/agent_service.py:AgentService"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/agent_service.py",
      "line_number": 71,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u667a\u80fd\u4f53\u670d\u52a1\n\nArgs:\n    agent_registry: \u667a\u80fd\u4f53\u6ce8\u518c\u8868\n    agent_instances: \u9884\u521b\u5efa\u7684Agent\u5b9e\u4f8b\u5b57\u5178 {capability_id: agent_instance}\n    task_translator: \u4efb\u52a1\u7ffb\u8bd1\u5668\uff0c\u7528\u4e8e\u89e3\u51b3\u4e0a\u4e0b\u6587\u6c61\u67d3\u95ee\u9898\n    enable_context_filtering: \u662f\u5426\u542f\u7528\u4e0a\u4e0b\u6587\u8fc7\u6ee4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "agent_registry",
        "agent_instances",
        "task_translator",
        "enable_context_filtering"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/agent_service.py:__init__"
    },
    {
      "type": "function",
      "name": "execute_sync",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/agent_service.py",
      "line_number": 24,
      "complexity": 1,
      "docstring": "\u6267\u884c\u540c\u6b65\u6307\u4ee4\n\nArgs:\n    instruction: \u8981\u6267\u884c\u7684\u6307\u4ee4\n    \nReturns:\n    \u6267\u884c\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "WorkflowResult",
        "instruction.lower",
        "WorkflowResult",
        "instruction.lower",
        "WorkflowResult",
        "WorkflowResult",
        "instruction.lower"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/agent_service.py:execute_sync"
    },
    {
      "type": "function",
      "name": "get_or_create_agent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/agent_service.py",
      "line_number": 101,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6216\u521b\u5efa\u667a\u80fd\u4f53\u5b9e\u4f8b\n\nArgs:\n    agent_name: \u667a\u80fd\u4f53\u540d\u79f0\n    \nReturns:\n    \u667a\u80fd\u4f53\u5b9e\u4f8b\n    \nRaises:\n    ValueError: \u5982\u679c\u667a\u80fd\u4f53\u540d\u79f0\u4e0d\u5b58\u5728\u6216\u521b\u5efa\u5931\u8d25",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "agent_name"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "list",
        "logger.debug",
        "self.agent_registry.get_agent",
        "logger.debug",
        "self.agent_registry.agents.keys",
        "list",
        "logger.error",
        "logger.error",
        "ValueError",
        "self.agent_registry.agents.keys",
        "logger.warning",
        "available_name.lower",
        "agent_name.lower",
        "logger.warning",
        "self.agent_registry.get_agent",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/agent_service.py:get_or_create_agent"
    },
    {
      "type": "function",
      "name": "execute_natural_language_instruction",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/agent_service.py",
      "line_number": 152,
      "complexity": 1,
      "docstring": "\u6267\u884c\u81ea\u7136\u8bed\u8a00\u6307\u4ee4\n\nArgs:\n    instruction: \u81ea\u7136\u8bed\u8a00\u6307\u4ee4\n    agent_name: \u667a\u80fd\u4f53\u540d\u79f0\n    context: \u6267\u884c\u4e0a\u4e0b\u6587\n    \nReturns:\n    WorkflowResult: \u6267\u884c\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction",
        "agent_name",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "datetime.now",
        "self._apply_context_filtering",
        "self.get_or_create_agent",
        "self._prepare_execution_context",
        "logger.info",
        "hasattr",
        "(datetime.now() - start_time).total_seconds",
        "self._update_performance_metrics",
        "logger.info",
        "logger.debug",
        "agent.execute_instruction_syn",
        "self._convert_to_result",
        "hasattr",
        "(datetime.now() - start_time).total_seconds",
        "self._update_performance_metrics",
        "logger.error",
        "WorkflowResult",
        "logger.debug",
        "agent.execute_sync",
        "self._convert_to_result",
        "ValueError",
        "datetime.now",
        "str",
        "datetime.now",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/agent_service.py:execute_natural_language_instruction"
    },
    {
      "type": "function",
      "name": "validate_agent_capability",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/agent_service.py",
      "line_number": 218,
      "complexity": 1,
      "docstring": "\u9a8c\u8bc1Agent\u80fd\u529b\uff08\u7b80\u5316\u7248\u672c\uff09\n\nArgs:\n    agent_name: \u667a\u80fd\u4f53\u540d\u79f0\n    required_capabilities: \u9700\u8981\u7684\u80fd\u529b\u5217\u8868\n    \nReturns:\n    bool: \u662f\u5426\u5177\u5907\u6240\u9700\u80fd\u529b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "agent_name",
        "required_capabilities"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.agent_registry.get_agent",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/agent_service.py:validate_agent_capability"
    },
    {
      "type": "function",
      "name": "manage_agent_lifecycle",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/agent_service.py",
      "line_number": 243,
      "complexity": 1,
      "docstring": "\u7ba1\u7406Agent\u751f\u547d\u5468\u671f\n\nArgs:\n    agent: Agent\u5b9e\u4f8b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "agent"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "hasattr",
        "hasattr",
        "agent.health_check",
        "logger.debug",
        "agent.cleanup_memory",
        "logger.debug",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/agent_service.py:manage_agent_lifecycle"
    },
    {
      "type": "function",
      "name": "get_agent_performance_metrics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/agent_service.py",
      "line_number": 267,
      "complexity": 1,
      "docstring": "\u83b7\u53d6Agent\u6027\u80fd\u6307\u6807\n\nArgs:\n    capability_id: \u667a\u80fd\u4f53\u80fd\u529bID\n    \nReturns:\n    Dict[str, Any]: \u6027\u80fd\u6307\u6807",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "capability_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.performance_metrics[capability_id].copy"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/agent_service.py:get_agent_performance_metrics"
    },
    {
      "type": "function",
      "name": "scale_agent_pool",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/agent_service.py",
      "line_number": 295,
      "complexity": 1,
      "docstring": "\u6269\u7f29\u5bb9Agent\u6c60\n\nArgs:\n    capability_id: \u667a\u80fd\u4f53\u80fd\u529bID\n    target_count: \u76ee\u6807\u5b9e\u4f8b\u6570\u91cf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "capability_id",
        "target_count"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/agent_service.py:scale_agent_pool"
    },
    {
      "type": "function",
      "name": "list_available_agents",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/agent_service.py",
      "line_number": 315,
      "complexity": 1,
      "docstring": "\u5217\u51fa\u6240\u6709\u53ef\u7528\u7684Agent\n\nReturns:\n    List[Dict[str, Any]]: Agent\u4fe1\u606f\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.agent_registry.list_all_capabilities",
        "agents_info.append",
        "self.get_agent_performance_metrics"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/agent_service.py:list_available_agents"
    },
    {
      "type": "function",
      "name": "register_agent_instance",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/agent_service.py",
      "line_number": 337,
      "complexity": 1,
      "docstring": "\u6ce8\u518cAgent\u5b9e\u4f8b\u5230\u7f13\u5b58\u6c60\n\nArgs:\n    capability_id: \u667a\u80fd\u4f53\u80fd\u529bID\n    agent_instance: Agent\u5b9e\u4f8b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "capability_id",
        "agent_instance"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/agent_service.py:register_agent_instance"
    },
    {
      "type": "function",
      "name": "_prepare_execution_context",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/agent_service.py",
      "line_number": 348,
      "complexity": 1,
      "docstring": "\u51c6\u5907\u6267\u884c\u4e0a\u4e0b\u6587\n\nArgs:\n    instruction: \u6307\u4ee4\u5185\u5bb9\n    context: \u539f\u59cb\u4e0a\u4e0b\u6587\n    agent_name: \u667a\u80fd\u4f53\u540d\u79f0\n    \nReturns:\n    Dict[str, Any]: \u51c6\u5907\u597d\u7684\u6267\u884c\u4e0a\u4e0b\u6587",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction",
        "context",
        "agent_name"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "context.copy",
        "self.agent_registry.get_agent",
        "getattr"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/agent_service.py:_prepare_execution_context"
    },
    {
      "type": "function",
      "name": "_convert_to_result",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/agent_service.py",
      "line_number": 386,
      "complexity": 1,
      "docstring": "\u5c06\u667a\u80fd\u4f53\u7684\u539f\u59cb\u6267\u884c\u7ed3\u679c\u8f6c\u6362\u4e3a\u6807\u51c6WorkflowResult\u683c\u5f0f\n\n\u8fd9\u4e2a\u65b9\u6cd5\u5904\u7406\u4e0d\u540c\u7c7b\u578b\u667a\u80fd\u4f53\u8fd4\u56de\u7684\u5404\u79cd\u7ed3\u679c\u683c\u5f0f\uff0c\u7edf\u4e00\u8f6c\u6362\u4e3a\n\u8ba4\u77e5\u5de5\u4f5c\u6d41\u7cfb\u7edf\u4f7f\u7528\u7684\u6807\u51c6WorkflowResult\u683c\u5f0f\u3002\u652f\u6301\u7684\u8f93\u5165\u7c7b\u578b\uff1a\n\n1. agent_base.WorkflowResult: \u5e26\u6709code, stdout, stderr\u7b49\u5c5e\u6027\n2. cognitive_workflow.WorkflowResult: \u5df2\u7ecf\u662f\u6807\u51c6\u683c\u5f0f\n3. \u5b57\u7b26\u4e32: \u7b80\u5355\u7684\u6587\u672c\u7ed3\u679c\n4. \u5b57\u5178: \u5305\u542bsuccess, message\u7b49\u5b57\u6bb5\u7684\u7ed3\u6784\u5316\u7ed3\u679c\n5. \u5176\u4ed6\u7c7b\u578b: \u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u5f62\u5f0f\n\nArgs:\n    raw_result: \u667a\u80fd\u4f53\u8fd4\u56de\u7684\u539f\u59cb\u6267\u884c\u7ed3\u679c\uff0c\u7c7b\u578b\u53ef\u53d8\n    instruction: \u539f\u59cb\u6267\u884c\u6307\u4ee4\uff0c\u7528\u4e8e\u9519\u8bef\u8ffd\u8e2a\u548c\u5143\u6570\u636e\n    \nReturns:\n    WorkflowResult: \u8ba4\u77e5\u5de5\u4f5c\u6d41\u7684\u6807\u51c6\u7ed3\u679c\u683c\u5f0f\uff0c\u5305\u542b\uff1a\n        - success: \u6267\u884c\u662f\u5426\u6210\u529f\n        - message: \u7ed3\u679c\u6d88\u606f\n        - data: \u7ed3\u6784\u5316\u6570\u636e\u5185\u5bb9\n        - error_details: \u9519\u8bef\u8be6\u60c5\uff08\u5982\u679c\u6709\uff09\n        - metadata: \u8f6c\u6362\u76f8\u5173\u7684\u5143\u6570\u636e\n\nRaises:\n    Exception: \u5f53\u7ed3\u679c\u8f6c\u6362\u8fc7\u7a0b\u4e2d\u53d1\u751f\u4e0d\u53ef\u6062\u590d\u7684\u9519\u8bef\u65f6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "raw_result",
        "instruction"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "isinstance",
        "isinstance",
        "isinstance",
        "WorkflowResult",
        "hasattr",
        "hasattr",
        "hasattr",
        "hasattr",
        "hasattr",
        "logger.debug",
        "WorkflowResult",
        "logger.debug",
        "hasattr",
        "hasattr",
        "hasattr",
        "hasattr",
        "logger.debug",
        "WorkflowResult",
        "WorkflowResult",
        "raw_result.get",
        "raw_result.get",
        "raw_result.get",
        "raw_result.get",
        "WorkflowResult",
        "logger.error",
        "WorkflowResult",
        "message_parts.append",
        "message_parts.append",
        "' | '.join",
        "getattr",
        "str",
        "str",
        "bool",
        "bool",
        "type"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/agent_service.py:_convert_to_result"
    },
    {
      "type": "function",
      "name": "_update_performance_metrics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/agent_service.py",
      "line_number": 546,
      "complexity": 1,
      "docstring": "\u66f4\u65b0\u6027\u80fd\u6307\u6807\n\nArgs:\n    agent_name: \u667a\u80fd\u4f53\u540d\u79f0\n    success: \u6267\u884c\u662f\u5426\u6210\u529f\n    execution_time: \u6267\u884c\u65f6\u95f4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "agent_name",
        "success",
        "execution_time"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.debug"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/agent_service.py:_update_performance_metrics"
    },
    {
      "type": "function",
      "name": "_apply_context_filtering",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/agent_service.py",
      "line_number": 585,
      "complexity": 1,
      "docstring": "\u5e94\u7528\u4e0a\u4e0b\u6587\u8fc7\u6ee4\uff0c\u89e3\u51b3\u5c42\u6b21\u5316\u8ba4\u77e5\u67b6\u6784\u4e2d\u7684\u4e0a\u4e0b\u6587\u6c61\u67d3\u95ee\u9898\n\nArgs:\n    instruction: \u539f\u59cb\u6307\u4ee4\n    agent_name: \u667a\u80fd\u4f53\u540d\u79f0  \n    context: \u6267\u884c\u4e0a\u4e0b\u6587\n    \nReturns:\n    str: \u8fc7\u6ee4\u540e\u7684\u6307\u4ee4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction",
        "agent_name",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._should_apply_filtering",
        "datetime.now",
        "logger.debug",
        "self.task_translator.translate_task",
        "(datetime.now() - start_time).total_seconds",
        "logger.debug",
        "logger.debug",
        "logger.debug",
        "logger.debug",
        "logger.debug",
        "logger.debug",
        "logger.warning",
        "datetime.now",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/agent_service.py:_apply_context_filtering"
    },
    {
      "type": "function",
      "name": "_should_apply_filtering",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/agent_service.py",
      "line_number": 640,
      "complexity": 1,
      "docstring": "\u5224\u65ad\u662f\u5426\u5e94\u8be5\u5e94\u7528\u4e0a\u4e0b\u6587\u8fc7\u6ee4\n\nArgs:\n    instruction: \u6307\u4ee4\u5185\u5bb9\n    agent_name: \u667a\u80fd\u4f53\u540d\u79f0\n    context: \u6267\u884c\u4e0a\u4e0b\u6587\n    \nReturns:\n    bool: \u662f\u5426\u5e94\u8be5\u8fc7\u6ee4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction",
        "agent_name",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "sum",
        "len",
        "len",
        "instruction.strip",
        "instruction.split",
        "s.strip"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/agent_service.py:_should_apply_filtering"
    },
    {
      "type": "function",
      "name": "get_context_filtering_stats",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/agent_service.py",
      "line_number": 688,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u4e0a\u4e0b\u6587\u8fc7\u6ee4\u7edf\u8ba1\u4fe1\u606f\n\nReturns:\n    Dict[str, Any]: \u8fc7\u6ee4\u7edf\u8ba1\u6570\u636e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._context_filtering_stats.copy"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/agent_service.py:get_context_filtering_stats"
    },
    {
      "type": "class",
      "name": "IntelligentAgentWrapper",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/cognitive_workflow_agent_wrapper.py",
      "line_number": 49,
      "complexity": 1,
      "docstring": "\u57fa\u4e8e\u4ea7\u751f\u5f0f\u89c4\u5219\u7684Agent\u5305\u88c5\u5668\n\n\u4f7f\u7528\u5305\u88c5\u5668\u6a21\u5f0f\u5c06\u57fa\u7840Agent\u589e\u5f3a\u4e3a\u5177\u5907\u8ba4\u77e5\u5de5\u4f5c\u6d41\u80fd\u529b\u7684\u667a\u80fd\u4f53\u3002\n\u901a\u8fc7\u667a\u80fd\u6307\u4ee4\u5206\u7c7b\u7cfb\u7edf\uff0c\u81ea\u52a8\u9009\u62e9\u6700\u4f18\u7684\u6267\u884c\u65b9\u5f0f\uff1a\n- \u4fe1\u606f\u6027\u6307\u4ee4 \u2192 chat_sync/stream\n- \u5355\u6b65\u9aa4\u6307\u4ee4 \u2192 execute_sync/stream  \n- \u591a\u6b65\u9aa4\u6307\u4ee4 \u2192 \u8ba4\u77e5\u5de5\u4f5c\u6d41\n\nAttributes:\n    base_agent: \u88ab\u5305\u88c5\u7684\u57fa\u7840Agent\u5b9e\u4f8b\n    api_specification: API\u89c4\u8303\u8bf4\u660e\uff0c\u81ea\u52a8\u4ecebase_agent\u83b7\u53d6\n    workflow_engine: \u8ba4\u77e5\u5de5\u4f5c\u6d41\u5f15\u64ce\u5b9e\u4f8b\n    enable_auto_recovery: \u662f\u5426\u542f\u7528\u81ea\u52a8\u9519\u8bef\u6062\u590d\n    enable_adaptive_replacement: \u662f\u5426\u542f\u7528\u81ea\u9002\u5e94\u89c4\u5219\u66ff\u6362",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "set_workflow_engine",
        "api_specification",
        "api_specification",
        "_get_optimized_classification_prompt_for_single_agent",
        "classify_instruction",
        "execute_instruction_syn",
        "execute_instruction_stream",
        "execute_multi_step",
        "execute_multi_step_stream",
        "get_performance_stats",
        "reset_stats",
        "__repr__"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/cognitive_workflow_agent_wrapper.py:IntelligentAgentWrapper"
    },
    {
      "type": "function",
      "name": "_get_production_rule_system",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/cognitive_workflow_agent_wrapper.py",
      "line_number": 39,
      "complexity": 1,
      "docstring": "\u5ef6\u8fdf\u5bfc\u5165\u5de5\u5382\u51fd\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.warning"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/cognitive_workflow_agent_wrapper.py:_get_production_rule_system"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/cognitive_workflow_agent_wrapper.py",
      "line_number": 67,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u8ba4\u77e5Agent\u5305\u88c5\u5668\n\nArgs:\n    base_agent: \u57fa\u7840Agent\u5b9e\u4f8b\uff08\u6765\u81eapythonTask.Agent\uff09\n    agent_name: Agent\u540d\u79f0\uff0c\u5982\u679c\u4e0d\u63d0\u4f9b\u5219\u5c1d\u8bd5\u4ecebase_agent.name\u83b7\u53d6\uff0c\u5426\u5219\u4f7f\u7528\"main_agent\"\n    team_members: \u8be5Agent\u7ba1\u7406\u7684\u4e0b\u5c5eAgent\u56e2\u961f\n    enable_auto_recovery: \u662f\u5426\u542f\u7528\u81ea\u52a8\u9519\u8bef\u6062\u590d\n    enable_adaptive_replacement: \u662f\u5426\u542f\u7528\u81ea\u9002\u5e94\u89c4\u5219\u66ff\u6362",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "base_agent",
        "agent_name",
        "team_members",
        "enable_auto_recovery",
        "enable_adaptive_replacement"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "_get_production_rule_system",
        "logger.warning",
        "hasattr",
        "create_production_rule_system",
        "logger.info",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/cognitive_workflow_agent_wrapper.py:__init__"
    },
    {
      "type": "function",
      "name": "set_workflow_engine",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/cognitive_workflow_agent_wrapper.py",
      "line_number": 131,
      "complexity": 1,
      "docstring": "\u8bbe\u7f6e\u5916\u90e8\u7684workflow_engine\u5b9e\u4f8b\n\nArgs:\n    workflow_engine: \u5916\u90e8\u521b\u5efa\u7684workflow_engine\u5b9e\u4f8b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "workflow_engine"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/cognitive_workflow_agent_wrapper.py:set_workflow_engine"
    },
    {
      "type": "function",
      "name": "api_specification",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/cognitive_workflow_agent_wrapper.py",
      "line_number": 154,
      "complexity": 1,
      "docstring": "\u8bbe\u7f6eAPI\u89c4\u8303\u8bf4\u660e\n\nArgs:\n    value: API\u89c4\u8303\u8bf4\u660e\u5b57\u7b26\u4e32",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "value"
      ],
      "decorators": [
        "api_specification.setter"
      ],
      "inheritance": [],
      "calls": [
        "hasattr",
        "logger.warning"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/cognitive_workflow_agent_wrapper.py:api_specification"
    },
    {
      "type": "function",
      "name": "_get_optimized_classification_prompt_for_single_agent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/cognitive_workflow_agent_wrapper.py",
      "line_number": 166,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u4f18\u5316\u7684\u6307\u4ee4\u5206\u7c7b\u63d0\u793a\uff08\u4f7f\u7528JSON Schema\u7ea6\u675f\u8f93\u51fa\uff09\n\nArgs:\n    instruction: \u8f93\u5165\u6307\u4ee4\n    \nReturns:\n    str: \u4f18\u5316\u7684\u5206\u7c7b\u63d0\u793a\uff0c\u5305\u542bJSON Schema\u7ea6\u675f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/cognitive_workflow_agent_wrapper.py:_get_optimized_classification_prompt_for_single_agent"
    },
    {
      "type": "function",
      "name": "classify_instruction",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/cognitive_workflow_agent_wrapper.py",
      "line_number": 361,
      "complexity": 1,
      "docstring": "\u667a\u80fd\u6307\u4ee4\u5206\u7c7b\u65b9\u6cd5\n\n\u5206\u7c7b\u903b\u8f91\uff1a\n1. \u56e2\u961f\u5224\u65ad\uff1a\u5982\u679c\u5f53\u524dAgent\u6709\u56e2\u961f\u6210\u5458\uff0c\u76f4\u63a5\u5224\u5b9a\u4e3a\u591a\u6b65\u9aa4\u4efb\u52a1\uff08\u9700\u8981\u534f\u4f5c\uff09\n2. \u5355Agent\u5224\u65ad\uff1a\u4f7f\u7528LLM\u57fa\u4e8e\u8ba4\u77e5\u54f2\u5b66\u8fdb\u884c\u5206\u7c7b\n   - \u4fe1\u606f\u6027\u6307\u4ee4\uff1a\u83b7\u53d6\u77e5\u8bc6\u3001\u8be2\u95ee\u95ee\u9898\u3001\u89e3\u91ca\u6982\u5ff5\u7b49\uff0c\u65e0\u9700\u5916\u90e8\u64cd\u4f5c\n   - \u6267\u884c\u6027\u6307\u4ee4\uff1a\u9700\u8981\u5bf9\u5916\u90e8\u73af\u5883\u8fdb\u884c\u64cd\u4f5c\u7684\u4efb\u52a1\n     * \u5355\u6b65\u9aa4\uff1a\u786e\u5b9a\u6027\u6267\u884c\uff0c\u65e0\u9700\u63a2\u7d22\u672a\u77e5\n     * \u591a\u6b65\u9aa4\uff1a\u63a2\u7d22\u6027\u7406\u89e3\uff0c\u9700\u8981\u63a2\u7d22\u672a\u77e5\u5e76\u6784\u5efa\u8ba4\u77e5\n\nArgs:\n    instruction: \u8f93\u5165\u6307\u4ee4\u5b57\u7b26\u4e32\n    \nReturns:\n    tuple[str, str]: (\u6307\u4ee4\u7c7b\u578b, \u6267\u884c\u65b9\u5f0f)\n    - \u6307\u4ee4\u7c7b\u578b: \"informational\" | \"executable\" \n    - \u6267\u884c\u65b9\u5f0f: \"chat\" | \"single_step\" | \"multi_step\"\n      * \"chat\": \u4fe1\u606f\u6027\u6307\u4ee4\n      * \"single_step\": \u5355\u6b65\u9aa4\u6267\u884c\u6027\u6307\u4ee4  \n      * \"multi_step\": \u591a\u6b65\u9aa4\u6267\u884c\u6027\u6307\u4ee4\n      \nRaises:\n    Exception: \u5f53LLM\u8c03\u7528\u5931\u8d25\u65f6\uff0c\u4f1a\u8bb0\u5f55\u9519\u8bef\u5e76\u8fd4\u56de\u9ed8\u8ba4\u5206\u7c7b\n    \nNote:\n    - \u6709\u56e2\u961f\u6210\u5458\u65f6\u4f18\u5148\u8003\u8651\u534f\u4f5c\u9700\u6c42\n    - \u5355Agent\u65f6\u57fa\u4e8e\u8ba4\u77e5\u54f2\u5b66\u8fdb\u884c\u6df1\u5ea6\u5206\u6790",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.debug",
        "self._get_optimized_classification_prompt_for_single_agent",
        "self.base_agent.llm.invoke(classification_prompt).content.strip",
        "logger.warning",
        "response.find",
        "logger.error",
        "response.rfind",
        "json.loads",
        "classification_data.get('instruction_type', '').lower",
        "classification_data.get",
        "classification_data.get",
        "classification_data.get",
        "logger.debug",
        "response.split",
        "list",
        "self.base_agent.llm.invoke",
        "logger.debug",
        "len",
        "parts[0].strip().lower",
        "parts[1].strip().lower",
        "self.team.keys",
        "classification_data.get",
        "execution_mode.lower",
        "logger.debug",
        "parts[0].strip",
        "parts[1].strip"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/cognitive_workflow_agent_wrapper.py:classify_instruction"
    },
    {
      "type": "function",
      "name": "execute_instruction_syn",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/cognitive_workflow_agent_wrapper.py",
      "line_number": 479,
      "complexity": 1,
      "docstring": "\u667a\u80fd\u6267\u884c\u6307\u4ee4\uff08\u540c\u6b65\u7248\u672c\uff09\n\n\u6839\u636e\u6307\u4ee4\u5206\u7c7b\u81ea\u52a8\u9009\u62e9\u6700\u4f18\u6267\u884c\u65b9\u5f0f\uff1a\n- \u4fe1\u606f\u6027\u6307\u4ee4 \u2192 chat_sync\n- \u5355\u6b65\u9aa4\u6307\u4ee4 \u2192 execute_sync  \n- \u591a\u6b65\u9aa4\u6307\u4ee4 \u2192 \u8ba4\u77e5\u5de5\u4f5c\u6d41\n\nArgs:\n    instruction: \u8f93\u5165\u6307\u4ee4\n    \nReturns:\n    \u6839\u636e\u6307\u4ee4\u7c7b\u578b\u8fd4\u56de\u76f8\u5e94\u7ed3\u679c:\n    - \u4fe1\u606f\u6027\u6307\u4ee4: chat_sync\u7684\u8fd4\u56de\u503c\n    - \u5355\u6b65\u9aa4\u6267\u884c\u6027\u6307\u4ee4: execute_sync\u7684Result\u5bf9\u8c61\n    - \u591a\u6b65\u9aa4\u6267\u884c\u6027\u6307\u4ee4: WorkflowExecutionResult\u5bf9\u8c61",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "self.classify_instruction",
        "logger.info",
        "logger.debug",
        "self.base_agent.execute_sync",
        "logger.debug",
        "self.base_agent.chat_sync",
        "logger.error",
        "logger.info",
        "logger.debug",
        "self.base_agent.execute_sync",
        "logger.debug",
        "self.execute_multi_step",
        "self.base_agent.execute_sync",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/cognitive_workflow_agent_wrapper.py:execute_instruction_syn"
    },
    {
      "type": "function",
      "name": "execute_instruction_stream",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/cognitive_workflow_agent_wrapper.py",
      "line_number": 537,
      "complexity": 1,
      "docstring": "\u667a\u80fd\u6267\u884c\u6307\u4ee4\uff08\u6d41\u5f0f\u7248\u672c\uff09\n\nArgs:\n    instruction: \u8f93\u5165\u6307\u4ee4\n    \nYields:\n    Iterator[Any]: \u6d41\u5f0f\u8f93\u51fa\u8fed\u4ee3\u5668\n    - \u524d\u9762\u7684\u5143\u7d20\uff1a\u4e2d\u95f4\u8fc7\u7a0b\u4fe1\u606f\uff08\u5b57\u7b26\u4e32\u72b6\u6001\u3001\u8fdb\u5ea6\u63d0\u793a\u7b49\uff09\n    - \u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff1aResult\u5bf9\u8c61\uff08\u6700\u7ec8\u6267\u884c\u7ed3\u679c\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.classify_instruction",
        "self.base_agent.chat_stream",
        "self.base_agent.execute_stream",
        "self.base_agent.execute_stream",
        "self.execute_multi_step_stream",
        "self.base_agent.execute_stream"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/cognitive_workflow_agent_wrapper.py:execute_instruction_stream"
    },
    {
      "type": "function",
      "name": "execute_multi_step",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/cognitive_workflow_agent_wrapper.py",
      "line_number": 597,
      "complexity": 1,
      "docstring": "\u6267\u884c\u591a\u6b65\u9aa4\u76ee\u6807\u4efb\u52a1\uff08\u4f7f\u7528\u8ba4\u77e5\u5de5\u4f5c\u6d41\uff09\n\nArgs:\n    goal: \u76ee\u6807\u4efb\u52a1\u63cf\u8ff0\n    \nReturns:\n    WorkflowExecutionResult: \u5de5\u4f5c\u6d41\u6267\u884c\u7ed3\u679c\n    \nRaises:\n    RuntimeError: \u5f53\u8ba4\u77e5\u5de5\u4f5c\u6d41\u7ec4\u4ef6\u4e0d\u53ef\u7528\u65f6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "goal"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "datetime.now",
        "RuntimeError",
        "logger.warning",
        "RuntimeError",
        "self.workflow_engine.execute_goal",
        "(datetime.now() - start_time).total_seconds",
        "logger.info",
        "(datetime.now() - start_time).total_seconds",
        "logger.error",
        "datetime.now",
        "datetime.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/cognitive_workflow_agent_wrapper.py:execute_multi_step"
    },
    {
      "type": "function",
      "name": "execute_multi_step_stream",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/cognitive_workflow_agent_wrapper.py",
      "line_number": 638,
      "complexity": 1,
      "docstring": "\u6267\u884c\u591a\u6b65\u9aa4\u76ee\u6807\u4efb\u52a1\uff08\u6d41\u5f0f\uff0c\u4f7f\u7528\u8ba4\u77e5\u5de5\u4f5c\u6d41\uff09\n\nArgs:\n    goal: \u76ee\u6807\u4efb\u52a1\u63cf\u8ff0\n    \nYields:\n    Iterator[Any]: \u6d41\u5f0f\u6267\u884c\u8fc7\u7a0b\u548c\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "goal"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.execute_multi_step"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/cognitive_workflow_agent_wrapper.py:execute_multi_step_stream"
    },
    {
      "type": "function",
      "name": "get_performance_stats",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/cognitive_workflow_agent_wrapper.py",
      "line_number": 664,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6027\u80fd\u7edf\u8ba1\u4fe1\u606f\n\nReturns:\n    Dict[str, Any]: \u5305\u542b\u5206\u7c7b\u548c\u6267\u884c\u7edf\u8ba1\u7684\u6027\u80fd\u6570\u636e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "sum",
        "self._classification_stats['execution_stats'].values",
        "self._classification_stats.copy",
        "self._classification_stats['execution_stats'].items",
        "max"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/cognitive_workflow_agent_wrapper.py:get_performance_stats"
    },
    {
      "type": "function",
      "name": "reset_stats",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/cognitive_workflow_agent_wrapper.py",
      "line_number": 683,
      "complexity": 1,
      "docstring": "\u91cd\u7f6e\u6027\u80fd\u7edf\u8ba1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/cognitive_workflow_agent_wrapper.py:reset_stats"
    },
    {
      "type": "function",
      "name": "__repr__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/cognitive_workflow_agent_wrapper.py",
      "line_number": 696,
      "complexity": 1,
      "docstring": "\u8fd4\u56de\u5305\u88c5\u5668\u7684\u5b57\u7b26\u4e32\u8868\u793a",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.api_specification[:50].replace",
        "len",
        "type"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/cognitive_workflow_agent_wrapper.py:__repr__"
    },
    {
      "type": "class",
      "name": "ProductionRuleWorkflowEngine",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/production_rule_workflow_engine.py",
      "line_number": 22,
      "complexity": 1,
      "docstring": "\u4ea7\u751f\u5f0f\u89c4\u5219\u5de5\u4f5c\u6d41\u5f15\u64ce - \u7cfb\u7edf\u7edf\u4e00\u5165\u53e3",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "execute_goal",
        "execute_goal_async",
        "pause_execution",
        "resume_execution",
        "stop_execution",
        "get_execution_status",
        "get_current_state",
        "get_execution_metrics",
        "get_workflow_history",
        "is_running",
        "is_paused",
        "get_execution_result",
        "get_default_agent_registry",
        "agent_registry",
        "_async_execution_worker",
        "_execute_with_control",
        "cleanup",
        "__enter__",
        "__exit__"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/production_rule_workflow_engine.py:ProductionRuleWorkflowEngine"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/production_rule_workflow_engine.py",
      "line_number": 25,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u5de5\u4f5c\u6d41\u5f15\u64ce\n\nArgs:\n    rule_engine_service: \u6838\u5fc3\u89c4\u5219\u5f15\u64ce\u670d\u52a1\n    default_agent_registry: \u9ed8\u8ba4\u667a\u80fd\u4f53\u6ce8\u518c\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule_engine_service",
        "default_agent_registry"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "threading.Lock",
        "AgentRegistry"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/production_rule_workflow_engine.py:__init__"
    },
    {
      "type": "function",
      "name": "execute_goal",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/production_rule_workflow_engine.py",
      "line_number": 44,
      "complexity": 1,
      "docstring": "\u6267\u884c\u76ee\u6807\u5de5\u4f5c\u6d41\uff08\u540c\u6b65\u7248\u672c\uff09\n\nArgs:\n    goal: \u76ee\u6807\u63cf\u8ff0\n    \nReturns:\n    WorkflowExecutionResult: \u5de5\u4f5c\u6d41\u6267\u884c\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "goal"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "RuntimeError",
        "logger.info",
        "self.rule_engine_service.execute_workflow",
        "logger.info",
        "logger.error",
        "WorkflowExecutionResult",
        "datetime.now",
        "str",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/production_rule_workflow_engine.py:execute_goal"
    },
    {
      "type": "function",
      "name": "execute_goal_async",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/production_rule_workflow_engine.py",
      "line_number": 93,
      "complexity": 1,
      "docstring": "\u5f02\u6b65\u6267\u884c\u76ee\u6807\u5de5\u4f5c\u6d41\n\nArgs:\n    goal: \u76ee\u6807\u63cf\u8ff0\n    \nReturns:\n    bool: \u662f\u5426\u6210\u529f\u542f\u52a8\u5f02\u6b65\u6267\u884c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "goal"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.warning",
        "threading.Thread",
        "self._execution_thread.start",
        "logger.info",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/production_rule_workflow_engine.py:execute_goal_async"
    },
    {
      "type": "function",
      "name": "pause_execution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/production_rule_workflow_engine.py",
      "line_number": 132,
      "complexity": 1,
      "docstring": "\u6682\u505c\u6267\u884c\n\nReturns:\n    bool: \u662f\u5426\u6210\u529f\u6682\u505c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.rule_engine_service.pause_workflow",
        "logger.warning",
        "logger.info",
        "logger.warning",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/production_rule_workflow_engine.py:pause_execution"
    },
    {
      "type": "function",
      "name": "resume_execution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/production_rule_workflow_engine.py",
      "line_number": 162,
      "complexity": 1,
      "docstring": "\u6062\u590d\u6267\u884c\n\nReturns:\n    bool: \u662f\u5426\u6210\u529f\u6062\u590d",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.rule_engine_service.resume_workflow",
        "logger.warning",
        "logger.info",
        "logger.warning",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/production_rule_workflow_engine.py:resume_execution"
    },
    {
      "type": "function",
      "name": "stop_execution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/production_rule_workflow_engine.py",
      "line_number": 189,
      "complexity": 1,
      "docstring": "\u505c\u6b62\u6267\u884c\n\nReturns:\n    bool: \u662f\u5426\u6210\u529f\u505c\u6b62",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "logger.warning",
        "self._execution_thread.is_alive",
        "self._execution_thread.join",
        "self._execution_thread.is_alive",
        "logger.error",
        "logger.warning"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/production_rule_workflow_engine.py:stop_execution"
    },
    {
      "type": "function",
      "name": "get_execution_status",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/production_rule_workflow_engine.py",
      "line_number": 220,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6267\u884c\u72b6\u6001\n\nReturns:\n    ExecutionStatus: \u5f53\u524d\u6267\u884c\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/production_rule_workflow_engine.py:get_execution_status"
    },
    {
      "type": "function",
      "name": "get_current_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/production_rule_workflow_engine.py",
      "line_number": 229,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u5f53\u524d\u72b6\u6001\n\nReturns:\n    Optional[GlobalState]: \u5f53\u524d\u5168\u5c40\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.rule_engine_service.state_service.get_current_state",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/production_rule_workflow_engine.py:get_current_state"
    },
    {
      "type": "function",
      "name": "get_execution_metrics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/production_rule_workflow_engine.py",
      "line_number": 242,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6267\u884c\u6307\u6807\n\nReturns:\n    Dict[str, Any]: \u6267\u884c\u6307\u6807\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_current_state",
        "self.rule_engine_service.get_workflow_status",
        "logger.error",
        "self._execution_result.to_dict",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/production_rule_workflow_engine.py:get_execution_metrics"
    },
    {
      "type": "function",
      "name": "get_workflow_history",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/production_rule_workflow_engine.py",
      "line_number": 277,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u5de5\u4f5c\u6d41\u5386\u53f2\n\nReturns:\n    List[Dict[str, Any]]: \u5de5\u4f5c\u6d41\u5386\u53f2\u8bb0\u5f55",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_current_state",
        "self.rule_engine_service.state_service.get_state_history",
        "logger.error",
        "history.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/production_rule_workflow_engine.py:get_workflow_history"
    },
    {
      "type": "function",
      "name": "is_running",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/production_rule_workflow_engine.py",
      "line_number": 308,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u662f\u5426\u6b63\u5728\u8fd0\u884c\n\nReturns:\n    bool: \u662f\u5426\u6b63\u5728\u8fd0\u884c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/production_rule_workflow_engine.py:is_running"
    },
    {
      "type": "function",
      "name": "is_paused",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/production_rule_workflow_engine.py",
      "line_number": 317,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u662f\u5426\u5df2\u6682\u505c\n\nReturns:\n    bool: \u662f\u5426\u5df2\u6682\u505c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/production_rule_workflow_engine.py:is_paused"
    },
    {
      "type": "function",
      "name": "get_execution_result",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/production_rule_workflow_engine.py",
      "line_number": 326,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6700\u540e\u4e00\u6b21\u6267\u884c\u7684\u7ed3\u679c\n\nReturns:\n    Optional[WorkflowExecutionResult]: \u6267\u884c\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/production_rule_workflow_engine.py:get_execution_result"
    },
    {
      "type": "function",
      "name": "get_default_agent_registry",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/production_rule_workflow_engine.py",
      "line_number": 335,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u9ed8\u8ba4\u7684\u667a\u80fd\u4f53\u6ce8\u518c\u8868\n\nReturns:\n    AgentRegistry: \u9ed8\u8ba4\u667a\u80fd\u4f53\u6ce8\u518c\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/production_rule_workflow_engine.py:get_default_agent_registry"
    },
    {
      "type": "function",
      "name": "agent_registry",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/production_rule_workflow_engine.py",
      "line_number": 345,
      "complexity": 1,
      "docstring": "\u667a\u80fd\u4f53\u6ce8\u518c\u8868\u5c5e\u6027\uff08\u5411\u540e\u517c\u5bb9\uff09\n\nReturns:\n    AgentRegistry: \u667a\u80fd\u4f53\u6ce8\u518c\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [
        "property"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/production_rule_workflow_engine.py:agent_registry"
    },
    {
      "type": "function",
      "name": "_async_execution_worker",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/production_rule_workflow_engine.py",
      "line_number": 354,
      "complexity": 1,
      "docstring": "\u5f02\u6b65\u6267\u884c\u5de5\u4f5c\u7ebf\u7a0b\n\nArgs:\n    goal: \u76ee\u6807\u63cf\u8ff0\n    agent_registry: \u667a\u80fd\u4f53\u6ce8\u518c\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "goal",
        "agent_registry"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "logger.info",
        "self._execute_with_control",
        "logger.error",
        "logger.info",
        "WorkflowExecutionResult",
        "logger.info",
        "logger.warning",
        "datetime.now",
        "str",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/production_rule_workflow_engine.py:_async_execution_worker"
    },
    {
      "type": "function",
      "name": "_execute_with_control",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/production_rule_workflow_engine.py",
      "line_number": 396,
      "complexity": 1,
      "docstring": "\u652f\u6301\u63a7\u5236\u7684\u6267\u884c\u65b9\u6cd5\n\nArgs:\n    goal: \u76ee\u6807\u63cf\u8ff0\n    agent_registry: \u667a\u80fd\u4f53\u6ce8\u518c\u8868\n    \nReturns:\n    WorkflowExecutionResult: \u6267\u884c\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "goal",
        "agent_registry"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "datetime.now",
        "WorkflowExecutionResult",
        "self.rule_engine_service.execute_workflow",
        "time.sleep",
        "logger.error",
        "WorkflowExecutionResult",
        "time.sleep",
        "datetime.now",
        "datetime.now",
        "str",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/production_rule_workflow_engine.py:_execute_with_control"
    },
    {
      "type": "function",
      "name": "cleanup",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/production_rule_workflow_engine.py",
      "line_number": 454,
      "complexity": 1,
      "docstring": "\u6e05\u7406\u8d44\u6e90",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.is_running",
        "logger.info",
        "self.stop_execution",
        "self._execution_thread.is_alive",
        "self._execution_thread.join",
        "logger.error"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/production_rule_workflow_engine.py:cleanup"
    },
    {
      "type": "function",
      "name": "__enter__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/production_rule_workflow_engine.py",
      "line_number": 472,
      "complexity": 1,
      "docstring": "\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\u5165\u53e3",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/production_rule_workflow_engine.py:__enter__"
    },
    {
      "type": "function",
      "name": "__exit__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/production_rule_workflow_engine.py",
      "line_number": 476,
      "complexity": 1,
      "docstring": "\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\u51fa\u53e3",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "exc_type",
        "exc_val",
        "exc_tb"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.cleanup"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/production_rule_workflow_engine.py:__exit__"
    },
    {
      "type": "class",
      "name": "RuleRepository",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py",
      "line_number": 19,
      "complexity": 1,
      "docstring": "\u89c4\u5219\u4ed3\u50a8\u63a5\u53e3 - \u62bd\u8c61\u89c4\u5219\u6301\u4e45\u5316\u64cd\u4f5c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "save_rule_set",
        "load_rule_set",
        "find_rules_by_condition",
        "find_rules_by_phase",
        "save_rule",
        "load_rule",
        "delete_rule",
        "find_rules_by_agent_capability",
        "find_rules_by_agent_name",
        "find_rules_by_priority_range",
        "get_rule_count",
        "list_all_rule_sets"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "ABC"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py:RuleRepository"
    },
    {
      "type": "class",
      "name": "StateRepository",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py",
      "line_number": 83,
      "complexity": 1,
      "docstring": "\u72b6\u6001\u4ed3\u50a8\u63a5\u53e3 - \u62bd\u8c61\u72b6\u6001\u6301\u4e45\u5316\u64cd\u4f5c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "save_state",
        "load_state",
        "get_state_history",
        "save_state_snapshot",
        "load_state_snapshot",
        "find_states_by_workflow",
        "find_states_by_time_range",
        "get_latest_state",
        "delete_old_states",
        "get_state_count"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "ABC"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py:StateRepository"
    },
    {
      "type": "class",
      "name": "ExecutionRepository",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py",
      "line_number": 141,
      "complexity": 1,
      "docstring": "\u6267\u884c\u4ed3\u50a8\u63a5\u53e3 - \u62bd\u8c61\u6267\u884c\u5386\u53f2\u7ba1\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "save_execution",
        "load_execution",
        "find_executions_by_rule",
        "find_failed_executions",
        "find_executions_by_status",
        "find_executions_by_time_range",
        "get_execution_statistics",
        "get_recent_executions",
        "delete_old_executions",
        "get_execution_count",
        "find_long_running_executions",
        "update_execution_status"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "ABC"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py:ExecutionRepository"
    },
    {
      "type": "function",
      "name": "save_rule_set",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py",
      "line_number": 23,
      "complexity": 1,
      "docstring": "\u4fdd\u5b58\u89c4\u5219\u96c6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule_set"
      ],
      "decorators": [
        "abstractmethod"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py:save_rule_set"
    },
    {
      "type": "function",
      "name": "load_rule_set",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py",
      "line_number": 28,
      "complexity": 1,
      "docstring": "\u52a0\u8f7d\u89c4\u5219\u96c6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule_set_id"
      ],
      "decorators": [
        "abstractmethod"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py:load_rule_set"
    },
    {
      "type": "function",
      "name": "find_rules_by_condition",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py",
      "line_number": 33,
      "complexity": 1,
      "docstring": "\u6839\u636e\u6761\u4ef6\u6a21\u5f0f\u67e5\u627e\u89c4\u5219",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "condition_pattern"
      ],
      "decorators": [
        "abstractmethod"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py:find_rules_by_condition"
    },
    {
      "type": "function",
      "name": "find_rules_by_phase",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py",
      "line_number": 38,
      "complexity": 1,
      "docstring": "\u6839\u636e\u9636\u6bb5\u67e5\u627e\u89c4\u5219",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "phase"
      ],
      "decorators": [
        "abstractmethod"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py:find_rules_by_phase"
    },
    {
      "type": "function",
      "name": "save_rule",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py",
      "line_number": 43,
      "complexity": 1,
      "docstring": "\u4fdd\u5b58\u5355\u4e2a\u89c4\u5219",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule"
      ],
      "decorators": [
        "abstractmethod"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py:save_rule"
    },
    {
      "type": "function",
      "name": "load_rule",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py",
      "line_number": 48,
      "complexity": 1,
      "docstring": "\u52a0\u8f7d\u5355\u4e2a\u89c4\u5219",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule_id"
      ],
      "decorators": [
        "abstractmethod"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py:load_rule"
    },
    {
      "type": "function",
      "name": "delete_rule",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py",
      "line_number": 53,
      "complexity": 1,
      "docstring": "\u5220\u9664\u89c4\u5219",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule_id"
      ],
      "decorators": [
        "abstractmethod"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py:delete_rule"
    },
    {
      "type": "function",
      "name": "find_rules_by_agent_capability",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py",
      "line_number": 58,
      "complexity": 1,
      "docstring": "\u6839\u636e\u667a\u80fd\u4f53\u540d\u79f0\u67e5\u627e\u89c4\u5219\uff08\u4fdd\u6301\u63a5\u53e3\u517c\u5bb9\u6027\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "agent_name"
      ],
      "decorators": [
        "abstractmethod"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py:find_rules_by_agent_capability"
    },
    {
      "type": "function",
      "name": "find_rules_by_agent_name",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py",
      "line_number": 63,
      "complexity": 1,
      "docstring": "\u6839\u636e\u667a\u80fd\u4f53\u540d\u79f0\u67e5\u627e\u89c4\u5219",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "agent_name"
      ],
      "decorators": [
        "abstractmethod"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py:find_rules_by_agent_name"
    },
    {
      "type": "function",
      "name": "find_rules_by_priority_range",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py",
      "line_number": 68,
      "complexity": 1,
      "docstring": "\u6839\u636e\u4f18\u5148\u7ea7\u8303\u56f4\u67e5\u627e\u89c4\u5219",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "min_priority",
        "max_priority"
      ],
      "decorators": [
        "abstractmethod"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py:find_rules_by_priority_range"
    },
    {
      "type": "function",
      "name": "get_rule_count",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py",
      "line_number": 73,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u89c4\u5219\u603b\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [
        "abstractmethod"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py:get_rule_count"
    },
    {
      "type": "function",
      "name": "list_all_rule_sets",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py",
      "line_number": 78,
      "complexity": 1,
      "docstring": "\u5217\u51fa\u6240\u6709\u89c4\u5219\u96c6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [
        "abstractmethod"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py:list_all_rule_sets"
    },
    {
      "type": "function",
      "name": "save_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py",
      "line_number": 87,
      "complexity": 1,
      "docstring": "\u4fdd\u5b58\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "global_state"
      ],
      "decorators": [
        "abstractmethod"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py:save_state"
    },
    {
      "type": "function",
      "name": "load_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py",
      "line_number": 92,
      "complexity": 1,
      "docstring": "\u52a0\u8f7d\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "state_id"
      ],
      "decorators": [
        "abstractmethod"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py:load_state"
    },
    {
      "type": "function",
      "name": "get_state_history",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py",
      "line_number": 97,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u5de5\u4f5c\u6d41\u7684\u72b6\u6001\u5386\u53f2",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "workflow_id"
      ],
      "decorators": [
        "abstractmethod"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py:get_state_history"
    },
    {
      "type": "function",
      "name": "save_state_snapshot",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py",
      "line_number": 102,
      "complexity": 1,
      "docstring": "\u4fdd\u5b58\u72b6\u6001\u5feb\u7167",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "state",
        "snapshot_name"
      ],
      "decorators": [
        "abstractmethod"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py:save_state_snapshot"
    },
    {
      "type": "function",
      "name": "load_state_snapshot",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py",
      "line_number": 107,
      "complexity": 1,
      "docstring": "\u52a0\u8f7d\u72b6\u6001\u5feb\u7167",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "snapshot_name"
      ],
      "decorators": [
        "abstractmethod"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py:load_state_snapshot"
    },
    {
      "type": "function",
      "name": "find_states_by_workflow",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py",
      "line_number": 112,
      "complexity": 1,
      "docstring": "\u6839\u636e\u5de5\u4f5c\u6d41ID\u67e5\u627e\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "workflow_id"
      ],
      "decorators": [
        "abstractmethod"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py:find_states_by_workflow"
    },
    {
      "type": "function",
      "name": "find_states_by_time_range",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py",
      "line_number": 117,
      "complexity": 1,
      "docstring": "\u6839\u636e\u65f6\u95f4\u8303\u56f4\u67e5\u627e\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "start_time",
        "end_time"
      ],
      "decorators": [
        "abstractmethod"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py:find_states_by_time_range"
    },
    {
      "type": "function",
      "name": "get_latest_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py",
      "line_number": 126,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u5de5\u4f5c\u6d41\u7684\u6700\u65b0\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "workflow_id"
      ],
      "decorators": [
        "abstractmethod"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py:get_latest_state"
    },
    {
      "type": "function",
      "name": "delete_old_states",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py",
      "line_number": 131,
      "complexity": 1,
      "docstring": "\u5220\u9664\u65e7\u72b6\u6001\uff0c\u8fd4\u56de\u5220\u9664\u7684\u6570\u91cf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "cutoff_time"
      ],
      "decorators": [
        "abstractmethod"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py:delete_old_states"
    },
    {
      "type": "function",
      "name": "get_state_count",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py",
      "line_number": 136,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u72b6\u6001\u6570\u91cf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "workflow_id"
      ],
      "decorators": [
        "abstractmethod"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py:get_state_count"
    },
    {
      "type": "function",
      "name": "save_execution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py",
      "line_number": 145,
      "complexity": 1,
      "docstring": "\u4fdd\u5b58\u89c4\u5219\u6267\u884c\u8bb0\u5f55",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule_execution"
      ],
      "decorators": [
        "abstractmethod"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py:save_execution"
    },
    {
      "type": "function",
      "name": "load_execution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py",
      "line_number": 150,
      "complexity": 1,
      "docstring": "\u52a0\u8f7d\u89c4\u5219\u6267\u884c\u8bb0\u5f55",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "execution_id"
      ],
      "decorators": [
        "abstractmethod"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py:load_execution"
    },
    {
      "type": "function",
      "name": "find_executions_by_rule",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py",
      "line_number": 155,
      "complexity": 1,
      "docstring": "\u6839\u636e\u89c4\u5219ID\u67e5\u627e\u6267\u884c\u8bb0\u5f55",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule_id"
      ],
      "decorators": [
        "abstractmethod"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py:find_executions_by_rule"
    },
    {
      "type": "function",
      "name": "find_failed_executions",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py",
      "line_number": 160,
      "complexity": 1,
      "docstring": "\u67e5\u627e\u5931\u8d25\u7684\u6267\u884c\u8bb0\u5f55",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "time_range"
      ],
      "decorators": [
        "abstractmethod"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py:find_failed_executions"
    },
    {
      "type": "function",
      "name": "find_executions_by_status",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py",
      "line_number": 168,
      "complexity": 1,
      "docstring": "\u6839\u636e\u72b6\u6001\u67e5\u627e\u6267\u884c\u8bb0\u5f55",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "status"
      ],
      "decorators": [
        "abstractmethod"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py:find_executions_by_status"
    },
    {
      "type": "function",
      "name": "find_executions_by_time_range",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py",
      "line_number": 173,
      "complexity": 1,
      "docstring": "\u6839\u636e\u65f6\u95f4\u8303\u56f4\u67e5\u627e\u6267\u884c\u8bb0\u5f55",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "start_time",
        "end_time"
      ],
      "decorators": [
        "abstractmethod"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py:find_executions_by_time_range"
    },
    {
      "type": "function",
      "name": "get_execution_statistics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py",
      "line_number": 182,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6267\u884c\u7edf\u8ba1\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule_id"
      ],
      "decorators": [
        "abstractmethod"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py:get_execution_statistics"
    },
    {
      "type": "function",
      "name": "get_recent_executions",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py",
      "line_number": 190,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6700\u8fd1\u7684\u6267\u884c\u8bb0\u5f55",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "limit"
      ],
      "decorators": [
        "abstractmethod"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py:get_recent_executions"
    },
    {
      "type": "function",
      "name": "delete_old_executions",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py",
      "line_number": 198,
      "complexity": 1,
      "docstring": "\u5220\u9664\u65e7\u7684\u6267\u884c\u8bb0\u5f55\uff0c\u8fd4\u56de\u5220\u9664\u7684\u6570\u91cf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "cutoff_time"
      ],
      "decorators": [
        "abstractmethod"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py:delete_old_executions"
    },
    {
      "type": "function",
      "name": "get_execution_count",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py",
      "line_number": 203,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6267\u884c\u8bb0\u5f55\u6570\u91cf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule_id",
        "status"
      ],
      "decorators": [
        "abstractmethod"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py:get_execution_count"
    },
    {
      "type": "function",
      "name": "find_long_running_executions",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py",
      "line_number": 212,
      "complexity": 1,
      "docstring": "\u67e5\u627e\u957f\u65f6\u95f4\u8fd0\u884c\u7684\u6267\u884c\u8bb0\u5f55",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "threshold_seconds"
      ],
      "decorators": [
        "abstractmethod"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py:find_long_running_executions"
    },
    {
      "type": "function",
      "name": "update_execution_status",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py",
      "line_number": 220,
      "complexity": 1,
      "docstring": "\u66f4\u65b0\u6267\u884c\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "execution_id",
        "status",
        "failure_reason"
      ],
      "decorators": [
        "abstractmethod"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py:update_execution_status"
    },
    {
      "type": "class",
      "name": "RulePhase",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py",
      "line_number": 15,
      "complexity": 1,
      "docstring": "\u89c4\u5219\u6267\u884c\u9636\u6bb5\u679a\u4e3e - \u4e09\u9636\u6bb5\u6267\u884c\u6a21\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py:RulePhase"
    },
    {
      "type": "class",
      "name": "ExecutionStatus",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py",
      "line_number": 22,
      "complexity": 1,
      "docstring": "\u6267\u884c\u72b6\u6001\u679a\u4e3e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py:ExecutionStatus"
    },
    {
      "type": "class",
      "name": "DecisionType",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py",
      "line_number": 32,
      "complexity": 1,
      "docstring": "\u51b3\u7b56\u7c7b\u578b\u679a\u4e3e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py:DecisionType"
    },
    {
      "type": "class",
      "name": "RuleSetStatus",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py",
      "line_number": 41,
      "complexity": 1,
      "docstring": "\u89c4\u5219\u96c6\u72b6\u6001\u679a\u4e3e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py:RuleSetStatus"
    },
    {
      "type": "class",
      "name": "ModificationType",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py",
      "line_number": 49,
      "complexity": 1,
      "docstring": "\u8ba1\u5212\u4fee\u6539\u7c7b\u578b\u679a\u4e3e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py:ModificationType"
    },
    {
      "type": "class",
      "name": "RuleModification",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py",
      "line_number": 58,
      "complexity": 1,
      "docstring": "\u89c4\u5219\u4fee\u6539\u8bb0\u5f55 - \u503c\u5bf9\u8c61",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__post_init__"
      ],
      "parameters": [],
      "decorators": [
        "dataclass(frozen=True)"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py:RuleModification"
    },
    {
      "type": "class",
      "name": "ExecutionMetrics",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py",
      "line_number": 77,
      "complexity": 1,
      "docstring": "\u6267\u884c\u6307\u6807 - \u503c\u5bf9\u8c61",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "success_rate",
        "failure_rate"
      ],
      "parameters": [],
      "decorators": [
        "dataclass(frozen=True)"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py:ExecutionMetrics"
    },
    {
      "type": "class",
      "name": "StateChangeAnalysis",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py",
      "line_number": 100,
      "complexity": 1,
      "docstring": "\u72b6\u6001\u53d8\u5316\u5206\u6790 - \u503c\u5bf9\u8c61",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "is_significant_change"
      ],
      "parameters": [],
      "decorators": [
        "dataclass(frozen=True)"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py:StateChangeAnalysis"
    },
    {
      "type": "class",
      "name": "MatchingResult",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py",
      "line_number": 115,
      "complexity": 1,
      "docstring": "\u5339\u914d\u7ed3\u679c - \u503c\u5bf9\u8c61",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "is_confident_match"
      ],
      "parameters": [],
      "decorators": [
        "dataclass(frozen=True)"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py:MatchingResult"
    },
    {
      "type": "class",
      "name": "WorkflowExecutionResult",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py",
      "line_number": 128,
      "complexity": 1,
      "docstring": "\u5de5\u4f5c\u6d41\u6267\u884c\u7ed3\u679c\u6458\u8981 - \u503c\u5bf9\u8c61",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "get_summary",
        "to_dict"
      ],
      "parameters": [],
      "decorators": [
        "dataclass(frozen=True)"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py:WorkflowExecutionResult"
    },
    {
      "type": "class",
      "name": "RuleConstants",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py",
      "line_number": 168,
      "complexity": 1,
      "docstring": "\u89c4\u5219\u7cfb\u7edf\u5e38\u91cf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py:RuleConstants"
    },
    {
      "type": "class",
      "name": "MatchingConstants",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py",
      "line_number": 178,
      "complexity": 1,
      "docstring": "\u5339\u914d\u7cfb\u7edf\u5e38\u91cf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py:MatchingConstants"
    },
    {
      "type": "class",
      "name": "ExecutionConstants",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py",
      "line_number": 186,
      "complexity": 1,
      "docstring": "\u6267\u884c\u7cfb\u7edf\u5e38\u91cf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py:ExecutionConstants"
    },
    {
      "type": "class",
      "name": "ReplacementStrategyType",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py",
      "line_number": 196,
      "complexity": 1,
      "docstring": "\u66ff\u6362\u7b56\u7565\u7c7b\u578b\u679a\u4e3e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py:ReplacementStrategyType"
    },
    {
      "type": "class",
      "name": "SituationContext",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py",
      "line_number": 208,
      "complexity": 1,
      "docstring": "\u60c5\u5883\u4e0a\u4e0b\u6587\u7c7b\u578b\u679a\u4e3e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Enum"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py:SituationContext"
    },
    {
      "type": "class",
      "name": "SituationScore",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py",
      "line_number": 218,
      "complexity": 1,
      "docstring": "\u60c5\u5883\u8bc4\u4f30\u5206\u6570 - \u503c\u5bf9\u8c61",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "get_overall_health",
        "get_critical_issues"
      ],
      "parameters": [],
      "decorators": [
        "dataclass(frozen=True)"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py:SituationScore"
    },
    {
      "type": "class",
      "name": "ReplacementStrategy",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py",
      "line_number": 271,
      "complexity": 1,
      "docstring": "\u66ff\u6362\u7b56\u7565\u914d\u7f6e - \u503c\u5bf9\u8c61",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "is_aggressive_strategy",
        "get_strategy_description"
      ],
      "parameters": [],
      "decorators": [
        "dataclass(frozen=True)"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py:ReplacementStrategy"
    },
    {
      "type": "class",
      "name": "StrategyEffectiveness",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py",
      "line_number": 302,
      "complexity": 1,
      "docstring": "\u7b56\u7565\u6548\u679c\u8bc4\u4f30 - \u503c\u5bf9\u8c61",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "get_performance_gain",
        "get_efficiency_gain",
        "is_successful_application"
      ],
      "parameters": [],
      "decorators": [
        "dataclass(frozen=True)"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py:StrategyEffectiveness"
    },
    {
      "type": "class",
      "name": "AdaptiveReplacementConstants",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py",
      "line_number": 333,
      "complexity": 1,
      "docstring": "\u81ea\u9002\u5e94\u66ff\u6362\u7cfb\u7edf\u5e38\u91cf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py:AdaptiveReplacementConstants"
    },
    {
      "type": "function",
      "name": "__post_init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py",
      "line_number": 66,
      "complexity": 1,
      "docstring": "\u9a8c\u8bc1\u4fee\u6539\u8bb0\u5f55\u7684\u4e00\u81f4\u6027",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "ValueError",
        "ValueError"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py:__post_init__"
    },
    {
      "type": "function",
      "name": "success_rate",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py",
      "line_number": 87,
      "complexity": 1,
      "docstring": "\u6210\u529f\u7387",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [
        "property"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py:success_rate"
    },
    {
      "type": "function",
      "name": "failure_rate",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py",
      "line_number": 94,
      "complexity": 1,
      "docstring": "\u5931\u8d25\u7387",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [
        "property"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py:failure_rate"
    },
    {
      "type": "function",
      "name": "is_significant_change",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py",
      "line_number": 109,
      "complexity": 1,
      "docstring": "\u662f\u5426\u4e3a\u91cd\u8981\u53d8\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py:is_significant_change"
    },
    {
      "type": "function",
      "name": "is_confident_match",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py",
      "line_number": 122,
      "complexity": 1,
      "docstring": "\u662f\u5426\u4e3a\u9ad8\u7f6e\u4fe1\u5ea6\u5339\u914d",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "threshold"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py:is_confident_match"
    },
    {
      "type": "function",
      "name": "get_summary",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py",
      "line_number": 138,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6267\u884c\u6458\u8981",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py:get_summary"
    },
    {
      "type": "function",
      "name": "to_dict",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py",
      "line_number": 146,
      "complexity": 1,
      "docstring": "\u8f6c\u6362\u4e3a\u5b57\u5178\u683c\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.completion_timestamp.isoformat"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py:to_dict"
    },
    {
      "type": "function",
      "name": "get_overall_health",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py",
      "line_number": 227,
      "complexity": 1,
      "docstring": "\u8ba1\u7b97\u6574\u4f53\u5065\u5eb7\u5ea6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "max",
        "min"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py:get_overall_health"
    },
    {
      "type": "function",
      "name": "get_critical_issues",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py",
      "line_number": 250,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u5173\u952e\u95ee\u9898\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "issues.append",
        "issues.append",
        "issues.append",
        "issues.append",
        "issues.append",
        "issues.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py:get_critical_issues"
    },
    {
      "type": "function",
      "name": "is_aggressive_strategy",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py",
      "line_number": 282,
      "complexity": 1,
      "docstring": "\u662f\u5426\u4e3a\u6fc0\u8fdb\u7b56\u7565",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py:is_aggressive_strategy"
    },
    {
      "type": "function",
      "name": "get_strategy_description",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py",
      "line_number": 286,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u7b56\u7565\u63cf\u8ff0",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "descriptions.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py:get_strategy_description"
    },
    {
      "type": "function",
      "name": "get_performance_gain",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py",
      "line_number": 311,
      "complexity": 1,
      "docstring": "\u8ba1\u7b97\u6027\u80fd\u63d0\u5347",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py:get_performance_gain"
    },
    {
      "type": "function",
      "name": "get_efficiency_gain",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py",
      "line_number": 317,
      "complexity": 1,
      "docstring": "\u8ba1\u7b97\u6548\u7387\u63d0\u5347",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py:get_efficiency_gain"
    },
    {
      "type": "function",
      "name": "is_successful_application",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py",
      "line_number": 323,
      "complexity": 1,
      "docstring": "\u662f\u5426\u4e3a\u6210\u529f\u7684\u7b56\u7565\u5e94\u7528",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_performance_gain"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/value_objects.py:is_successful_application"
    },
    {
      "type": "class",
      "name": "WorkflowResult",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 24,
      "complexity": 1,
      "docstring": "\u5de5\u4f5c\u6d41\u6267\u884c\u7ed3\u679c\u5b9e\u4f53 - \u5c01\u88c5\u8ba4\u77e5\u5de5\u4f5c\u6d41\u4efb\u52a1\u6267\u884c\u7684\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "is_error",
        "get_error_message",
        "to_dict"
      ],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:WorkflowResult"
    },
    {
      "type": "class",
      "name": "ProductionRule",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 56,
      "complexity": 1,
      "docstring": "\u4ea7\u751f\u5f0f\u89c4\u5219\u5b9e\u4f53 - \u7cfb\u7edf\u7684\u6838\u5fc3\u4e1a\u52a1\u89c4\u5219\uff08\u7c7b\u578b\u5c42\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__post_init__",
        "is_applicable",
        "update_priority",
        "to_dict"
      ],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:ProductionRule"
    },
    {
      "type": "class",
      "name": "RuleExecution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 121,
      "complexity": 1,
      "docstring": "\u89c4\u5219\u6267\u884c\u5b9e\u4f53 - \u8bb0\u5f55\u5177\u4f53\u89c4\u5219\u7684\u6267\u884c\u5b9e\u4f8b\uff08\u5b9e\u4f8b\u5c42\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__post_init__",
        "is_successful",
        "get_execution_duration",
        "mark_completed",
        "mark_failed"
      ],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:RuleExecution"
    },
    {
      "type": "class",
      "name": "WorkflowState",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 169,
      "complexity": 1,
      "docstring": "\u589e\u5f3a\u7248\u5de5\u4f5c\u6d41\u72b6\u6001\u7ba1\u7406 - \u89e3\u51b3\u6b7b\u5faa\u73af\u95ee\u9898\u7684\u6838\u5fc3\u7c7b\n\n\u65b0\u589e\u529f\u80fd:\n- \u6267\u884c\u89c4\u5219\u5386\u53f2\u8ddf\u8e2a\n- \u5b8c\u6210\u4efb\u52a1\u5217\u8868\u7ba1\u7406\n- \u5931\u8d25\u5c1d\u8bd5\u8bb0\u5f55\n- \u5faa\u73af\u68c0\u6d4b\u673a\u5236",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__post_init__",
        "mark_rule_executed",
        "is_rule_executed",
        "add_completed_task",
        "get_rule_failure_count",
        "should_skip_rule",
        "detect_potential_loop",
        "generate_state_fingerprint",
        "check_state_cycle",
        "get_available_rules",
        "reset_rule_execution_state",
        "get_execution_summary",
        "update_from_result",
        "to_dict"
      ],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:WorkflowState"
    },
    {
      "type": "class",
      "name": "GlobalState",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 374,
      "complexity": 1,
      "docstring": "\u5168\u5c40\u72b6\u6001\u5b9e\u4f53 - \u7cfb\u7edf\u7684\u5168\u5c40\u72b6\u6001\u7ba1\u7406\uff08\u4fdd\u6301\u5411\u540e\u517c\u5bb9\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__post_init__",
        "update_from_result",
        "get_context_value",
        "set_context_value",
        "merge_context",
        "to_dict"
      ],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:GlobalState"
    },
    {
      "type": "class",
      "name": "RuleSet",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 450,
      "complexity": 1,
      "docstring": "\u89c4\u5219\u96c6\u5b9e\u4f53 - \u7ba1\u7406\u4e00\u7ec4\u76f8\u5173\u7684\u4ea7\u751f\u5f0f\u89c4\u5219",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__post_init__",
        "add_rule",
        "remove_rule",
        "get_rules_by_phase",
        "get_rules_by_priority",
        "activate",
        "complete"
      ],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:RuleSet"
    },
    {
      "type": "class",
      "name": "DecisionResult",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 528,
      "complexity": 1,
      "docstring": "\u51b3\u7b56\u7ed3\u679c\u5b9e\u4f53 - \u5c01\u88c5\u4ea7\u751f\u5f0f\u89c4\u5219\u5de5\u4f5c\u6d41\u51b3\u7b56\u8fc7\u7a0b\u7684\u7ed3\u679c\n\n\u8be5\u7c7b\u4ee3\u8868LLM\u51b3\u7b56\u5f15\u64ce\u5728\u5206\u6790\u5f53\u524d\u72b6\u6001\u548c\u53ef\u7528\u89c4\u5219\u540e\u505a\u51fa\u7684\u667a\u80fd\u51b3\u7b56\u3002\n\u51b3\u7b56\u7ed3\u679c\u5305\u542b\u5177\u4f53\u7684\u884c\u52a8\u6307\u4ee4\u3001\u7f6e\u4fe1\u5ea6\u8bc4\u4f30\u548c\u8be6\u7ec6\u63a8\u7406\u8fc7\u7a0b\u3002\n\nAttributes:\n    selected_rule (Optional[ProductionRule]): \u88ab\u9009\u4e2d\u6267\u884c\u7684\u89c4\u5219\n        - \u5f53 decision_type == EXECUTE_SELECTED_RULE \u65f6\uff0c\u5305\u542b\u8981\u6267\u884c\u7684\u5177\u4f53\u89c4\u5219\u5bf9\u8c61\n        - \u5f53 decision_type == ADD_RULE \u6216 GOAL_FAILED \u65f6\uff0c\u4e3a None\n        - \u89c4\u5219\u5bf9\u8c61\u5305\u542b\u5b8c\u6574\u7684\u6761\u4ef6(IF)\u3001\u52a8\u4f5c(THEN)\u3001\u667a\u80fd\u4f53\u80fd\u529b\u7b49\u4fe1\u606f\n        \n    decision_type (DecisionType): \u51b3\u7b56\u7c7b\u578b\uff0c\u6307\u793a\u63a5\u4e0b\u6765\u5e94\u8be5\u91c7\u53d6\u7684\u884c\u52a8\n        - EXECUTE_SELECTED_RULE: \u6267\u884c\u73b0\u6709\u89c4\u5219\uff08\u6700\u5e38\u89c1\u7684\u51b3\u7b56\uff09\n        - ADD_RULE: \u751f\u6210\u65b0\u89c4\u5219\u6765\u5904\u7406\u5f53\u524d\u60c5\u51b5\n        - GOAL_ACHIEVED: \u5de5\u4f5c\u6d41\u76ee\u6807\u5df2\u6210\u529f\u8fbe\u6210\n        - GOAL_FAILED: \u76ee\u6807\u6267\u884c\u5931\u8d25\uff0c\u65e0\u6cd5\u7ee7\u7eed\u63a8\u8fdb\n        \n    confidence (float): \u51b3\u7b56\u7f6e\u4fe1\u5ea6\uff0c\u8303\u56f4 [0.0, 1.0]\n        - 0.9-1.0: \u9ad8\u7f6e\u4fe1\u5ea6\uff0cLLM\u5bf9\u51b3\u7b56\u975e\u5e38\u786e\u4fe1\n        - 0.7-0.8: \u4e2d\u7b49\u7f6e\u4fe1\u5ea6\uff0c\u51b3\u7b56\u5408\u7406\u4f46\u53ef\u80fd\u9700\u8981\u76d1\u63a7\n        - 0.5-0.6: \u4f4e\u7f6e\u4fe1\u5ea6\uff0c\u51b3\u7b56\u4e0d\u786e\u5b9a\uff0c\u5efa\u8bae\u4eba\u5de5\u5ba1\u6838\n        - 0.0-0.4: \u6781\u4f4e\u7f6e\u4fe1\u5ea6\uff0c\u53ef\u80fd\u9700\u8981\u91cd\u65b0\u5206\u6790\u6216\u83b7\u53d6\u66f4\u591a\u4fe1\u606f\n        \n    reasoning (str): \u51b3\u7b56\u63a8\u7406\u8fc7\u7a0b\u7684\u8be6\u7ec6\u8bf4\u660e\n        - \u89e3\u91ca\u4e3a\u4ec0\u4e48\u9009\u62e9\u4e86\u7279\u5b9a\u7684\u51b3\u7b56\u7c7b\u578b\n        - \u63cf\u8ff0\u5206\u6790\u8fc7\u7a0b\u4e2d\u8003\u8651\u7684\u5173\u952e\u56e0\u7d20\n        - \u8bf4\u660e\u89c4\u5219\u5339\u914d\u6216\u65b0\u89c4\u5219\u751f\u6210\u7684\u7406\u7531\n        - \u63d0\u4f9b\u4eba\u7c7b\u53ef\u7406\u89e3\u7684\u51b3\u7b56\u4f9d\u636e\uff0c\u4fbf\u4e8e\u8c03\u8bd5\u548c\u4f18\u5316\n        \n    context (Dict[str, Any]): \u51b3\u7b56\u4e0a\u4e0b\u6587\u4fe1\u606f\n        - state_description: \u51b3\u7b56\u65f6\u7684\u72b6\u6001\u63cf\u8ff0\n        - total_applicable_rules: \u53ef\u7528\u89c4\u5219\u603b\u6570\n        - relevance_score: \u89c4\u5219\u76f8\u5173\u6027\u8bc4\u5206\n        - selection_method: \u9009\u62e9\u65b9\u6cd5\u6807\u8bc6\n        - alternative_options: \u5907\u9009\u65b9\u6848\u4fe1\u606f\n        - \u5176\u4ed6\u4e0e\u51b3\u7b56\u8fc7\u7a0b\u76f8\u5173\u7684\u5143\u6570\u636e\n        \n    new_rules (List[ProductionRule]): \u65b0\u751f\u6210\u7684\u89c4\u5219\u5217\u8868\n        - \u5f53 decision_type == ADD_RULE \u65f6\uff0c\u5305\u542bLLM\u751f\u6210\u7684\u65b0\u89c4\u5219\n        - \u6bcf\u4e2a\u89c4\u5219\u90fd\u662f\u5b8c\u6574\u7684 ProductionRule \u5bf9\u8c61\uff0c\u53ef\u4ee5\u7acb\u5373\u6dfb\u52a0\u5230\u89c4\u5219\u96c6\u4e2d\n        - \u89c4\u5219\u6309\u4f18\u5148\u7ea7\u6392\u5e8f\uff0c\u4f18\u5148\u7ea7\u9ad8\u7684\u89c4\u5219\u5728\u5217\u8868\u524d\u9762\n        - \u5f53 decision_type != ADD_RULE \u65f6\uff0c\u6b64\u5217\u8868\u4e3a\u7a7a\n        \n\u4f7f\u7528\u793a\u4f8b:\n    # \u6267\u884c\u89c4\u5219\u51b3\u7b56\n    if decision.decision_type == DecisionType.EXECUTE_SELECTED_RULE:\n        rule = decision.selected_rule\n        print(f\"\u6267\u884c\u89c4\u5219: {rule.name}, \u7f6e\u4fe1\u5ea6: {decision.confidence}\")\n        \n    # \u6dfb\u52a0\u65b0\u89c4\u5219\u51b3\u7b56  \n    elif decision.decision_type == DecisionType.ADD_RULE:\n        for rule in decision.new_rules:\n            rule_set.add_rule(rule)\n        print(f\"\u6dfb\u52a0\u4e86 {len(decision.new_rules)} \u4e2a\u65b0\u89c4\u5219\")\n        \n    # \u76ee\u6807\u5b8c\u6210\u51b3\u7b56\n    elif decision.decision_type == DecisionType.GOAL_ACHIEVED:\n        print(\"\u5de5\u4f5c\u6d41\u76ee\u6807\u5df2\u8fbe\u6210\uff01\")\n        \n\u6ce8\u610f\u4e8b\u9879:\n    - \u51b3\u7b56\u7ed3\u679c\u662f\u4e0d\u53ef\u53d8\u7684\uff0c\u4e00\u65e6\u521b\u5efa\u5c31\u4e0d\u5e94\u4fee\u6539\n    - confidence \u503c\u5e94\u8be5\u4e0e reasoning \u7684\u63cf\u8ff0\u4e00\u81f4\n    - selected_rule \u548c new_rules \u662f\u4e92\u65a5\u7684\uff0c\u4e0d\u4f1a\u540c\u65f6\u5305\u542b\u5185\u5bb9\n    - context \u5b57\u6bb5\u7528\u4e8e\u5b58\u50a8\u8c03\u8bd5\u548c\u5206\u6790\u4fe1\u606f\uff0c\u4e0d\u5f71\u54cd\u51b3\u7b56\u6267\u884c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "is_execution_decision",
        "is_goal_completion",
        "get_decision_summary"
      ],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:DecisionResult"
    },
    {
      "type": "class",
      "name": "AgentRegistry",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 628,
      "complexity": 1,
      "docstring": "\u667a\u80fd\u4f53\u6ce8\u518c\u8868\u5b9e\u4f53 - \u76f4\u63a5\u7ba1\u7406Agent\u5b9e\u4f8b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "register_agent",
        "get_agent",
        "find_agents_by_specification",
        "list_all_agents",
        "get_agent_specifications",
        "remove_agent"
      ],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:AgentRegistry"
    },
    {
      "type": "class",
      "name": "RuleSetExecution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 669,
      "complexity": 1,
      "docstring": "\u89c4\u5219\u96c6\u6267\u884c\u5b9e\u4f53 - \u7ba1\u7406\u89c4\u5219\u96c6\u7684\u6267\u884c\u5b9e\u4f8b\uff08\u5b9e\u4f8b\u5c42\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "add_rule_execution",
        "get_latest_execution",
        "is_completed",
        "mark_completed",
        "to_dict"
      ],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:RuleSetExecution"
    },
    {
      "type": "function",
      "name": "is_error",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 33,
      "complexity": 1,
      "docstring": "\u662f\u5426\u4e3a\u9519\u8bef\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:is_error"
    },
    {
      "type": "function",
      "name": "get_error_message",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 37,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u9519\u8bef\u6d88\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:get_error_message"
    },
    {
      "type": "function",
      "name": "to_dict",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 697,
      "complexity": 1,
      "docstring": "\u8f6c\u6362\u4e3a\u5b57\u5178\u683c\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.global_state.to_dict",
        "self.completed_at.isoformat"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:to_dict"
    },
    {
      "type": "function",
      "name": "__post_init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 461,
      "complexity": 1,
      "docstring": "\u521d\u59cb\u5316\u540e\u9a8c\u8bc1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:__post_init__"
    },
    {
      "type": "function",
      "name": "is_applicable",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 78,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u89c4\u5219\u662f\u5426\u9002\u7528\u4e8e\u5f53\u524d\u72b6\u6001\n\n\u6ce8\u610f\uff1a\u8fd9\u662f\u4e00\u4e2a\u5360\u4f4d\u7b26\u65b9\u6cd5\uff0c\u5b9e\u9645\u7684\u8bed\u4e49\u5339\u914d\u5df2\u96c6\u6210\u5230RuleEngineService\u4e2d\n\u8fd9\u91cc\u53ea\u505a\u57fa\u672c\u7684\u7ed3\u6784\u5316\u68c0\u67e5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "global_state"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.condition.strip"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:is_applicable"
    },
    {
      "type": "function",
      "name": "update_priority",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 96,
      "complexity": 1,
      "docstring": "\u66f4\u65b0\u89c4\u5219\u4f18\u5148\u7ea7",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "new_priority"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "ValueError"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:update_priority"
    },
    {
      "type": "function",
      "name": "is_successful",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 140,
      "complexity": 1,
      "docstring": "\u662f\u5426\u6267\u884c\u6210\u529f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:is_successful"
    },
    {
      "type": "function",
      "name": "get_execution_duration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 146,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6267\u884c\u6301\u7eed\u65f6\u95f4\uff08\u79d2\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:get_execution_duration"
    },
    {
      "type": "function",
      "name": "mark_completed",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 692,
      "complexity": 1,
      "docstring": "\u6807\u8bb0\u6267\u884c\u5b8c\u6210",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "success"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "datetime.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:mark_completed"
    },
    {
      "type": "function",
      "name": "mark_failed",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 160,
      "complexity": 1,
      "docstring": "\u6807\u8bb0\u6267\u884c\u5931\u8d25",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "error_message"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "datetime.now",
        "WorkflowResult"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:mark_failed"
    },
    {
      "type": "function",
      "name": "mark_rule_executed",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 204,
      "complexity": 1,
      "docstring": "\u6807\u8bb0\u89c4\u5219\u5df2\u6267\u884c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule_id",
        "success"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.executed_rules.add",
        "self.failed_attempts.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:mark_rule_executed"
    },
    {
      "type": "function",
      "name": "is_rule_executed",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 219,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u89c4\u5219\u662f\u5426\u5df2\u6267\u884c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:is_rule_executed"
    },
    {
      "type": "function",
      "name": "add_completed_task",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 223,
      "complexity": 1,
      "docstring": "\u6dfb\u52a0\u5df2\u5b8c\u6210\u4efb\u52a1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "task_description"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.completed_tasks.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:add_completed_task"
    },
    {
      "type": "function",
      "name": "get_rule_failure_count",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 228,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u89c4\u5219\u5931\u8d25\u6b21\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.failed_attempts.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:get_rule_failure_count"
    },
    {
      "type": "function",
      "name": "should_skip_rule",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 232,
      "complexity": 1,
      "docstring": "\u5224\u65ad\u662f\u5426\u5e94\u8be5\u8df3\u8fc7\u89c4\u5219\uff08\u5931\u8d25\u6b21\u6570\u8fc7\u591a\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule_id",
        "max_failures"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.get_rule_failure_count"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:should_skip_rule"
    },
    {
      "type": "function",
      "name": "detect_potential_loop",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 236,
      "complexity": 1,
      "docstring": "\u68c0\u6d4b\u6f5c\u5728\u7684\u6b7b\u5faa\u73af",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "max_consecutive"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:detect_potential_loop"
    },
    {
      "type": "function",
      "name": "generate_state_fingerprint",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 240,
      "complexity": 1,
      "docstring": "\u751f\u6210\u72b6\u6001\u6307\u7eb9\u7528\u4e8e\u5faa\u73af\u68c0\u6d4b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "json.dumps",
        "sorted",
        "hashlib.md5(fingerprint_str.encode()).hexdigest",
        "list",
        "hashlib.md5",
        "fingerprint_str.encode"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:generate_state_fingerprint"
    },
    {
      "type": "function",
      "name": "check_state_cycle",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 255,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u72b6\u6001\u662f\u5426\u9677\u5165\u5faa\u73af",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "lookback_window"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.generate_state_fingerprint",
        "self.state_fingerprints.append",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:check_state_cycle"
    },
    {
      "type": "function",
      "name": "get_available_rules",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 273,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u53ef\u6267\u884c\u7684\u89c4\u5219\u5217\u8868\uff08\u8fc7\u6ee4\u5df2\u6267\u884c\u548c\u5931\u8d25\u8fc7\u591a\u7684\u89c4\u5219\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "all_rules"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.is_rule_executed",
        "self.should_skip_rule",
        "available_rules.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:get_available_rules"
    },
    {
      "type": "function",
      "name": "reset_rule_execution_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 290,
      "complexity": 1,
      "docstring": "\u91cd\u7f6e\u89c4\u5219\u6267\u884c\u72b6\u6001\uff08\u7528\u4e8e\u9519\u8bef\u6062\u590d\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.executed_rules.discard"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:reset_rule_execution_state"
    },
    {
      "type": "function",
      "name": "get_execution_summary",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 296,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6267\u884c\u6458\u8981\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "len",
        "sum",
        "self.detect_potential_loop",
        "self.failed_attempts.values",
        "self.check_state_cycle",
        "max",
        "self.failed_attempts.items"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:get_execution_summary"
    },
    {
      "type": "function",
      "name": "update_from_result",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 391,
      "complexity": 1,
      "docstring": "\u6839\u636e\u6267\u884c\u7ed3\u679c\u66f4\u65b0\u72b6\u6001\uff0c\u8fd4\u56de\u65b0\u7684\u72b6\u6001\u5b9e\u4f8b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "execution_result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "GlobalState",
        "new_state.execution_history.append",
        "new_state.context_variables.update",
        "self.context_variables.copy",
        "self.execution_history.copy",
        "isinstance"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:update_from_result"
    },
    {
      "type": "function",
      "name": "get_context_value",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 421,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u4e0a\u4e0b\u6587\u53d8\u91cf\u503c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "key"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.context_variables.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:get_context_value"
    },
    {
      "type": "function",
      "name": "set_context_value",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 425,
      "complexity": 1,
      "docstring": "\u8bbe\u7f6e\u4e0a\u4e0b\u6587\u53d8\u91cf\u503c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "key",
        "value"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:set_context_value"
    },
    {
      "type": "function",
      "name": "merge_context",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 430,
      "complexity": 1,
      "docstring": "\u5408\u5e76\u4e0a\u4e0b\u6587\u53d8\u91cf",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.context_variables.update"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:merge_context"
    },
    {
      "type": "function",
      "name": "add_rule",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 467,
      "complexity": 1,
      "docstring": "\u6dfb\u52a0\u89c4\u5219",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.rules.append",
        "RuleModification",
        "self.modification_history.append",
        "ValueError",
        "rule.to_dict",
        "datetime.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:add_rule"
    },
    {
      "type": "function",
      "name": "remove_rule",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 486,
      "complexity": 1,
      "docstring": "\u5220\u9664\u89c4\u5219",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "len",
        "RuleModification",
        "self.modification_history.append",
        "datetime.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:remove_rule"
    },
    {
      "type": "function",
      "name": "get_rules_by_phase",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 508,
      "complexity": 1,
      "docstring": "\u6839\u636e\u9636\u6bb5\u83b7\u53d6\u89c4\u5219",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "phase"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:get_rules_by_phase"
    },
    {
      "type": "function",
      "name": "get_rules_by_priority",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 512,
      "complexity": 1,
      "docstring": "\u6839\u636e\u4f18\u5148\u7ea7\u6392\u5e8f\u83b7\u53d6\u89c4\u5219",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "descending"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "sorted"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:get_rules_by_priority"
    },
    {
      "type": "function",
      "name": "activate",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 516,
      "complexity": 1,
      "docstring": "\u6fc0\u6d3b\u89c4\u5219\u96c6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:activate"
    },
    {
      "type": "function",
      "name": "complete",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 521,
      "complexity": 1,
      "docstring": "\u6807\u8bb0\u89c4\u5219\u96c6\u5b8c\u6210",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:complete"
    },
    {
      "type": "function",
      "name": "is_execution_decision",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 603,
      "complexity": 1,
      "docstring": "\u662f\u5426\u4e3a\u6267\u884c\u51b3\u7b56",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:is_execution_decision"
    },
    {
      "type": "function",
      "name": "is_goal_completion",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 607,
      "complexity": 1,
      "docstring": "\u662f\u5426\u4e3a\u76ee\u6807\u5b8c\u6210",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:is_goal_completion"
    },
    {
      "type": "function",
      "name": "get_decision_summary",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 611,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u51b3\u7b56\u6458\u8981",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:get_decision_summary"
    },
    {
      "type": "function",
      "name": "register_agent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 632,
      "complexity": 1,
      "docstring": "\u6ce8\u518cAgent\u5b9e\u4f8b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "name",
        "agent"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:register_agent"
    },
    {
      "type": "function",
      "name": "get_agent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 636,
      "complexity": 1,
      "docstring": "\u83b7\u53d6Agent\u5b9e\u4f8b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "name"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "ValueError"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:get_agent"
    },
    {
      "type": "function",
      "name": "find_agents_by_specification",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 642,
      "complexity": 1,
      "docstring": "\u6839\u636e\u4efb\u52a1\u63cf\u8ff0\u67e5\u627e\u5408\u9002\u7684Agent\uff0c\u8fd4\u56de(name, agent)\u5143\u7ec4\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "task_description"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.agents.items",
        "hasattr"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:find_agents_by_specification"
    },
    {
      "type": "function",
      "name": "list_all_agents",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 649,
      "complexity": 1,
      "docstring": "\u5217\u51fa\u6240\u6709Agent\u5b9e\u4f8b\uff0c\u8fd4\u56de(name, agent)\u5143\u7ec4\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "list",
        "self.agents.items"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:list_all_agents"
    },
    {
      "type": "function",
      "name": "get_agent_specifications",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 653,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6240\u6709Agent\u7684\u80fd\u529b\u89c4\u8303",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "getattr",
        "self.agents.items"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:get_agent_specifications"
    },
    {
      "type": "function",
      "name": "remove_agent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 660,
      "complexity": 1,
      "docstring": "\u79fb\u9664Agent\u5b9e\u4f8b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "name"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:remove_agent"
    },
    {
      "type": "function",
      "name": "add_rule_execution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 680,
      "complexity": 1,
      "docstring": "\u6dfb\u52a0\u89c4\u5219\u6267\u884c\u8bb0\u5f55",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule_execution"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.rule_executions.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:add_rule_execution"
    },
    {
      "type": "function",
      "name": "get_latest_execution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 684,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6700\u65b0\u7684\u89c4\u5219\u6267\u884c\u8bb0\u5f55",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:get_latest_execution"
    },
    {
      "type": "function",
      "name": "is_completed",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py",
      "line_number": 688,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u6267\u884c\u662f\u5426\u5b8c\u6210",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/entities.py:is_completed"
    },
    {
      "type": "class",
      "name": "ConcurrentSafeIdGenerator",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/utils/concurrent_safe_id_generator.py",
      "line_number": 19,
      "complexity": 1,
      "docstring": "\u5e76\u53d1\u5b89\u5168\u7684ID\u751f\u6210\u5668\n\n\u7279\u6027\uff1a\n1. \u8fdb\u7a0b\u5185\u552f\u4e00\u6027\u4fdd\u8bc1\uff08\u5185\u5b58\u9501\uff09\n2. \u8fdb\u7a0b\u95f4\u552f\u4e00\u6027\u4fdd\u8bc1\uff08\u6587\u4ef6\u9501\uff09\n3. \u65f6\u95f4\u6233+\u968f\u673a+\u8fdb\u7a0bID\u7ec4\u5408\n4. \u51b2\u7a81\u68c0\u6d4b\u548c\u91cd\u8bd5\u673a\u5236",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__new__",
        "__init__",
        "generate_workflow_id",
        "generate_rule_set_id",
        "generate_state_id",
        "generate_execution_id",
        "release_workflow_id",
        "_generate_unique_workflow_id",
        "_get_next_counter",
        "_check_file_system_uniqueness",
        "_acquire_id_lock"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/utils/concurrent_safe_id_generator.py:ConcurrentSafeIdGenerator"
    },
    {
      "type": "class",
      "name": "SafeFileOperations",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/utils/concurrent_safe_id_generator.py",
      "line_number": 173,
      "complexity": 1,
      "docstring": "\u5b89\u5168\u7684\u6587\u4ef6\u64cd\u4f5c\u5de5\u5177\u7c7b\n\n\u63d0\u4f9b\u539f\u5b50\u6027\u6587\u4ef6\u5199\u5165\u548c\u51b2\u7a81\u5904\u7406\u673a\u5236\u3002",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "atomic_write_json",
        "safe_read_json",
        "check_file_conflict"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/utils/concurrent_safe_id_generator.py:SafeFileOperations"
    },
    {
      "type": "function",
      "name": "__new__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/utils/concurrent_safe_id_generator.py",
      "line_number": 34,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "cls"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "super().__new__",
        "super"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/utils/concurrent_safe_id_generator.py:__new__"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/utils/concurrent_safe_id_generator.py",
      "line_number": 42,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "os.getpid",
        "threading.get_ident",
        "Path",
        "self.lock_dir.mkdir"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/utils/concurrent_safe_id_generator.py:__init__"
    },
    {
      "type": "function",
      "name": "generate_workflow_id",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/utils/concurrent_safe_id_generator.py",
      "line_number": 51,
      "complexity": 1,
      "docstring": "\u751f\u6210\u5e76\u53d1\u5b89\u5168\u7684\u5de5\u4f5c\u6d41ID\n\nArgs:\n    goal: \u5de5\u4f5c\u6d41\u76ee\u6807\n    max_retries: \u6700\u5927\u91cd\u8bd5\u6b21\u6570\n    \nReturns:\n    str: \u552f\u4e00\u7684\u5de5\u4f5c\u6d41ID\n    \nRaises:\n    RuntimeError: \u5982\u679c\u8d85\u8fc7\u6700\u5927\u91cd\u8bd5\u6b21\u6570\u4ecd\u7136\u51b2\u7a81",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "goal",
        "max_retries"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "range",
        "RuntimeError",
        "self._generate_unique_workflow_id",
        "time.sleep",
        "self._check_file_system_uniqueness",
        "self._acquire_id_lock",
        "self._generated_ids.add"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/utils/concurrent_safe_id_generator.py:generate_workflow_id"
    },
    {
      "type": "function",
      "name": "generate_rule_set_id",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/utils/concurrent_safe_id_generator.py",
      "line_number": 83,
      "complexity": 1,
      "docstring": "\u751f\u6210\u89c4\u5219\u96c6ID",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "goal"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "int",
        "hashlib.md5(goal.encode('utf-8')).hexdigest",
        "time.time",
        "self._get_next_counter",
        "hashlib.md5",
        "goal.encode"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/utils/concurrent_safe_id_generator.py:generate_rule_set_id"
    },
    {
      "type": "function",
      "name": "generate_state_id",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/utils/concurrent_safe_id_generator.py",
      "line_number": 89,
      "complexity": 1,
      "docstring": "\u751f\u6210\u72b6\u6001ID",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "workflow_id",
        "iteration"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "int",
        "time.time",
        "self._get_next_counter"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/utils/concurrent_safe_id_generator.py:generate_state_id"
    },
    {
      "type": "function",
      "name": "generate_execution_id",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/utils/concurrent_safe_id_generator.py",
      "line_number": 94,
      "complexity": 1,
      "docstring": "\u751f\u6210\u6267\u884c\u8bb0\u5f55ID",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "rule_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "int",
        "hashlib.md5(rule_id.encode('utf-8')).hexdigest",
        "time.time",
        "self._get_next_counter",
        "hashlib.md5",
        "rule_id.encode"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/utils/concurrent_safe_id_generator.py:generate_execution_id"
    },
    {
      "type": "function",
      "name": "release_workflow_id",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/utils/concurrent_safe_id_generator.py",
      "line_number": 100,
      "complexity": 1,
      "docstring": "\u91ca\u653e\u5de5\u4f5c\u6d41ID\uff08\u5de5\u4f5c\u6d41\u5b8c\u6210\u65f6\u8c03\u7528\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "workflow_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self._generated_ids.discard",
        "lock_file.exists",
        "lock_file.unlink"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/utils/concurrent_safe_id_generator.py:release_workflow_id"
    },
    {
      "type": "function",
      "name": "_generate_unique_workflow_id",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/utils/concurrent_safe_id_generator.py",
      "line_number": 113,
      "complexity": 1,
      "docstring": "\u751f\u6210\u57fa\u7840\u7684\u5de5\u4f5c\u6d41ID",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "goal"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "datetime.now",
        "self._get_next_counter",
        "''.join",
        "now.strftime",
        "uuid.uuid4",
        "c.isalnum"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/utils/concurrent_safe_id_generator.py:_generate_unique_workflow_id"
    },
    {
      "type": "function",
      "name": "_get_next_counter",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/utils/concurrent_safe_id_generator.py",
      "line_number": 133,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u4e0b\u4e00\u4e2a\u8ba1\u6570\u5668\u503c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/utils/concurrent_safe_id_generator.py:_get_next_counter"
    },
    {
      "type": "function",
      "name": "_check_file_system_uniqueness",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/utils/concurrent_safe_id_generator.py",
      "line_number": 138,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684\u552f\u4e00\u6027",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "workflow_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Path",
        "state_dir.exists",
        "Path",
        "rules_dir.exists",
        "state_dir.glob",
        "rules_dir.glob",
        "state_file.exists",
        "rules_file.exists"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/utils/concurrent_safe_id_generator.py:_check_file_system_uniqueness"
    },
    {
      "type": "function",
      "name": "_acquire_id_lock",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/utils/concurrent_safe_id_generator.py",
      "line_number": 156,
      "complexity": 1,
      "docstring": "\u83b7\u53d6ID\u9501",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "workflow_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "open",
        "f.write",
        "datetime.now().isoformat",
        "datetime.now"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/utils/concurrent_safe_id_generator.py:_acquire_id_lock"
    },
    {
      "type": "function",
      "name": "atomic_write_json",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/utils/concurrent_safe_id_generator.py",
      "line_number": 181,
      "complexity": 1,
      "docstring": "\u539f\u5b50\u6027\u5199\u5165JSON\u6587\u4ef6\n\nArgs:\n    file_path: \u6587\u4ef6\u8def\u5f84\n    data: \u8981\u5199\u5165\u7684\u6570\u636e\n    max_retries: \u6700\u5927\u91cd\u8bd5\u6b21\u6570\n    \nReturns:\n    bool: \u662f\u5426\u5199\u5165\u6210\u529f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "file_path",
        "data",
        "max_retries"
      ],
      "decorators": [
        "staticmethod"
      ],
      "inheritance": [],
      "calls": [
        "range",
        "file_path.parent.mkdir",
        "shutil.move",
        "tempfile.NamedTemporaryFile",
        "json.dump",
        "temp_file.flush",
        "os.fsync",
        "time.sleep",
        "temp_file.fileno",
        "locals",
        "Path(temp_path).unlink",
        "Path"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/utils/concurrent_safe_id_generator.py:atomic_write_json"
    },
    {
      "type": "function",
      "name": "safe_read_json",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/utils/concurrent_safe_id_generator.py",
      "line_number": 236,
      "complexity": 1,
      "docstring": "\u5b89\u5168\u8bfb\u53d6JSON\u6587\u4ef6\n\nArgs:\n    file_path: \u6587\u4ef6\u8def\u5f84\n    max_retries: \u6700\u5927\u91cd\u8bd5\u6b21\u6570\n    \nReturns:\n    Optional[dict]: \u8bfb\u53d6\u7684\u6570\u636e\uff0c\u5931\u8d25\u8fd4\u56deNone",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "file_path",
        "max_retries"
      ],
      "decorators": [
        "staticmethod"
      ],
      "inheritance": [],
      "calls": [
        "range",
        "file_path.exists",
        "open",
        "json.load",
        "time.sleep"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/utils/concurrent_safe_id_generator.py:safe_read_json"
    },
    {
      "type": "function",
      "name": "check_file_conflict",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/utils/concurrent_safe_id_generator.py",
      "line_number": 267,
      "complexity": 1,
      "docstring": "\u68c0\u67e5\u6587\u4ef6\u662f\u5426\u5b58\u5728\u51b2\u7a81\n\nArgs:\n    file_path: \u6587\u4ef6\u8def\u5f84\n    \nReturns:\n    bool: \u662f\u5426\u5b58\u5728\u51b2\u7a81",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "file_path"
      ],
      "decorators": [
        "staticmethod"
      ],
      "inheritance": [],
      "calls": [
        "file_path.exists",
        "open"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/utils/concurrent_safe_id_generator.py:check_file_conflict"
    },
    {
      "type": "class",
      "name": "TestAgentBasic",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py",
      "line_number": 19,
      "complexity": 1,
      "docstring": "Agent\u57fa\u7840\u529f\u80fd\u6d4b\u8bd5\uff08\u4e0d\u9700\u8981API\u5bc6\u94a5\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_agent_initialization_basic",
        "test_agent_initialization_with_options"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py:TestAgentBasic"
    },
    {
      "type": "class",
      "name": "TestAgentExecution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py",
      "line_number": 63,
      "complexity": 1,
      "docstring": "Agent\u6267\u884c\u529f\u80fd\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_simple_task_execution_sync",
        "test_arithmetic_task_execution",
        "test_data_structure_task",
        "test_loop_and_condition_task"
      ],
      "parameters": [],
      "decorators": [
        "unittest.skipUnless(os.getenv('DEEPSEEK_API_KEY'), '\u9700\u8981DEEPSEEK_API_KEY\u73af\u5883\u53d8\u91cf')"
      ],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py:TestAgentExecution"
    },
    {
      "type": "class",
      "name": "TestAgentStreamExecution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py",
      "line_number": 116,
      "complexity": 1,
      "docstring": "Agent\u6d41\u5f0f\u6267\u884c\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_stream_execution_basic",
        "test_stream_execution_with_error_recovery",
        "test_stream_execution_complex_task"
      ],
      "parameters": [],
      "decorators": [
        "unittest.skipUnless(os.getenv('DEEPSEEK_API_KEY'), '\u9700\u8981DEEPSEEK_API_KEY\u73af\u5883\u53d8\u91cf')"
      ],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py:TestAgentStreamExecution"
    },
    {
      "type": "class",
      "name": "TestAgentChatFunctionality",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py",
      "line_number": 184,
      "complexity": 1,
      "docstring": "Agent\u804a\u5929\u529f\u80fd\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_chat_sync_basic",
        "test_chat_stream_basic",
        "test_chat_with_json_format"
      ],
      "parameters": [],
      "decorators": [
        "unittest.skipUnless(os.getenv('DEEPSEEK_API_KEY'), '\u9700\u8981DEEPSEEK_API_KEY\u73af\u5883\u53d8\u91cf')"
      ],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py:TestAgentChatFunctionality"
    },
    {
      "type": "class",
      "name": "TestAgentEvaluationSystem",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py",
      "line_number": 249,
      "complexity": 1,
      "docstring": "Agent\u8bc4\u4f30\u7cfb\u7edf\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_single_evaluator",
        "test_custom_evaluation_message",
        "test_multiple_evaluators"
      ],
      "parameters": [],
      "decorators": [
        "unittest.skipUnless(os.getenv('DEEPSEEK_API_KEY'), '\u9700\u8981DEEPSEEK_API_KEY\u73af\u5883\u53d8\u91cf')"
      ],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py:TestAgentEvaluationSystem"
    },
    {
      "type": "class",
      "name": "TestAgentKnowledgeManagement",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py",
      "line_number": 322,
      "complexity": 1,
      "docstring": "Agent\u77e5\u8bc6\u7ba1\u7406\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_knowledge_loading",
        "test_python_module_loading"
      ],
      "parameters": [],
      "decorators": [
        "unittest.skipUnless(os.getenv('DEEPSEEK_API_KEY'), '\u9700\u8981DEEPSEEK_API_KEY\u73af\u5883\u53d8\u91cf')"
      ],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py:TestAgentKnowledgeManagement"
    },
    {
      "type": "class",
      "name": "TestAgentConfigurationOptions",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py",
      "line_number": 366,
      "complexity": 1,
      "docstring": "Agent\u914d\u7f6e\u9009\u9879\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "test_skip_evaluation_option",
        "test_skip_generation_option",
        "test_both_skip_options",
        "test_max_retries_option"
      ],
      "parameters": [],
      "decorators": [
        "unittest.skipUnless(os.getenv('DEEPSEEK_API_KEY'), '\u9700\u8981DEEPSEEK_API_KEY\u73af\u5883\u53d8\u91cf')"
      ],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py:TestAgentConfigurationOptions"
    },
    {
      "type": "class",
      "name": "TestAgentComplexScenarios",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py",
      "line_number": 420,
      "complexity": 1,
      "docstring": "Agent\u590d\u6742\u573a\u666f\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_stateful_multi_step_task",
        "test_file_operation_task",
        "test_class_and_object_task",
        "test_error_recovery_scenario"
      ],
      "parameters": [],
      "decorators": [
        "unittest.skipUnless(os.getenv('DEEPSEEK_API_KEY'), '\u9700\u8981DEEPSEEK_API_KEY\u73af\u5883\u53d8\u91cf')"
      ],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py:TestAgentComplexScenarios"
    },
    {
      "type": "function",
      "name": "setUp",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py",
      "line_number": 423,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u524d\u51c6\u5907",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Agent"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py:setUp"
    },
    {
      "type": "function",
      "name": "test_agent_initialization_basic",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py",
      "line_number": 26,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5Agent\u57fa\u7840\u521d\u59cb\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Agent",
        "self.assertIsNotNone",
        "self.assertIsNotNone",
        "self.assertIsNotNone",
        "self.assertIsInstance",
        "self.assertGreater",
        "self.assertEqual",
        "self.assertFalse",
        "self.assertFalse",
        "os.getenv",
        "self.skipTest",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py:test_agent_initialization_basic"
    },
    {
      "type": "function",
      "name": "test_agent_initialization_with_options",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py",
      "line_number": 43,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5e26\u9009\u9879\u7684Agent\u521d\u59cb\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Agent",
        "self.assertEqual",
        "self.assertTrue",
        "self.assertTrue",
        "os.getenv",
        "self.skipTest"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py:test_agent_initialization_with_options"
    },
    {
      "type": "function",
      "name": "test_simple_task_execution_sync",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py",
      "line_number": 70,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u7b80\u5355\u4efb\u52a1\u540c\u6b65\u6267\u884c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.agent.execute_sync",
        "self.assertIsInstance",
        "self.assertTrue",
        "self.assertIn",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py:test_simple_task_execution_sync"
    },
    {
      "type": "function",
      "name": "test_arithmetic_task_execution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py",
      "line_number": 82,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u7b97\u672f\u4efb\u52a1\u6267\u884c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.agent.execute_sync",
        "self.assertTrue",
        "self.assertTrue",
        "print",
        "any",
        "str",
        "round"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py:test_arithmetic_task_execution"
    },
    {
      "type": "function",
      "name": "test_data_structure_task",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py",
      "line_number": 93,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6570\u636e\u7ed3\u6784\u4efb\u52a1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.agent.execute_sync",
        "self.assertTrue",
        "self.assertIn",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py:test_data_structure_task"
    },
    {
      "type": "function",
      "name": "test_loop_and_condition_task",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py",
      "line_number": 103,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5faa\u73af\u548c\u6761\u4ef6\u4efb\u52a1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.agent.execute_sync",
        "self.assertTrue",
        "self.assertIn",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py:test_loop_and_condition_task"
    },
    {
      "type": "function",
      "name": "test_stream_execution_basic",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py",
      "line_number": 123,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u57fa\u7840\u6d41\u5f0f\u6267\u884c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.agent.execute_stream",
        "self.assertIsNotNone",
        "self.assertTrue",
        "self.assertGreater",
        "self.assertIn",
        "print",
        "print",
        "isinstance",
        "len",
        "chunks.append",
        "isinstance",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py:test_stream_execution_basic"
    },
    {
      "type": "function",
      "name": "test_stream_execution_with_error_recovery",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py",
      "line_number": 146,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6d41\u5f0f\u6267\u884c\u7684\u9519\u8bef\u6062\u590d",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.agent.execute_stream",
        "self.assertTrue",
        "print",
        "isinstance",
        "any",
        "results.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py:test_stream_execution_with_error_recovery"
    },
    {
      "type": "function",
      "name": "test_stream_execution_complex_task",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py",
      "line_number": 162,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6d41\u5f0f\u6267\u884c\u590d\u6742\u4efb\u52a1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.agent.execute_stream",
        "self.assertIsNotNone",
        "self.assertTrue",
        "self.assertIn",
        "print",
        "isinstance",
        "final_result.code.lower",
        "isinstance"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py:test_stream_execution_complex_task"
    },
    {
      "type": "function",
      "name": "test_chat_sync_basic",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py",
      "line_number": 191,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u540c\u6b65\u804a\u5929\u57fa\u7840\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.agent.chat_sync",
        "self.assertIsInstance",
        "self.assertTrue",
        "self.assertIsNotNone",
        "self.assertIn",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py:test_chat_sync_basic"
    },
    {
      "type": "function",
      "name": "test_chat_stream_basic",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py",
      "line_number": 204,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6d41\u5f0f\u804a\u5929\u57fa\u7840\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.agent.chat_stream",
        "self.assertIsNotNone",
        "self.assertTrue",
        "self.assertGreater",
        "''.join",
        "self.assertTrue",
        "print",
        "print",
        "isinstance",
        "len",
        "any",
        "chunks.append",
        "isinstance",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py:test_chat_stream_basic"
    },
    {
      "type": "function",
      "name": "test_chat_with_json_format",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py",
      "line_number": 227,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5JSON\u683c\u5f0f\u804a\u5929",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.agent.chat_sync",
        "self.assertTrue",
        "self.assertIsNotNone",
        "json.loads",
        "self.assertIsInstance",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py:test_chat_with_json_format"
    },
    {
      "type": "function",
      "name": "test_single_evaluator",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py",
      "line_number": 256,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5355\u4e2a\u8bc4\u4f30\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.agent.execute_sync",
        "self.assertTrue",
        "self.assertIn",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py:test_single_evaluator"
    },
    {
      "type": "function",
      "name": "test_custom_evaluation_message",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py",
      "line_number": 266,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u81ea\u5b9a\u4e49\u8bc4\u4f30\u6d88\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.agent.loadEvaluationSystemMessage",
        "self.agent.execute_sync",
        "self.assertTrue",
        "self.assertIn",
        "print",
        "print",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py:test_custom_evaluation_message"
    },
    {
      "type": "function",
      "name": "test_multiple_evaluators",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py",
      "line_number": 290,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u591a\u4e2a\u8bc4\u4f30\u5668",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.agent.loadEvaluationSystemMessage",
        "self.agent.loadEvaluationSystemMessage",
        "self.agent.execute_sync",
        "self.assertTrue",
        "print",
        "print",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py:test_multiple_evaluators"
    },
    {
      "type": "function",
      "name": "test_knowledge_loading",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py",
      "line_number": 329,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u77e5\u8bc6\u52a0\u8f7d",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.agent.loadKnowledge",
        "self.agent.execute_sync",
        "self.assertTrue",
        "self.assertTrue",
        "print",
        "any",
        "str",
        "round"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py:test_knowledge_loading"
    },
    {
      "type": "function",
      "name": "test_python_module_loading",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py",
      "line_number": 348,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5Python\u6a21\u5757\u52a0\u8f7d",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.agent.loadPythonModules",
        "self.agent.execute_sync",
        "self.assertTrue",
        "self.assertIn",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py:test_python_module_loading"
    },
    {
      "type": "function",
      "name": "test_skip_evaluation_option",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py",
      "line_number": 369,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u8df3\u8fc7\u8bc4\u4f30\u9009\u9879",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Agent",
        "agent.execute_sync",
        "self.assertTrue",
        "self.assertIn",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py:test_skip_evaluation_option"
    },
    {
      "type": "function",
      "name": "test_skip_generation_option",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py",
      "line_number": 381,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u8df3\u8fc7\u751f\u6210\u9009\u9879",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Agent",
        "agent.execute_sync",
        "self.assertTrue",
        "self.assertIn",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py:test_skip_generation_option"
    },
    {
      "type": "function",
      "name": "test_both_skip_options",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py",
      "line_number": 393,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u540c\u65f6\u8df3\u8fc7\u8bc4\u4f30\u548c\u751f\u6210",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Agent",
        "agent.execute_sync",
        "self.assertTrue",
        "self.assertIn",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py:test_both_skip_options"
    },
    {
      "type": "function",
      "name": "test_max_retries_option",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py",
      "line_number": 410,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6700\u5927\u91cd\u8bd5\u6b21\u6570\u9009\u9879",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Agent",
        "self.assertEqual",
        "self.assertEqual",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py:test_max_retries_option"
    },
    {
      "type": "function",
      "name": "test_stateful_multi_step_task",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py",
      "line_number": 427,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6709\u72b6\u6001\u7684\u591a\u6b65\u9aa4\u4efb\u52a1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.agent.execute_sync",
        "self.assertTrue",
        "self.agent.execute_sync",
        "self.assertTrue",
        "self.assertIn",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py:test_stateful_multi_step_task"
    },
    {
      "type": "function",
      "name": "test_file_operation_task",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py",
      "line_number": 442,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6587\u4ef6\u64cd\u4f5c\u4efb\u52a1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.agent.execute_sync",
        "self.assertTrue",
        "self.assertIn",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py:test_file_operation_task"
    },
    {
      "type": "function",
      "name": "test_class_and_object_task",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py",
      "line_number": 455,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u7c7b\u548c\u5bf9\u8c61\u4efb\u52a1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.agent.execute_sync",
        "self.assertTrue",
        "self.assertIn",
        "print",
        "result.code.lower"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py:test_class_and_object_task"
    },
    {
      "type": "function",
      "name": "test_error_recovery_scenario",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py",
      "line_number": 468,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u9519\u8bef\u6062\u590d\u573a\u666f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.agent.execute_sync",
        "self.assertTrue",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_agent.py:test_error_recovery_scenario"
    },
    {
      "type": "class",
      "name": "EchoAgent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 13,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u7528\u7684\u56de\u663eAgent\uff0c\u8fd4\u56de\u8f93\u5165\u7684\u5185\u5bb9",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "execute_stream"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Agent"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:EchoAgent"
    },
    {
      "type": "class",
      "name": "TextLengthAgent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 49,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u7528\u7684\u6587\u672c\u957f\u5ea6\u8ba1\u7b97Agent",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "execute_stream"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Agent"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:TextLengthAgent"
    },
    {
      "type": "class",
      "name": "TestMultiStepAgentV2",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 99,
      "complexity": 1,
      "docstring": "MultiStepAgent_v2\u7c7b\u7684\u5355\u5143\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "tearDown",
        "test_import_and_initialization",
        "test_register_agent_success",
        "test_register_multiple_agents",
        "test_register_agent_with_duplicate_name",
        "test_register_agent_with_empty_name",
        "test_register_agent_with_special_characters",
        "test_register_agent_with_none",
        "test_register_agent_with_string_as_agent",
        "test_register_agent_with_number_as_name",
        "test_register_agent_without_api_specification",
        "test_register_agent_with_empty_api_specification",
        "test_register_agent_creates_agent_specification",
        "test_plan_execution_structure_validation",
        "test_plan_execution_with_registered_agents",
        "test_plan_execution_different_task_types",
        "test_plan_execution_empty_task",
        "test_plan_execution_complex_task",
        "test_select_next_executable_step_no_pending_steps",
        "test_select_next_executable_step_single_pending_step",
        "test_select_next_executable_step_multiple_pending_no_prerequisites",
        "test_select_next_executable_step_with_skipped_and_running",
        "test_select_next_executable_step_empty_plan",
        "test_select_next_executable_step_all_failed",
        "test_select_next_executable_step_mixed_statuses",
        "test_execute_multi_step_simple_echo_task",
        "test_execute_multi_step_echo_and_length_task",
        "test_execute_multi_step_with_no_registered_agents",
        "test_execute_multi_step_empty_task",
        "test_execute_multi_step_workflow_state_management",
        "test_execute_multi_step_task_history_tracking",
        "test_execute_multi_step_with_failing_agent",
        "test_execute_multi_step_with_malformed_plan_steps",
        "test_execute_single_step_with_missing_agent",
        "test_execute_multi_step_with_empty_agent_list",
        "test_execute_multi_step_with_api_failure_simulation",
        "test_execute_multi_step_with_invalid_instruction_type",
        "test_can_execute_step_with_llm_failure",
        "test_make_decision_with_invalid_input",
        "test_plan_execution_with_empty_task",
        "test_plan_execution_with_whitespace_only_task",
        "test_execute_multi_step_with_empty_plan",
        "test_select_next_executable_step_with_all_completed_steps",
        "test_select_next_executable_step_with_all_skipped_steps",
        "test_select_next_executable_step_with_circular_dependencies",
        "test_execute_single_step_with_empty_instruction",
        "test_execute_single_step_with_missing_required_fields",
        "test_execute_multi_step_with_extremely_long_instruction",
        "test_register_agent_boundary_conditions"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:TestMultiStepAgentV2"
    },
    {
      "type": "class",
      "name": "FailingAgent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 730,
      "complexity": 1,
      "docstring": "\u603b\u662f\u5931\u8d25\u7684\u6d4b\u8bd5\u667a\u80fd\u4f53",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "execute_stream"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Agent"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:FailingAgent"
    },
    {
      "type": "class",
      "name": "APIFailingAgent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 838,
      "complexity": 1,
      "docstring": "\u6a21\u62dfAPI\u5931\u8d25\u7684\u667a\u80fd\u4f53",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "execute_stream"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "Agent"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:APIFailingAgent"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 840,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "llm"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "super().__init__",
        "super"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:__init__"
    },
    {
      "type": "function",
      "name": "execute_stream",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 844,
      "complexity": 1,
      "docstring": "\u6a21\u62dfAPI\u8c03\u7528\u8d85\u65f6\u6216\u5931\u8d25",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "prompt"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:execute_stream"
    },
    {
      "type": "function",
      "name": "setUp",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 102,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u524d\u7684\u8bbe\u7f6e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "MultiStepAgent_v2"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:setUp"
    },
    {
      "type": "function",
      "name": "tearDown",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 107,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u540e\u7684\u6e05\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:tearDown"
    },
    {
      "type": "function",
      "name": "test_import_and_initialization",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 111,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u57fa\u672c\u5bfc\u5165\u548c\u521d\u59cb\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.assertIsInstance",
        "self.assertTrue",
        "self.assertTrue",
        "self.assertTrue",
        "self.assertEqual",
        "self.assertEqual",
        "hasattr",
        "hasattr",
        "hasattr",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_import_and_initialization"
    },
    {
      "type": "function",
      "name": "test_register_agent_success",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 125,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6210\u529f\u6ce8\u518cagent",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Agent",
        "self.agent.register_agent",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_register_agent_success"
    },
    {
      "type": "function",
      "name": "test_register_multiple_agents",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 138,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6ce8\u518c\u591a\u4e2aagent",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Agent",
        "Agent",
        "self.agent.register_agent",
        "self.agent.register_agent",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_register_multiple_agents"
    },
    {
      "type": "function",
      "name": "test_register_agent_with_duplicate_name",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 153,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6ce8\u518c\u76f8\u540c\u540d\u79f0\u7684agent",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Agent",
        "Agent",
        "self.agent.register_agent",
        "self.agent.register_agent",
        "self.assertEqual",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_register_agent_with_duplicate_name"
    },
    {
      "type": "function",
      "name": "test_register_agent_with_empty_name",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 166,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6ce8\u518c\u7a7a\u540d\u79f0\u7684agent",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Agent",
        "self.agent.register_agent",
        "self.assertEqual",
        "self.assertEqual",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_register_agent_with_empty_name"
    },
    {
      "type": "function",
      "name": "test_register_agent_with_special_characters",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 177,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6ce8\u518c\u5305\u542b\u7279\u6b8a\u5b57\u7b26\u7684agent\u540d\u79f0",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Agent",
        "self.agent.register_agent",
        "self.assertEqual",
        "self.assertEqual",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_register_agent_with_special_characters"
    },
    {
      "type": "function",
      "name": "test_register_agent_with_none",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 187,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6ce8\u518cNone\u4f5c\u4e3aagent",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.agent.register_agent",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_register_agent_with_none"
    },
    {
      "type": "function",
      "name": "test_register_agent_with_string_as_agent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 196,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6ce8\u518c\u5b57\u7b26\u4e32\u4f5c\u4e3aagent",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.agent.register_agent",
        "self.assertEqual",
        "self.assertEqual",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_register_agent_with_string_as_agent"
    },
    {
      "type": "function",
      "name": "test_register_agent_with_number_as_name",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 204,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6ce8\u518c\u6570\u5b57\u4f5c\u4e3aagent\u540d\u79f0",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Agent",
        "self.agent.register_agent",
        "self.assertEqual",
        "self.assertEqual",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_register_agent_with_number_as_name"
    },
    {
      "type": "function",
      "name": "test_register_agent_without_api_specification",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 214,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6ce8\u518c\u6ca1\u6709api_specification\u7684agent",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Agent",
        "self.agent.register_agent",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_register_agent_without_api_specification"
    },
    {
      "type": "function",
      "name": "test_register_agent_with_empty_api_specification",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 225,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6ce8\u518c\u7a7aapi_specification\u7684agent",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Agent",
        "self.agent.register_agent",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_register_agent_with_empty_api_specification"
    },
    {
      "type": "function",
      "name": "test_register_agent_creates_agent_specification",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 234,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6ce8\u518cagent\u65f6\u521b\u5efa\u6b63\u786e\u7684RegisteredAgent\u5bf9\u8c61",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Agent",
        "self.agent.register_agent",
        "self.assertIsInstance",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_register_agent_creates_agent_specification"
    },
    {
      "type": "function",
      "name": "test_plan_execution_structure_validation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 248,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5plan_execution\u8fd4\u56de\u7684\u8ba1\u5212\u7ed3\u6784\u9a8c\u8bc1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [
        "skip_if_api_unavailable"
      ],
      "inheritance": [],
      "calls": [
        "Agent",
        "self.agent.register_agent",
        "self.agent.plan_execution",
        "self.assertIsInstance",
        "self.assertGreater",
        "len",
        "self.assertIsInstance",
        "self.assertIn",
        "self.assertIn",
        "self.assertIn",
        "self.assertIn",
        "self.assertIn",
        "self.assertIn",
        "self.assertIn",
        "self.assertIsInstance",
        "self.assertIsInstance",
        "self.assertIsInstance",
        "self.assertIsInstance",
        "self.assertIsInstance",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_plan_execution_structure_validation"
    },
    {
      "type": "function",
      "name": "test_plan_execution_with_registered_agents",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 284,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6709\u6ce8\u518cagent\u65f6\u7684\u8ba1\u5212\u6267\u884c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [
        "skip_if_api_unavailable"
      ],
      "inheritance": [],
      "calls": [
        "Agent",
        "Agent",
        "self.agent.register_agent",
        "self.agent.register_agent",
        "self.agent.plan_execution",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_plan_execution_with_registered_agents"
    },
    {
      "type": "function",
      "name": "test_plan_execution_different_task_types",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 304,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u4e0d\u540c\u7c7b\u578b\u4efb\u52a1\u7684\u8ba1\u5212\u6267\u884c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [
        "skip_if_api_unavailable"
      ],
      "inheritance": [],
      "calls": [
        "Agent",
        "self.agent.register_agent",
        "self.agent.plan_execution",
        "self.assertIsInstance",
        "self.assertGreater",
        "self.agent.plan_execution",
        "self.assertIsInstance",
        "self.assertGreater",
        "self.assertGreaterEqual",
        "len",
        "len",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_plan_execution_different_task_types"
    },
    {
      "type": "function",
      "name": "test_plan_execution_empty_task",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 325,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u7a7a\u4efb\u52a1\u63cf\u8ff0\u7684\u8ba1\u5212\u6267\u884c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [
        "skip_if_api_unavailable"
      ],
      "inheritance": [],
      "calls": [
        "Agent",
        "self.agent.register_agent",
        "self.agent.plan_execution",
        "self.assertIsInstance",
        "self.assertGreater",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_plan_execution_empty_task"
    },
    {
      "type": "function",
      "name": "test_plan_execution_complex_task",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 338,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u590d\u6742\u4efb\u52a1\u7684\u8ba1\u5212\u6267\u884c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [
        "skip_if_api_unavailable"
      ],
      "inheritance": [],
      "calls": [
        "self.agent.plan_execution",
        "self.assertIsInstance",
        "self.assertGreater",
        "self.assertGreater",
        "Agent",
        "self.agent.register_agent",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_plan_execution_complex_task"
    },
    {
      "type": "function",
      "name": "test_select_next_executable_step_no_pending_steps",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 372,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6ca1\u6709\u5f85\u6267\u884c\u6b65\u9aa4\u65f6\u7684\u60c5\u51b5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.agent.device.set_variable",
        "self.agent.select_next_executable_step",
        "self.assertIsNone"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_select_next_executable_step_no_pending_steps"
    },
    {
      "type": "function",
      "name": "test_select_next_executable_step_single_pending_step",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 399,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u53ea\u6709\u4e00\u4e2a\u5f85\u6267\u884c\u6b65\u9aa4\u65f6\u7684\u60c5\u51b5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.agent.device.set_variable",
        "self.agent.select_next_executable_step",
        "self.assertIsNotNone",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_select_next_executable_step_single_pending_step"
    },
    {
      "type": "function",
      "name": "test_select_next_executable_step_multiple_pending_no_prerequisites",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 430,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u591a\u4e2a\u5f85\u6267\u884c\u6b65\u9aa4\u4e14\u90fd\u65e0\u5148\u51b3\u6761\u4ef6\u7684\u60c5\u51b5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [
        "skip_if_api_unavailable"
      ],
      "inheritance": [],
      "calls": [
        "self.agent.device.set_variable",
        "self.agent.select_next_executable_step",
        "self.assertIsNotNone",
        "self.assertEqual",
        "self.assertIn",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_select_next_executable_step_multiple_pending_no_prerequisites"
    },
    {
      "type": "function",
      "name": "test_select_next_executable_step_with_skipped_and_running",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 465,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5305\u542b\u8df3\u8fc7\u548c\u8fd0\u884c\u4e2d\u6b65\u9aa4\u7684\u60c5\u51b5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.agent.device.set_variable",
        "self.agent.select_next_executable_step",
        "self.assertIsNotNone",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_select_next_executable_step_with_skipped_and_running"
    },
    {
      "type": "function",
      "name": "test_select_next_executable_step_empty_plan",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 505,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u7a7a\u8ba1\u5212\u7684\u60c5\u51b5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.agent.select_next_executable_step",
        "self.assertIsNone"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_select_next_executable_step_empty_plan"
    },
    {
      "type": "function",
      "name": "test_select_next_executable_step_all_failed",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 516,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6240\u6709\u6b65\u9aa4\u90fd\u5931\u8d25\u7684\u60c5\u51b5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [
        "skip_if_api_unavailable"
      ],
      "inheritance": [],
      "calls": [
        "self.agent.device.set_variable",
        "self.agent.select_next_executable_step",
        "self.assertIsNotNone",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_select_next_executable_step_all_failed"
    },
    {
      "type": "function",
      "name": "test_select_next_executable_step_mixed_statuses",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 545,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6df7\u5408\u72b6\u6001\u6b65\u9aa4\u7684\u60c5\u51b5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [
        "skip_if_api_unavailable"
      ],
      "inheritance": [],
      "calls": [
        "self.agent.device.set_variable",
        "self.agent.select_next_executable_step",
        "self.assertIsNotNone",
        "self.assertIn",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_select_next_executable_step_mixed_statuses"
    },
    {
      "type": "function",
      "name": "test_execute_multi_step_simple_echo_task",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 586,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5execute_multi_step\u65b9\u6cd5\u7684\u7b80\u5355\u56de\u663e\u4efb\u52a1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [
        "skip_if_api_unavailable"
      ],
      "inheritance": [],
      "calls": [
        "EchoAgent",
        "self.agent.register_agent",
        "self.agent.execute_multi_step",
        "self.assertIsInstance",
        "self.assertIn",
        "self.assertIn",
        "self.agent.get_plan",
        "self.assertGreater",
        "self.assertGreater",
        "self.assertGreater",
        "len",
        "len",
        "len",
        "step.get",
        "step.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_execute_multi_step_simple_echo_task"
    },
    {
      "type": "function",
      "name": "test_execute_multi_step_echo_and_length_task",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 616,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5execute_multi_step\u65b9\u6cd5\u7684\u56de\u663e\u548c\u957f\u5ea6\u8ba1\u7b97\u4efb\u52a1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [
        "skip_if_api_unavailable"
      ],
      "inheritance": [],
      "calls": [
        "EchoAgent",
        "TextLengthAgent",
        "self.agent.register_agent",
        "self.agent.register_agent",
        "self.agent.execute_multi_step",
        "self.assertIsInstance",
        "self.assertIn",
        "self.agent.get_plan",
        "self.assertGreater",
        "self.assertGreater",
        "self.assertTrue",
        "len",
        "len",
        "step.get",
        "agent_names_used.intersection",
        "step.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_execute_multi_step_echo_and_length_task"
    },
    {
      "type": "function",
      "name": "test_execute_multi_step_with_no_registered_agents",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 646,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6ca1\u6709\u6ce8\u518cagent\u65f6\u7684execute_multi_step",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [
        "skip_if_api_unavailable"
      ],
      "inheritance": [],
      "calls": [
        "self.agent.execute_multi_step",
        "self.assertIsInstance",
        "self.assertIn",
        "self.agent.get_plan",
        "self.assertGreater",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_execute_multi_step_with_no_registered_agents"
    },
    {
      "type": "function",
      "name": "test_execute_multi_step_empty_task",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 660,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u7a7a\u4efb\u52a1\u7684execute_multi_step",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Agent",
        "self.agent.register_agent",
        "self.agent.execute_multi_step",
        "self.assertIsInstance"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_execute_multi_step_empty_task"
    },
    {
      "type": "function",
      "name": "test_execute_multi_step_workflow_state_management",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 674,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5execute_multi_step\u7684\u5de5\u4f5c\u6d41\u72b6\u6001\u7ba1\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [
        "skip_if_api_unavailable"
      ],
      "inheritance": [],
      "calls": [
        "EchoAgent",
        "self.agent.register_agent",
        "self.assertIsInstance",
        "self.agent.execute_multi_step",
        "self.assertIsInstance",
        "self.agent.get_plan",
        "self.assertIsInstance",
        "self.assertIsInstance"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_execute_multi_step_workflow_state_management"
    },
    {
      "type": "function",
      "name": "test_execute_multi_step_task_history_tracking",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 699,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5execute_multi_step\u7684\u4efb\u52a1\u5386\u53f2\u8ddf\u8e2a",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [
        "skip_if_api_unavailable"
      ],
      "inheritance": [],
      "calls": [
        "EchoAgent",
        "self.agent.register_agent",
        "self.agent.execute_multi_step",
        "self.assertIsInstance",
        "self.agent.get_plan",
        "self.assertGreater",
        "self.assertTrue",
        "len",
        "step.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_execute_multi_step_task_history_tracking"
    },
    {
      "type": "function",
      "name": "test_execute_multi_step_with_failing_agent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 727,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5execute_multi_step\u5904\u7406\u5931\u8d25\u7684\u667a\u80fd\u4f53",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "FailingAgent",
        "self.agent.register_agent",
        "self.agent.execute_multi_step",
        "self.assertIsInstance",
        "self.assertIn",
        "self.agent.get_plan",
        "self.assertIsInstance",
        "self.assertGreater",
        "len",
        "super().__init__",
        "RuntimeError",
        "step.get",
        "super"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_execute_multi_step_with_failing_agent"
    },
    {
      "type": "function",
      "name": "test_execute_multi_step_with_malformed_plan_steps",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 764,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5execute_multi_step\u5904\u7406\u683c\u5f0f\u9519\u8bef\u7684\u8ba1\u5212\u6b65\u9aa4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.agent.device.set_variable",
        "self.agent.select_next_executable_step",
        "self.assertIsInstance",
        "self.assertIsInstance"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_execute_multi_step_with_malformed_plan_steps"
    },
    {
      "type": "function",
      "name": "test_execute_single_step_with_missing_agent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 791,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5execute_single_step\u5904\u7406\u4e0d\u5b58\u5728\u7684\u667a\u80fd\u4f53",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.agent.execute_single_step",
        "self.assertIsNotNone",
        "self.assertIsInstance",
        "self.assertFalse",
        "self.assertIn",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_execute_single_step_with_missing_agent"
    },
    {
      "type": "function",
      "name": "test_execute_multi_step_with_empty_agent_list",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 816,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5execute_multi_step\u5728\u6ca1\u6709\u6ce8\u518c\u667a\u80fd\u4f53\u65f6\u7684\u884c\u4e3a",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "MultiStepAgent_v2",
        "agent_without_agents.execute_multi_step",
        "self.assertIsInstance",
        "self.assertIn",
        "agent_without_agents.get_plan",
        "self.assertIsInstance"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_execute_multi_step_with_empty_agent_list"
    },
    {
      "type": "function",
      "name": "test_execute_multi_step_with_api_failure_simulation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 835,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5execute_multi_step\u5904\u7406API\u8c03\u7528\u5931\u8d25",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [
        "skip_if_api_unavailable"
      ],
      "inheritance": [],
      "calls": [
        "APIFailingAgent",
        "self.agent.register_agent",
        "self.agent.execute_multi_step",
        "self.assertIsInstance",
        "self.assertIn",
        "self.agent.get_plan",
        "self.assertIsInstance",
        "super().__init__",
        "Result",
        "super"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_execute_multi_step_with_api_failure_simulation"
    },
    {
      "type": "function",
      "name": "test_execute_multi_step_with_invalid_instruction_type",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 869,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5execute_multi_step\u5904\u7406\u65e0\u6548\u7684\u6307\u4ee4\u7c7b\u578b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "EchoAgent",
        "self.agent.register_agent",
        "self.agent.device.set_variable",
        "self.agent.execute_single_step",
        "self.assertIsNotNone",
        "self.assertIsInstance"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_execute_multi_step_with_invalid_instruction_type"
    },
    {
      "type": "function",
      "name": "test_can_execute_step_with_llm_failure",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 899,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5can_execute_step\u65b9\u6cd5\u5728LLM\u8c03\u7528\u5931\u8d25\u65f6\u7684\u884c\u4e3a",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "EchoAgent",
        "self.agent.register_agent",
        "self.agent.can_execute_step",
        "self.assertIsInstance",
        "self.assertIsInstance",
        "self.assertGreater",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_can_execute_step_with_llm_failure"
    },
    {
      "type": "function",
      "name": "test_make_decision_with_invalid_input",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 923,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5make_decision\u65b9\u6cd5\u5904\u7406\u65e0\u6548\u8f93\u5165",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.agent.make_decision",
        "self.assertIsInstance",
        "self.assertIn",
        "self.assertIn",
        "self.assertIn",
        "self.assertIn",
        "self.agent.make_decision",
        "self.assertIsInstance",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_make_decision_with_invalid_input"
    },
    {
      "type": "function",
      "name": "test_plan_execution_with_empty_task",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 951,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5plan_execution\u65b9\u6cd5\u5904\u7406\u7a7a\u4efb\u52a1\u63cf\u8ff0",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [
        "skip_if_api_unavailable"
      ],
      "inheritance": [],
      "calls": [
        "EchoAgent",
        "self.agent.register_agent",
        "self.agent.plan_execution",
        "self.assertIsInstance",
        "self.assertGreater",
        "len",
        "self.assertIsInstance",
        "self.assertIn",
        "self.assertIn",
        "self.assertIn",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_plan_execution_with_empty_task"
    },
    {
      "type": "function",
      "name": "test_plan_execution_with_whitespace_only_task",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 974,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5plan_execution\u65b9\u6cd5\u5904\u7406\u4ec5\u5305\u542b\u7a7a\u767d\u5b57\u7b26\u7684\u4efb\u52a1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "EchoAgent",
        "self.agent.register_agent",
        "self.agent.plan_execution",
        "self.assertIsInstance",
        "self.assertGreater",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_plan_execution_with_whitespace_only_task"
    },
    {
      "type": "function",
      "name": "test_execute_multi_step_with_empty_plan",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 989,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5execute_multi_step\u65b9\u6cd5\u5904\u7406\u7a7a\u8ba1\u5212",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.agent.device.set_variable",
        "self.agent.execute_multi_step",
        "self.assertIsInstance",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_execute_multi_step_with_empty_plan"
    },
    {
      "type": "function",
      "name": "test_select_next_executable_step_with_all_completed_steps",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 1002,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5select_next_executable_step\u5728\u6240\u6709\u6b65\u9aa4\u90fd\u5df2\u5b8c\u6210\u65f6\u7684\u884c\u4e3a",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.agent.device.set_variable",
        "self.agent.select_next_executable_step",
        "self.assertIsNone"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_select_next_executable_step_with_all_completed_steps"
    },
    {
      "type": "function",
      "name": "test_select_next_executable_step_with_all_skipped_steps",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 1030,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5select_next_executable_step\u5728\u6240\u6709\u6b65\u9aa4\u90fd\u88ab\u8df3\u8fc7\u65f6\u7684\u884c\u4e3a",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.agent.device.set_variable",
        "self.agent.select_next_executable_step",
        "self.assertIsNone"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_select_next_executable_step_with_all_skipped_steps"
    },
    {
      "type": "function",
      "name": "test_select_next_executable_step_with_circular_dependencies",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 1058,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5select_next_executable_step\u5904\u7406\u5faa\u73af\u4f9d\u8d56\u7684\u60c5\u51b5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.agent.device.set_variable",
        "self.agent.select_next_executable_step",
        "self.assertTrue",
        "self.assertIsInstance",
        "isinstance"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_select_next_executable_step_with_circular_dependencies"
    },
    {
      "type": "function",
      "name": "test_execute_single_step_with_empty_instruction",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 1091,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5execute_single_step\u5904\u7406\u7a7a\u6307\u4ee4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "EchoAgent",
        "self.agent.register_agent",
        "self.agent.execute_single_step",
        "self.assertIsNotNone",
        "self.assertIsInstance",
        "self.assertFalse",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_execute_single_step_with_empty_instruction"
    },
    {
      "type": "function",
      "name": "test_execute_single_step_with_missing_required_fields",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 1119,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5execute_single_step\u5904\u7406\u7f3a\u5c11\u5fc5\u9700\u5b57\u6bb5\u7684\u6b65\u9aa4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.agent.execute_single_step",
        "self.assertIsNotNone",
        "self.assertIsInstance",
        "self.assertFalse",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_execute_single_step_with_missing_required_fields"
    },
    {
      "type": "function",
      "name": "test_execute_multi_step_with_extremely_long_instruction",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 1141,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5execute_multi_step\u5904\u7406\u6781\u957f\u6307\u4ee4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [
        "skip_if_api_unavailable"
      ],
      "inheritance": [],
      "calls": [
        "EchoAgent",
        "self.agent.register_agent",
        "self.agent.execute_multi_step",
        "self.assertIsInstance",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_execute_multi_step_with_extremely_long_instruction"
    },
    {
      "type": "function",
      "name": "test_register_agent_boundary_conditions",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py",
      "line_number": 1158,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5register_agent\u7684\u8fb9\u754c\u6761\u4ef6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Agent",
        "self.agent.register_agent",
        "self.assertIn",
        "Agent",
        "self.agent.register_agent",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:test_register_agent_boundary_conditions"
    },
    {
      "type": "function",
      "name": "test_device",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/verify_components.py",
      "line_number": 17,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5Device\u7ec4\u4ef6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "Device",
        "device.execute_code",
        "print",
        "os.getenv",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/verify_components.py:test_device"
    },
    {
      "type": "function",
      "name": "test_stateful_executor",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/verify_components.py",
      "line_number": 39,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5StatefulExecutor\u7ec4\u4ef6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "StatefulExecutor",
        "executor.execute_code",
        "executor.execute_code",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/verify_components.py:test_stateful_executor"
    },
    {
      "type": "function",
      "name": "test_thinker",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/verify_components.py",
      "line_number": 60,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5Thinker\u7ec4\u4ef6\uff08\u9700\u8981API\u5bc6\u94a5\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "StatefulExecutor",
        "Thinker",
        "thinker.execute_sync",
        "print",
        "os.getenv",
        "os.getenv",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/verify_components.py:test_thinker"
    },
    {
      "type": "function",
      "name": "test_evaluator",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/verify_components.py",
      "line_number": 85,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5Evaluator\u7ec4\u4ef6\uff08\u9700\u8981API\u5bc6\u94a5\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "Evaluator",
        "Result",
        "evaluator.evaluate",
        "isinstance",
        "isinstance",
        "print",
        "os.getenv",
        "os.getenv",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/verify_components.py:test_evaluator"
    },
    {
      "type": "function",
      "name": "test_agent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/verify_components.py",
      "line_number": 119,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5Agent\u7ec4\u4ef6\uff08\u9700\u8981API\u5bc6\u94a5\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "Agent",
        "agent.execute_sync",
        "print",
        "os.getenv",
        "os.getenv",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/verify_components.py:test_agent"
    },
    {
      "type": "function",
      "name": "main",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/verify_components.py",
      "line_number": 143,
      "complexity": 1,
      "docstring": "\u4e3b\u51fd\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "sum",
        "len",
        "print",
        "print",
        "bool",
        "print",
        "print",
        "test_func",
        "results.append",
        "print",
        "print",
        "print",
        "print",
        "os.getenv",
        "os.getenv"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/verify_components.py:main"
    },
    {
      "type": "class",
      "name": "StressBoundaryTest",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_stress_boundary.py",
      "line_number": 27,
      "complexity": 1,
      "docstring": "\u8fb9\u754c\u548c\u538b\u529b\u6d4b\u8bd5\u7c7b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "tearDown",
        "test_large_state_data_handling",
        "test_rapid_state_updates",
        "test_concurrent_state_access",
        "test_invalid_input_handling",
        "test_memory_usage_under_stress",
        "test_ai_updater_stress_with_mock",
        "test_system_resource_monitoring",
        "test_edge_case_combinations"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_stress_boundary.py:StressBoundaryTest"
    },
    {
      "type": "function",
      "name": "setUp",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_stress_boundary.py",
      "line_number": 30,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u524d\u7684\u8bbe\u7f6e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "MultiStepAgent_v2",
        "psutil.cpu_percent",
        "psutil.virtual_memory"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_stress_boundary.py:setUp"
    },
    {
      "type": "function",
      "name": "tearDown",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_stress_boundary.py",
      "line_number": 40,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u540e\u7684\u6e05\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "gc.collect",
        "psutil.virtual_memory",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_stress_boundary.py:tearDown"
    },
    {
      "type": "function",
      "name": "test_large_state_data_handling",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_stress_boundary.py",
      "line_number": 53,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5904\u7406\u5927\u91cf\u72b6\u6001\u6570\u636e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "self.subTest",
        "print",
        "range",
        "time.time",
        "WorkflowState",
        "workflow_state.set_global_state",
        "workflow_state.get_global_state",
        "json.loads",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "print",
        "self.assertLess",
        "time.time",
        "json.dumps",
        "len",
        "time.time",
        "self.fail",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_stress_boundary.py:test_large_state_data_handling"
    },
    {
      "type": "function",
      "name": "test_rapid_state_updates",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_stress_boundary.py",
      "line_number": 106,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5feb\u901f\u8fde\u7eed\u72b6\u6001\u66f4\u65b0",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "WorkflowState",
        "self.subTest",
        "print",
        "time.time",
        "range",
        "print",
        "print",
        "json.loads",
        "self.assertEqual",
        "workflow_state.get_state_history",
        "self.assertGreater",
        "workflow_state.set_global_state",
        "time.time",
        "workflow_state.get_global_state",
        "len",
        "self.assertLess",
        "self.fail",
        "time.time",
        "json.dumps",
        "workflow_state.get_global_state",
        "self.assertIsNotNone",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_stress_boundary.py:test_rapid_state_updates"
    },
    {
      "type": "function",
      "name": "test_concurrent_state_access",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_stress_boundary.py",
      "line_number": 153,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5e76\u53d1\u72b6\u6001\u8bbf\u95ee",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "WorkflowState",
        "self.subTest",
        "print",
        "time.time",
        "range",
        "print",
        "print",
        "print",
        "self.assertEqual",
        "workflow_state.get_global_state",
        "self.assertIsNotNone",
        "self.assertLess",
        "threading.Thread",
        "threads.append",
        "thread.start",
        "thread.join",
        "time.time",
        "len",
        "range",
        "errors.append",
        "len",
        "len",
        "workflow_state.set_global_state",
        "workflow_state.get_global_state",
        "time.time",
        "json.dumps",
        "json.loads",
        "results.append",
        "str",
        "parsed_state.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_stress_boundary.py:test_concurrent_state_access"
    },
    {
      "type": "function",
      "name": "test_invalid_input_handling",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_stress_boundary.py",
      "line_number": 222,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u65e0\u6548\u8f93\u5165\u5904\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "WorkflowState",
        "enumerate",
        "json.dumps",
        "self.subTest",
        "print",
        "workflow_state.set_global_state",
        "workflow_state.get_global_state",
        "self.assertIsNotNone",
        "print",
        "workflow_state.set_global_state",
        "workflow_state.get_global_state",
        "print",
        "print",
        "type",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_stress_boundary.py:test_invalid_input_handling"
    },
    {
      "type": "function",
      "name": "test_memory_usage_under_stress",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_stress_boundary.py",
      "line_number": 266,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u538b\u529b\u4e0b\u7684\u5185\u5b58\u4f7f\u7528",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "get_memory_usage",
        "print",
        "WorkflowState",
        "range",
        "get_memory_usage",
        "print",
        "print",
        "self.assertLess",
        "workflow_state.set_global_state",
        "len",
        "print",
        "self.assertLess",
        "time.time",
        "json.dumps",
        "get_memory_usage",
        "memory_samples.append",
        "print",
        "psutil.virtual_memory",
        "range"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_stress_boundary.py:test_memory_usage_under_stress"
    },
    {
      "type": "function",
      "name": "test_ai_updater_stress_with_mock",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_stress_boundary.py",
      "line_number": 326,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5AI\u66f4\u65b0\u5668\u5728\u538b\u529b\u4e0b\u7684\u8868\u73b0\uff08\u4f7f\u7528\u6a21\u62df\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "WorkflowState",
        "time.time",
        "range",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "self.assertGreater",
        "self.assertLess",
        "len",
        "mock_update_state_with_ai.call_history.append",
        "time.time",
        "getattr",
        "hasattr",
        "len",
        "workflow_state.update_state_with_ai",
        "json.dumps",
        "workflow_state.set_global_state",
        "time.time",
        "print",
        "time.time",
        "context.get",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_stress_boundary.py:test_ai_updater_stress_with_mock"
    },
    {
      "type": "function",
      "name": "test_system_resource_monitoring",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_stress_boundary.py",
      "line_number": 411,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u7cfb\u7edf\u8d44\u6e90\u76d1\u63a7",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "collect_system_stats",
        "print",
        "initial_stats.items",
        "WorkflowState",
        "range",
        "collect_system_stats",
        "print",
        "final_stats.items",
        "self.assertLess",
        "self.assertLess",
        "print",
        "workflow_state.set_global_state",
        "workflow_state.get_global_state",
        "print",
        "print",
        "abs",
        "psutil.cpu_percent",
        "time.time",
        "json.dumps",
        "workflow_state.get_state_history",
        "psutil.virtual_memory",
        "psutil.disk_usage",
        "psutil.virtual_memory",
        "range"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_stress_boundary.py:test_system_resource_monitoring"
    },
    {
      "type": "function",
      "name": "test_edge_case_combinations",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_stress_boundary.py",
      "line_number": 472,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u8fb9\u754c\u6761\u4ef6\u7ec4\u5408",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "WorkflowState",
        "self.subTest",
        "print",
        "time.time",
        "print",
        "workflow_state.get_global_state",
        "self.assertIsNotNone",
        "workflow_state.get_state_history",
        "self.assertIsInstance",
        "workflow_state.set_global_state",
        "workflow_state.set_global_state",
        "workflow_state.get_state_history",
        "time.time",
        "self.fail",
        "range",
        "json.dumps",
        "range",
        "workflow_state.set_global_state",
        "workflow_state.get_global_state",
        "range",
        "range",
        "json.dumps",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_stress_boundary.py:test_edge_case_combinations"
    },
    {
      "type": "function",
      "name": "get_memory_usage",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_stress_boundary.py",
      "line_number": 271,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "psutil.virtual_memory"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_stress_boundary.py:get_memory_usage"
    },
    {
      "type": "function",
      "name": "mock_update_state_with_ai",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_stress_boundary.py",
      "line_number": 343,
      "complexity": 1,
      "docstring": "\u6a21\u62dfAI\u72b6\u6001\u66f4\u65b0\u65b9\u6cd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "context"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "mock_update_state_with_ai.call_history.append",
        "getattr",
        "hasattr",
        "len",
        "json.dumps",
        "workflow_state.set_global_state",
        "time.time",
        "context.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_stress_boundary.py:mock_update_state_with_ai"
    },
    {
      "type": "function",
      "name": "collect_system_stats",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_stress_boundary.py",
      "line_number": 416,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "psutil.cpu_percent",
        "psutil.virtual_memory",
        "psutil.disk_usage",
        "psutil.virtual_memory"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_stress_boundary.py:collect_system_stats"
    },
    {
      "type": "function",
      "name": "worker_thread",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_stress_boundary.py",
      "line_number": 169,
      "complexity": 1,
      "docstring": "\u5de5\u4f5c\u7ebf\u7a0b\u51fd\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "thread_id"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "range",
        "errors.append",
        "workflow_state.set_global_state",
        "workflow_state.get_global_state",
        "time.time",
        "json.dumps",
        "json.loads",
        "results.append",
        "str",
        "parsed_state.get"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_stress_boundary.py:worker_thread"
    },
    {
      "type": "class",
      "name": "TestStatefulExecutorBasic",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_stateful_executor.py",
      "line_number": 19,
      "complexity": 1,
      "docstring": "StatefulExecutor\u57fa\u7840\u529f\u80fd\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_simple_execution",
        "test_variable_persistence",
        "test_get_set_variable",
        "test_variable_modification",
        "test_function_definition_and_usage"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_stateful_executor.py:TestStatefulExecutorBasic"
    },
    {
      "type": "class",
      "name": "TestStatefulExecutorComplexTypes",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_stateful_executor.py",
      "line_number": 147,
      "complexity": 1,
      "docstring": "StatefulExecutor\u590d\u6742\u6570\u636e\u7c7b\u578b\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_numpy_arrays",
        "test_pandas_dataframes",
        "test_class_instances"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_stateful_executor.py:TestStatefulExecutorComplexTypes"
    },
    {
      "type": "class",
      "name": "TestStatefulExecutorErrorHandling",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_stateful_executor.py",
      "line_number": 279,
      "complexity": 1,
      "docstring": "StatefulExecutor\u9519\u8bef\u5904\u7406\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_syntax_error_handling",
        "test_runtime_error_recovery",
        "test_exception_handling_in_code"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_stateful_executor.py:TestStatefulExecutorErrorHandling"
    },
    {
      "type": "class",
      "name": "TestStatefulExecutorReturnValue",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_stateful_executor.py",
      "line_number": 362,
      "complexity": 1,
      "docstring": "StatefulExecutor\u8fd4\u56de\u503c\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_return_value_setting",
        "test_return_value_persistence"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_stateful_executor.py:TestStatefulExecutorReturnValue"
    },
    {
      "type": "function",
      "name": "setUp",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_stateful_executor.py",
      "line_number": 365,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u524d\u51c6\u5907",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "StatefulExecutor"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_stateful_executor.py:setUp"
    },
    {
      "type": "function",
      "name": "test_simple_execution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_stateful_executor.py",
      "line_number": 26,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u7b80\u5355\u4ee3\u7801\u6267\u884c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.executor.execute_code",
        "self.assertIsInstance",
        "self.assertTrue",
        "self.assertEqual",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_stateful_executor.py:test_simple_execution"
    },
    {
      "type": "function",
      "name": "test_variable_persistence",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_stateful_executor.py",
      "line_number": 36,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u53d8\u91cf\u6301\u4e45\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.executor.execute_code",
        "self.assertTrue",
        "self.assertIn",
        "self.executor.execute_code",
        "self.assertTrue",
        "self.assertIn",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_stateful_executor.py:test_variable_persistence"
    },
    {
      "type": "function",
      "name": "test_get_set_variable",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_stateful_executor.py",
      "line_number": 63,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u53d8\u91cf\u8bfb\u5199\u63a5\u53e3",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.executor.set_variable",
        "self.executor.set_variable",
        "self.executor.set_variable",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertIsNone",
        "self.executor.get_variable",
        "self.executor.get_variable",
        "self.executor.get_variable",
        "self.executor.get_variable"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_stateful_executor.py:test_get_set_variable"
    },
    {
      "type": "function",
      "name": "test_variable_modification",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_stateful_executor.py",
      "line_number": 78,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u53d8\u91cf\u4fee\u6539",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.executor.execute_code",
        "self.assertTrue",
        "self.executor.execute_code",
        "self.assertTrue",
        "self.assertIn",
        "self.assertIn",
        "self.executor.execute_code",
        "self.assertTrue",
        "self.assertIn",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_stateful_executor.py:test_variable_modification"
    },
    {
      "type": "function",
      "name": "test_function_definition_and_usage",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_stateful_executor.py",
      "line_number": 111,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u51fd\u6570\u5b9a\u4e49\u548c\u4f7f\u7528",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.executor.execute_code",
        "self.assertTrue",
        "self.assertIn",
        "self.executor.execute_code",
        "self.assertTrue",
        "self.assertIn",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_stateful_executor.py:test_function_definition_and_usage"
    },
    {
      "type": "function",
      "name": "test_numpy_arrays",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_stateful_executor.py",
      "line_number": 154,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5numpy\u6570\u7ec4\u72b6\u6001\u4fdd\u6301",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.executor.execute_code",
        "self.assertTrue",
        "self.assertIn",
        "self.assertIn",
        "self.executor.execute_code",
        "self.assertTrue",
        "self.assertIn",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_stateful_executor.py:test_numpy_arrays"
    },
    {
      "type": "function",
      "name": "test_pandas_dataframes",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_stateful_executor.py",
      "line_number": 189,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5pandas DataFrame\u72b6\u6001\u4fdd\u6301",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.executor.execute_code",
        "self.assertTrue",
        "self.assertIn",
        "self.assertIn",
        "self.executor.execute_code",
        "self.assertTrue",
        "self.assertIn",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_stateful_executor.py:test_pandas_dataframes"
    },
    {
      "type": "function",
      "name": "test_class_instances",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_stateful_executor.py",
      "line_number": 227,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u7c7b\u5b9e\u4f8b\u72b6\u6001\u4fdd\u6301",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.executor.execute_code",
        "self.assertTrue",
        "self.assertIn",
        "self.assertIn",
        "self.executor.execute_code",
        "self.assertTrue",
        "self.assertIn",
        "self.assertIn",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_stateful_executor.py:test_class_instances"
    },
    {
      "type": "function",
      "name": "test_syntax_error_handling",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_stateful_executor.py",
      "line_number": 286,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u8bed\u6cd5\u9519\u8bef\u5904\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.executor.execute_code",
        "self.assertFalse",
        "self.assertIsNotNone",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_stateful_executor.py:test_syntax_error_handling"
    },
    {
      "type": "function",
      "name": "test_runtime_error_recovery",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_stateful_executor.py",
      "line_number": 298,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u8fd0\u884c\u65f6\u9519\u8bef\u6062\u590d",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.executor.execute_code",
        "self.assertTrue",
        "self.executor.execute_code",
        "self.assertFalse",
        "self.assertIn",
        "self.executor.execute_code",
        "self.assertTrue",
        "self.assertIn",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_stateful_executor.py:test_runtime_error_recovery"
    },
    {
      "type": "function",
      "name": "test_exception_handling_in_code",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_stateful_executor.py",
      "line_number": 332,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u4ee3\u7801\u4e2d\u7684\u5f02\u5e38\u5904\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.executor.execute_code",
        "self.assertTrue",
        "self.assertIn",
        "self.assertIn",
        "self.assertIn",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_stateful_executor.py:test_exception_handling_in_code"
    },
    {
      "type": "function",
      "name": "test_return_value_setting",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_stateful_executor.py",
      "line_number": 369,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5return_value\u8bbe\u7f6e\u548c\u83b7\u53d6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.executor.execute_code",
        "self.assertTrue",
        "self.assertIn",
        "self.assertIn",
        "self.assertIn",
        "self.executor.get_variable",
        "self.assertIsInstance",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_stateful_executor.py:test_return_value_setting"
    },
    {
      "type": "function",
      "name": "test_return_value_persistence",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_stateful_executor.py",
      "line_number": 401,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5return_value\u5728\u591a\u6b21\u6267\u884c\u95f4\u7684\u53d8\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.executor.execute_code",
        "self.assertTrue",
        "self.assertEqual",
        "self.executor.execute_code",
        "self.assertTrue",
        "self.assertIn",
        "self.assertIn",
        "self.assertEqual",
        "self.executor.get_variable",
        "self.executor.get_variable"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_stateful_executor.py:test_return_value_persistence"
    },
    {
      "type": "function",
      "name": "print_banner",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/run_all_tests.py",
      "line_number": 30,
      "complexity": 1,
      "docstring": "\u6253\u5370\u6d4b\u8bd5\u6807\u9898\u6a2a\u5e45",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "title"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/run_all_tests.py:print_banner"
    },
    {
      "type": "function",
      "name": "print_summary",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/run_all_tests.py",
      "line_number": 37,
      "complexity": 1,
      "docstring": "\u6253\u5370\u6d4b\u8bd5\u7ed3\u679c\u6458\u8981",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "title",
        "result"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "print",
        "result.wasSuccessful",
        "result.wasSuccessful",
        "print",
        "print",
        "len",
        "len",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/run_all_tests.py:print_summary"
    },
    {
      "type": "function",
      "name": "run_test_suite",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/run_all_tests.py",
      "line_number": 53,
      "complexity": 1,
      "docstring": "\u8fd0\u884c\u6307\u5b9a\u7684\u6d4b\u8bd5\u5957\u4ef6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "test_name",
        "test_classes"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print_banner",
        "unittest.TestLoader",
        "unittest.TestSuite",
        "unittest.TextTestRunner",
        "runner.run",
        "print_summary",
        "suite.addTests",
        "loader.loadTestsFromTestCase"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/run_all_tests.py:run_test_suite"
    },
    {
      "type": "function",
      "name": "main",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/run_all_tests.py",
      "line_number": 71,
      "complexity": 1,
      "docstring": "\u4e3b\u51fd\u6570",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "time.time",
        "print_banner",
        "bool",
        "run_test_suite",
        "total_results.append",
        "run_test_suite",
        "total_results.append",
        "run_test_suite",
        "total_results.append",
        "run_test_suite",
        "total_results.append",
        "run_test_suite",
        "total_results.append",
        "time.time",
        "print_banner",
        "print",
        "print",
        "print",
        "print",
        "os.getenv",
        "print",
        "print",
        "thinker_classes.extend",
        "evaluator_classes.extend",
        "agent_classes.extend",
        "print",
        "print",
        "sys.exit"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/run_all_tests.py:main"
    },
    {
      "type": "class",
      "name": "TestEvaluatorBasic",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_evaluator.py",
      "line_number": 20,
      "complexity": 1,
      "docstring": "Evaluator\u57fa\u7840\u529f\u80fd\u6d4b\u8bd5\uff08\u4e0d\u9700\u8981API\u5bc6\u94a5\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_evaluator_initialization",
        "test_knowledge_loading",
        "test_simple_error_detection"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_evaluator.py:TestEvaluatorBasic"
    },
    {
      "type": "class",
      "name": "TestEvaluatorWithDeepSeek",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_evaluator.py",
      "line_number": 82,
      "complexity": 1,
      "docstring": "Evaluator\u4e0eDeepSeek\u96c6\u6210\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_successful_task_evaluation",
        "test_failed_task_evaluation",
        "test_hello_world_evaluation",
        "test_calculation_task_evaluation"
      ],
      "parameters": [],
      "decorators": [
        "unittest.skipUnless(os.getenv('DEEPSEEK_API_KEY'), '\u9700\u8981DEEPSEEK_API_KEY\u73af\u5883\u53d8\u91cf')"
      ],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_evaluator.py:TestEvaluatorWithDeepSeek"
    },
    {
      "type": "class",
      "name": "TestEvaluatorCustomCriteria",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_evaluator.py",
      "line_number": 193,
      "complexity": 1,
      "docstring": "Evaluator\u81ea\u5b9a\u4e49\u8bc4\u4f30\u6807\u51c6\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_custom_evaluation_message",
        "test_strict_evaluation_criteria"
      ],
      "parameters": [],
      "decorators": [
        "unittest.skipUnless(os.getenv('DEEPSEEK_API_KEY'), '\u9700\u8981DEEPSEEK_API_KEY\u73af\u5883\u53d8\u91cf')"
      ],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_evaluator.py:TestEvaluatorCustomCriteria"
    },
    {
      "type": "class",
      "name": "TestEvaluatorWithKnowledge",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_evaluator.py",
      "line_number": 281,
      "complexity": 1,
      "docstring": "Evaluator\u77e5\u8bc6\u52a0\u8f7d\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_evaluation_with_domain_knowledge",
        "test_evaluation_with_programming_knowledge"
      ],
      "parameters": [],
      "decorators": [
        "unittest.skipUnless(os.getenv('DEEPSEEK_API_KEY'), '\u9700\u8981DEEPSEEK_API_KEY\u73af\u5883\u53d8\u91cf')"
      ],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_evaluator.py:TestEvaluatorWithKnowledge"
    },
    {
      "type": "class",
      "name": "TestEvaluatorErrorHandling",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_evaluator.py",
      "line_number": 387,
      "complexity": 1,
      "docstring": "Evaluator\u9519\u8bef\u5904\u7406\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_evaluation_with_malformed_json",
        "test_evaluation_with_empty_result",
        "test_evaluation_retry_mechanism"
      ],
      "parameters": [],
      "decorators": [
        "unittest.skipUnless(os.getenv('DEEPSEEK_API_KEY'), '\u9700\u8981DEEPSEEK_API_KEY\u73af\u5883\u53d8\u91cf')"
      ],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_evaluator.py:TestEvaluatorErrorHandling"
    },
    {
      "type": "function",
      "name": "setUp",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_evaluator.py",
      "line_number": 390,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u524d\u51c6\u5907",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "StatefulExecutor",
        "Thinker"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_evaluator.py:setUp"
    },
    {
      "type": "function",
      "name": "test_evaluator_initialization",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_evaluator.py",
      "line_number": 28,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5Evaluator\u521d\u59cb\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Evaluator",
        "self.assertIsNotNone",
        "self.assertIsNotNone",
        "self.assertIsInstance",
        "self.assertEqual",
        "os.getenv",
        "self.skipTest",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_evaluator.py:test_evaluator_initialization"
    },
    {
      "type": "function",
      "name": "test_knowledge_loading",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_evaluator.py",
      "line_number": 41,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u77e5\u8bc6\u52a0\u8f7d\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Evaluator",
        "evaluator.loadKnowledge",
        "evaluator.loadKnowledge",
        "self.assertEqual",
        "self.assertIn",
        "self.assertIn",
        "os.getenv",
        "self.skipTest",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_evaluator.py:test_knowledge_loading"
    },
    {
      "type": "function",
      "name": "test_simple_error_detection",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_evaluator.py",
      "line_number": 59,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u7b80\u5355\u9519\u8bef\u68c0\u6d4b\uff08\u515c\u5e95\u903b\u8f91\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Evaluator",
        "Result",
        "evaluator.evaluate",
        "self.assertFalse",
        "self.assertIn",
        "os.getenv",
        "self.skipTest"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_evaluator.py:test_simple_error_detection"
    },
    {
      "type": "function",
      "name": "test_successful_task_evaluation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_evaluator.py",
      "line_number": 91,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6210\u529f\u4efb\u52a1\u7684\u8bc4\u4f30",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.evaluator.evaluate",
        "print",
        "print",
        "self.assertIsInstance",
        "self.assertIsInstance",
        "self.assertGreater",
        "print",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_evaluator.py:test_successful_task_evaluation"
    },
    {
      "type": "function",
      "name": "test_failed_task_evaluation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_evaluator.py",
      "line_number": 121,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5931\u8d25\u4efb\u52a1\u7684\u8bc4\u4f30",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.evaluator.evaluate",
        "print",
        "print",
        "self.assertIsInstance",
        "self.assertIsInstance",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_evaluator.py:test_failed_task_evaluation"
    },
    {
      "type": "function",
      "name": "test_hello_world_evaluation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_evaluator.py",
      "line_number": 143,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5Hello World\u4efb\u52a1\u8bc4\u4f30",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.evaluator.evaluate",
        "print",
        "print",
        "self.assertIsInstance",
        "self.assertIsInstance",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_evaluator.py:test_hello_world_evaluation"
    },
    {
      "type": "function",
      "name": "test_calculation_task_evaluation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_evaluator.py",
      "line_number": 164,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u8ba1\u7b97\u4efb\u52a1\u8bc4\u4f30",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.evaluator.evaluate",
        "print",
        "print",
        "self.assertIsInstance",
        "self.assertIsInstance",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_evaluator.py:test_calculation_task_evaluation"
    },
    {
      "type": "function",
      "name": "test_custom_evaluation_message",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_evaluator.py",
      "line_number": 201,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u81ea\u5b9a\u4e49\u8bc4\u4f30\u6d88\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Evaluator",
        "Result",
        "evaluator.evaluate",
        "print",
        "print",
        "self.assertIsInstance",
        "self.assertIsInstance",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_evaluator.py:test_custom_evaluation_message"
    },
    {
      "type": "function",
      "name": "test_strict_evaluation_criteria",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_evaluator.py",
      "line_number": 243,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u4e25\u683c\u8bc4\u4f30\u6807\u51c6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Evaluator",
        "Result",
        "evaluator.evaluate",
        "print",
        "print",
        "self.assertIsInstance",
        "self.assertIsInstance",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_evaluator.py:test_strict_evaluation_criteria"
    },
    {
      "type": "function",
      "name": "test_evaluation_with_domain_knowledge",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_evaluator.py",
      "line_number": 290,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5e26\u9886\u57df\u77e5\u8bc6\u7684\u8bc4\u4f30",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.evaluator.loadKnowledge",
        "Result",
        "self.evaluator.evaluate",
        "print",
        "print",
        "self.assertIsInstance",
        "self.assertIsInstance",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_evaluator.py:test_evaluation_with_domain_knowledge"
    },
    {
      "type": "function",
      "name": "test_evaluation_with_programming_knowledge",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_evaluator.py",
      "line_number": 329,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5e26\u7f16\u7a0b\u77e5\u8bc6\u7684\u8bc4\u4f30",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.evaluator.loadKnowledge",
        "Result",
        "self.evaluator.evaluate",
        "print",
        "print",
        "self.assertIsInstance",
        "self.assertIsInstance",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_evaluator.py:test_evaluation_with_programming_knowledge"
    },
    {
      "type": "function",
      "name": "test_evaluation_with_malformed_json",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_evaluator.py",
      "line_number": 395,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5904\u7406\u683c\u5f0f\u9519\u8bef\u7684JSON\u54cd\u5e94",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Evaluator",
        "Result",
        "evaluator.evaluate",
        "print",
        "print",
        "self.assertIsInstance",
        "self.assertIsInstance",
        "self.assertGreater",
        "print",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_evaluator.py:test_evaluation_with_malformed_json"
    },
    {
      "type": "function",
      "name": "test_evaluation_with_empty_result",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_evaluator.py",
      "line_number": 428,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u8bc4\u4f30\u7a7a\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Evaluator",
        "Result",
        "evaluator.evaluate",
        "print",
        "print",
        "self.assertIsInstance",
        "self.assertIsInstance",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_evaluator.py:test_evaluation_with_empty_result"
    },
    {
      "type": "function",
      "name": "test_evaluation_retry_mechanism",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_evaluator.py",
      "line_number": 450,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u8bc4\u4f30\u91cd\u8bd5\u673a\u5236",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Evaluator",
        "Result",
        "evaluator.evaluate",
        "print",
        "print",
        "self.assertIsInstance",
        "self.assertIsInstance",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_evaluator.py:test_evaluation_retry_mechanism"
    },
    {
      "type": "class",
      "name": "TestDynamicTaskIntegration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_dynamic_task_integration.py",
      "line_number": 24,
      "complexity": 1,
      "docstring": "\u52a8\u6001\u4efb\u52a1\u6dfb\u52a0\u96c6\u6210\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_simple_dynamic_task_addition"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_dynamic_task_integration.py:TestDynamicTaskIntegration"
    },
    {
      "type": "function",
      "name": "setUp",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_dynamic_task_integration.py",
      "line_number": 27,
      "complexity": 1,
      "docstring": "\u96c6\u6210\u6d4b\u8bd5\u73af\u5883\u8bbe\u7f6e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Mock",
        "Mock",
        "self.mock_agents.values",
        "CognitiveWorkflowEngine",
        "Mock",
        "Mock",
        "Mock",
        "Result"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_dynamic_task_integration.py:setUp"
    },
    {
      "type": "function",
      "name": "test_simple_dynamic_task_addition",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_dynamic_task_integration.py",
      "line_number": 57,
      "complexity": 1,
      "docstring": "\u7b80\u5355\u52a8\u6001\u4efb\u52a1\u6dfb\u52a0\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "self.engine._apply_plan_modification",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertTrue",
        "CognitiveTask",
        "len",
        "new_task.id.startswith"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_dynamic_task_integration.py:test_simple_dynamic_task_addition"
    },
    {
      "type": "class",
      "name": "TestDeviceBasic",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_basic_components.py",
      "line_number": 22,
      "complexity": 1,
      "docstring": "Device\u57fa\u7840\u529f\u80fd\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_simple_code_execution",
        "test_arithmetic_calculation",
        "test_syntax_error_handling"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_basic_components.py:TestDeviceBasic"
    },
    {
      "type": "class",
      "name": "TestStatefulExecutorBasic",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_basic_components.py",
      "line_number": 64,
      "complexity": 1,
      "docstring": "StatefulExecutor\u57fa\u7840\u529f\u80fd\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_simple_execution",
        "test_variable_persistence",
        "test_get_set_variable"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_basic_components.py:TestStatefulExecutorBasic"
    },
    {
      "type": "function",
      "name": "setUp",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_basic_components.py",
      "line_number": 67,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u524d\u51c6\u5907",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "StatefulExecutor"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_basic_components.py:setUp"
    },
    {
      "type": "function",
      "name": "test_simple_code_execution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_basic_components.py",
      "line_number": 29,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u7b80\u5355\u4ee3\u7801\u6267\u884c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.device.execute_code",
        "self.assertIsInstance",
        "self.assertTrue",
        "self.assertEqual",
        "self.assertIn",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_basic_components.py:test_simple_code_execution"
    },
    {
      "type": "function",
      "name": "test_arithmetic_calculation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_basic_components.py",
      "line_number": 40,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u7b97\u672f\u8ba1\u7b97",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.device.execute_code",
        "self.assertTrue",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_basic_components.py:test_arithmetic_calculation"
    },
    {
      "type": "function",
      "name": "test_syntax_error_handling",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_basic_components.py",
      "line_number": 53,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u8bed\u6cd5\u9519\u8bef\u5904\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.device.execute_code",
        "self.assertFalse",
        "self.assertIsNotNone",
        "self.assertIn",
        "self.assertNotEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_basic_components.py:test_syntax_error_handling"
    },
    {
      "type": "function",
      "name": "test_simple_execution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_basic_components.py",
      "line_number": 71,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u7b80\u5355\u4ee3\u7801\u6267\u884c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.executor.execute_code",
        "self.assertIsInstance",
        "self.assertTrue",
        "self.assertEqual",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_basic_components.py:test_simple_execution"
    },
    {
      "type": "function",
      "name": "test_variable_persistence",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_basic_components.py",
      "line_number": 81,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u53d8\u91cf\u6301\u4e45\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.executor.execute_code",
        "self.assertTrue",
        "self.assertIn",
        "self.executor.execute_code",
        "self.assertTrue",
        "self.assertIn",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_basic_components.py:test_variable_persistence"
    },
    {
      "type": "function",
      "name": "test_get_set_variable",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_basic_components.py",
      "line_number": 107,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u53d8\u91cf\u8bfb\u5199\u63a5\u53e3",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.executor.set_variable",
        "self.executor.set_variable",
        "self.executor.set_variable",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertIsNone",
        "self.executor.get_variable",
        "self.executor.get_variable",
        "self.executor.get_variable",
        "self.executor.get_variable"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_basic_components.py:test_get_set_variable"
    },
    {
      "type": "class",
      "name": "TestDynamicTaskAddition",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_dynamic_task_addition.py",
      "line_number": 24,
      "complexity": 1,
      "docstring": "\u52a8\u6001\u4efb\u52a1\u6dfb\u52a0\u529f\u80fd\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_generate_dynamic_task_id",
        "test_validate_new_task_data_valid",
        "test_validate_new_task_data_missing_required_fields",
        "test_validate_new_task_data_invalid_agent",
        "test_validate_new_task_data_invalid_phase",
        "test_create_cognitive_task_from_data",
        "test_add_dynamic_tasks_success",
        "test_add_dynamic_tasks_empty_data",
        "test_add_dynamic_tasks_invalid_data",
        "test_add_dynamic_tasks_partial_success",
        "test_apply_plan_modification_add_tasks"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_dynamic_task_addition.py:TestDynamicTaskAddition"
    },
    {
      "type": "function",
      "name": "setUp",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_dynamic_task_addition.py",
      "line_number": 27,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u521d\u59cb\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Mock",
        "CognitiveWorkflowEngine",
        "Mock",
        "Mock",
        "Mock",
        "CognitiveTask"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_dynamic_task_addition.py:setUp"
    },
    {
      "type": "function",
      "name": "test_generate_dynamic_task_id",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_dynamic_task_addition.py",
      "line_number": 61,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u52a8\u6001\u4efb\u52a1ID\u751f\u6210",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.engine._generate_dynamic_task_id",
        "self.assertTrue",
        "self.assertIn",
        "self.engine._generate_dynamic_task_id",
        "self.assertNotEqual",
        "task_id.startswith"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_dynamic_task_addition.py:test_generate_dynamic_task_id"
    },
    {
      "type": "function",
      "name": "test_validate_new_task_data_valid",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_dynamic_task_addition.py",
      "line_number": 74,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6709\u6548\u4efb\u52a1\u6570\u636e\u9a8c\u8bc1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.engine._validate_new_task_data",
        "self.assertTrue",
        "self.assertEqual",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_dynamic_task_addition.py:test_validate_new_task_data_valid"
    },
    {
      "type": "function",
      "name": "test_validate_new_task_data_missing_required_fields",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_dynamic_task_addition.py",
      "line_number": 91,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u7f3a\u5c11\u5fc5\u586b\u5b57\u6bb5\u7684\u4efb\u52a1\u6570\u636e\u9a8c\u8bc1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.engine._validate_new_task_data",
        "self.assertFalse",
        "self.assertGreater",
        "self.assertTrue",
        "self.assertTrue",
        "self.assertTrue",
        "len",
        "any",
        "any",
        "any"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_dynamic_task_addition.py:test_validate_new_task_data_missing_required_fields"
    },
    {
      "type": "function",
      "name": "test_validate_new_task_data_invalid_agent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_dynamic_task_addition.py",
      "line_number": 106,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u65e0\u6548\u667a\u80fd\u4f53\u7684\u4efb\u52a1\u6570\u636e\u9a8c\u8bc1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.engine._validate_new_task_data",
        "self.assertFalse",
        "self.assertTrue",
        "any"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_dynamic_task_addition.py:test_validate_new_task_data_invalid_agent"
    },
    {
      "type": "function",
      "name": "test_validate_new_task_data_invalid_phase",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_dynamic_task_addition.py",
      "line_number": 120,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u65e0\u6548\u9636\u6bb5\u7684\u4efb\u52a1\u6570\u636e\u9a8c\u8bc1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.engine._validate_new_task_data",
        "self.assertFalse",
        "self.assertTrue",
        "any"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_dynamic_task_addition.py:test_validate_new_task_data_invalid_phase"
    },
    {
      "type": "function",
      "name": "test_create_cognitive_task_from_data",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_dynamic_task_addition.py",
      "line_number": 135,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u4ece\u6570\u636e\u521b\u5efa\u8ba4\u77e5\u4efb\u52a1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.engine._create_cognitive_task_from_data",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertTrue",
        "task.id.startswith"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_dynamic_task_addition.py:test_create_cognitive_task_from_data"
    },
    {
      "type": "function",
      "name": "test_add_dynamic_tasks_success",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_dynamic_task_addition.py",
      "line_number": 159,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6210\u529f\u6dfb\u52a0\u52a8\u6001\u4efb\u52a1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "self.engine._add_dynamic_tasks",
        "self.assertTrue",
        "self.assertEqual",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_dynamic_task_addition.py:test_add_dynamic_tasks_success"
    },
    {
      "type": "function",
      "name": "test_add_dynamic_tasks_empty_data",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_dynamic_task_addition.py",
      "line_number": 185,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u7a7a\u4efb\u52a1\u6570\u636e\u7684\u52a8\u6001\u6dfb\u52a0",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "self.engine._add_dynamic_tasks",
        "self.assertFalse",
        "self.assertEqual",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_dynamic_task_addition.py:test_add_dynamic_tasks_empty_data"
    },
    {
      "type": "function",
      "name": "test_add_dynamic_tasks_invalid_data",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_dynamic_task_addition.py",
      "line_number": 201,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u65e0\u6548\u4efb\u52a1\u6570\u636e\u7684\u52a8\u6001\u6dfb\u52a0",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "self.engine._add_dynamic_tasks",
        "self.assertFalse",
        "self.assertEqual",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_dynamic_task_addition.py:test_add_dynamic_tasks_invalid_data"
    },
    {
      "type": "function",
      "name": "test_add_dynamic_tasks_partial_success",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_dynamic_task_addition.py",
      "line_number": 223,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u90e8\u5206\u6210\u529f\u7684\u52a8\u6001\u4efb\u52a1\u6dfb\u52a0",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "self.engine._add_dynamic_tasks",
        "self.assertTrue",
        "self.assertEqual",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_dynamic_task_addition.py:test_add_dynamic_tasks_partial_success"
    },
    {
      "type": "function",
      "name": "test_apply_plan_modification_add_tasks",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_dynamic_task_addition.py",
      "line_number": 250,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u8ba1\u5212\u4fee\u6b63\u4e2d\u7684\u4efb\u52a1\u6dfb\u52a0",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "len",
        "self.engine._apply_plan_modification",
        "self.assertEqual",
        "self.assertEqual",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_dynamic_task_addition.py:test_apply_plan_modification_add_tasks"
    },
    {
      "type": "class",
      "name": "TestMessageCompressCore",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py",
      "line_number": 19,
      "complexity": 1,
      "docstring": "\u6d88\u606f\u538b\u7f29\u6838\u5fc3\u529f\u80fd\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "_create_test_messages",
        "test_no_compression_empty_list",
        "test_no_compression_single_message",
        "test_no_compression_small_list",
        "test_no_compression_boundary_case",
        "test_message_type_preservation",
        "test_input_validation",
        "test_message_content_basic"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py:TestMessageCompressCore"
    },
    {
      "type": "class",
      "name": "TestMessageCompressIntegrationSimple",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py",
      "line_number": 115,
      "complexity": 1,
      "docstring": "\u7b80\u5316\u96c6\u6210\u6d4b\u8bd5 - \u9700\u8981\u771f\u5b9eAPI\u5bc6\u94a5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_real_compression_with_deepseek",
        "test_real_compression_with_gemini",
        "test_compression_decision_logic"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py:TestMessageCompressIntegrationSimple"
    },
    {
      "type": "class",
      "name": "TestMessageCompressEdgeCases",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py",
      "line_number": 213,
      "complexity": 1,
      "docstring": "\u8fb9\u754c\u60c5\u51b5\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "test_mixed_message_types",
        "test_extremely_long_content",
        "test_unicode_and_emoji"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py:TestMessageCompressEdgeCases"
    },
    {
      "type": "function",
      "name": "setUp",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py",
      "line_number": 118,
      "complexity": 1,
      "docstring": "\u68c0\u67e5API\u5bc6\u94a5\u662f\u5426\u53ef\u7528",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "bool",
        "os.getenv"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py:setUp"
    },
    {
      "type": "function",
      "name": "_create_test_messages",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py",
      "line_number": 28,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u6d4b\u8bd5\u6d88\u606f\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "count"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "range",
        "messages.append",
        "messages.append",
        "HumanMessage",
        "AIMessage"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py:_create_test_messages"
    },
    {
      "type": "function",
      "name": "test_no_compression_empty_list",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py",
      "line_number": 38,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u7a7a\u5217\u8868\u4e0d\u538b\u7f29",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "compress_messages",
        "self.assertEqual",
        "self.assertEqual",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py:test_no_compression_empty_list"
    },
    {
      "type": "function",
      "name": "test_no_compression_single_message",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py",
      "line_number": 44,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5355\u6761\u6d88\u606f\u4e0d\u538b\u7f29",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "compress_messages",
        "self.assertEqual",
        "self.assertEqual",
        "self.assertIsInstance",
        "HumanMessage",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py:test_no_compression_single_message"
    },
    {
      "type": "function",
      "name": "test_no_compression_small_list",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py",
      "line_number": 52,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5c0f\u4e8e10\u6761\u6d88\u606f\u4e0d\u538b\u7f29",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "compress_messages",
        "self.assertEqual",
        "self.assertEqual",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py:test_no_compression_small_list"
    },
    {
      "type": "function",
      "name": "test_no_compression_boundary_case",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py",
      "line_number": 58,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6070\u597d10\u6761\u6d88\u606f\u4e0d\u538b\u7f29",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "compress_messages",
        "self.assertEqual",
        "self.assertEqual",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py:test_no_compression_boundary_case"
    },
    {
      "type": "function",
      "name": "test_message_type_preservation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py",
      "line_number": 64,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6d88\u606f\u7c7b\u578b\u4fdd\u6301\u6b63\u786e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "compress_messages",
        "self.assertEqual",
        "enumerate",
        "HumanMessage",
        "AIMessage",
        "HumanMessage",
        "AIMessage",
        "len",
        "self.assertIsInstance",
        "self.assertIn",
        "self.assertIsInstance",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py:test_message_type_preservation"
    },
    {
      "type": "function",
      "name": "test_input_validation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py",
      "line_number": 85,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u8f93\u5165\u9a8c\u8bc1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.assertRaises",
        "compress_messages",
        "self.assertRaises",
        "compress_messages"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py:test_input_validation"
    },
    {
      "type": "function",
      "name": "test_message_content_basic",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py",
      "line_number": 95,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6d88\u606f\u5185\u5bb9\u57fa\u672c\u5904\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "compress_messages",
        "self.assertEqual",
        "enumerate",
        "HumanMessage",
        "AIMessage",
        "HumanMessage",
        "AIMessage",
        "HumanMessage",
        "AIMessage",
        "len",
        "zip",
        "self.assertEqual",
        "self.assertEqual",
        "type",
        "type"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py:test_message_content_basic"
    },
    {
      "type": "function",
      "name": "test_real_compression_with_deepseek",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py",
      "line_number": 123,
      "complexity": 1,
      "docstring": "\u771f\u5b9e\u538b\u7f29\u6d4b\u8bd5 - DeepSeek",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [
        "unittest.skipUnless(os.getenv('DEEPSEEK_API_KEY'), '\u9700\u8981DEEPSEEK_API_KEY\u73af\u5883\u53d8\u91cf')"
      ],
      "inheritance": [],
      "calls": [
        "unittest.skipUnless",
        "range",
        "os.getenv",
        "test_messages.append",
        "test_messages.append",
        "compress_messages",
        "self.assertEqual",
        "self.assertIsInstance",
        "self.assertIsInstance",
        "self.assertEqual",
        "self.assertGreater",
        "self.assertEqual",
        "zip",
        "print",
        "HumanMessage",
        "AIMessage",
        "len",
        "len",
        "len",
        "self.assertEqual",
        "self.assertEqual",
        "self.fail",
        "type",
        "type",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py:test_real_compression_with_deepseek"
    },
    {
      "type": "function",
      "name": "test_real_compression_with_gemini",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py",
      "line_number": 158,
      "complexity": 1,
      "docstring": "\u771f\u5b9e\u538b\u7f29\u6d4b\u8bd5 - Gemini",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [
        "unittest.skipUnless(os.getenv('OPENROUTER_API_KEY'), '\u9700\u8981OPENROUTER_API_KEY\u73af\u5883\u53d8\u91cf')"
      ],
      "inheritance": [],
      "calls": [
        "unittest.skipUnless",
        "range",
        "os.getenv",
        "test_messages.append",
        "test_messages.append",
        "compress_messages",
        "self.assertEqual",
        "self.assertIsInstance",
        "self.assertIsInstance",
        "print",
        "HumanMessage",
        "AIMessage",
        "len",
        "self.fail"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py:test_real_compression_with_gemini"
    },
    {
      "type": "function",
      "name": "test_compression_decision_logic",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py",
      "line_number": 178,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u538b\u7f29\u51b3\u7b56\u903b\u8f91",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "range",
        "messages.append",
        "messages.append",
        "compress_messages",
        "self.assertEqual",
        "print",
        "compress_messages",
        "self.assertEqual",
        "print",
        "HumanMessage",
        "AIMessage",
        "len",
        "print",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py:test_compression_decision_logic"
    },
    {
      "type": "function",
      "name": "test_mixed_message_types",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py",
      "line_number": 216,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6df7\u5408\u6d88\u606f\u7c7b\u578b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "compress_messages",
        "self.assertEqual",
        "self.assertEqual",
        "HumanMessage",
        "HumanMessage",
        "AIMessage",
        "AIMessage",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py:test_mixed_message_types"
    },
    {
      "type": "function",
      "name": "test_extremely_long_content",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py",
      "line_number": 230,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6781\u957f\u5185\u5bb9\u6d88\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "compress_messages",
        "self.assertEqual",
        "self.assertEqual",
        "HumanMessage",
        "AIMessage",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py:test_extremely_long_content"
    },
    {
      "type": "function",
      "name": "test_unicode_and_emoji",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py",
      "line_number": 242,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5Unicode\u548c\u8868\u60c5\u7b26\u53f7",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "compress_messages",
        "self.assertEqual",
        "zip",
        "HumanMessage",
        "AIMessage",
        "HumanMessage",
        "AIMessage",
        "len",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py:test_unicode_and_emoji"
    },
    {
      "type": "class",
      "name": "TestClass",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_ipython_state_utils.py",
      "line_number": 26,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_ipython_state_utils.py:TestClass"
    },
    {
      "type": "class",
      "name": "ModifiedTestClass",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_ipython_state_utils.py",
      "line_number": 46,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_ipython_state_utils.py:ModifiedTestClass"
    },
    {
      "type": "function",
      "name": "ipython",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_ipython_state_utils.py",
      "line_number": 11,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u5168\u5c40IPython\u5b9e\u4f8b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [
        "pytest.fixture(scope='module')"
      ],
      "inheritance": [],
      "calls": [
        "pytest.fixture",
        "get_ipython"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_ipython_state_utils.py:ipython"
    },
    {
      "type": "function",
      "name": "test_save_and_load_ipython_state",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_ipython_state_utils.py",
      "line_number": 15,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u4fdd\u5b58\u548c\u52a0\u8f7dIPython\u73af\u5883\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "ipython"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "tempfile.NamedTemporaryFile",
        "os.path.exists",
        "os.path.exists",
        "saveIpython",
        "os.path.getsize",
        "loadIpython",
        "os.unlink"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_ipython_state_utils.py:test_save_and_load_ipython_state"
    },
    {
      "type": "function",
      "name": "test_save_with_invalid_ipython",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_ipython_state_utils.py",
      "line_number": 69,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u65e0\u6548IPython\u5b9e\u4f8b\u7684\u4fdd\u5b58",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "tempfile.NamedTemporaryFile",
        "saveIpython"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_ipython_state_utils.py:test_save_with_invalid_ipython"
    },
    {
      "type": "function",
      "name": "test_load_with_invalid_ipython",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_ipython_state_utils.py",
      "line_number": 74,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u65e0\u6548IPython\u5b9e\u4f8b\u7684\u52a0\u8f7d",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "tempfile.NamedTemporaryFile",
        "loadIpython"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_ipython_state_utils.py:test_load_with_invalid_ipython"
    },
    {
      "type": "function",
      "name": "test_load_nonexistent_file",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_ipython_state_utils.py",
      "line_number": 79,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u52a0\u8f7d\u4e0d\u5b58\u5728\u7684\u6587\u4ef6",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "ipython"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "loadIpython"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_ipython_state_utils.py:test_load_nonexistent_file"
    },
    {
      "type": "function",
      "name": "test_skip_unsupported_objects",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_ipython_state_utils.py",
      "line_number": 83,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u8df3\u8fc7\u4e0d\u53d7\u652f\u6301\u7684\u5bf9\u8c61",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "ipython"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "ModuleType",
        "tempfile.NamedTemporaryFile",
        "os.path.exists",
        "saveIpython",
        "open",
        "dill.load",
        "os.unlink"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_ipython_state_utils.py:test_skip_unsupported_objects"
    },
    {
      "type": "function",
      "name": "test_save_and_load_with_run_cell",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_ipython_state_utils.py",
      "line_number": 113,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u901a\u8fc7run_cell\u5b9a\u4e49\u7684\u5bf9\u8c61\u80fd\u5426\u6b63\u786e\u4fdd\u5b58\u548c\u52a0\u8f7d",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "ipython"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "ipython.run_cell",
        "ipython.run_cell",
        "ipython.run_cell",
        "tempfile.NamedTemporaryFile",
        "ipython.run_cell",
        "ipython.run_cell",
        "ipython.run_cell",
        "os.path.exists",
        "saveIpython",
        "loadIpython",
        "os.unlink"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_ipython_state_utils.py:test_save_and_load_with_run_cell"
    },
    {
      "type": "function",
      "name": "test_func",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_ipython_state_utils.py",
      "line_number": 21,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_ipython_state_utils.py:test_func"
    },
    {
      "type": "function",
      "name": "changed_func",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_ipython_state_utils.py",
      "line_number": 42,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_ipython_state_utils.py:changed_func"
    },
    {
      "type": "class",
      "name": "TestThinkerBasic",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py",
      "line_number": 19,
      "complexity": 1,
      "docstring": "Thinker\u57fa\u7840\u529f\u80fd\u6d4b\u8bd5\uff08\u4e0d\u9700\u8981API\u5bc6\u94a5\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_thinker_initialization",
        "test_device_integration"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py:TestThinkerBasic"
    },
    {
      "type": "class",
      "name": "TestThinkerWithDeepSeek",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py",
      "line_number": 59,
      "complexity": 1,
      "docstring": "Thinker\u4e0eDeepSeek\u96c6\u6210\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_simple_code_generation",
        "test_arithmetic_calculation",
        "test_data_processing",
        "test_loop_and_condition",
        "test_error_handling_and_retry"
      ],
      "parameters": [],
      "decorators": [
        "unittest.skipUnless(os.getenv('DEEPSEEK_API_KEY'), '\u9700\u8981DEEPSEEK_API_KEY\u73af\u5883\u53d8\u91cf')"
      ],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py:TestThinkerWithDeepSeek"
    },
    {
      "type": "class",
      "name": "TestThinkerStreamExecution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py",
      "line_number": 133,
      "complexity": 1,
      "docstring": "Thinker\u6d41\u5f0f\u6267\u884c\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_stream_execution",
        "test_stream_with_multiple_attempts"
      ],
      "parameters": [],
      "decorators": [
        "unittest.skipUnless(os.getenv('DEEPSEEK_API_KEY'), '\u9700\u8981DEEPSEEK_API_KEY\u73af\u5883\u53d8\u91cf')"
      ],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py:TestThinkerStreamExecution"
    },
    {
      "type": "class",
      "name": "TestThinkerChatFunctionality",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py",
      "line_number": 182,
      "complexity": 1,
      "docstring": "Thinker\u804a\u5929\u529f\u80fd\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_chat_sync",
        "test_chat_stream",
        "test_chat_with_json_response"
      ],
      "parameters": [],
      "decorators": [
        "unittest.skipUnless(os.getenv('DEEPSEEK_API_KEY'), '\u9700\u8981DEEPSEEK_API_KEY\u73af\u5883\u53d8\u91cf')"
      ],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py:TestThinkerChatFunctionality"
    },
    {
      "type": "class",
      "name": "TestThinkerResultGeneration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py",
      "line_number": 249,
      "complexity": 1,
      "docstring": "Thinker\u7ed3\u679c\u751f\u6210\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_generate_result_sync",
        "test_generate_result_stream"
      ],
      "parameters": [],
      "decorators": [
        "unittest.skipUnless(os.getenv('DEEPSEEK_API_KEY'), '\u9700\u8981DEEPSEEK_API_KEY\u73af\u5883\u53d8\u91cf')"
      ],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py:TestThinkerResultGeneration"
    },
    {
      "type": "class",
      "name": "TestThinkerComplexTasks",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py",
      "line_number": 299,
      "complexity": 1,
      "docstring": "Thinker\u590d\u6742\u4efb\u52a1\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_file_operation_task",
        "test_class_definition_task",
        "test_data_analysis_task"
      ],
      "parameters": [],
      "decorators": [
        "unittest.skipUnless(os.getenv('DEEPSEEK_API_KEY'), '\u9700\u8981DEEPSEEK_API_KEY\u73af\u5883\u53d8\u91cf')"
      ],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py:TestThinkerComplexTasks"
    },
    {
      "type": "function",
      "name": "setUp",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py",
      "line_number": 302,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u524d\u51c6\u5907",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "StatefulExecutor",
        "Thinker"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py:setUp"
    },
    {
      "type": "function",
      "name": "test_thinker_initialization",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py",
      "line_number": 27,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5Thinker\u521d\u59cb\u5316",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Thinker",
        "self.assertIsNotNone",
        "self.assertIsNotNone",
        "self.assertEqual",
        "self.assertIsInstance",
        "self.assertEqual",
        "os.getenv",
        "self.skipTest"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py:test_thinker_initialization"
    },
    {
      "type": "function",
      "name": "test_device_integration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py",
      "line_number": 41,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u4e0eDevice\u7684\u96c6\u6210",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.device.execute_code",
        "self.assertTrue",
        "self.assertIn",
        "self.assertEqual",
        "self.device.get_variable"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py:test_device_integration"
    },
    {
      "type": "function",
      "name": "test_simple_code_generation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py",
      "line_number": 67,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u7b80\u5355\u4ee3\u7801\u751f\u6210",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.thinker.execute_sync",
        "self.assertIsInstance",
        "self.assertTrue",
        "self.assertIsNotNone",
        "self.assertIn",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py:test_simple_code_generation"
    },
    {
      "type": "function",
      "name": "test_arithmetic_calculation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py",
      "line_number": 81,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u7b97\u672f\u8ba1\u7b97\u4efb\u52a1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.thinker.execute_sync",
        "self.assertTrue",
        "self.assertIsNotNone",
        "self.assertTrue",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py:test_arithmetic_calculation"
    },
    {
      "type": "function",
      "name": "test_data_processing",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py",
      "line_number": 94,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6570\u636e\u5904\u7406\u4efb\u52a1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.thinker.execute_sync",
        "self.assertTrue",
        "self.assertIsNotNone",
        "self.assertIn",
        "self.assertIn",
        "self.assertIn",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py:test_data_processing"
    },
    {
      "type": "function",
      "name": "test_loop_and_condition",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py",
      "line_number": 108,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5faa\u73af\u548c\u6761\u4ef6\u8bed\u53e5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.thinker.execute_sync",
        "self.assertTrue",
        "self.assertIsNotNone",
        "self.assertTrue",
        "print",
        "any",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py:test_loop_and_condition"
    },
    {
      "type": "function",
      "name": "test_error_handling_and_retry",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py",
      "line_number": 120,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u9519\u8bef\u5904\u7406\u548c\u91cd\u8bd5\u673a\u5236",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.thinker.execute_sync",
        "self.assertTrue",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py:test_error_handling_and_retry"
    },
    {
      "type": "function",
      "name": "test_stream_execution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py",
      "line_number": 141,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6d41\u5f0f\u6267\u884c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.thinker.execute_stream",
        "self.assertIsNotNone",
        "self.assertTrue",
        "self.assertGreater",
        "self.assertTrue",
        "print",
        "print",
        "isinstance",
        "len",
        "any",
        "chunks.append",
        "isinstance",
        "len",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py:test_stream_execution"
    },
    {
      "type": "function",
      "name": "test_stream_with_multiple_attempts",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py",
      "line_number": 164,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6d41\u5f0f\u6267\u884c\u7684\u591a\u6b21\u5c1d\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.thinker.execute_stream",
        "self.assertTrue",
        "print",
        "isinstance",
        "any",
        "results.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py:test_stream_with_multiple_attempts"
    },
    {
      "type": "function",
      "name": "test_chat_sync",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py",
      "line_number": 190,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u540c\u6b65\u804a\u5929",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.thinker.chat_sync",
        "self.assertIsInstance",
        "self.assertTrue",
        "self.assertIsNotNone",
        "self.assertIn",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py:test_chat_sync"
    },
    {
      "type": "function",
      "name": "test_chat_stream",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py",
      "line_number": 203,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6d41\u5f0f\u804a\u5929",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.thinker.chat_stream",
        "self.assertIsNotNone",
        "self.assertTrue",
        "self.assertGreater",
        "''.join",
        "self.assertIn",
        "print",
        "print",
        "isinstance",
        "len",
        "chunks.append",
        "isinstance",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py:test_chat_stream"
    },
    {
      "type": "function",
      "name": "test_chat_with_json_response",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py",
      "line_number": 226,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5JSON\u683c\u5f0f\u54cd\u5e94",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.thinker.chat_sync",
        "self.assertTrue",
        "self.assertIsNotNone",
        "json.loads",
        "self.assertIsInstance",
        "print",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py:test_chat_with_json_response"
    },
    {
      "type": "function",
      "name": "test_generate_result_sync",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py",
      "line_number": 257,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u540c\u6b65\u7ed3\u679c\u751f\u6210",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.thinker.execute_sync",
        "self.assertTrue",
        "self.thinker.generateResult_sync",
        "self.assertIsInstance",
        "self.assertGreater",
        "self.assertIn",
        "print",
        "print",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py:test_generate_result_sync"
    },
    {
      "type": "function",
      "name": "test_generate_result_stream",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py",
      "line_number": 274,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6d41\u5f0f\u7ed3\u679c\u751f\u6210",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Result",
        "self.thinker.generateResult_stream",
        "self.assertGreater",
        "''.join",
        "self.assertGreater",
        "print",
        "print",
        "chunks.append",
        "len",
        "len",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py:test_generate_result_stream"
    },
    {
      "type": "function",
      "name": "test_file_operation_task",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py",
      "line_number": 307,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6587\u4ef6\u64cd\u4f5c\u4efb\u52a1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.thinker.execute_sync",
        "self.assertTrue",
        "self.assertIsNotNone",
        "self.assertIn",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py:test_file_operation_task"
    },
    {
      "type": "function",
      "name": "test_class_definition_task",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py",
      "line_number": 321,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u7c7b\u5b9a\u4e49\u4efb\u52a1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.thinker.execute_sync",
        "self.assertTrue",
        "self.assertIn",
        "self.assertIn",
        "print",
        "result.code.lower"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py:test_class_definition_task"
    },
    {
      "type": "function",
      "name": "test_data_analysis_task",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py",
      "line_number": 336,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6570\u636e\u5206\u6790\u4efb\u52a1",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.thinker.execute_sync",
        "self.assertTrue",
        "self.assertTrue",
        "print",
        "any"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_thinker.py:test_data_analysis_task"
    },
    {
      "type": "class",
      "name": "TestDeviceBasic",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_device.py",
      "line_number": 20,
      "complexity": 1,
      "docstring": "Device\u57fa\u7840\u529f\u80fd\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_simple_code_execution",
        "test_arithmetic_calculation",
        "test_syntax_error_handling",
        "test_runtime_error_handling",
        "test_empty_code",
        "test_multiline_code",
        "test_import_modules"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_device.py:TestDeviceBasic"
    },
    {
      "type": "class",
      "name": "TestDeviceEdgeCases",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_device.py",
      "line_number": 124,
      "complexity": 1,
      "docstring": "Device\u8fb9\u754c\u60c5\u51b5\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_unicode_content",
        "test_long_running_code",
        "test_large_output",
        "test_file_operations",
        "test_exception_in_function"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_device.py:TestDeviceEdgeCases"
    },
    {
      "type": "class",
      "name": "TestDeviceResultValidation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_device.py",
      "line_number": 231,
      "complexity": 1,
      "docstring": "Device\u7ed3\u679c\u9a8c\u8bc1\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "setUp",
        "test_result_object_structure",
        "test_successful_execution_result",
        "test_failed_execution_result"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_device.py:TestDeviceResultValidation"
    },
    {
      "type": "function",
      "name": "setUp",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_device.py",
      "line_number": 234,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u524d\u51c6\u5907",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "Device"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_device.py:setUp"
    },
    {
      "type": "function",
      "name": "test_simple_code_execution",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_device.py",
      "line_number": 27,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u7b80\u5355\u4ee3\u7801\u6267\u884c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.device.execute_code",
        "self.assertIsInstance",
        "self.assertTrue",
        "self.assertEqual",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_device.py:test_simple_code_execution"
    },
    {
      "type": "function",
      "name": "test_arithmetic_calculation",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_device.py",
      "line_number": 38,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u7b97\u672f\u8ba1\u7b97",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.device.execute_code",
        "self.assertTrue",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_device.py:test_arithmetic_calculation"
    },
    {
      "type": "function",
      "name": "test_syntax_error_handling",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_device.py",
      "line_number": 51,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u8bed\u6cd5\u9519\u8bef\u5904\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.device.execute_code",
        "self.assertFalse",
        "self.assertIsNotNone",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_device.py:test_syntax_error_handling"
    },
    {
      "type": "function",
      "name": "test_runtime_error_handling",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_device.py",
      "line_number": 61,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u8fd0\u884c\u65f6\u9519\u8bef\u5904\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.device.execute_code",
        "self.assertFalse",
        "self.assertIsNotNone",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_device.py:test_runtime_error_handling"
    },
    {
      "type": "function",
      "name": "test_empty_code",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_device.py",
      "line_number": 75,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u7a7a\u4ee3\u7801",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.device.execute_code",
        "self.assertTrue",
        "self.assertEqual",
        "self.assertEqual"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_device.py:test_empty_code"
    },
    {
      "type": "function",
      "name": "test_multiline_code",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_device.py",
      "line_number": 84,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u591a\u884c\u4ee3\u7801",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.device.execute_code",
        "self.assertTrue",
        "self.assertIn",
        "self.assertIn",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_device.py:test_multiline_code"
    },
    {
      "type": "function",
      "name": "test_import_modules",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_device.py",
      "line_number": 101,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5bfc\u5165\u6a21\u5757",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.device.execute_code",
        "self.assertTrue",
        "self.assertIn",
        "self.assertIn",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_device.py:test_import_modules"
    },
    {
      "type": "function",
      "name": "test_unicode_content",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_device.py",
      "line_number": 131,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5Unicode\u5185\u5bb9\u5904\u7406",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.device.execute_code",
        "self.assertTrue",
        "self.assertIn",
        "self.assertIn",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_device.py:test_unicode_content"
    },
    {
      "type": "function",
      "name": "test_long_running_code",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_device.py",
      "line_number": 149,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u957f\u65f6\u95f4\u8fd0\u884c\u7684\u4ee3\u7801",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.device.execute_code",
        "self.assertTrue",
        "self.assertIn",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_device.py:test_long_running_code"
    },
    {
      "type": "function",
      "name": "test_large_output",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_device.py",
      "line_number": 163,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5927\u91cf\u8f93\u51fa",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.device.execute_code",
        "self.assertTrue",
        "self.assertIn",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_device.py:test_large_output"
    },
    {
      "type": "function",
      "name": "test_file_operations",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_device.py",
      "line_number": 176,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6587\u4ef6\u64cd\u4f5c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.device.execute_code",
        "self.assertTrue",
        "self.assertIn",
        "self.assertIn",
        "self.assertIn",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_device.py:test_file_operations"
    },
    {
      "type": "function",
      "name": "test_exception_in_function",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_device.py",
      "line_number": 207,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u51fd\u6570\u4e2d\u7684\u5f02\u5e38",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.device.execute_code",
        "self.assertTrue",
        "self.assertIn",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_device.py:test_exception_in_function"
    },
    {
      "type": "function",
      "name": "test_result_object_structure",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_device.py",
      "line_number": 238,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5Result\u5bf9\u8c61\u7ed3\u6784",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.device.execute_code",
        "self.assertTrue",
        "self.assertTrue",
        "self.assertTrue",
        "self.assertTrue",
        "self.assertIsInstance",
        "self.assertIsInstance",
        "self.assertIsInstance",
        "hasattr",
        "hasattr",
        "hasattr",
        "hasattr"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_device.py:test_result_object_structure"
    },
    {
      "type": "function",
      "name": "test_successful_execution_result",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_device.py",
      "line_number": 256,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u6210\u529f\u6267\u884c\u7684\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.device.execute_code",
        "self.assertTrue",
        "self.assertEqual",
        "self.assertIn",
        "self.assertTrue"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_device.py:test_successful_execution_result"
    },
    {
      "type": "function",
      "name": "test_failed_execution_result",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/test_device.py",
      "line_number": 268,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5\u5931\u8d25\u6267\u884c\u7684\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.device.execute_code",
        "self.assertFalse",
        "self.assertEqual",
        "self.assertIsNotNone",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/test_device.py:test_failed_execution_result"
    },
    {
      "type": "class",
      "name": "TestAPIConfiguration",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/config/test_config.py",
      "line_number": 49,
      "complexity": 1,
      "docstring": "API\u914d\u7f6e\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "test_api_key_loading",
        "test_api_health_check"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "unittest.TestCase"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/config/test_config.py:TestAPIConfiguration"
    },
    {
      "type": "function",
      "name": "load_api_key",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/config/test_config.py",
      "line_number": 10,
      "complexity": 1,
      "docstring": "\u52a0\u8f7ddeepseek API\u5bc6\u94a5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "os.getenv",
        "ValueError"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/config/test_config.py:load_api_key"
    },
    {
      "type": "function",
      "name": "check_deepseek_api_health",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/config/test_config.py",
      "line_number": 18,
      "complexity": 1,
      "docstring": "\u68c0\u67e5deepseek API\u7684\u5065\u5eb7\u72b6\u6001",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "load_api_key",
        "llm_deepseek.invoke",
        "hasattr",
        "str",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/config/test_config.py:check_deepseek_api_health"
    },
    {
      "type": "function",
      "name": "skip_if_api_unavailable",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/config/test_config.py",
      "line_number": 39,
      "complexity": 1,
      "docstring": "\u88c5\u9970\u5668\uff1a\u5982\u679cAPI\u4e0d\u53ef\u7528\u5219\u8df3\u8fc7\u6d4b\u8bd5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "test_func"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "check_deepseek_api_health",
        "test_func",
        "self.skipTest"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/config/test_config.py:skip_if_api_unavailable"
    },
    {
      "type": "function",
      "name": "wrapper",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/config/test_config.py",
      "line_number": 41,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "check_deepseek_api_health",
        "test_func",
        "self.skipTest"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/config/test_config.py:wrapper"
    },
    {
      "type": "function",
      "name": "test_api_key_loading",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/config/test_config.py",
      "line_number": 52,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5API\u5bc6\u94a5\u52a0\u8f7d",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "load_api_key",
        "self.assertIsInstance",
        "self.assertTrue",
        "self.skipTest",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/config/test_config.py:test_api_key_loading"
    },
    {
      "type": "function",
      "name": "test_api_health_check",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/tests/config/test_config.py",
      "line_number": 61,
      "complexity": 1,
      "docstring": "\u6d4b\u8bd5API\u5065\u5eb7\u68c0\u67e5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "check_deepseek_api_health",
        "self.skipTest",
        "self.assertTrue",
        "self.assertIn"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/tests/config/test_config.py:test_api_health_check"
    },
    {
      "type": "class",
      "name": "DemoAgent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/docstring_hierarchy.py",
      "line_number": 10,
      "complexity": 1,
      "docstring": "\u8fd9\u662f Agent \u7c7b\u7684 docstring - \u8bed\u8a00\u6a21\u578b\u770b\u4e0d\u5230\u8fd9\u4e2a",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "execute_sync"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/docstring_hierarchy.py:DemoAgent"
    },
    {
      "type": "function",
      "name": "my_tool",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/docstring_hierarchy.py",
      "line_number": 23,
      "complexity": 1,
      "docstring": "\u8fd9\u662f\u5de5\u5177\u51fd\u6570\u7684 docstring - \u8bed\u8a00\u6a21\u578b\u770b\u5230\u7684\u662f\u8fd9\u4e2a\uff01\n\n\u8fd9\u4e2a\u5de5\u5177\u53ef\u4ee5\u6267\u884c\u5404\u79cd\u547d\u4ee4\u3002\n\nArgs:\n    command: \u8981\u6267\u884c\u7684\u547d\u4ee4\n    \nReturns:\n    \u6267\u884c\u7ed3\u679c\u7684\u5b57\u5178",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "command"
      ],
      "decorators": [
        "tool"
      ],
      "inheritance": [],
      "calls": [
        "DemoAgent",
        "agent.execute_sync"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/docstring_hierarchy.py:my_tool"
    },
    {
      "type": "function",
      "name": "execute_sync",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/docstring_hierarchy.py",
      "line_number": 13,
      "complexity": 1,
      "docstring": "\u8fd9\u662f execute_sync \u65b9\u6cd5\u7684 docstring - \u8bed\u8a00\u6a21\u578b\u4e5f\u770b\u4e0d\u5230\u8fd9\u4e2a\n\n\u8fd9\u4e2a\u65b9\u6cd5\u6267\u884c\u81ea\u7136\u8bed\u8a00\u6307\u4ee4\u5e76\u8fd4\u56de\u7ed3\u679c\u3002",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "instruction"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/docstring_hierarchy.py:execute_sync"
    },
    {
      "type": "class",
      "name": "WeatherData",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/weather_data.py",
      "line_number": 12,
      "complexity": 1,
      "docstring": "\u5929\u6c14\u6570\u636e\u7c7b\uff0c\u63d0\u4f9b\u6a21\u62df\u7684\u5929\u6c14\u4fe1\u606f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "normalize_city_name",
        "get_coordinates",
        "find_city_by_coordinates",
        "generate_weather",
        "generate_forecast",
        "get_supported_cities",
        "format_weather_report",
        "format_forecast_report"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/weather_data.py:WeatherData"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/weather_data.py",
      "line_number": 15,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/weather_data.py:__init__"
    },
    {
      "type": "function",
      "name": "normalize_city_name",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/weather_data.py",
      "line_number": 59,
      "complexity": 1,
      "docstring": "\u6807\u51c6\u5316\u57ce\u5e02\u540d\u79f0",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "city"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "city.lower().strip",
        "city.lower"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/weather_data.py:normalize_city_name"
    },
    {
      "type": "function",
      "name": "get_coordinates",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/weather_data.py",
      "line_number": 63,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u57ce\u5e02\u5750\u6807",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "city"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.normalize_city_name"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/weather_data.py:get_coordinates"
    },
    {
      "type": "function",
      "name": "find_city_by_coordinates",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/weather_data.py",
      "line_number": 71,
      "complexity": 1,
      "docstring": "\u6839\u636e\u5750\u6807\u67e5\u627e\u6700\u8fd1\u7684\u57ce\u5e02",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "lat",
        "lon",
        "tolerance"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "float",
        "self.cities.items"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/weather_data.py:find_city_by_coordinates"
    },
    {
      "type": "function",
      "name": "generate_weather",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/weather_data.py",
      "line_number": 84,
      "complexity": 1,
      "docstring": "\u751f\u6210\u6a21\u62df\u5929\u6c14\u6570\u636e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "city",
        "lat",
        "lon"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "random.choice",
        "random.uniform",
        "round",
        "self.normalize_city_name",
        "datetime.now().strftime",
        "round",
        "random.randint",
        "random.randint",
        "round",
        "random.choice",
        "round",
        "random.randint",
        "ValueError",
        "self.find_city_by_coordinates",
        "ValueError",
        "abs",
        "random.uniform",
        "random.uniform",
        "random.randint",
        "random.choice",
        "random.randint",
        "random.randint",
        "datetime.now",
        "random.uniform"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/weather_data.py:generate_weather"
    },
    {
      "type": "function",
      "name": "generate_forecast",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/weather_data.py",
      "line_number": 141,
      "complexity": 1,
      "docstring": "\u751f\u6210\u5929\u6c14\u9884\u62a5\u6570\u636e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "city",
        "lat",
        "lon",
        "days"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "self.generate_weather",
        "range",
        "random.choice",
        "random.uniform",
        "forecast.append",
        "datetime.now",
        "timedelta",
        "date.strftime",
        "round",
        "round",
        "random.randint",
        "round",
        "date.weekday",
        "random.uniform",
        "round",
        "random.uniform",
        "random.uniform",
        "random.uniform"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/weather_data.py:generate_forecast"
    },
    {
      "type": "function",
      "name": "get_supported_cities",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/weather_data.py",
      "line_number": 170,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u652f\u6301\u7684\u57ce\u5e02\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "list",
        "self.cities.keys"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/weather_data.py:get_supported_cities"
    },
    {
      "type": "function",
      "name": "format_weather_report",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/weather_data.py",
      "line_number": 174,
      "complexity": 1,
      "docstring": "\u683c\u5f0f\u5316\u5929\u6c14\u62a5\u544a",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "weather_data"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "f\"\\n\ud83c\udf24\ufe0f **{weather_data['city']} \u5929\u6c14\u62a5\u544a**\\n\\n\ud83d\udcc5 **\u5f53\u524d\u65f6\u95f4**: {weather_data['current_time']}\\n\ud83c\udf21\ufe0f **\u6e29\u5ea6**: {weather_data['temperature']}\u00b0C (\u4f53\u611f\u6e29\u5ea6: {weather_data['feels_like']}\u00b0C)\\n{weather_data['condition_icon']} **\u5929\u6c14**: {weather_data['condition']}\\n\ud83d\udca7 **\u6e7f\u5ea6**: {weather_data['humidity']}%\\n\ud83c\udf2a\ufe0f **\u98ce\u901f**: {weather_data['wind_speed']} km/h ({weather_data['wind_direction']}\u98ce)\\n\ud83d\udc41\ufe0f **\u80fd\u89c1\u5ea6**: {weather_data['visibility']} km\\n\u2600\ufe0f **\u7d2b\u5916\u7ebf\u6307\u6570**: {weather_data['uv_index']}\\n\ud83c\udfed **\u7a7a\u6c14\u8d28\u91cf**: {weather_data['air_quality']['level']} (AQI: {weather_data['air_quality']['aqi']})\\n\\n\ud83d\udccd **\u5750\u6807**: ({weather_data['coordinates']['latitude']:.2f}, {weather_data['coordinates']['longitude']:.2f})\\n        \".strip"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/weather_data.py:format_weather_report"
    },
    {
      "type": "function",
      "name": "format_forecast_report",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/weather_data.py",
      "line_number": 193,
      "complexity": 1,
      "docstring": "\u683c\u5f0f\u5316\u5929\u6c14\u9884\u62a5\u62a5\u544a",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "forecast_data",
        "city"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "report.strip",
        "len"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/weather_data.py:format_forecast_report"
    },
    {
      "type": "function",
      "name": "execute_command",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/test_simplified_tool.py",
      "line_number": 15,
      "complexity": 1,
      "docstring": "\u6267\u884c\u547d\u4ee4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "command"
      ],
      "decorators": [
        "tool"
      ],
      "inheritance": [],
      "calls": [
        "agent.execute_sync",
        "result.stdout.strip",
        "str",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/test_simplified_tool.py:execute_command"
    },
    {
      "type": "function",
      "name": "demonstrate_concepts",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/function_call_vs_mcp_demo.py",
      "line_number": 16,
      "complexity": 1,
      "docstring": "\u6f14\u793aFunction Call\u548cMCP\u7684\u6982\u5ff5\u5dee\u5f02",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/function_call_vs_mcp_demo.py:demonstrate_concepts"
    },
    {
      "type": "function",
      "name": "show_architecture_comparison",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/function_call_vs_mcp_demo.py",
      "line_number": 43,
      "complexity": 1,
      "docstring": "\u663e\u793a\u67b6\u6784\u5bf9\u6bd4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/function_call_vs_mcp_demo.py:show_architecture_comparison"
    },
    {
      "type": "function",
      "name": "code_example_comparison",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/function_call_vs_mcp_demo.py",
      "line_number": 72,
      "complexity": 1,
      "docstring": "\u4ee3\u7801\u793a\u4f8b\u5bf9\u6bd4",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/function_call_vs_mcp_demo.py:code_example_comparison"
    },
    {
      "type": "function",
      "name": "practical_implications",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/function_call_vs_mcp_demo.py",
      "line_number": 118,
      "complexity": 1,
      "docstring": "\u5b9e\u9645\u5f71\u54cd\u8bf4\u660e",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/function_call_vs_mcp_demo.py:practical_implications"
    },
    {
      "type": "class",
      "name": "CalculationRequest",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/mcp_vs_openapi_comparison.py",
      "line_number": 22,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "BaseModel"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/mcp_vs_openapi_comparison.py:CalculationRequest"
    },
    {
      "type": "class",
      "name": "CalculationResponse",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/mcp_vs_openapi_comparison.py",
      "line_number": 27,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "BaseModel"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/mcp_vs_openapi_comparison.py:CalculationResponse"
    },
    {
      "type": "class",
      "name": "MCPComparison",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/mcp_vs_openapi_comparison.py",
      "line_number": 57,
      "complexity": 1,
      "docstring": "\u5bf9\u6bd4 MCP \u548c REST/OpenAPI \u7684\u7279\u6027",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/mcp_vs_openapi_comparison.py:MCPComparison"
    },
    {
      "type": "function",
      "name": "run_server",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/mcp_vs_openapi_comparison.py",
      "line_number": 230,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "uvicorn.run"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/mcp_vs_openapi_comparison.py:run_server"
    },
    {
      "type": "class",
      "name": "WeatherToolWrapper",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/claude_weather_demo.py",
      "line_number": 27,
      "complexity": 1,
      "docstring": "\u5929\u6c14\u67e5\u8be2\u5de5\u5177\u5305\u88c5\u7c7b\uff0c\u7b80\u5316\u7248\u672c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/claude_weather_demo.py:WeatherToolWrapper"
    },
    {
      "type": "class",
      "name": "ClaudeWeatherAgent",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/claude_weather_demo.py",
      "line_number": 48,
      "complexity": 1,
      "docstring": "Claude \u5929\u6c14\u67e5\u8be2\u667a\u80fd\u52a9\u624b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "clear_history"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/claude_weather_demo.py:ClaudeWeatherAgent"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/claude_weather_demo.py",
      "line_number": 51,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "ChatOpenAI",
        "MockWeatherMCPServer",
        "WeatherToolWrapper",
        "WeatherToolWrapper",
        "WeatherToolWrapper",
        "WeatherToolWrapper",
        "os.getenv"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/claude_weather_demo.py:__init__"
    },
    {
      "type": "function",
      "name": "clear_history",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/claude_weather_demo.py",
      "line_number": 261,
      "complexity": 1,
      "docstring": "\u6e05\u7a7a\u5bf9\u8bdd\u5386\u53f2",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/claude_weather_demo.py:clear_history"
    },
    {
      "type": "class",
      "name": "MockWeatherMCPServer",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/weather_mcp_demo.py",
      "line_number": 13,
      "complexity": 1,
      "docstring": "\u6a21\u62df\u7684\u5929\u6c14\u67e5\u8be2 MCP \u670d\u52a1\u5668\uff0c\u5c55\u793a\u6838\u5fc3\u6982\u5ff5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "get_available_tools",
        "get_call_history"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/weather_mcp_demo.py:MockWeatherMCPServer"
    },
    {
      "type": "class",
      "name": "WeatherQueryDemo",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/weather_mcp_demo.py",
      "line_number": 150,
      "complexity": 1,
      "docstring": "\u5929\u6c14\u67e5\u8be2\u6f14\u793a\u7c7b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/weather_mcp_demo.py:WeatherQueryDemo"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/weather_mcp_demo.py",
      "line_number": 153,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "MockWeatherMCPServer"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/weather_mcp_demo.py:__init__"
    },
    {
      "type": "function",
      "name": "get_available_tools",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/weather_mcp_demo.py",
      "line_number": 19,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u53ef\u7528\u7684\u5929\u6c14\u67e5\u8be2\u5de5\u5177\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/weather_mcp_demo.py:get_available_tools"
    },
    {
      "type": "function",
      "name": "get_call_history",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/weather_mcp_demo.py",
      "line_number": 145,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u5de5\u5177\u8c03\u7528\u5386\u53f2",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/weather_mcp_demo.py:get_call_history"
    },
    {
      "type": "class",
      "name": "CalculatorClient",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/client.py",
      "line_number": 15,
      "complexity": 1,
      "docstring": "\u8ba1\u7b97\u5668MCP\u5ba2\u6237\u7aef",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/client.py:CalculatorClient"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/client.py",
      "line_number": 18,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "StdioServerParameters"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/client.py:__init__"
    },
    {
      "type": "function",
      "name": "get_weather",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/inspect_tool_schema.py",
      "line_number": 10,
      "complexity": 1,
      "docstring": "\u67e5\u8be2\u6307\u5b9a\u57ce\u5e02\u7684\u5929\u6c14\u4fe1\u606f\n\nArgs:\n    city: \u8981\u67e5\u8be2\u5929\u6c14\u7684\u57ce\u5e02\u540d\u79f0\n    \nReturns:\n    \u5305\u542b\u5929\u6c14\u4fe1\u606f\u7684\u5b57\u5178",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "city"
      ],
      "decorators": [
        "tool"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/inspect_tool_schema.py:get_weather"
    },
    {
      "type": "function",
      "name": "calculate",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/inspect_tool_schema.py",
      "line_number": 23,
      "complexity": 1,
      "docstring": "\u6267\u884c\u6570\u5b66\u8ba1\u7b97\n\nArgs:\n    expression: \u6570\u5b66\u8868\u8fbe\u5f0f\uff0c\u4f8b\u5982 \"123 + 456\" \u6216 \"2 ** 10\"\n    \nReturns:\n    \u5305\u542b\u8ba1\u7b97\u7ed3\u679c\u7684\u5b57\u5178",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "expression"
      ],
      "decorators": [
        "tool"
      ],
      "inheritance": [],
      "calls": [
        "eval"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/inspect_tool_schema.py:calculate"
    },
    {
      "type": "class",
      "name": "RealMCPDemo",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/real_mcp_demo.py",
      "line_number": 21,
      "complexity": 1,
      "docstring": "\u771f\u6b63\u7684MCP\u6f14\u793a",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/real_mcp_demo.py:RealMCPDemo"
    },
    {
      "type": "function",
      "name": "check_mcp_server",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/real_mcp_demo.py",
      "line_number": 237,
      "complexity": 1,
      "docstring": "\u68c0\u67e5MCP\u670d\u52a1\u5668\u662f\u5426\u53ef\u7528",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "subprocess.run"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/real_mcp_demo.py:check_mcp_server"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/real_mcp_demo.py",
      "line_number": 24,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "StdioServerParameters"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/real_mcp_demo.py:__init__"
    },
    {
      "type": "function",
      "name": "simple_calculator",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/real_mcp_demo.py",
      "line_number": 193,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "operation",
        "a",
        "b"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "ValueError"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/real_mcp_demo.py:simple_calculator"
    },
    {
      "type": "function",
      "name": "calculate",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/test_function_call_with_nl.py",
      "line_number": 29,
      "complexity": 1,
      "docstring": "\u6267\u884c\u6570\u5b66\u8ba1\u7b97\n\nArgs:\n    expression: \u6570\u5b66\u8868\u8fbe\u5f0f\uff0c\u4f8b\u5982 \"123 + 456\" \u6216 \"2 ** 10\"\n    \nReturns:\n    \u5305\u542b\u8ba1\u7b97\u7ed3\u679c\u7684\u5b57\u5178",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "expression"
      ],
      "decorators": [
        "tool"
      ],
      "inheritance": [],
      "calls": [
        "python_agent.execute_sync",
        "str",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/test_function_call_with_nl.py:calculate"
    },
    {
      "type": "class",
      "name": "MCPClient",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/llm_mcp_example.py",
      "line_number": 17,
      "complexity": 1,
      "docstring": "MCP \u5ba2\u6237\u7aef\u5c01\u88c5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "get_tools_for_llm"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/llm_mcp_example.py:MCPClient"
    },
    {
      "type": "class",
      "name": "LLMWithMCP",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/llm_mcp_example.py",
      "line_number": 149,
      "complexity": 1,
      "docstring": "\u96c6\u6210\u4e86 MCP \u7684\u8bed\u8a00\u6a21\u578b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/llm_mcp_example.py:LLMWithMCP"
    },
    {
      "type": "function",
      "name": "create_simple_mcp_demo",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/llm_mcp_example.py",
      "line_number": 364,
      "complexity": 1,
      "docstring": "\u521b\u5efa\u4e00\u4e2a\u7b80\u5316\u7684 MCP \u6f14\u793a\uff08\u4e0d\u9700\u8981\u771f\u5b9e\u7684\u8bed\u8a00\u6a21\u578b API\uff09",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/llm_mcp_example.py:create_simple_mcp_demo"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/llm_mcp_example.py",
      "line_number": 152,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "mcp_client",
        "llm_type"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "anthropic.Anthropic",
        "openai.OpenAI"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/llm_mcp_example.py:__init__"
    },
    {
      "type": "function",
      "name": "get_tools_for_llm",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/llm_mcp_example.py",
      "line_number": 132,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u9002\u7528\u4e8e\u8bed\u8a00\u6a21\u578b\u7684\u5de5\u5177\u5b9a\u4e49",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "tools.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/llm_mcp_example.py:get_tools_for_llm"
    },
    {
      "type": "function",
      "name": "calculate",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/test_final_tool.py",
      "line_number": 24,
      "complexity": 1,
      "docstring": "\u8ba1\u7b97\u6570\u5b66\u8868\u8fbe\u5f0f\n\nArgs:\n    expression: \u6570\u5b66\u8868\u8fbe\u5f0f\n    \nReturns:\n    \u8ba1\u7b97\u7ed3\u679c",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "expression"
      ],
      "decorators": [
        "tool"
      ],
      "inheritance": [],
      "calls": [
        "agent.execute_sync",
        "str",
        "result.stdout.strip",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/test_final_tool.py:calculate"
    },
    {
      "type": "function",
      "name": "get_weather",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/function_call_demo.py",
      "line_number": 34,
      "complexity": 1,
      "docstring": "\u67e5\u8be2\u6307\u5b9a\u57ce\u5e02\u7684\u5929\u6c14\u4fe1\u606f\n\nArgs:\n    city: \u8981\u67e5\u8be2\u5929\u6c14\u7684\u57ce\u5e02\u540d\u79f0\n    \nReturns:\n    \u5305\u542b\u5929\u6c14\u4fe1\u606f\u7684\u5b57\u5178",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "city"
      ],
      "decorators": [
        "tool"
      ],
      "inheritance": [],
      "calls": [
        "random.randint",
        "random.choice",
        "random.randint",
        "random.randint",
        "random.randint",
        "random.choice",
        "random.randint",
        "random.randint",
        "random.randint",
        "random.choice",
        "random.randint",
        "random.randint",
        "random.randint",
        "random.choice",
        "random.randint",
        "random.randint",
        "random.randint",
        "random.choice",
        "random.randint",
        "random.randint",
        "random.randint",
        "random.choice",
        "random.randint",
        "random.randint"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/function_call_demo.py:get_weather"
    },
    {
      "type": "function",
      "name": "get_weather_forecast",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/function_call_demo.py",
      "line_number": 100,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u6307\u5b9a\u57ce\u5e02\u672a\u6765\u51e0\u5929\u7684\u5929\u6c14\u9884\u62a5\n\nArgs:\n    city: \u8981\u67e5\u8be2\u5929\u6c14\u7684\u57ce\u5e02\u540d\u79f0\n    days: \u9884\u62a5\u5929\u6570\uff0c\u9ed8\u8ba43\u5929\n    \nReturns:\n    \u5305\u542b\u5929\u6c14\u9884\u62a5\u4fe1\u606f\u7684\u5b57\u5178",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "city",
        "days"
      ],
      "decorators": [
        "tool"
      ],
      "inheritance": [],
      "calls": [
        "range",
        "random.randint",
        "forecast.append",
        "random.choice",
        "random.randint",
        "random.randint",
        "random.randint"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/function_call_demo.py:get_weather_forecast"
    },
    {
      "type": "function",
      "name": "execute_natural_language_command",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/function_call_demo.py",
      "line_number": 137,
      "complexity": 1,
      "docstring": "\u6267\u884c\u81ea\u7136\u8bed\u8a00\u547d\u4ee4\uff0c\u53ef\u4ee5\u8fdb\u884c\u8ba1\u7b97\u3001\u6570\u636e\u5904\u7406\u7b49\u4efb\u52a1\n\nArgs:\n    command: \u8981\u6267\u884c\u7684\u81ea\u7136\u8bed\u8a00\u547d\u4ee4\uff0c\u4f8b\u5982 \"\u8ba1\u7b97 123 + 456\" \u6216 \"\u751f\u6210\u4e00\u4e2a\u5305\u542b5\u4e2a\u968f\u673a\u6570\u7684\u5217\u8868\"\n    \nReturns:\n    \u6267\u884c\u7ed3\u679c\u7684\u5b57\u7b26\u4e32",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "command"
      ],
      "decorators": [
        "tool"
      ],
      "inheritance": [],
      "calls": [
        "python_agent.execute_sync",
        "result.stdout.strip",
        "hasattr",
        "str",
        "str",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/function_call_demo.py:execute_natural_language_command"
    },
    {
      "type": "function",
      "name": "demonstrate_deepseek_function_calling",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/function_call_demo.py",
      "line_number": 175,
      "complexity": 1,
      "docstring": "\u6f14\u793aDeepSeek\u6a21\u578b\u7684function calling\u529f\u80fd",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "ChatOpenAI",
        "ChatPromptTemplate.from_messages",
        "create_tool_calling_agent",
        "AgentExecutor",
        "enumerate",
        "print",
        "print",
        "print",
        "print",
        "os.getenv",
        "MessagesPlaceholder",
        "MessagesPlaceholder",
        "agent_executor.invoke",
        "print",
        "print",
        "str"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/function_call_demo.py:demonstrate_deepseek_function_calling"
    },
    {
      "type": "function",
      "name": "demonstrate_simple_function_calling",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/function_call_demo.py",
      "line_number": 227,
      "complexity": 1,
      "docstring": "\u6f14\u793a\u66f4\u7b80\u5355\u7684function calling\u65b9\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "ChatOpenAI(temperature=0, model='deepseek-chat', base_url='https://api.deepseek.com', api_key=os.getenv('DEEPSEEK_API_KEY'), max_tokens=8192).bind_tools",
        "enumerate",
        "print",
        "print",
        "llm_deepseek.invoke",
        "print",
        "print",
        "ChatOpenAI",
        "HumanMessage",
        "hasattr",
        "messages.append",
        "print",
        "llm_deepseek.invoke",
        "print",
        "print",
        "print",
        "print",
        "isinstance",
        "ToolMessage",
        "messages.append",
        "os.getenv",
        "get_weather.invoke",
        "print",
        "print",
        "json.dumps",
        "get_weather_forecast.invoke",
        "execute_natural_language_command.invoke",
        "json.dumps"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/function_call_demo.py:demonstrate_simple_function_calling"
    },
    {
      "type": "class",
      "name": "MCPTool",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/llm_mcp_best_practices.py",
      "line_number": 23,
      "complexity": 1,
      "docstring": "MCP \u5de5\u5177\u7684\u7edf\u4e00\u8868\u793a",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [
        "dataclass"
      ],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/llm_mcp_best_practices.py:MCPTool"
    },
    {
      "type": "class",
      "name": "LLMProvider",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/llm_mcp_best_practices.py",
      "line_number": 30,
      "complexity": 1,
      "docstring": "LLM \u63d0\u4f9b\u5546\u7684\u62bd\u8c61\u57fa\u7c7b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "convert_tools"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "ABC"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/llm_mcp_best_practices.py:LLMProvider"
    },
    {
      "type": "class",
      "name": "OpenAIProvider",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/llm_mcp_best_practices.py",
      "line_number": 44,
      "complexity": 1,
      "docstring": "OpenAI/DeepSeek \u683c\u5f0f\u63d0\u4f9b\u5546",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "convert_tools"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "LLMProvider"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/llm_mcp_best_practices.py:OpenAIProvider"
    },
    {
      "type": "class",
      "name": "AnthropicProvider",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/llm_mcp_best_practices.py",
      "line_number": 72,
      "complexity": 1,
      "docstring": "Anthropic Claude \u683c\u5f0f\u63d0\u4f9b\u5546",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "convert_tools"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [
        "LLMProvider"
      ],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/llm_mcp_best_practices.py:AnthropicProvider"
    },
    {
      "type": "class",
      "name": "MCPBestPractices",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/llm_mcp_best_practices.py",
      "line_number": 93,
      "complexity": 1,
      "docstring": "LLM \u8c03\u7528 MCP \u7684\u6700\u4f73\u5b9e\u8df5\u5b9e\u73b0",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/llm_mcp_best_practices.py:MCPBestPractices"
    },
    {
      "type": "function",
      "name": "convert_tools",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/llm_mcp_best_practices.py",
      "line_number": 75,
      "complexity": 1,
      "docstring": "\u8f6c\u6362\u4e3a Claude tool use \u683c\u5f0f",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "mcp_tools"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/llm_mcp_best_practices.py:convert_tools"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/llm_mcp_best_practices.py",
      "line_number": 96,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "server_command",
        "server_args"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "StdioServerParameters"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/llm_mcp_best_practices.py:__init__"
    },
    {
      "type": "class",
      "name": "DeepSeekMCPClient",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/deepseek_mcp_example.py",
      "line_number": 16,
      "complexity": 1,
      "docstring": "DeepSeek + MCP \u96c6\u6210\u5ba2\u6237\u7aef",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "get_tools_for_deepseek"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/deepseek_mcp_example.py:DeepSeekMCPClient"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/deepseek_mcp_example.py",
      "line_number": 19,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "server_command",
        "api_key"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "openai.OpenAI",
        "os.getenv"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/deepseek_mcp_example.py:__init__"
    },
    {
      "type": "function",
      "name": "get_tools_for_deepseek",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/deepseek_mcp_example.py",
      "line_number": 72,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u9002\u7528\u4e8eDeepSeek\u7684\u5de5\u5177\u5b9a\u4e49",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "tools.append"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/deepseek_mcp_example.py:get_tools_for_deepseek"
    },
    {
      "type": "class",
      "name": "MockMCPServer",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/simple_mcp_demo.py",
      "line_number": 11,
      "complexity": 1,
      "docstring": "\u6a21\u62df\u7684 MCP \u670d\u52a1\u5668\uff0c\u5c55\u793a\u6838\u5fc3\u6982\u5ff5",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__",
        "get_available_tools"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/simple_mcp_demo.py:MockMCPServer"
    },
    {
      "type": "class",
      "name": "MockLanguageModel",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/simple_mcp_demo.py",
      "line_number": 141,
      "complexity": 1,
      "docstring": "\u6a21\u62df\u8bed\u8a00\u6a21\u578b\uff0c\u5c55\u793a\u5982\u4f55\u4e0e MCP \u96c6\u6210",
      "dependencies": [],
      "semantic_info": {},
      "methods": [
        "__init__"
      ],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/simple_mcp_demo.py:MockLanguageModel"
    },
    {
      "type": "function",
      "name": "explain_mcp_vs_function_call",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/simple_mcp_demo.py",
      "line_number": 251,
      "complexity": 1,
      "docstring": "\u89e3\u91ca MCP \u4e0e\u4f20\u7edf Function Call \u7684\u533a\u522b",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "print",
        "print",
        "print",
        "comparison.items",
        "print",
        "print",
        "print",
        "details.items",
        "print"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/simple_mcp_demo.py:explain_mcp_vs_function_call"
    },
    {
      "type": "function",
      "name": "__init__",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/simple_mcp_demo.py",
      "line_number": 144,
      "complexity": 1,
      "docstring": "",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self",
        "mcp_server"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "mcp_server.get_available_tools"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/simple_mcp_demo.py:__init__"
    },
    {
      "type": "function",
      "name": "get_available_tools",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/simple_mcp_demo.py",
      "line_number": 18,
      "complexity": 1,
      "docstring": "\u83b7\u53d6\u53ef\u7528\u5de5\u5177\u5217\u8868",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "self"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/simple_mcp_demo.py:get_available_tools"
    },
    {
      "type": "function",
      "name": "add",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/project/calculator.py",
      "line_number": 3,
      "complexity": 1,
      "docstring": "Addition",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "a",
        "b"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/project/calculator.py:add"
    },
    {
      "type": "function",
      "name": "subtract",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/project/calculator.py",
      "line_number": 7,
      "complexity": 1,
      "docstring": "Subtraction",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "a",
        "b"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/project/calculator.py:subtract"
    },
    {
      "type": "function",
      "name": "multiply",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/project/calculator.py",
      "line_number": 11,
      "complexity": 1,
      "docstring": "Multiplication",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "a",
        "b"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/project/calculator.py:multiply"
    },
    {
      "type": "function",
      "name": "divide",
      "file_path": "/home/guci/aiProjects/AgentFrameWork/project/calculator.py",
      "line_number": 15,
      "complexity": 1,
      "docstring": "Division",
      "dependencies": [],
      "semantic_info": {},
      "methods": [],
      "parameters": [
        "a",
        "b"
      ],
      "decorators": [],
      "inheritance": [],
      "calls": [
        "ValueError"
      ],
      "imports": [],
      "id": "/home/guci/aiProjects/AgentFrameWork/project/calculator.py:divide"
    }
  ],
  "links": [
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_enhanced_instruction_with_global_state.py:create_test_workflow",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_enhanced_instruction_with_global_state.py:test_enhanced_instruction_with_global_state"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_enhanced_instruction_with_global_state.py:create_test_workflow",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_enhanced_instruction_with_global_state.py:test_instruction_content_comparison"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_enhanced_instruction_with_global_state.py:create_test_workflow",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_enhanced_instruction_with_global_state.py:test_different_global_states"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_enhanced_instruction_with_global_state.py:create_test_workflow",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_execution_history.py:test_execution_history"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_enhanced_instruction_with_global_state.py:create_test_workflow",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_loop_exit.py:test_loop_exit_mechanism"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_enhanced_instruction_with_global_state.py:create_test_workflow",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_loop_fix.py:test_loop_fix"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_enhanced_instruction_with_global_state.py:test_enhanced_instruction_with_global_state",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_execution_history.py:create_test_workflow"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_enhanced_instruction_with_global_state.py:test_enhanced_instruction_with_global_state",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_loop_exit.py:create_test_workflow"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_enhanced_instruction_with_global_state.py:test_enhanced_instruction_with_global_state",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_loop_fix.py:create_test_workflow"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_enhanced_instruction_with_global_state.py:test_enhanced_instruction_with_global_state",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_enhanced_instruction_with_global_state.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_enhanced_instruction_with_global_state.py:test_instruction_content_comparison",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_execution_history.py:create_test_workflow"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_enhanced_instruction_with_global_state.py:test_instruction_content_comparison",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_loop_exit.py:create_test_workflow"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_enhanced_instruction_with_global_state.py:test_instruction_content_comparison",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_loop_fix.py:create_test_workflow"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_enhanced_instruction_with_global_state.py:test_instruction_content_comparison",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_enhanced_instruction_with_global_state.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_enhanced_instruction_with_global_state.py:test_different_global_states",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_execution_history.py:create_test_workflow"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_enhanced_instruction_with_global_state.py:test_different_global_states",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_loop_exit.py:create_test_workflow"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_enhanced_instruction_with_global_state.py:test_different_global_states",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_loop_fix.py:create_test_workflow"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_enhanced_instruction_with_global_state.py:test_different_global_states",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_enhanced_instruction_with_global_state.py:main"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:BaseResponseParser",
      "target": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:RuleBasedParser"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:BaseResponseParser",
      "target": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:TransformerParser"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:BaseResponseParser",
      "target": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:DeepSeekParser"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:BaseResponseParser",
      "target": "/home/guci/aiProjects/AgentFrameWork/response_parser_v2.py:EmbeddingParser"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/blue_print_patch_simple.py:add",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py:test_add"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/blue_print_patch_simple.py:multiply",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py:test_multiply"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/minimal_workflow_test.py:create_minimal_workflow",
      "target": "/home/guci/aiProjects/AgentFrameWork/minimal_workflow_test.py:test_minimal_workflow"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:InstructionOptimizer",
      "target": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:StateAwareInstructionOptimizer"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:InstructionOptimizer",
      "target": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:StateAwareInstructionOptimizer"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:StateAwareInstructionOptimizer",
      "target": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:InstructionOptimizer"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:StateAwareErrorHandler",
      "target": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:GenericErrorHandler"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:StateAwareErrorHandler",
      "target": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:GenericErrorHandler"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:GenericErrorHandler",
      "target": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:StateAwareErrorHandler"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:AIStateUpdater",
      "target": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:AIStateUpdaterService"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:AIStateUpdater",
      "target": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:AIStateUpdaterService"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:AIStateUpdaterService",
      "target": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:AIStateUpdater"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:MultiStepAgent_v2",
      "target": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:Agent"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:validate_variables",
      "target": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py:set"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_categorize_state_relevance",
      "target": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py:set"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:get_memory_usage",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/test_stress_boundary.py:test_memory_usage_under_stress"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:plan_execution",
      "target": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:extract_code"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:_parse_decision",
      "target": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:extract_code"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2.py:get_natural_language_analysis_summary",
      "target": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py:set"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_memory_profiling.py:get_memory_usage",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/test_stress_boundary.py:test_memory_usage_under_stress"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_execution_history.py:create_test_workflow",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_execution_history.py:test_execution_history"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_execution_history.py:create_test_workflow",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_loop_exit.py:test_loop_exit_mechanism"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_execution_history.py:create_test_workflow",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_loop_fix.py:test_loop_fix"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_execution_history.py:test_execution_history",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_loop_exit.py:create_test_workflow"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_execution_history.py:test_execution_history",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_loop_fix.py:create_test_workflow"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/debug_workflow_ai_evaluation.py:DebugMockTestResultEvaluator",
      "target": "/home/guci/aiProjects/AgentFrameWork/static_workflow/result_evaluator.py:MockTestResultEvaluator"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/fix_calculator_issue.py:fix_calculator_code",
      "target": "/home/guci/aiProjects/AgentFrameWork/fix_calculator_issue.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/fix_calculator_issue.py:verify_tests",
      "target": "/home/guci/aiProjects/AgentFrameWork/fix_calculator_issue.py:main"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/task_master_agent.py:TaskMasterAgent",
      "target": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:Agent"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/demo_static_workflow.py:main",
      "target": "/home/guci/aiProjects/AgentFrameWork/demo_static_workflow.py:setup_agent_team"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/demo_static_workflow.py:main",
      "target": "/home/guci/aiProjects/AgentFrameWork/demo_static_workflow.py:create_demo_workflow"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/demo_static_workflow.py:main",
      "target": "/home/guci/aiProjects/AgentFrameWork/examples/dynamic_task_logging_demo.py:create_demo_workflow"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/demo_static_workflow.py:main",
      "target": "/home/guci/aiProjects/AgentFrameWork/examples/observability_demo.py:create_demo_workflow"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/demo_static_workflow.py:main",
      "target": "/home/guci/aiProjects/AgentFrameWork/demo_static_workflow.py:display_execution_result"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/demo_static_workflow.py:create_demo_workflow",
      "target": "/home/guci/aiProjects/AgentFrameWork/examples/dynamic_task_logging_demo.py:demo_dynamic_task_addition"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/demo_static_workflow.py:create_demo_workflow",
      "target": "/home/guci/aiProjects/AgentFrameWork/examples/dynamic_task_logging_demo.py:demo_error_scenarios"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/demo_static_workflow.py:create_demo_workflow",
      "target": "/home/guci/aiProjects/AgentFrameWork/examples/observability_demo.py:demo_dynamic_task_addition"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/demo_static_workflow.py:create_demo_workflow",
      "target": "/home/guci/aiProjects/AgentFrameWork/examples/observability_demo.py:demo_error_scenarios"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/demo_agent_compression.py:DemoAgent",
      "target": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:AgentBase"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/demo_agent_compression.py:chat_with_compression",
      "target": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:reduce_memory_decorator_compress"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_config_system.py:run_basic_tests",
      "target": "/home/guci/aiProjects/AgentFrameWork/config_system.py:get_config"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_config_system.py:test_global_configuration_functions",
      "target": "/home/guci/aiProjects/AgentFrameWork/config_system.py:initialize_config"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_config_system.py:test_global_configuration_functions",
      "target": "/home/guci/aiProjects/AgentFrameWork/config_system.py:get_config"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_taskmaster_deepseek.py:create_deepseek_llm",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_taskmaster_deepseek.py:create_deepseek_agents"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_taskmaster_deepseek.py:create_deepseek_llm",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_taskmaster_deepseek.py:test_taskmaster_with_deepseek"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_taskmaster_deepseek.py:create_deepseek_llm",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_status_fix.py:create_test_agents"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_taskmaster_deepseek.py:create_deepseek_llm",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_status_fix.py:test_status_management_fix"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_taskmaster_deepseek.py:create_deepseek_agents",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_status_fix.py:create_deepseek_llm"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_taskmaster_deepseek.py:create_deepseek_agents",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_taskmaster_deepseek.py:test_taskmaster_with_deepseek"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_taskmaster_deepseek.py:test_taskmaster_with_deepseek",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_status_fix.py:create_deepseek_llm"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/simple_calculator.py:add",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py:test_add"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/simple_calculator.py:subtract",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py:test_subtract"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/simple_calculator.py:multiply",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py:test_multiply"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/simple_calculator.py:divide",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py:test_divide"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/ipython_state_utils.py:saveIpython",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/test_ipython_state_utils.py:test_save_and_load_ipython_state"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/ipython_state_utils.py:saveIpython",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/test_ipython_state_utils.py:test_save_with_invalid_ipython"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/ipython_state_utils.py:saveIpython",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/test_ipython_state_utils.py:test_skip_unsupported_objects"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/ipython_state_utils.py:saveIpython",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/test_ipython_state_utils.py:test_save_and_load_with_run_cell"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/ipython_state_utils.py:loadIpython",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/test_ipython_state_utils.py:test_save_and_load_ipython_state"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/ipython_state_utils.py:loadIpython",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/test_ipython_state_utils.py:test_load_with_invalid_ipython"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/ipython_state_utils.py:loadIpython",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/test_ipython_state_utils.py:test_load_nonexistent_file"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/ipython_state_utils.py:loadIpython",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/test_ipython_state_utils.py:test_save_and_load_with_run_cell"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_loop_exit.py:create_test_workflow",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_loop_exit.py:test_loop_exit_mechanism"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_loop_exit.py:create_test_workflow",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_loop_fix.py:test_loop_fix"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_loop_exit.py:test_loop_exit_mechanism",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_loop_fix.py:create_test_workflow"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_basic.py:MockAgent",
      "target": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:AgentBase"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_taskmaster_fixed.py:create_mock_agents",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_taskmaster_fixed.py:test_taskmaster_fixed"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_taskmaster_fixed.py:create_mock_agents",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/demo_cognitive_workflow.py:demo"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_taskmaster_fixed.py:test_taskmaster_fixed",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/demo_cognitive_workflow.py:create_mock_agents"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_compression.py:test_message_compression",
      "target": "/home/guci/aiProjects/AgentFrameWork/message_compress.py:compress_messages"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/demo_natural_language_state.py:create_mock_llm",
      "target": "/home/guci/aiProjects/AgentFrameWork/demo_natural_language_state.py:demo_state_updates"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/demo_natural_language_state.py:create_mock_llm",
      "target": "/home/guci/aiProjects/AgentFrameWork/demo_natural_language_state.py:demo_natural_language_conditions"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/demo_natural_language_state.py:demo_state_updates",
      "target": "/home/guci/aiProjects/AgentFrameWork/demo_natural_language_state.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/demo_natural_language_state.py:demo_natural_language_conditions",
      "target": "/home/guci/aiProjects/AgentFrameWork/demo_natural_language_state.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/demo_natural_language_state.py:demo_backward_compatibility",
      "target": "/home/guci/aiProjects/AgentFrameWork/demo_natural_language_state.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/demo_natural_language_state.py:demo_mixed_mode",
      "target": "/home/guci/aiProjects/AgentFrameWork/demo_natural_language_state.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_mock_evaluator.py:test_mock_evaluator_with_real_output",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_mock_evaluator.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_mock_evaluator.py:test_various_test_outputs",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_mock_evaluator.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/message_compress.py:compress_messages",
      "target": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:reduce_memory_decorator_compress"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/message_compress.py:compress_messages",
      "target": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:_reduce_memory_compress"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/message_compress.py:compress_messages",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py:test_no_compression_empty_list"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/message_compress.py:compress_messages",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py:test_no_compression_single_message"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/message_compress.py:compress_messages",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py:test_no_compression_small_list"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/message_compress.py:compress_messages",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py:test_no_compression_boundary_case"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/message_compress.py:compress_messages",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py:test_message_type_preservation"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/message_compress.py:compress_messages",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py:test_input_validation"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/message_compress.py:compress_messages",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py:test_message_content_basic"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/message_compress.py:compress_messages",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py:test_real_compression_with_deepseek"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/message_compress.py:compress_messages",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py:test_real_compression_with_gemini"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/message_compress.py:compress_messages",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py:test_compression_decision_logic"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/message_compress.py:compress_messages",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py:test_mixed_message_types"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/message_compress.py:compress_messages",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py:test_extremely_long_content"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/message_compress.py:compress_messages",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/test_message_compress.py:test_unicode_and_emoji"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_config_integration.py:test_config_integration",
      "target": "/home/guci/aiProjects/AgentFrameWork/config_system.py:get_config"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_decision_system.py:create_test_agent",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_decision_system.py:test_basic_decision_functionality"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_decision_system.py:create_test_agent",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_decision_system.py:test_validation_decision"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_decision_system.py:create_test_agent",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_decision_system.py:test_complex_state_conditions"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_decision_system.py:create_test_agent",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_decision_system.py:test_decision_statistics"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_decision_system.py:create_test_agent",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_decision_system.py:test_edge_cases"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_decision_system.py:create_test_agent",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py:test_error_handler_initialization"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_decision_system.py:create_test_agent",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py:test_error_classification"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_decision_system.py:create_test_agent",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py:test_error_handling_workflow"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_decision_system.py:create_test_agent",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py:test_recovery_actions"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_decision_system.py:create_test_agent",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py:test_state_aware_error_handling"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_decision_system.py:create_test_agent",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py:test_error_statistics"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_decision_system.py:create_test_agent",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_instruction_optimization.py:test_basic_optimization"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_decision_system.py:create_test_agent",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_instruction_optimization.py:test_optimization_statistics"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_decision_system.py:create_test_agent",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_instruction_optimization.py:test_integrated_state_aware_instruction"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_decision_system.py:test_basic_decision_functionality",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py:create_test_agent"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_decision_system.py:test_basic_decision_functionality",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_instruction_optimization.py:create_test_agent"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_decision_system.py:test_validation_decision",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py:create_test_agent"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_decision_system.py:test_validation_decision",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_instruction_optimization.py:create_test_agent"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_decision_system.py:test_complex_state_conditions",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py:create_test_agent"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_decision_system.py:test_complex_state_conditions",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_instruction_optimization.py:create_test_agent"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_decision_system.py:test_decision_statistics",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py:create_test_agent"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_decision_system.py:test_decision_statistics",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_instruction_optimization.py:create_test_agent"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_decision_system.py:test_edge_cases",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py:create_test_agent"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_decision_system.py:test_edge_cases",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_instruction_optimization.py:create_test_agent"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_decision_system.py:main",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/test_ipython_state_utils.py:test_func"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_memory_optimization.py:main",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/test_ipython_state_utils.py:test_func"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:get_performance_monitor",
      "target": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:monitor_performance"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:get_performance_monitor",
      "target": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:decorator"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:get_performance_monitor",
      "target": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:wrapper"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:get_performance_monitor",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_performance_integration.py:test_performance_monitoring_kpis"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:decorator",
      "target": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:reduce_memory_decorator"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/performance_monitor.py:decorator",
      "target": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:reduce_memory_decorator_compress"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_hybrid_approach.py:create_test_workflow_with_ai_fields",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_hybrid_approach.py:test_workflow_validation"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_hybrid_approach.py:create_test_workflow_with_ai_fields",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_hybrid_approach.py:test_workflow_serialization"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_hybrid_approach.py:create_test_workflow_with_string_condition",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_hybrid_approach.py:test_workflow_validation"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_hybrid_approach.py:run_all_tests",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/test_ipython_state_utils.py:test_func"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_performance_integration.py:test_performance_integration",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_performance_integration.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_performance_integration.py:test_performance_monitoring_kpis",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_performance_integration.py:main"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:AgentBase",
      "target": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:Thinker"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:AgentBase",
      "target": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:Agent"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:AgentBase",
      "target": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:CognitiveAgent"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:AgentBase",
      "target": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/super_ego_agent.py:SuperEgoAgent"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:AgentBase",
      "target": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/cognitive_debug_agent.py:CognitiveDebugAgent"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:AgentBase",
      "target": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/ego_agent.py:EgoAgent"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:AgentBase",
      "target": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/id_agent.py:IdAgent"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:AgentBase",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_resource_manager.py:CalculatorAgent"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:AgentBase",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_resource_manager.py:DataAnalyzer"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:AgentBase",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_resource_manager.py:ReportGenerator"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:AgentBase",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_dynamic_allocation.py:CalculatorAgent"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:AgentBase",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_dynamic_allocation.py:DataAnalyzer"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:AgentBase",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_dynamic_allocation.py:ReportGenerator"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:AgentBase",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/cognitive_advisor.py:CognitiveAdvisor"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:reduce_memory_decorator",
      "target": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:decorator"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:reduce_memory_decorator",
      "target": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:_reduce_memory"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:reduce_memory_decorator_compress",
      "target": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:decorator"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:reduce_memory_decorator_compress",
      "target": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:_fallback_token_strategy"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:reduce_memory_decorator_compress",
      "target": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:_reduce_memory_compress"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:decorator",
      "target": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:_reduce_memory_compress"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:_reduce_memory_compress",
      "target": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:_fallback_token_strategy"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:_reduce_memory_compress",
      "target": "/home/guci/aiProjects/AgentFrameWork/agent_base.py:wrapper"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:InstructionOptimizer",
      "target": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:StateAwareInstructionOptimizer"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:StateAwareErrorHandler",
      "target": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:GenericErrorHandler"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:AIStateUpdater",
      "target": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:AIStateUpdaterService"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:MultiStepAgent_v2",
      "target": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:Agent"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:validate_variables",
      "target": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py:set"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_categorize_state_relevance",
      "target": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py:set"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:get_memory_usage",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/test_stress_boundary.py:test_memory_usage_under_stress"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:plan_execution",
      "target": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:extract_code"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_before_parser_integration.py:_parse_decision",
      "target": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:extract_code"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_current_files.py:check_file_contents",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_current_files.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_current_files.py:run_test_and_analyze",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_current_files.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/calculator_backup.py:add",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py:test_add"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/calculator_backup.py:subtract",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py:test_subtract"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/calculator_backup.py:multiply",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py:test_multiply"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/calculator_backup.py:divide",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py:test_divide"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_response_parser_v2.py:test_rule_parser",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_response_parser_v2.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_response_parser_v2.py:test_transformer_parser",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_response_parser_v2.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_response_parser_v2.py:test_deepseek_parser",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_response_parser_v2.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_response_parser_v2.py:test_embedding_parser",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_response_parser_v2.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_response_parser_v2.py:test_hybrid_parser",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_response_parser_v2.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_response_parser_v2.py:test_config_variations",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_response_parser_v2.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_response_parser_v2.py:test_performance",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_response_parser_v2.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_loop_fix.py:create_test_workflow",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_loop_fix.py:test_loop_fix"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py:MultiStepAgent_v2",
      "target": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:Agent"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py:plan_execution",
      "target": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:extract_code"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_backup.py:_parse_decision",
      "target": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:extract_code"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/fix_calculator_comprehensive.py:fix_calculator_exception_consistency",
      "target": "/home/guci/aiProjects/AgentFrameWork/fix_calculator_comprehensive.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/fix_calculator_comprehensive.py:create_backup_files",
      "target": "/home/guci/aiProjects/AgentFrameWork/fix_calculator_comprehensive.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/calculator.py:add",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py:test_add"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/calculator.py:subtract",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py:test_subtract"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/calculator.py:multiply",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py:test_multiply"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/calculator.py:divide",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py:test_divide"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:Device",
      "target": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:StatefulExecutor"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:Agent",
      "target": "/home/guci/aiProjects/AgentFrameWork/enhancedAgent_v2_refactored.py:MultiStepAgent_v2"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:Agent",
      "target": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py:MultiStepAgent_v3"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:Agent",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_adapter.py:CognitiveMultiStepAgent"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:Agent",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:EchoAgent"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:Agent",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:TextLengthAgent"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:Agent",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:FailingAgent"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:Agent",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/test_multi_step_agent_v2.py:APIFailingAgent"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:extract_code",
      "target": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:evaluate"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/pythonTask.py:extract_code",
      "target": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py:_parse_llm_workflow_response"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py:create_test_agent",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py:test_error_handler_initialization"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py:create_test_agent",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py:test_error_classification"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py:create_test_agent",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py:test_error_handling_workflow"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py:create_test_agent",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py:test_recovery_actions"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py:create_test_agent",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py:test_state_aware_error_handling"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py:create_test_agent",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py:test_error_statistics"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py:create_test_agent",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_instruction_optimization.py:test_basic_optimization"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py:create_test_agent",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_instruction_optimization.py:test_optimization_statistics"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py:create_test_agent",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_instruction_optimization.py:test_integrated_state_aware_instruction"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py:test_error_handler_initialization",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_instruction_optimization.py:create_test_agent"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py:test_error_classification",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_instruction_optimization.py:create_test_agent"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py:test_error_handling_workflow",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_instruction_optimization.py:create_test_agent"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py:test_recovery_actions",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_instruction_optimization.py:create_test_agent"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py:test_state_aware_error_handling",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_instruction_optimization.py:create_test_agent"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py:test_error_statistics",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_instruction_optimization.py:create_test_agent"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_error_handling_integration.py:run_all_tests",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/test_ipython_state_utils.py:test_func"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_global_state_integration.py:create_mock_llm_with_states",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_global_state_integration.py:test_global_state_integration"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_global_state_integration.py:create_mock_llm_with_states",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_global_state_integration.py:test_state_continuity"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_global_state_integration.py:test_global_state_integration",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_global_state_integration.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_global_state_integration.py:test_state_continuity",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_global_state_integration.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_global_state_integration.py:test_error_handling",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_global_state_integration.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_global_state_integration.py:main",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/test_task_translator.py:test_error_handling"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_workflow_fix.py:test_workflow_generation",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_workflow_fix.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_status_fix.py:create_deepseek_llm",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_status_fix.py:create_test_agents"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_status_fix.py:create_deepseek_llm",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_status_fix.py:test_status_management_fix"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_status_fix.py:create_test_agents",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_status_fix.py:test_status_management_fix"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_performance_load.py:test_state_operation_latency",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_performance_load.py:generate_performance_report"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_performance_load.py:test_ai_updater_latency",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_performance_load.py:generate_performance_report"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_performance_load.py:test_memory_overhead",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_performance_load.py:generate_performance_report"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_performance_load.py:test_concurrent_load",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_performance_load.py:generate_performance_report"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_performance_load.py:test_state_history_scalability",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_performance_load.py:generate_performance_report"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_caching_conditional_logic.py:run_all_tests",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/test_ipython_state_utils.py:test_func"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_instruction_optimization.py:create_test_agent",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_instruction_optimization.py:test_basic_optimization"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_instruction_optimization.py:create_test_agent",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_instruction_optimization.py:test_optimization_statistics"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_instruction_optimization.py:create_test_agent",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_instruction_optimization.py:test_integrated_state_aware_instruction"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_instruction_optimization.py:setup_test_state",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_instruction_optimization.py:test_basic_optimization"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_instruction_optimization.py:setup_test_state",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_instruction_optimization.py:test_optimization_statistics"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_instruction_optimization.py:setup_test_state",
      "target": "/home/guci/aiProjects/AgentFrameWork/test_instruction_optimization.py:test_integrated_state_aware_instruction"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/test_instruction_optimization.py:run_all_tests",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/test_ipython_state_utils.py:test_func"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/gemini_flash_integration.py:create_gemini_client",
      "target": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_cognitive_debug.py:demo_gemini_integration"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/gemini_flash_integration.py:create_gemini_client",
      "target": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_cognitive_debug.py:demo_cognitive_debug_with_gemini"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_structured_superego.py:test_structured_superego",
      "target": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_structured_superego.py:_validate_strategy_schema"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_structured_superego.py:test_structured_superego",
      "target": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_all_superego_methods.py:_validate_strategy_schema"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_structured_superego.py:test_structured_superego",
      "target": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_structured_superego.py:_validate_regulation_schema"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_structured_superego.py:test_structured_superego",
      "target": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_all_superego_methods.py:_validate_regulation_schema"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_structured_superego.py:_validate_strategy_schema",
      "target": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_structured_superego.py:test_direct_structured_optimizer"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_structured_superego.py:_validate_strategy_schema",
      "target": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_all_superego_methods.py:test_all_superego_methods"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_structured_superego.py:_validate_strategy_schema",
      "target": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_all_superego_methods.py:test_json_response_stability"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_structured_superego.py:_validate_regulation_schema",
      "target": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_structured_superego.py:test_direct_structured_optimizer"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_structured_superego.py:_validate_regulation_schema",
      "target": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_all_superego_methods.py:test_all_superego_methods"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_structured_superego.py:test_direct_structured_optimizer",
      "target": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_all_superego_methods.py:_validate_strategy_schema"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_structured_superego.py:test_direct_structured_optimizer",
      "target": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_all_superego_methods.py:_validate_regulation_schema"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:create_cognitive_agent",
      "target": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:execute_cognitive_task"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:create_cognitive_agent",
      "target": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:create_embodied_cognitive_workflow"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:create_cognitive_agent",
      "target": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_cognitive_debug.py:demo_basic_cognitive_debug"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:create_cognitive_agent",
      "target": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_cognitive_debug.py:demo_cognitive_debug_without_gemini"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:create_cognitive_agent",
      "target": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_cognitive_debug.py:demo_cognitive_debug_with_gemini"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:execute_cognitive_task",
      "target": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:execute_embodied_cognitive_task"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:create_embodied_cognitive_workflow",
      "target": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py:test_create_workflow_function"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:create_embodied_cognitive_workflow",
      "target": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py:test_create_embodied_cognitive_workflow"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:execute_embodied_cognitive_task",
      "target": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_workflow_integration.py:test_execute_task_function"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/embodied_cognitive_workflow.py:execute_embodied_cognitive_task",
      "target": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/tests/test_embodied_cognitive_workflow.py:test_execute_embodied_cognitive_task"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/calculator_demo.py:\u8fd0\u884cCalculator\u6f14\u793a",
      "target": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/calculator_demo.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_all_superego_methods.py:test_all_superego_methods",
      "target": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_all_superego_methods.py:_validate_strategy_schema"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_all_superego_methods.py:test_all_superego_methods",
      "target": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_all_superego_methods.py:_validate_regulation_schema"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_all_superego_methods.py:test_all_superego_methods",
      "target": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_all_superego_methods.py:_validate_reflection_schema"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_all_superego_methods.py:_validate_strategy_schema",
      "target": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/test_all_superego_methods.py:test_json_response_stability"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_refactored.py:analyze_task_classification",
      "target": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_refactored.py:can_handle_directly"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_refactored.py:analyze_task_classification",
      "target": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_refactored.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_refactored.py:compare_architectures",
      "target": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_refactored.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_refactored.py:estimate_performance_improvement",
      "target": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_refactored.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/calculator.py:add",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py:test_add"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/calculator.py:subtract",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py:test_subtract"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/calculator.py:multiply",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py:test_multiply"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/calculator.py:divide",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py:test_divide"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_cognitive_debug.py:setup_logging",
      "target": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_cognitive_debug.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_cognitive_debug.py:demo_basic_cognitive_debug",
      "target": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_cognitive_debug.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_cognitive_debug.py:demo_debugging_features",
      "target": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_cognitive_debug.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_cognitive_debug.py:demo_gemini_integration",
      "target": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_cognitive_debug.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_cognitive_debug.py:demo_cognitive_debug_without_gemini",
      "target": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_cognitive_debug.py:demo_cognitive_debug_with_gemini"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_cognitive_debug.py:demo_cognitive_debug_without_gemini",
      "target": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_cognitive_debug.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_cognitive_debug.py:demo_cognitive_debug_with_gemini",
      "target": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_cognitive_debug.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_cognitive_debug.py:demo_visualizer",
      "target": "/home/guci/aiProjects/AgentFrameWork/embodied_cognitive_workflow/demo_cognitive_debug.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/calculator_project/calculator.py:add",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py:test_add"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/calculator_project/calculator.py:subtract",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py:test_subtract"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/calculator_project/calculator.py:multiply",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py:test_multiply"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/calculator_project/calculator.py:divide",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py:test_divide"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py:get_workflow_info",
      "target": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py:set"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py:_validate_workflow_legality",
      "target": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py:set"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/static_workflow/MultiStepAgent_v3.py:_check_circular_references",
      "target": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py:set"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/static_workflow/result_evaluator.py:TestResultEvaluator",
      "target": "/home/guci/aiProjects/AgentFrameWork/static_workflow/result_evaluator.py:MockTestResultEvaluator"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/static_workflow/result_evaluator.py:evaluate_with_deepseek",
      "target": "/home/guci/aiProjects/AgentFrameWork/static_workflow/result_evaluator.py:is_test_passed"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/static_workflow/config.py:get_env_config",
      "target": "/home/guci/aiProjects/AgentFrameWork/static_workflow/config.py:validate_environment"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/static_workflow/static_workflow_engine.py:_generate_execution_result",
      "target": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py:set"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/static_workflow/workflow_definitions.py:validate",
      "target": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py:set"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py:set",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_concurrent_safety.py:test_concurrent_id_generation"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py:set",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:_simple_text_similarity"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py:set",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:_perform_intelligent_replacement"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py:set",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:_conservative_merge"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py:set",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:analyze_strategy_trends"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py:set",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:text_similarity"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py:set",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:_calculate_improvements"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py:set",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:_identify_significant_changes"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py:set",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/intelligent_performance_benchmark.py:_generate_system_recommendations"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py:set",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:_find_common_context_features"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py:set",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/state_service.py:_identify_key_changes"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py:set",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/state_service.py:_analyze_loop_indicators_for_goal_evaluation"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py:set",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_check_rule_coverage"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py:set",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_generation_service.py:_analyze_agent_data_affinity"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py:set",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_engine_service.py:execute_workflow"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/task_master/config.py:set",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/rule_engine_service.py:_conservative_rule_merge"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/examples/dynamic_task_logging_demo.py:create_demo_workflow",
      "target": "/home/guci/aiProjects/AgentFrameWork/examples/dynamic_task_logging_demo.py:demo_dynamic_task_addition"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/examples/dynamic_task_logging_demo.py:create_demo_workflow",
      "target": "/home/guci/aiProjects/AgentFrameWork/examples/dynamic_task_logging_demo.py:demo_error_scenarios"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/examples/dynamic_task_logging_demo.py:create_demo_workflow",
      "target": "/home/guci/aiProjects/AgentFrameWork/examples/observability_demo.py:demo_dynamic_task_addition"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/examples/dynamic_task_logging_demo.py:create_demo_workflow",
      "target": "/home/guci/aiProjects/AgentFrameWork/examples/observability_demo.py:demo_error_scenarios"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/examples/dynamic_task_logging_demo.py:demo_dynamic_task_addition",
      "target": "/home/guci/aiProjects/AgentFrameWork/examples/observability_demo.py:create_demo_workflow"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/examples/dynamic_task_logging_demo.py:demo_error_scenarios",
      "target": "/home/guci/aiProjects/AgentFrameWork/examples/observability_demo.py:create_demo_workflow"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/examples/comparison_demo.py:create_demo_agents",
      "target": "/home/guci/aiProjects/AgentFrameWork/examples/comparison_demo.py:demo_multistep_v2"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/examples/comparison_demo.py:create_demo_agents",
      "target": "/home/guci/aiProjects/AgentFrameWork/examples/comparison_demo.py:demo_task_master_agent"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/examples/comparison_demo.py:demo_multistep_v2",
      "target": "/home/guci/aiProjects/AgentFrameWork/examples/comparison_demo.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/examples/comparison_demo.py:demo_task_master_agent",
      "target": "/home/guci/aiProjects/AgentFrameWork/examples/comparison_demo.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/examples/comparison_demo.py:feature_comparison",
      "target": "/home/guci/aiProjects/AgentFrameWork/examples/comparison_demo.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/examples/comparison_demo.py:usage_recommendations",
      "target": "/home/guci/aiProjects/AgentFrameWork/examples/comparison_demo.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/examples/basic_task_master.py:create_sample_agents",
      "target": "/home/guci/aiProjects/AgentFrameWork/examples/basic_task_master.py:basic_usage_example"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/examples/basic_task_master.py:create_sample_agents",
      "target": "/home/guci/aiProjects/AgentFrameWork/examples/basic_task_master.py:mixed_mode_example"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/examples/basic_task_master.py:create_sample_agents",
      "target": "/home/guci/aiProjects/AgentFrameWork/examples/basic_task_master.py:prd_driven_example"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/examples/observability_demo.py:create_demo_workflow",
      "target": "/home/guci/aiProjects/AgentFrameWork/examples/observability_demo.py:demo_dynamic_task_addition"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/examples/observability_demo.py:create_demo_workflow",
      "target": "/home/guci/aiProjects/AgentFrameWork/examples/observability_demo.py:demo_error_scenarios"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_system_capability_quick.py:test_direct_rule_generation",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_system_capability_quick.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_system_capability_quick.py:test_direct_rule_generation",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_system_capability_error.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_system_capability_quick.py:main",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_system_capability_error.py:test_direct_rule_generation"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/demo_cognitive_workflow.py:create_mock_agents",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/demo_cognitive_workflow.py:demo"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/demo_cognitive_workflow.py:demo",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/demo_cognitive_workflow.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_system_capability_error.py:test_system_capability_error",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/__init__.py:create_production_rule_system"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_system_capability_error.py:test_system_capability_error",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_system_capability_error.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_system_capability_error.py:test_direct_rule_generation",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_system_capability_error.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/debug_agent_issue.py:test_agent_registry_issue",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/__init__.py:create_production_rule_system"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_adaptive_replacement.py:create_test_rules",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_adaptive_replacement.py:test_situation_assessment"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_adaptive_replacement.py:create_test_rules",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_adaptive_replacement.py:test_adaptive_replacement"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_adaptive_replacement.py:create_test_global_state",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_adaptive_replacement.py:test_situation_assessment"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_adaptive_replacement.py:create_test_global_state",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_adaptive_replacement.py:test_adaptive_replacement"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_adaptive_replacement.py:test_situation_assessment",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_adaptive_replacement.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_adaptive_replacement.py:test_strategy_selection",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_adaptive_replacement.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_adaptive_replacement.py:test_adaptive_replacement",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_adaptive_replacement.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_agent_registration.py:test_agent_registration",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/__init__.py:create_production_rule_system"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_agent_registry_fix.py:test_agent_registry_association",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/__init__.py:create_production_rule_system"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_agent_registry_fix.py:test_agent_registry_association",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_agent_registry_fix.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_agent_registry_fix.py:test_explicit_agent_registry",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/__init__.py:create_production_rule_system"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_agent_registry_fix.py:test_explicit_agent_registry",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_agent_registry_fix.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_concurrent_safety.py:test_concurrent_id_generation",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_concurrent_safety.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_concurrent_safety.py:test_atomic_file_operations",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_concurrent_safety.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_concurrent_safety.py:test_concurrent_state_repository",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_concurrent_safety.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_concurrent_safety.py:test_real_world_scenario",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_concurrent_safety.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_loop_prevention.py:test_workflow_state_loop_detection",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_loop_prevention.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_loop_prevention.py:test_advanced_loop_detection",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_loop_prevention.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_loop_prevention.py:test_enhanced_error_recovery",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_loop_prevention.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_loop_prevention.py:test_integration",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_loop_prevention.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:safe_get_result_return_value",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:update_state"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:safe_get_result_return_value",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:_update_global_state"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:safe_get_result_return_value",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:_handle_no_executable_tasks"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:safe_get_result_return_value",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:_handle_task_failure"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:safe_get_result_return_value",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:get_task_status_report"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:safe_get_result_error",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:update_state"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:safe_get_result_error",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:_update_global_state"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:safe_get_result_error",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:_handle_no_executable_tasks"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:safe_get_result_error",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:_handle_task_failure"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:safe_get_result_error",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow.py:get_task_status_report"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_three_phase_planning.py:test_three_phase_planning",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_three_phase_planning.py:verify_three_phase_logic"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator.py:add",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py:test_add"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator.py:subtract",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py:test_subtract"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator.py:multiply",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py:test_multiply"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator.py:divide",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py:test_divide"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/simple_registry_test.py:simple_registry_test",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/__init__.py:create_production_rule_system"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/simple_registry_test.py:simple_registry_test",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/simple_registry_test.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/simple_registry_test.py:test_without_explicit_registry",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/__init__.py:create_production_rule_system"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/simple_registry_test.py:test_without_explicit_registry",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/simple_registry_test.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_simple_workflow.py:test_simple_workflow",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/__init__.py:create_production_rule_system"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_result_type_conversion.py:test_agent_base_result_conversion",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/test_result_type_conversion.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/calculator.py:add",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py:test_add"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/calculator.py:subtract",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py:test_subtract"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/calculator.py:multiply",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py:test_multiply"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/calculator.py:divide",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py:test_divide"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py:test_add",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/calculator.py:add"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py:test_add",
      "target": "/home/guci/aiProjects/AgentFrameWork/project/calculator.py:add"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py:test_subtract",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/calculator.py:subtract"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py:test_subtract",
      "target": "/home/guci/aiProjects/AgentFrameWork/project/calculator.py:subtract"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py:test_multiply",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/calculator.py:multiply"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py:test_multiply",
      "target": "/home/guci/aiProjects/AgentFrameWork/project/calculator.py:multiply"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py:test_divide",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/calculator.py:divide"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/calculator_project/test_calculator.py:test_divide",
      "target": "/home/guci/aiProjects/AgentFrameWork/project/calculator.py:divide"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/__init__.py:create_production_rule_system",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_dynamic_allocation.py:test_dynamic_allocation"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/__init__.py:create_production_rule_system",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_dynamic_allocation.py:test_manual_rule_execution"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/__init__.py:create_production_rule_system",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_dynamic_allocation.py:test_fallback_allocation"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/__init__.py:create_production_rule_system",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/advanced_example.py:advanced_workflow_control_demo"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/__init__.py:create_production_rule_system",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/advanced_example.py:demonstrate_error_recovery"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/__init__.py:create_production_rule_system",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/advanced_example.py:analyze_workflow_performance"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/__init__.py:create_production_rule_system",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/cognitive_workflow_agent_wrapper.py:__init__"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:RuleRepositoryImpl",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py:RuleRepository"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:StateRepositoryImpl",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py:StateRepository"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/infrastructure/repository_impl.py:ExecutionRepositoryImpl",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/domain/repositories.py:ExecutionRepository"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_resource_manager.py:MockLanguageModelService",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/language_model_service.py:LanguageModelService"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/test_resource_manager.py:FailingLLMService",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/core/language_model_service.py:LanguageModelService"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/advanced_example.py:create_specialized_agents",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/advanced_example.py:advanced_workflow_control_demo"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/advanced_example.py:create_specialized_agents",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/advanced_example.py:demonstrate_error_recovery"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/advanced_example.py:create_specialized_agents",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/advanced_example.py:analyze_workflow_performance"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/advanced_example.py:create_custom_agent_registry",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/advanced_example.py:advanced_workflow_control_demo"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/advanced_example.py:advanced_workflow_control_demo",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/advanced_example.py:monitor_execution_progress"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/advanced_example.py:advanced_workflow_control_demo",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/advanced_example.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/advanced_example.py:demonstrate_error_recovery",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/advanced_example.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/advanced_example.py:analyze_workflow_performance",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/advanced_example.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/basic_example.py:demonstrate_recursive_team_execution",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/examples/basic_example.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/task_translator.py:_parse_translation_response",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/task_translator.py:safe_str_field"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/task_translator.py:_parse_translation_response",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/cognitive/task_translator.py:safe_list_field"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:_simple_text_similarity",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/adaptive/adaptive_replacement_service.py:text_similarity"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:PatternDetector",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:TemporalPatternDetector"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:PatternDetector",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:ContextualPatternDetector"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:PatternDetector",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:PerformancePatternDetector"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:PatternDetector",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/advanced_pattern_recognition.py:StrategySequencePatternDetector"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:ObjectiveFunction",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/services/advanced/adaptive_hyperparameter_optimizer.py:PerformanceObjectiveFunction"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/cognitive_workflow_agent_wrapper.py:_get_production_rule_system",
      "target": "/home/guci/aiProjects/AgentFrameWork/CognitiveWorkflow/cognitive_workflow_rule_base/application/cognitive_workflow_agent_wrapper.py:__init__"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/tests/verify_components.py:main",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/test_ipython_state_utils.py:test_func"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/tests/test_stress_boundary.py:test_memory_usage_under_stress",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/test_stress_boundary.py:get_memory_usage"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/tests/test_stress_boundary.py:test_system_resource_monitoring",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/test_stress_boundary.py:collect_system_stats"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/tests/run_all_tests.py:print_banner",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/run_all_tests.py:run_test_suite"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/tests/run_all_tests.py:print_banner",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/run_all_tests.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/tests/run_all_tests.py:print_summary",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/run_all_tests.py:run_test_suite"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/tests/run_all_tests.py:run_test_suite",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/run_all_tests.py:main"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/tests/test_ipython_state_utils.py:test_func",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/config/test_config.py:skip_if_api_unavailable"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/tests/test_ipython_state_utils.py:test_func",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/config/test_config.py:wrapper"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/tests/config/test_config.py:load_api_key",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/config/test_config.py:check_deepseek_api_health"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/tests/config/test_config.py:load_api_key",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/config/test_config.py:test_api_key_loading"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/tests/config/test_config.py:check_deepseek_api_health",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/config/test_config.py:skip_if_api_unavailable"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/tests/config/test_config.py:check_deepseek_api_health",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/config/test_config.py:wrapper"
    },
    {
      "relationship": "call",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/tests/config/test_config.py:check_deepseek_api_health",
      "target": "/home/guci/aiProjects/AgentFrameWork/tests/config/test_config.py:test_api_health_check"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/llm_mcp_best_practices.py:LLMProvider",
      "target": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/llm_mcp_best_practices.py:OpenAIProvider"
    },
    {
      "relationship": "inherit",
      "weight": 1.0,
      "source": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/llm_mcp_best_practices.py:LLMProvider",
      "target": "/home/guci/aiProjects/AgentFrameWork/mcp_examples/llm_mcp_best_practices.py:AnthropicProvider"
    }
  ]
}